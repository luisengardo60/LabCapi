if(!window.com_zimbra_adminversioncheck){
window.com_zimbra_adminversioncheck={}
}
a=window.com_zimbra_adminversioncheck;
a.label="Version Check";
a.description="Version Check Admin Extension";
a.VersionCheck_view_title="Server updates";
a.TABT_ConfigPage="Configuration";
a.TABT_UpdatesPage="Updates";
a.VersionCheckServer="Server that checks for updates:";
a.LBL_zimbraVersionCheckURL="Updates URL:";
a.LBL_zimbraVersionCheckNotificationEmail="Send notification email to:";
a.MSG_zimbraVersionCheckNotificationEmail="Send notification email to";
a.LBL_zimbraVersionCheckNotificationEmailFrom="Send notification email from:";
a.MSG_zimbraVersionCheckNotificationEmailFrom="Send notification email from";
a.LBL_zimbraVersionCheckSendNotifications="Send notification email when updates are available";
a.LBL_zimbraVersionCheckNotificationBody="Notification email message template:";
a.MSG_zimbraVersionCheckNotificationBody="Notification email message template";
a.LBL_zimbraVersionCheckNotificationSubject="Notification email subject template:";
a.MSG_zimbraVersionCheckNotificationSubject="Notification email subject template";
a.LBL_zimbraVersionCheckInterval="Check for updates every:";
a.UpdatesAreAvailable="Software updates are available for your Zimbra server!";
a.UpdatesAvailableTitle="The following updates are available:";
a.ServerIsUpToDate="No updates are available. Your Zimbra Server software is up to date.";
a.LBL_zimbraVersionCheckLastAttempt="Last attempt to check for updates:";
a.LBL_zimbraVersionCheckLastSuccess="Last successful check for updates:";
a.WARNING_LAST_ATTEMPT_FAILED="Warning! Last attempt to check for updates failed!";
a.WARNING_CURRENT_ATTEMPT_FAILED="Failed to check for updates! Please check the server or related configuration tab!";
a.Critical="Critical";
a.NotCritical="Non-critical";
a.ERROR_WRONG_ACCOUNT='The account {0} specified in "Send notification email from" setting does not exist.';
a.ERROR_UPDATES_NOT_CONFIGURED="Updates are not properly configured! Please the check related configuration tab.";
a.OVP_versionCheck="Software Updates";
a.UI_Comp_versionCheck="Software Updates";
a.Never="Never";
a.CheckNow="Check now";
a.CheckNow_tt="Check for updates now";
a.saveChangesFirst="Please first save the changes!";
a.Alert_Crontab='If you wish to check for updates more often then every two hours, you have to adjust the cron task for "/opt/zimbra/libexec/zmcheckversion" that runs on {0}.';
a.NoteSendingNotificationFromAddress="If you want the notifications to be sent from an email address other then your default system administrator\u2019s email, please make sure that this address is included in zimbraAllowFromAddress attribute of the system administrator\u2018s account or zimbraAllowAnyFromAddress attribute of administrator\u2019s account is set to TRUE.";
a.LBL_ViewUpdate="Configure Updates...";
a.LBL_GO_TO_DOWNLOAD_URL="Download Now...";
delete a;
if(!window.com_zimbra_adminversioncheck){
window.com_zimbra_adminversioncheck={}
}
a=window.com_zimbra_adminversioncheck;
a.label="Comprobaci\u00f3n de versiones";
a.description="Extensi\u00f3n de administraci\u00f3n de la comprobaci\u00f3n de versiones";
a.VersionCheck_view_title="Actualizaciones de servidor";
a.TABT_ConfigPage="Configuraci\u00f3n";
a.TABT_UpdatesPage="Actualizaciones";
a.VersionCheckServer="El servidor que busca actualizaciones:";
a.LBL_zimbraVersionCheckURL="URL de la actualizaci\u00f3n:";
a.LBL_zimbraVersionCheckNotificationEmail="Enviar mensaje de notificaci\u00f3n a:";
a.MSG_zimbraVersionCheckNotificationEmail="Enviar mensaje de notificaci\u00f3n a";
a.LBL_zimbraVersionCheckNotificationEmailFrom="Enviar mensaje de notificaci\u00f3n de:";
a.MSG_zimbraVersionCheckNotificationEmailFrom="Enviar mensaje de notificaci\u00f3n de";
a.LBL_zimbraVersionCheckSendNotifications="Enviar mensaje de notificaci\u00f3n cuando haya una actualizaci\u00f3n disponible";
a.LBL_zimbraVersionCheckNotificationBody="Plantilla del mensaje de notificaci\u00f3n:";
a.MSG_zimbraVersionCheckNotificationBody="Plantilla del mensaje de notificaci\u00f3n";
a.LBL_zimbraVersionCheckNotificationSubject="Plantilla del asunto del mensaje de notificaci\u00f3n:";
a.MSG_zimbraVersionCheckNotificationSubject="Plantilla del asunto del mensaje de notificaci\u00f3n";
a.LBL_zimbraVersionCheckInterval="Buscar actualizaciones cada:";
a.UpdatesAreAvailable="\u00a1Hay actualizaciones de software disponibles para tu servidor Zimbra!";
a.UpdatesAvailableTitle="Las siguientes actualizaciones est\u00e1n disponibles:";
a.ServerIsUpToDate="No hay ninguna actualizaci\u00f3n disponible. Tu software del servidor Zimbra est\u00e1 actualizado.";
a.LBL_zimbraVersionCheckLastAttempt="\u00daltimo intento de b\u00fasqueda de actualizaciones:";
a.LBL_zimbraVersionCheckLastSuccess="\u00daltima b\u00fasqueda de actualizaciones satisfactoria:";
a.WARNING_LAST_ATTEMPT_FAILED="Advertencia: \u00a1Fallo durante la \u00faltima b\u00fasqueda de actualizaciones!";
a.WARNING_CURRENT_ATTEMPT_FAILED="Fallo al buscar actualizaciones. Revisa la pesta\u00f1a del servidor o de configuraci\u00f3n.";
a.Critical="Cr\u00edtico";
a.NotCritical="No cr\u00edtico";
a.ERROR_WRONG_ACCOUNT="La cuenta {0} indicada en \u201cEnviar mensaje de notificaci\u00f3n de\u201d no existe.";
a.ERROR_UPDATES_NOT_CONFIGURED="Las actualizaciones no est\u00e1n correctamente configuradas. Revisa la pesta\u00f1a de configuraci\u00f3n.";
a.OVP_versionCheck="Actualizaciones de software";
a.UI_Comp_versionCheck="Actualizaciones de software";
a.Never="Nunca";
a.CheckNow="Buscar ahora";
a.CheckNow_tt="Buscar actualizaciones ahora";
a.saveChangesFirst="Por favor guarda primero los cambios.";
a.Alert_Crontab="Si deseas buscar actualizaciones con m\u00e1s frecuencia que cada dos horas, debes ajustar la tarea programada de \u201c/opt/zimbra/libexec/zmcheckversion\u201d que se ejecuta en {0}.  ";
a.NoteSendingNotificationFromAddress="Si deseas que las notificaciones se env\u00eden desde una direcci\u00f3n de correo electr\u00f3nico que no sea la del correo electr\u00f3nico de tu administrador del sistema predeterminado, aseg\u00farate de que esta direcci\u00f3n se incluya en el atributo zimbraAllowFromAddress de la cuenta del administrador del sistema, o bien, que el atributo zimbraAllowAnyFromAddress de la cuenta del administrador est\u00e9 ajustado en TRUE. ";
a.LBL_ViewUpdate="Configurar actualizaciones...";
a.LBL_GO_TO_DOWNLOAD_URL="Descargar ahora...";
delete a;
if(!window.com_zimbra_attachcontacts){
window.com_zimbra_attachcontacts={}
}
a=window.com_zimbra_attachcontacts;
a.label="Attach Contacts";
a.description="Allows Attaching contacts when composing a new message.";
a.ACZ_tab_label="Contacts";
a.ACZ_tab_button_search="Search";
a.ACZ_NoContactsFound="No contacts found.";
a.ACZ_Send="Forward";
a.ACZ_SendContact="Forward Contact";
a.ACZ_SendContactsAsAttachments="Send Contacts as email attachments";
a.ACZ_more="({0} more)";
delete a;
if(!window.com_zimbra_attachcontacts){
window.com_zimbra_attachcontacts={}
}
a=window.com_zimbra_attachcontacts;
a.label="Adjuntar contactos";
a.description="Permite adjuntar contactos durante la redacci\u00f3n de un nuevo mensaje.";
a.ACZ_tab_label="Contactos";
a.ACZ_tab_button_search="Buscar";
a.ACZ_NoContactsFound="No se ha encontrado ning\u00fan contacto.";
a.ACZ_Send="Reenviar";
a.ACZ_SendContact="Reenviar un contacto";
a.ACZ_SendContactsAsAttachments="Env\u00eda contactos como archivos adjuntos de un correo electr\u00f3nico";
a.ACZ_more="({0} m\u00e1s)";
delete a;
if(!window.com_zimbra_attachmail){
window.com_zimbra_attachmail={}
}
a=window.com_zimbra_attachmail;
a.label="Email Attacher";
a.description="Attach email messages when composing a new message.";
a.AttachMailZimlet_panel_label="Email Attacher";
a.AttachMailZimlet_panel_tooltip='Adds an "Attach Mail" tab to the compose toolbar "Add Attachment" dialog.';
a.AttachMailZimlet_tab_label="Mail";
a.AttachMailZimlet_tab_button_search="Search";
a.AttachMailZimlet_tab_button_view="View Message";
delete a;
if(!window.com_zimbra_attachmail){
window.com_zimbra_attachmail={}
}
a=window.com_zimbra_attachmail;
a.label="Funci\u00f3n para adjuntar archivos a un correo electr\u00f3nico";
a.description="Adjunta mensajes de correo electr\u00f3nico durante la redacci\u00f3n de un nuevo mensaje.";
a.AttachMailZimlet_panel_label="Funci\u00f3n para adjuntar archivos a un correo electr\u00f3nico";
a.AttachMailZimlet_panel_tooltip='A\u00f1ade una ficha llamada "Adjuntar correo" al di\u00e1logo "A\u00f1adir archivo adjunto" de la barra de herramientas de redacci\u00f3n.';
a.AttachMailZimlet_tab_label="Correo";
a.AttachMailZimlet_tab_button_search="Buscar";
a.AttachMailZimlet_tab_button_view="Ver mensaje";
delete a;
if(!window.com_zimbra_backuprestore){
window.com_zimbra_backuprestore={}
}
a=window.com_zimbra_backuprestore;
a.label="Backup/Restore";
a.description="Backup and Restore Admin Extension";
a.BNR_Tab_BNR="Backup/Restore";
a.BNR_tt_tab_backuplabel="Manage backup with label ";
a.BNR_tt_tab_backup="Backup/Restore";
a.BNR_OVP_backups="Backups";
a.BNR_TBB_Restore_tt="Restore an account";
a.BNR_Restore_WizTitle="Mailbox Restore Wizard";
a.BNR_view_title="Manage Backups";
a.BNR_AccountsGrouper="Accounts";
a.BNR_ReviewGrouper="Review settings and click Restore";
a.BNR_MethodOptionsGrouper="Restore method";
a.BNR_SelectAccountsGrouper="Select Accounts";
a.BNR_TimeOptionsGrouper="Time options";
a.BNR_NameOptionsGrouper="Name options";
a.BNR_ServerOptionsGrouper="Server options";
a.BNR_AccountsNote="Enter email addresses of the accounts that you want to restore";
a.BNR_PreserveAccNames="Preserve account names";
a.BNR_UsePrefix="Add a prefix to each account name";
a.BNR_Note="Note:";
a.BNR_RestoreTo="Restore to";
a.BNR_RestoretoLatest="Restore to latest available backup";
a.BNR_RestoreToTime="Restore to {0}";
a.BNR_AddPrefix="Add prefix <span class='ZaHighlightedText'>{0}</span> to each restored account";
a.BNR_InvalidPrefix="Invalid character in prefix ";
a.BNR_NullPrefix="Prefix can\u2019t be set to null";
a.BNR_allAccountsIncludeDeleted="Restore all accounts including deleted accounts";
a.BNR_allAccountsSkipDeleted="Restore all accounts except deleted accounts";
a.BNR_RestoreOnlyTheseAccounts="Restore only these accounts:";
a.BNR_ReviewOptions="Please review the options below. If you want to change any of the options, click \u2018Previous\u2019. When you are ready to proceed, click \u2018Next\u2019. After you click \u2018Next\u2019, the server will start restoring the accounts.";
a.BNR_SearchingAccounts="Please wait. Searching accounts... ";
a.BNR_SearchingBackups="Please wait. Searching backups... ";
a.BNR_SearchingBackupsServ="Searching for backups on server {0}";
a.BNR_MustGivePrefix="A prefix is required, because an account with a different ID and the same name already exists.";
a.BNR_NoBackupForPITFound="Could not find any full backups for the specified point in time.";
a.BNR_NoBackupForFound="Could not find any full backups.";
a.BNR_NoAccBackupFound="Could not find any backups of this account.";
a.BNR_NoAccBackupForPITFound="Could not find any backups of this account for the specified point in time.";
a.BNR_Restore_to_different="Each account will be restored to a new account. The name of the new account will be prefixed, e.g. <span class='ZaHighlightedText'>john.doe@domain.com</span> will be restored to <span class='ZaHighlightedText'>{0}john.doe@domain.com</span>";
a.BNR_SelectPath="Path to the backup targets:";
a.BNR_AccountName="Please provide the email address of the account that you want to restore.";
a.BNR_EmailAddress="Email Address(es):";
a.BNR_SelectServer="Server for the restored acounts:";
a.BNR_TargetPath="Path to the backup target:";
a.BNR_FreeSpace="Free Space (MB):";
a.BNR_TotalSpace="Total Space (MB):";
a.BNR_Prefix="Prefix for the new account name:";
a.BNR_method="Restore method:";
a.BNR_Restore="Restore";
a.BNR_NoLabelsFound="Could not find any backup labels for the specified account in the specified target";
a.BNR_NoLabelsFoundTitle="Cannot find the backup";
a.BNR_LookingForLabels="Looking for labels";
a.BNR_Waiting="Account {0}:<br/>Waiting to restore the mailbox.";
a.BNR_Restoring="Account {0}:<br/>Restoring the mailbox. To abort the restore process, click the Abort button.";
a.BNR_RestoreAborting="Account {0}:<br/> Trying to interrupt the restore process.";
a.BNR_RestoreSuccess="Account {0}:<br/>Mailbox succesfully restored.";
a.BNR_RestoreFailed="Account {0}:<br/>Failed to restore the maibox.";
a.BNR_RestoreInterrupted="Account {0}:<br/>Mailbox is not restored. Restore process was interrupted.";
a.BNR_RestoreAllInterrupted="Restore process was interrupted.";
a.BNR_RestoreAllFailed="Failed to restore the maiboxex.";
a.BNR_RestoreAllAborting="Trying to interrupt the restore process.";
a.BNR_AllWaiting="Waiting to restore the mailboxes.";
a.BNR_AllRestoring="Restoring the mailboxes. To abort the restore process, click the Abort button.";
a.BNR_AccMoveOverviewStep_Title="Moving an account";
a.BNR_AccMoveProgressStep_Title="Moving an account";
a.BNR_Error_LDAP_NotUpdated="LDAP Record for this account is not properly updated. Value of {0} attribute should be {1}, but found {2} instead.  ";
a.BNR_parameterCannotBeNull="Parameter {0} cannot be null!";
a.BNR_Abort="Abort";
a.BNR_allAccounts="Restore all accounts";
a.BNR_SelectedAcc="Select accounts to restore";
a.BNR_SkipDeletedAcc="Skip deleted accounts";
a.BNR_IgnoreRedoErrors="Ignore Redo Errors";
a.BNR_skipDeleteOps="Skip Delete Operations";
a.BNR_toLatest="Restore to the latest backup";
a.BNR_toPIT="Restore to a point in time";
a.BNR_ChoosePIT="Choose date and time:";
a.BNR_old_acc_id="Old account id";
a.BNR_current_acc_id="Current account id";
a.BNR_InvalidBackupTargetERROR="Backup target is invalid. Please check the path to the backup target.";
a.BNR_BackupWizardTitle="Immediate Backup";
a.BNR_AccNoErrors="No errors";
a.BNR_AccountNameStep_Title="Account Name";
a.BNR_SelectServersStep_Title="Select Servers";
a.BNR_LookingForLabelsStep_Title="Looking for backup labels";
a.BNR_SelectLabelsStep_Title="Select Labels";
a.BNR_RestoringStepTitle="Restoring";
a.BNR_ResultStep_Title="Result";
a.BNR_SelectDestinationStep_Title="Select Destination";
a.BNR_BackupSelectAccountsStep_Title="Select Accounts";
a.ERROR_RESTORING="Cannot restore from an incomplete backup";
a.BNR_TABT_Accounts="All Accounts";
a.BNR_TABT_Errors="Error Messages";
a.BNR_TABT_FailedAccounts="Failed Accounts";
a.BNR_BackupSourceServer="Source server:";
a.BNR_BackupMethod="Backup method:";
a.BNR_BackupMethodFull="Full";
a.BNR_BackupMethodIncremental="Incremental";
a.BNR_BackupTargetPath="Target path:";
a.BNR_BackupAllAccounts="Backup all accounts";
a.BNR_Find="Find:";
a.BNR_BtnRunbackup="Backup";
a.BNR_BackupBackingUp_Title="Running the backup";
a.BNR_BackupStarting="Starting the backup, please wait...";
a.BNR_BackupStarted="The new backup is started and is now running on the server. Closing this dialog will not abort the backup process. You can close this dialog at any time by clicking the Finish button.  ";
a.BNR_IncrementalLabel="Incremental label:";
a.BNR_FullLabel="Full label:";
a.BNR_AccountsTobackup="Accounts to backup ";
a.BNRTBB_Backup="Backup";
a.BNRTBB_Backup_tt="Run an immediate backup";
a.BNRTBB_AbortBackup="Abort";
a.BNRTBB_AbortBackup_tt="Abort the running backup";
a.BNRTBB_ConfigureBackup="Configure";
a.BNRTBB_ConfigureBackup_tt="Configure Backup/Restore";
a.BNR_Label="Label:";
a.BNR_Server="Server:";
a.BNR_Status="Status:";
a.BNR_Status_Running="Running";
a.BNR_Status_Complete="Complete";
a.BNR_NOLabelsfoundIn="No backup labels found in {0}";
a.BNR_NOLabelsfound="No backup labels found ";
a.BNR_accountErrorMsg="Error creating back up for account {0}";
a.BNR_accountCompletedMsg="Back up for account {0} completed";
a.BNR_accountInProgressMsg="Back up for account {0} is in progress";
a.BNR_accountNotStartedMsg="Backup for account {0} is not yet created";
a.BNR_sourceServer="Source server:";
a.BNR_targetServer="Target server:";
a.BNR_ExportingMailbox="Exporting mailbox:";
a.BNR_VerifyingLDAP="Verifying LDAP record:";
a.BNR_PurgeOldMailbox="Purging Old Maibox:";
a.BNR_MoveInfo1='Moving a mailbox from one server to another is a three step process.<br/> 1 - Exporting the mailbox to the target server<br/> 2 - Verifying that the mailbox is successfully copied <br/> 3 - Purging old maibox from the source server <br/> Press "Export" to start exporting the mailbox.';
a.BNR_MoveInfo2="Verify that the mailbox is intact by clicking on the {0} button or log in to the mailbox via webmail interface. ";
a.BNR_MoveInfo3="After verifying the mailbox click {0} button to purge the mailbox from {1}.";
a.BNR_WarningPurge="Warning! You did not purge the mailbox from server {0}. If you close this view now, you will not be able to purge this mailbox using the Administration Console. In order to purge the mailbox from {0}, open command prompt on server {0} and run the following command as zimbra user:<br/><i>zmpurgeoldmbox -a {1} </i><br/>Are you sure you want to close this view?";
a.BNR_Purge="Purge";
a.BNR_Export="Export";
a.BNR_ViewMailbox="View Mailbox";
a.BNR_MoveMailbox="Move Mailbox";
a.BNR_MoveMailbox_tt="Click to move the mailbox to a different server";
a.BNR_ExportingMbx_group="Exporting the mailbox";
a.BNR_VerifyingMbx_group="Verifying the mailbox";
a.BNR_PurgingMbx_group="Purging the mailbox";
a.BNR_AccMoveTabName="Moving {0}";
a.BNR_CannotAbortCompletedBckup="Warning! Failed to abort the backup, because it has already completed! ";
a.BNR_Aborting="Aborting the backup. Click Refresh button to see the status of the backup label.";
a.BNR_zimbraBackupTarget="Default backup target";
a.BNR_zimbraBackupReportEmailSender="Send notification emails from";
a.BNR_zimbraBackupReportEmailSubjectPrefix="Prefix for notification email subject";
a.BNR_zimbraBackupReportEmailRecipients="Send notification emails to";
a.BNR_zimbraBackupMinFreeSpace="Backup minimum free space:";
a.BNR_zimbraBackupMinFreespaceConfInfo='The following backup minimum free space can be both specified as a percentage (e.g. "25%") of the total space and a number of bytes. (e.g. 100000, 200KB, 300MB, 500GB, 20TB)';
a.BNR_CreateFolderIfDoesnotExist="Create folder if it does not exist:";
a.BNR_CreateTargetFolderQ="The target path {0} does not exist. Create the path?";
a.BNR_FailedToCreateTargetFolder="Error! Failed to create target folder {0}! Please make sure that zimbra account has a permission to create {0}.";
a.BNR_FailedToCreateTargetFolderOptZimbra="Error! Failed to create target folder {0}! {1} is owned by root!";
a.BNR_TargetFolderNotWritable="Error! Cannot write to target path {0}!";
a.BNR_TargetFolderNotReadable="Error! Cannot read target path {0}!";
a.BNR_LatestLabel_col="Latest label ";
a.BNR_Label_col="Label";
a.BNR_StartTime_col="Start time";
a.BNR_EndTime_col="End time";
a.BNR_Status_col="Status";
a.BNR_Server_col="Server";
a.BNR_ErrorMsg_col="Error Message";
a.BNR_FreeSpace_col="Free Space (MB)";
a.BNR_TotalSpace_col="Total Space (MB)";
a.BNR_zimbraBackupMode="Type of backup";
a.BNR_backupModeStandard="Standard";
a.BNR_backupModeAutoGroup="Auto-Grouped";
a.BNR_selectAccount="Select account:";
a.BNR_TBB_RestoreMailbox="Restore";
a.BNR_FindBackups="Find backups";
a.BNR_Accounts="accounts";
a.BNR_Running="Running";
a.BNR_Completed="Completed";
a.BNR_Aborted="Aborted";
a.BNR_InProgress="In progress";
a.BNR_NotStarted="Not Started";
a.BNR_Error="Error";
a.BNR_RunningErrors="Running with errors";
a.BNR_CompletedErrors="Completed with errors";
a.BNR_zimbraBackupAutoGroupedNumGroups="Groups";
a.BNR_zimbraBackupAutoGroupedThrottled="Throttle automatic backups";
a.ERROR_BACKUP_2="Cannot run the backup, because argument \u2018accounts\u2019 is missing or null.";
a.ERROR_BACKUP_TITLE_2="\u2018accounts\u2019 parameter cannot be null";
a.ERROR_BACKUP_TITLE_3="\u2018backupLabel\u2019 parameter cannot be null";
a.ERROR_BACKUP_3="Argument \u2018backupLabel\u2019 is required in order to run the Abort command.";
a.ERROR_BACKUP_1="Cannot query backup labels for accounts, because argument \u2018accounts\u2019 is missing or null.";
a.ERROR_EMAIL_ADDR_REQUIRED="Email address is required in order to restore a mailbox! Please enter an email address or select \u2018Restore all accounts\u2019 option.";
a.ERROR_RESTORE_1="Cannot restorer accounts. Prefix parameter is required when restoring a mailbox into a new account.";
a.ERROR_RESTORE_2="Cannot restorer accounts, because argument \u2018accounts\u2019 is missing or null.";
a.ERROR_RESTORE_3="Cannot restorer accounts, because argument \u2018method\u2019 is missing or null.";
a.ERROR_NO_INCREMENTALS_IN_AUTOGROUPED_MODE="Incremental backups are not allowed in auto-grouped mode.";
a.WARNING_MANUAL_AUTOGROUP="Warning! The server is configured to run backups in auto-grouped mode. Running backups manually is not recommended in auto-grouped mode.";
a.UI_Comp_backupsView="Backups";
a.BNR_BUSY_SCHEDULING_BACKUPS="Scheduling backups...";
a.BNR_ViewBackup="Backups...";
a.BNR_BackupFail="Backup Failed";
a.BNR_NoBackupAvailable="No Backups available";
a.LBL_HomeConfigBackup="Configure Back-ups";
a.LBL_HomeLastBackup="Last Backup:";
a.BNR_NeverBackup="Never";
a.LBL_AddCOS="Add COS";
a.LBL_AddDomain="Add Domain";
a.BNR_zimbraGlobalBackupEnabled="Enable backups";
a.BNR_DumpsterByCOSAndDomain="Select users for message recovery";
a.BNR_zimbraBackupStandardIncrementalInfo="Incremental backups will also run at this time each day.";
a.BNR_zimbraDumpsterEnabled="Enable message recovery for";
a.BNR_zimbraMailReportEnabled="Enable email notifications";
a.BNR_zimbraBackupRetentionDays="Days to retain full backups";
a.BNR_zimbraBackupSyncEnabled="Run full backups synchronously";
a.BNR_zimbraBackupStartTime="Scheduling Hours";
a.BNR_zimbraBackupStartDay="Scheduling Days";
a.BNR_zimbraBackupSkipBlobs="Exclude blobs";
a.BNR_zimbraBackupSkipHsmBlobs="Exclude blobs on SM volumes";
a.BNR_zimbraBackupBlobsCompressType="Compress blobs in zip format";
a.BNR_zimbraBackupSkipSearchIndex="Exclude search index";
a.BNR_zimbraBackupObjectLevelEnabled="Enable backup for";
a.BNR_cos_domain_option="Domain and COS";
a.BNR_all_user_option="All users";
a.BNR_cos_backup_cache="Backup by Class of Service";
a.BNR_domain_backup_cache="Backup by Domain";
a.BNR_Tab_Dumpster="Message Recovery";
a.BNR_zimbraMailDumpsterLifetime="Retain messages for (days)";
a.BNR_zimbraDumpsterPurgeEnabled="Purge old messges automatically";
a.BNR_zimbraDumpsterUserVisibleAge="Allow users to view messages for (days)";
a.BNR_cos_dumpster_cache="By Class of Service";
a.BNR_domain_dumpster_cache="By Domain";
a.BNR_Notifications="Notifications";
a.BNR_Options="Options";
a.BNR_BackupByCOSAndDomain="Select users for backup";
a.BNR_ApplyServerSetting="Apply these settings to...";
a.BNR_ApplyServerSettingDialogTitle="Apply settings";
a.BNR_BackupByCOSAndDomainInfo="You must add atleast one COS or Domain to enable this configuration.";
a.LBL_RemoveAndReset="Remove and reset";
delete a;
if(!window.com_zimbra_backuprestore){
window.com_zimbra_backuprestore={}
}
a=window.com_zimbra_backuprestore;
a.label="Copia de seguridad/Restaurar";
a.description="Hacer una copia de seguridad de la extensi\u00f3n de administraci\u00f3n y restaurarla";
a.BNR_Tab_BNR="Copia de seguridad/Restaurar";
a.BNR_tt_tab_backuplabel="Gestionar las copias de seguridad con etiqueta ";
a.BNR_tt_tab_backup="Copia de seguridad/Restaurar";
a.BNR_OVP_backups="Copias de seguridad";
a.BNR_TBB_Restore_tt="Restaurar una cuenta";
a.BNR_Restore_WizTitle="Asistente para restaurar el buz\u00f3n de correo";
a.BNR_view_title="Gestionar copias de seguridad";
a.BNR_AccountsGrouper="Cuentas";
a.BNR_ReviewGrouper="Revisa la configuraci\u00f3n y haz clic en Restaurar";
a.BNR_MethodOptionsGrouper="M\u00e9todo de restauraci\u00f3n";
a.BNR_SelectAccountsGrouper="Selecciona las cuentas";
a.BNR_TimeOptionsGrouper="Opciones de tiempo";
a.BNR_NameOptionsGrouper="Opciones de nombre";
a.BNR_ServerOptionsGrouper="Opciones de servidor";
a.BNR_AccountsNote="Introduce las direcciones de correo de las cuentas que quieres restaurar";
a.BNR_PreserveAccNames="Mantener nombres de cuenta";
a.BNR_UsePrefix="A\u00f1adir un prefijo a cada nombre de cuenta";
a.BNR_Note="Nota:";
a.BNR_RestoreTo="Restaurar desde";
a.BNR_RestoretoLatest="Restaurar desde la \u00faltima copia de seguridad disponible";
a.BNR_RestoreToTime="Restaurar desde {0}";
a.BNR_AddPrefix="A\u00f1adir prefijo <span class='ZaHighlightedText'>{0}</span> a cada cuenta restaurada";
a.BNR_InvalidPrefix="Car\u00e1cter no v\u00e1lido en el prefijo ";
a.BNR_NullPrefix="El prefijo no puede ser cero";
a.BNR_allAccountsIncludeDeleted="Restaurar todas las cuentas incluyendo las cuentas eliminadas";
a.BNR_allAccountsSkipDeleted="Restaurar todas las cuentas excepto las cuentas eliminadas";
a.BNR_RestoreOnlyTheseAccounts="S\u00f3lo restaurar estas cuentas:";
a.BNR_ReviewOptions="Revisa las opciones a continuaci\u00f3n. Si quieres cambiar alguna de las opciones, pulsa en \u201cAnterior\u201d. Cuando est\u00e9s listo para seguir, pulsa en \u201cSiguiente\u201d. Despu\u00e9s de pulsar en \u201cSiguiente\u201d, el servidor comenzar\u00e1 a restaurar las cuentas.";
a.BNR_SearchingAccounts="Espera. Buscando cuentas... ";
a.BNR_SearchingBackups="Espera. Buscando copias de seguridad... ";
a.BNR_SearchingBackupsServ="Buscando las copias de seguridad en el servidor {0}";
a.BNR_MustGivePrefix="Se requiere un prefijo porque ya existe una cuenta con el mismo nombre pero con una ID diferente.";
a.BNR_NoBackupForPITFound="No se ha podido encontrar ninguna copia de seguridad completa con la fecha y hora indicadas.";
a.BNR_NoBackupForFound="No se ha podido encontrar ninguna copia de seguridad completa.";
a.BNR_NoAccBackupFound="No se ha podido encontrar ninguna copia de seguridad de esta cuenta. ";
a.BNR_NoAccBackupForPITFound="No se ha podido encontrar ninguna copia de seguridad de esta cuenta con la fecha y hora indicadas.";
a.BNR_Restore_to_different="Cada cuenta se restaurar\u00e1 a una nueva cuenta. El nombre de la nueva cuenta tendr\u00e1 un prefijo, por ejemplo, <span class='ZaHighlightedText'>john.doe@domain.com</span> ser\u00e1 restaurada a <span class='ZaHighlightedText'>{0}john.doe@domain.com</span>";
a.BNR_SelectPath="Ruta de las copias de seguridad objetivo:";
a.BNR_AccountName="Introduce la direcci\u00f3n de correo de la cuenta que quieres restaurar.";
a.BNR_EmailAddress="Direcciones de correo:";
a.BNR_SelectServer="Servidor para las cuentas restauradas:";
a.BNR_TargetPath="Ruta a la copia objetivo:";
a.BNR_FreeSpace="Espacio libre (MB):";
a.BNR_TotalSpace="Espacio total (MB):";
a.BNR_Prefix="Prefijo para el nombre de la cuenta nueva:";
a.BNR_method="M\u00e9todo de restauraci\u00f3n:";
a.BNR_Restore="Restaurar";
a.BNR_NoLabelsFound="No se ha podido encontrar ninguna etiqueta de copia de seguridad en el lugar especificado";
a.BNR_NoLabelsFoundTitle="No se ha podido encontrar la copia de seguridad";
a.BNR_LookingForLabels="Buscando etiquetas";
a.BNR_Waiting="Cuenta {0}:<br/>Esperando para restaurar el buz\u00f3n de correo.";
a.BNR_Restoring="Cuenta {0}:<br/>Restaurando el buz\u00f3n de correo. Para cancelar el proceso de restauraci\u00f3n, pulsa en el bot\u00f3n Cancelar.";
a.BNR_RestoreAborting="Cuenta {0}:<br/> Intentando detener el proceso de restauraci\u00f3n.";
a.BNR_RestoreSuccess="Cuenta {0}:<br/>El buz\u00f3n de correo ha sido restaurado correctamente.";
a.BNR_RestoreFailed="Cuenta {0}:<br/>Fallo al restaurar el buz\u00f3n de correo.";
a.BNR_RestoreInterrupted="Cuenta {0}:<br/>No se ha restaurado el buz\u00f3n de correo. Se ha interrumpido el proceso de restauraci\u00f3n.";
a.BNR_RestoreAllInterrupted="Se ha interrumpido el proceso de restauraci\u00f3n.";
a.BNR_RestoreAllFailed="Fallo al restaurar los buzones de correo.";
a.BNR_RestoreAllAborting="Intentando detener el proceso de restauraci\u00f3n.";
a.BNR_AllWaiting="Esperando para restaurar los buzones de correo.";
a.BNR_AllRestoring="Restaurando los buzones de correo. Para cancelar el proceso de restauraci\u00f3n, pulsa en el bot\u00f3n Cancelar.";
a.BNR_AccMoveOverviewStep_Title="Mover una cuenta";
a.BNR_AccMoveProgressStep_Title="Mover una cuenta";
a.BNR_Error_LDAP_NotUpdated="El registro LDAP de esta cuenta no se ha actualizado correctamente. El valor del atributo {0} debe ser {1}; pero en vez de \u00e9ste se ha encontrado el valor {2}.  ";
a.BNR_parameterCannotBeNull="\u00a1El par\u00e1metro {0} no puede ser nulo!";
a.BNR_Abort="Cancelar";
a.BNR_allAccounts="Restaurar todas las cuentas";
a.BNR_SelectedAcc="Selecciona las cuentas a restaurar";
a.BNR_SkipDeletedAcc="Omitir las cuentas eliminadas";
a.BNR_IgnoreRedoErrors="Ignorar los errores al rehacer";
a.BNR_skipDeleteOps="Omitir las operaciones de eliminaci\u00f3n";
a.BNR_toLatest="Restaurar desde la \u00faltima copia de seguridad";
a.BNR_toPIT="Restaurar desde una fecha y hora";
a.BNR_ChoosePIT="Selecciona la fecha y hora:";
a.BNR_old_acc_id="Antigua ID de la cuenta";
a.BNR_current_acc_id="ID actual de la cuenta";
a.BNR_InvalidBackupTargetERROR="La copia de seguridad objetiva no es v\u00e1lida. Verifica la ruta a esa copia de seguridad.";
a.BNR_BackupWizardTitle="Copia de seguridad inmediata";
a.BNR_AccNoErrors="Ning\u00fan error";
a.BNR_AccountNameStep_Title="Nombre de cuenta";
a.BNR_SelectServersStep_Title="Selecciona los servidores";
a.BNR_LookingForLabelsStep_Title="Buscando etiquetas para la copia de seguridad";
a.BNR_SelectLabelsStep_Title="Selecciona las etiquetas";
a.BNR_RestoringStepTitle="Restaurando";
a.BNR_ResultStep_Title="Resultado";
a.BNR_SelectDestinationStep_Title="Selecciona el destino";
a.BNR_BackupSelectAccountsStep_Title="Selecciona las cuentas";
a.ERROR_RESTORING="No se puede restaurar con una copia de seguridad incompleta";
a.BNR_TABT_Accounts="Todas las cuentas";
a.BNR_TABT_Errors="Mensajes de error";
a.BNR_TABT_FailedAccounts="Fallo en las cuentas";
a.BNR_BackupSourceServer="Servidor fuente:";
a.BNR_BackupMethod="M\u00e9todo de copia de seguridad:";
a.BNR_BackupMethodFull="Completa";
a.BNR_BackupMethodIncremental="Incremental";
a.BNR_BackupTargetPath="Ruta objetivo:";
a.BNR_BackupAllAccounts="Hacer copia de seguridad de todas las cuentas";
a.BNR_Find="Buscar:";
a.BNR_BtnRunbackup="Copia de seguridad";
a.BNR_BackupBackingUp_Title="Ejecutando la copia de seguridad";
a.BNR_BackupStarting="Iniciando la copia de seguridad, espera\u2026";
a.BNR_BackupStarted="Se ha iniciado la nueva copia de seguridad y se est\u00e1 ejecutando ahora en el servidor. Al cerrar este cuadro de di\u00e1logo no se cancelar\u00e1 la copia. Puedes cerrar el cuadro de di\u00e1logo en cualquier momento mediante el bot\u00f3n Terminar.  ";
a.BNR_IncrementalLabel="Etiqueta para la copia incremental:";
a.BNR_FullLabel="Etiqueta para la copia completa:";
a.BNR_AccountsTobackup="Cuentas a copiar ";
a.BNRTBB_Backup="Copia de seguridad";
a.BNRTBB_Backup_tt="Ejecutar una copia de seguridad inmediata";
a.BNRTBB_AbortBackup="Cancelar";
a.BNRTBB_AbortBackup_tt="Cancelar la copia de seguriad que se est\u00e1 ejecutando";
a.BNRTBB_ConfigureBackup="Configurar";
a.BNRTBB_ConfigureBackup_tt="Configurar Copia de seguridad/Restaurar";
a.BNR_Label="Etiqueta:";
a.BNR_Server="Servidor:";
a.BNR_Status="Estado:";
a.BNR_Status_Running="Ejecut\u00e1ndose";
a.BNR_Status_Complete="Finalizado";
a.BNR_NOLabelsfoundIn="No se han encontrado etiquetas de copia de seguridad en {0}";
a.BNR_NOLabelsfound="No se han encontrado etiquetas de copia de seguridad ";
a.BNR_accountErrorMsg="Ha surgido un error al crear una copia de seguridad para la cuenta {0}";
a.BNR_accountCompletedMsg="Se ha completado la copia de seguridad para la cuenta {0}";
a.BNR_accountInProgressMsg="Se est\u00e1 ejecutando la copia de seguridad para la cuenta {0}";
a.BNR_accountNotStartedMsg="A\u00fan no se ha creado la copia de seguridad para la cuenta {0}";
a.BNR_sourceServer="Servidor fuente:";
a.BNR_targetServer="Servidor objetivo:";
a.BNR_ExportingMailbox="Exportando el buz\u00f3n de correo:";
a.BNR_VerifyingLDAP="Verificando el registro LDAP:";
a.BNR_PurgeOldMailbox="Vaciando el antiguo buz\u00f3n:";
a.BNR_MoveInfo1='El proceso para mover un buz\u00f3n de correo de un servidor a otro consta de tres pasos.<br/>1 - Exportar el buz\u00f3n de correo al servidor de destino<br/> 2 \u2013 Verificar que el buz\u00f3n se ha copiado correctamente<br/> 3 - Vaciar el buz\u00f3n de correo antiguo en el servidor de origen<br/> Pulsa en "Exportar" para comenzar a exportar el buz\u00f3n de correo.';
a.BNR_MoveInfo2="Verifica que el buz\u00f3n de correo est\u00e1 intacto, haciendo clic en el bot\u00f3n {0} o entrando en el buz\u00f3n de correo a trav\u00e9s de la interfaz de correo web. ";
a.BNR_MoveInfo3="Despu\u00e9s de verificar el buz\u00f3n de correo, haz clic en el bot\u00f3n {0} para vaciar el buz\u00f3n de correo en {1}.";
a.BNR_WarningPurge="\u00a1Advertencia! No has vaciado el buz\u00f3n de correo en el servidor {0}. Si cierras esta ventana ahora, no podr\u00e1s vaciar el buz\u00f3n de correo mediante la consola de administraci\u00f3n. Para poder vaciar el buz\u00f3n de correo en {0}, abre el cebador (command prompt) en el servidor {0} y ejecuta el siguiente comando como usuario de zimbra:<br/><i>zmpurgeoldmbox -a {1} </i><br/>\u00bfSeguro que quieres cerrar esta ventana?";
a.BNR_Purge="Vaciar";
a.BNR_Export="Exportar";
a.BNR_ViewMailbox="Ver buz\u00f3n de correo";
a.BNR_MoveMailbox="Mover buz\u00f3n de correo";
a.BNR_MoveMailbox_tt="Haz clic para mover el buz\u00f3n de correo a otro servidor";
a.BNR_ExportingMbx_group="Exportando el buz\u00f3n de correo";
a.BNR_VerifyingMbx_group="Verificando el buz\u00f3n de correo";
a.BNR_PurgingMbx_group="Vaciando el buz\u00f3n de correo";
a.BNR_AccMoveTabName="Moviendo {0}";
a.BNR_CannotAbortCompletedBckup="\u00a1Advertencia! Fallo al cancelar la copia de seguridad porque ya se hab\u00eda finalizado. ";
a.BNR_Aborting="Cancelando la copia de seguridad. Pulsa en el bot\u00f3n Actualizar para ver el estado de la etiqueta de la copia de seguridad.";
a.BNR_zimbraBackupTarget="Destino de copia de seguridad predeterminado";
a.BNR_zimbraBackupReportEmailSender="Enviar correos electr\u00ef\u00bf\u00bdnicos de notificaci\u00ef\u00bf\u00bdn desde";
a.BNR_zimbraBackupReportEmailSubjectPrefix="Prefijo para el asunto del correo electr\u00ef\u00bf\u00bdnico de notificaci\u00ef\u00bf\u00bdn";
a.BNR_zimbraBackupReportEmailRecipients="Enviar correos electr\u00ef\u00bf\u00bdnicos de notificaci\u00ef\u00bf\u00bdn a";
a.BNR_zimbraBackupMinFreeSpace="Espacio libre m\u00ednimo para la copia de seguridad:";
a.BNR_zimbraBackupMinFreespaceConfInfo='El siguiente espacio libre m\u00ednimo para la copia de seguridad se puede especificar en porcentaje (por ejemplo "25%") del total de espacio y en n\u00famero de bytes (por ejemplo 100000, 200\u00a0KB, 300\u00a0MB, 500\u00a0GB, 20\u00a0TB).';
a.BNR_CreateFolderIfDoesnotExist="Crear carpeta si existe";
a.BNR_CreateTargetFolderQ="La ruta objetivo {0} no existe. \u00bfQuieres crear la ruta?";
a.BNR_FailedToCreateTargetFolder="\u00a1Error! \u00a1Fallo al crear la carpeta objetivo {0}! Aseg\u00farate de que la cuenta de zimbra tiene permiso para crear {0}.";
a.BNR_FailedToCreateTargetFolderOptZimbra="\u00a1Error! \u00a1Fallo al crear la carpeta objetivo {0}! \u00a1{1} pertenece a la ra\u00edz!";
a.BNR_TargetFolderNotWritable="\u00a1Error! \u00a1No se puede escribir a la ruta objetivo {0}!";
a.BNR_TargetFolderNotReadable="\u00a1Error! \u00a1No se puede leer la ruta objetivo {0}!";
a.BNR_LatestLabel_col="\u00daltima etiqueta ";
a.BNR_Label_col="Etiqueta";
a.BNR_StartTime_col="Tiempo de inicio";
a.BNR_EndTime_col="Tiempo de finalizaci\u00f3n";
a.BNR_Status_col="Estado";
a.BNR_Server_col="Servidor";
a.BNR_ErrorMsg_col="Mensaje de error";
a.BNR_FreeSpace_col="Espacio libre (MB)";
a.BNR_TotalSpace_col="Espacio total (MB)";
a.BNR_zimbraBackupMode="Tipo de copia de seguridad";
a.BNR_backupModeStandard="Est\u00e1ndar";
a.BNR_backupModeAutoGroup="Agrupaci\u00f3n autom\u00e1tica";
a.BNR_selectAccount="Seleccionar cuenta:";
a.BNR_TBB_RestoreMailbox="Restaurar";
a.BNR_FindBackups="Buscar copias de seguridad";
a.BNR_Accounts="cuentas";
a.BNR_Running="Ejecut\u00e1ndose";
a.BNR_Completed="Finalizado";
a.BNR_Aborted="Cancelado";
a.BNR_InProgress="Procesando";
a.BNR_NotStarted="No iniciada";
a.BNR_Error="Error";
a.BNR_RunningErrors="Ejecut\u00e1ndose con errores";
a.BNR_CompletedErrors="Finalizada con errores";
a.BNR_zimbraBackupAutoGroupedNumGroups="Los grupos";
a.BNR_zimbraBackupAutoGroupedThrottled="Cambiar copias de seguridad autom\u00e1ticamente";
a.ERROR_BACKUP_2="No se puede ejecutar la copia porque el argumento \u2018accounts\u2019 no existe o es nulo.";
a.ERROR_BACKUP_TITLE_2="El par\u00e1metro \u2018accounts\u2019 no puede ser nulo";
a.ERROR_BACKUP_TITLE_3="El par\u00e1metro \u2018backupLabel\u2019 no puede ser nulo";
a.ERROR_BACKUP_3="Se requiere el argumento \u2018backupLabel\u2019 para poder ejecutar el comando Cancelar.";
a.ERROR_BACKUP_1="No se pueden solicitar etiquetas de copia para las cuentas porque el argumento \u2018accounts\u2019 no existe o es nulo.";
a.ERROR_EMAIL_ADDR_REQUIRED="\u00a1Se requiere la direcci\u00f3n de correo para poder restaurar un buz\u00f3n de correo! Introduce una direcci\u00f3n de correo o selecciona la opci\u00f3n \u201cRestaurar todas las cuentas\u201d.";
a.ERROR_RESTORE_1="No se pueden restaurar las cuentas. Se requiere el par\u00e1metro de prefijo para restaurar un buz\u00f3n de correo como una cuenta nueva.";
a.ERROR_RESTORE_2="No se pueden restaurar las cuentas porque el argumento \u2018accounts\u2019 no existe o es nulo.";
a.ERROR_RESTORE_3="No se pueden restaurar las cuentas porque el argumento \u2018method\u2019 no existe o es nulo.";
a.ERROR_NO_INCREMENTALS_IN_AUTOGROUPED_MODE="No se permiten las copias de seguridad en incremento en modo de agrupaci\u00f3n autom\u00e1tica.";
a.WARNING_MANUAL_AUTOGROUP="\u00a1Atenci\u00f3n! Se ha configurado el servidor para ejecutar copias de seguridad en modo de agrupaci\u00f3n autom\u00e1tica. No se recomienda ejecutar copias de seguridad manualmente en modo de agrupaci\u00f3n autom\u00e1tica.";
a.UI_Comp_backupsView="Copias de seguridad";
a.BNR_BUSY_SCHEDULING_BACKUPS="Programando copias de seguridad\u2026";
a.BNR_ViewBackup="Copias de seguridad...";
a.BNR_BackupFail="Error en la copia de seguridad";
a.BNR_NoBackupAvailable="No hay copias de seguridad disponibles";
a.LBL_HomeConfigBackup="Configurar copias de seguridad";
a.LBL_HomeLastBackup="\u00daltima copia de seguridad:";
a.BNR_NeverBackup="Nunca";
a.LBL_AddCOS="A\u00ef\u00bf\u00bdadir CDS";
a.LBL_AddDomain="Agregar dominio";
a.BNR_zimbraGlobalBackupEnabled="Habilitar copias de seguridad";
a.BNR_DumpsterByCOSAndDomain="Seleccionar usuarios para la recuperaci\u00f3n de mensajes";
a.BNR_zimbraBackupStandardIncrementalInfo="Las copias de seguridad incrementales tambi\u00ef\u00bf\u00bdn se ejecutar\u00ef\u00bf\u00bdn a esta hora todos los d\u00ef\u00bf\u00bdas.";
a.BNR_zimbraDumpsterEnabled="Habilitar la recuperaci\u00f3n de mensajes para";
a.BNR_zimbraMailReportEnabled="Habilitar notificaciones por correo electr\u00ef\u00bf\u00bdnico";
a.BNR_zimbraBackupRetentionDays="D\u00ef\u00bf\u00bdas para retener copias de seguridad completas";
a.BNR_zimbraBackupSyncEnabled="Ejecute copias de seguridad completas sincr\u00ef\u00bf\u00bdnicamente";
a.BNR_zimbraBackupStartTime="Programaci\u00ef\u00bf\u00bdn de horas";
a.BNR_zimbraBackupStartDay="D\u00ef\u00bf\u00bdas de programaci\u00ef\u00bf\u00bdn";
a.BNR_zimbraBackupSkipBlobs="Excluir blobs";
a.BNR_zimbraBackupSkipHsmBlobs="Excluir blobs en vol\u00ef\u00bf\u00bdmenes SM";
a.BNR_zimbraBackupBlobsCompressType="Comprimir blobs en formato zip";
a.BNR_zimbraBackupSkipSearchIndex="Excluir \u00ef\u00bf\u00bdndice de b\u00ef\u00bf\u00bdsqueda";
a.BNR_zimbraBackupObjectLevelEnabled="Habilitar copia de seguridad para";
a.BNR_cos_domain_option="Dominio y COS";
a.BNR_all_user_option="Todos los usuarios";
a.BNR_cos_backup_cache="Copia de seguridad por clase de servicio";
a.BNR_domain_backup_cache="Copia de seguridad por dominio";
a.BNR_Tab_Dumpster="Recuperaci\u00ef\u00bf\u00bdn de mensajes";
a.BNR_zimbraMailDumpsterLifetime="Conservar mensajes durante (d\u00ef\u00bf\u00bdas)";
a.BNR_zimbraDumpsterPurgeEnabled="Purgar mensajes antiguos autom\u00ef\u00bf\u00bdticamente";
a.BNR_zimbraDumpsterUserVisibleAge="Permitir a los usuarios ver los mensajes de (d\u00ef\u00bf\u00bdas)";
a.BNR_cos_dumpster_cache="Por clase de servicio";
a.BNR_domain_dumpster_cache="Por dominio";
a.BNR_Notifications="Notificaciones";
a.BNR_Options="Opciones";
a.BNR_BackupByCOSAndDomain="Seleccionar usuarios para copia de seguridad";
a.BNR_ApplyServerSetting="Aplicar esta configuraci\u00ef\u00bf\u00bdn a...";
a.BNR_ApplyServerSettingDialogTitle="Aplicar configuraciones";
a.BNR_BackupByCOSAndDomainInfo="Debe agregar al menos un COS o dominio para habilitar esta configuraci\u00ef\u00bf\u00bdn.";
a.LBL_RemoveAndReset="Eliminar y restablecer";
delete a;
if(!window.com_zimbra_bulkprovision){
window.com_zimbra_bulkprovision={}
}
a=window.com_zimbra_bulkprovision;
a.label="Account Migration";
a.description="Account Migration Admin Extension";
a.ACTBB_BulkProvision="Bulk Provision";
a.ACTBB_BulkProvision_tt="Bulk provisioning the accounts by uploading the CSV file";
a.BP_Wizard_title="Bulk Provisioning Accounts";
a.BP_Wizard_title_new="Import accounts";
a.BP_Exch_Mig_Wiz_Title="Migration From MS Exchange";
a.BP_Wizard_upload="Upload the source file";
a.BP_Wizard_provision="Provision Accounts";
a.BP_Wizard_summary="Summary";
a.BP_Wizard_overview="Overview";
a.BP_Wizard_review="Review options";
a.BP_Wizard_bulkProvOptions="Bulk provisioning options";
a.BP_Wizard_exchangeOptions="Options for migration from Microsoft Exchange";
a.BP_Wizard_ldapOptions="Directory connection";
a.BP_Wizard_File_Upload="File upload";
a.MIG_Wizard_overview="Overview";
a.MIG_Wizard_review="Review migration options";
a.MIG_Wizard_mailServerInfo="Mail server information";
a.MIG_Wizard_migrationOptions="Migration options";
a.MIG_Wizard_ADOptions="Active Directory information";
a.CSV_Upload_file="CSV File:";
a.XML_Upload_file="XML File:";
a.CSV_uploadNotes="Note: Each row in the CSV is an account entry. Each account entry consists of three columns separated by comma (,) in the order of  account name, account display name and password. <p> A sample entry will look like: user@domain.tld, displayname, password </p> <p> If there is no password provided, a random password will be generated for the account. And user will be prompted to change the password upon first login. </p>";
a.CSV_uploadTitle="Please upload the CSV file containing the bulk accounts information.";
a.CSV_uploadNotes_new="Note: Each row in the CSV is an account entry. Each account entry consists of six columns separated by comma (,) in the order of email address, display name, first name, last name, password and TRUE or FALSE <br/>TRUE if you wish to prompt the user to change the password after first login, otherwise - FALSE.<br/><p> A sample entry will look like: <br/> john.smith@company.com, John H. Smith, John, Smith, password000, TRUE <br/>or like: <br/>jane.smith@company.com, Jane M. Smith, Jane, Smith, password111, FALSE </p>";
a.XML_uploadNotes="Please refer to documentation for the description of XML format";
a.CKB_mustChangePasswd="User must change password upon first login";
a.BP_wizard_upload_status='Your CSV file is uploaded successfully, click "Next" to provision the accounts.';
a.BP_wizard_csv_invalid="Your uploaded CSV file contains fatal errors, please fix them and upload the file again.";
a.error_no_bulk_file_specified="Please select a valid file to be uploaded.";
a.error_upload_bulk_no_aid="Failed to upload the file. No attachment ID is returned.";
a.error_upload_bulk="Failed to upload the file, status {0}. Please try again.";
a.error_no_csv_file_specified="Please select a valid CSV file to be uploaded.";
a.error_upload_csv="Upload the CSV file failed, status {0}. Please try again.    ";
a.error_upload_csv_no_aid="Upload the CSV file failed. No attachment ID is returned.";
a.error_no_aid="Missing attachment id.";
a.error_unmatching_aid="Uploaded and returned attachment ID don\u2019t match.";
a.summary_download="Accounts are created successfully. You may click the following link to download the bulk provisioning report.";
a.download_csv="Download CSV report";
a.no_accounts="No bulk provision accounts";
a.ALV_Password_col="Password";
a.ALV_Stauts_col="Provision Status";
a.title_provision="Provisioning accounts";
a.BUSY_GENERATING_BULK_FILE="Generating bulk file...";
a.BUSY_GET_PROVISION_ACCOUNTS="Getting bulk provisioning accounts ...";
a.BUSY_START_PROVISION_ACCOUNTS="Provisioning accounts now ...";
a.BUSY_GETTING_PROVISIONING_STATUS="Requesting the status of provisioning process..";
a.BUSY_ABORTING_IMPORT_THREAD="Aborting provisioning process...";
a.BUSY_GET_BULK_TASKS="Getting all provisioning tasks... ";
a.BUSY_CREATE_ACCOUNTS="Creating account {0}  ";
a.SUCCEEDED="Succeeded";
a.SKIPPED="Skipped";
a.BUSY_FAILED="Failed";
a.BUSY_UPDATE_BP_STATUS="Updating the account provisioning status ...";
a.DONE="Done.";
a.ABORTED="Aborted.";
a.ERROR_TOO_MANY_ACCOUNTS="Too many accounts in your uploaded CSV file.";
a.ERROR_MUST_SPECIFY_DOMAIN_NAME="Must specify target domain!";
a.ERROR_PASSWORDS_DONT_MATCH="Passwords do not match!";
a.MUST_SELECT_TARGET_DOMAIN="Target domain is required by Exchange Migration Wizard!";
a.ERROR_LDAP_FILTER_REQUIRED="Must specify LDAP filter!";
a.ERROR_LDAP_BASE_REQUIRED="Must specify LDAP search base!";
a.ERROR_LDAP_URL_REQUIRED="Must specify LDAP URL!";
a.ERROR_BIND_DN_REQUIRED="Must specify Bind DN!";
a.ERROR_MUST_SELECT_ACCOUNTS="You must select some accounts for import!";
a.ERROR_INVALID_SEARCH_FILTER="You have entered an invalid LDAP filter. {0}";
a.BP_NAMING_EXCEPTION="LDAP server returned an error. Please check LDAP binding credentials, LDAP URL, the syntax of your LDAP search base and LDAP filter. Problem: {0}";
a.REQUIRED_TO_USE_ADMIN_CREDENTIALS="You must provide admin credentials for IMAP connection unless you have uploaded the list of accounts in an XML file with logins and passwords for each account!";
a.ERROR_IMAP_CONNECTION_TYPE_REQUIRED="You must specify IMAP connection type!";
a.ERROR_IMAP_PORT_REQUIRED="You must specify IMAP port number!";
a.ERROR_IMAP_HOST_REQUIRED="You must specify IMAP host name!";
a.ERROR_IMAP_ADMIN_LOGIN_REQUIRED="You must specify IMAP admin login!";
a.ERROR_IMAP_ADMIN_PASSWORD_REQUIRED="You must specify IMAP admin password!";
a.ERROR_NO_ACCOUNTS_TO_IMPORT="There are no accounts to import. Please verify that the accounts you are trying to import have not been created already! ";
a.ERROR_PLEASE_SELECT_YES='Please answer "Yes" to one of the questions or click "Cancel" if you do not wish to import any data at this time.';
a.ACTBB_DownloadAccounts="Download";
a.ACTBB_DownloadAccounts_tt="Download the search results";
a.AccountImportWizardOverview="Please specify how you will be providing the list of accounts to provision in your Zimbra server.";
a.ActionImportOnlyAccounts="Import only accounts from an external source (XML, CSV or directory)";
a.ActionImportFromCSV="Import from a CSV file";
a.ActionImportFromXML="Import from an XML file";
a.ActionImportFromLDAP="Import from LDAP directory";
a.ActionImportFromZimbra="Import from another Zimbra LDAP directory";
a.ActionImportAccountsFromAD="Import accounts from Active Directory/MS Exchange";
a.ActionGenerateMigXML="Import accounts and data from Microsoft Exchange Server";
a.ActionGenerateBulkXML="Export accounts from external directory into an XML file ";
a.ActionGenerateBulkCSV="Export accounts from external directory into a CSV file";
a.GeneratedBulkProvisionFileLink="Download file";
a.DownloadMigrationXML="Download XML file for MS Exchange migration utility";
a.DownloadMigrationWizard="Download MS Exchange migration utility";
a.ClickToDownloadGeneratedFile="Click the link below to download the file";
a.UploadFileTitle="Upload the {0} file containing the bulk accounts information";
a.ADInfoStepNote="Please enter the details for connecting to your Active Directory server";
a.ADServerName="Server Name";
a.ADServerPort="Port";
a.ADUseSSL="Sse SSL";
a.LDAP_GALServerName="Server Name";
a.LDAP_GALServerPort="Port";
a.LDAP_GALUseSSL="Use SSL";
a.LdapInfoStepNote="Please enter the details for connecting to your AD or LDAP server";
a.LDAPMaxResults="Maximum records to fetch (0 for unlimited):";
a.SourceDomainName="Source domain:";
a.TargetDomainName="Target domain:";
a.ProvOptionsNote="Please enter common options to be used for multiple accounts during provisioning";
a.GenerateRandomPassword="Generate random password for each account (recommended)";
a.RevGenerateRandomPassword="Generate random password:";
a.UseSamePassword="Use same password for all new accounts";
a.PasswordToUse="Password to use:";
a.PasswordToUseConfirm="Confirm password:";
a.GeneratedPasswordLength="Length of generated password:";
a.RequireChangePassword="Require users to change password after first login";
a.RevRequireChangePassword="Require users to change password:";
a.ProvisioningStatusIdle="Idle";
a.ProvisioningStatusStarted="Started";
a.ProvisioningStatusStarting="Starting";
a.ProvisioningStatusCreatingAccounts="Creating accounts";
a.ProvisioningStatusFinished="Done";
a.ProvisioningStatusAborting="Aborting";
a.ProvisioningStatusAborted="Aborted";
a.ProvisioningStatusError="Error";
a.ProvisioningStatusNotRunning="Not running";
a.ProvisioningStatusNote="Import process is started. ";
a.ProvisioningSuccessReportsNote="Import process has completed. You can download the report using the link below:";
a.ProvisioningFailedReportsNote="Import process has failed. You can download the reports using the links below:";
a.ProvisioningWithErrorsReportsNote="Import process has completed with errors. You can download the reports using the links below:";
a.ProvisioningAbortedReportsNote="Import process has been aborted. You can download the reports using the links below:";
a.DownloadSuccessReportLink="Download list of provisioned accounts (CSV)";
a.DownloadErrorReportLink="Download list of failed accounts (CSV)";
a.GeneratePasswordsNote="If you choose to generate random passwords you must download the list of provisioned accounts with passwords in CSV format at the end of this wizard.";
a.ProcessStatus="Import process status:";
a.TotalAccounts="Total number of accounts:";
a.FailedAccounts="Number of failed accounts:";
a.ProvisionedAccounts="Number of provisioned accounts:";
a.Skipped="Skipped accounts (already existing):";
a.Progress="Progress:";
a.NumTotalAccts="Total imports";
a.NumCompletedAccts="Finished";
a.NumFailedAccts="Failed";
a.TaskStatus="Status";
a.TaskOwner="Task owner";
a.TaskComplete="Complete";
a.TaskInProgress="In progress";
a.TotalMailboxes="Number of mailboxes:";
a.IdleMailboxes="Mailboxes that will be imported:";
a.FinishedMaiboxes="Mailboxes already imported:";
a.RunningMailboxes="Mailboxes currently running import:";
a.MigInvalidSSLOk="Ignore invalid SSL certificate";
a.RevMigInvalidSSLOk="Ignore invalid SSL certificate:";
a.RevMigIgnorePreviouslyImported="Ignore previously imported emails:";
a.MigIgnorePreviouslyImported="Ignore previously imported emails";
a.RevMigImportJunk='Import "junk" folder:';
a.MigImportJunk='Import "junk" folder';
a.MigImportDeletedItems="Import deleted items";
a.RevMigImportDeletedItems="Import deleted items:";
a.RevMigImportCalendar="Import calendar:";
a.MigImportCalendar="Import calendar";
a.RevMigImportTasks="Import tasks:";
a.MigImportTasks="Import tasks";
a.RevMigImportContacts="Import contacts:";
a.MigImportContacts="Import contacts";
a.RevMigImportMails="Import email messages:";
a.MigImportMails="Import email messages";
a.LDAPUrl="LDAP URL:";
a.A2_MapiProfile="MAPI profile name:";
a.A2_MapiServer="MAPI server name:";
a.A2_MapiLogonUserDN="MAPI logon user DN:";
a.ZimbraAdminPasswordNote="Zimbra admin login and password will be used by MS Exchange migration utility to create mailboxes in ZCS";
a.MAPIINfoNote="MAPI profile will be used to connect to Microsoft Exchange server to collect data";
a.A2_ZimbraAdminLogin="Zimbra admin login:";
a.A2_ZimbraAdminPassword="Zimbra admin password:";
a.A2_ZimbraAdminPasswordConfirm="Confirm password:";
a.RevA2_provisionUsers="Create user accounts in ZCS:";
a.A2_provisionUsers="Create user accounts in ZCS ";
a.A2_createDomains="Automatically create missing domains";
a.generateProvFileNote="You can also download a list of accounts from an external directory (LDAP or AD) as a single XML or CSV file. You can customize the generated file and use it with this wizard to import the accounts into your Zimbra server. <br/>Select one of the following two options to download a generated file:";
a.A2_generateProvFileXML="Generate XML file";
a.A2_generateProvFileCSV="Generate CSV file ";
a.ReviewDomainCount="Number of domains found:";
a.ReviewSkippedDomainCount="Domains already in Zimbra:";
a.ReviewAccountCount="Number of accounts found:";
a.ReviewSkippedAccountCount="Accounts already in Zimbra:";
a.ReviewStepNote='Please review the options for migration from MS Exchange server.Press "Previous" to make changes.Press "Next" to download the MS Exchange migration utility and the XML file with settings for the utility.';
a.ExchMigrationWizardIntro='On the next several steps of this wizard will prompt you for information about your Exchange and Active Directory servers, it will generate an XML file with migration settings and let you download MS Exchange migration utility application.<br/>Make sure to read <a href="/zimbraAdmin/adminhelp/pdf/MigrationWizard.pdf" target="_blank">Migration Planning Guide</a> before continuing with migration.';
a.AccountImportReviewNote='Please review the options for importing accounts.Press "Previous" to make changes.Press "Next" to start importing accounts.';
a.DataImportWizardOverview="This wizard will guide you through importing data from your old server.  Two main steps of migration process are: <ol><li>Provisioning accounts</li><li>Importing mailboxes</li></ol>Two currently available options for provisioning accounts are: <ol><li>Upload the list of accounts in an XML file</li><li> Import account list from a directory server</li></ol>";
a.SourceServerType="Type of mail server:";
a.AccountListType="My account records are in:";
a.AccountListTypeLDAP="External LDAP Directory";
a.AccountListTypeAD="External Active Directory";
a.AccountListTypeXML="XML File";
a.AccountListTypeCSV="CSV File";
a.SourceServerTypeIMAP="Generic IMAP Server";
a.SourceServerTypeExchange="MS Exchange Server";
a.SourceServerTypeExchangeIMAP="MS Exchange IMAP Server";
a.SourceServerTypeZimbra="Zimbra Collaboration Suite";
a.AccountListTypeNote="How would you like to specify the list of accounts whose mail you want to import?";
a.SMTPHost="SMTP Host:";
a.SMTPPort="SMTP Port:";
a.IMAPHost="IMAP Host:";
a.IMAPPort="IMAP Port:";
a.UseIMAPAdminCredentials="Use admin credentials for IMAP connection:";
a.UseIMAPAdminCredentialsChkBx="Use admin credentials for IMAP connection";
a.IMAPAdminLogin="IMAP admin login:";
a.IMAPAdminPassword="IMAP admin password:";
a.IMAPAdminPasswordConfirm="Confirm password:";
a.IMAPConnectionType="IMAP connection type:";
a.IMAPConnectionSSL="SSL";
a.IMAPConnectionCleartext="Clear text";
a.IMAPConnectionTLS="TLS";
a.IMAPConnectionTLSIfAvailable="TLS if available  ";
a.DataImportStarted="Data import task has been started. You may close this wizard now.";
a.UI_Comp_bulkProvisioning="Account Migration";
a.OVP_bulkProvisioning="Account Migration";
a.TB_IMAP_Import="Migration Wizard";
a.TB_IMAP_Import_tt="Start Data Import wizard";
a.BP_view_title="Provisioning tasks";
a.BulkDataImport_Wiz_title="Data import";
a.DataImport_Wizard_Intro="Introduction";
a.DataImport_Wizard_Options="Import options";
a.DataImport_Wizard_AcctPicker="Select accounts";
a.DataImport_File_Upload="Upload source file with accounts";
a.DataImport_LDAP_Info="LDAP connection details";
a.DataImport_IMAP_Info="IMAP connection details";
a.DataImport_Review="Review options";
a.DataImport_Finish="Start import";
a.NewButton_Import="Import Accounts";
a.NewButton_Import_tt="Import multiple email accounts";
a.TBB_migration_wizard="MS Exchange Migration";
a.TBB_migration_wizard_tt="Launch a wizard for migrating accounts and data from MS Exchange";
a.ImportAccountRecordsQ="Would you like to import account records?";
a.ImportAccountMailQ="Would you like to import mail? ";
a.PickAccounts="Select accounts to import";
a.UploadAccountsInXML="Upload list of accounts in XML format";
a.ReuseAccountsXML="Use previously uploaded XML file";
a.RetrieveAccountsFromLDAP="Retrieve accounts from LDAP Directory";
a.RetrieveAccountsFromLAD="Retrieve accounts from Active Directory";
a.AccountsForDataImport="Accounts for data import";
a.ClickNextToStartImport='Click "Next" to start import process. After the import process is started, you will be able to close this dialog and check the progress in the "Account Migration" view.';
a.DeleteTask="Delete Task";
a.DeleteTask_tt="Delete the selected task and temporary data sources.";
a.ConfirmDeleteTask="Are you sure you want to delete the selected task? ";
a.SplitDomainOptionsNote="The following options are for running a split domain configuration. Make sure to consult with documentation before editing these options.";
a.SwitchTransportToLocal="Switch mail transport to local";
delete a;
if(!window.com_zimbra_bulkprovision){
window.com_zimbra_bulkprovision={}
}
a=window.com_zimbra_bulkprovision;
a.label="Migraci\u00f3n de cuenta";
a.description="Extensi\u00f3n de administraci\u00f3n de la migraci\u00f3n de cuenta";
a.ACTBB_BulkProvision="Aprovisionamiento m\u00faltiple";
a.ACTBB_BulkProvision_tt="Aprovisionamiento m\u00faltiple de cuentas mediante carga de archivo CSV";
a.BP_Wizard_title="Cuentas de aprovisionamiento m\u00faltiple";
a.BP_Wizard_title_new="Importar cuentas";
a.BP_Exch_Mig_Wiz_Title="Migraci\u00f3n de MS Exchange";
a.BP_Wizard_upload="Cargar el archivo fuente";
a.BP_Wizard_provision="Aprovisionar cuentas";
a.BP_Wizard_summary="Resumen";
a.BP_Wizard_overview="Resumen";
a.BP_Wizard_review="Revisar opciones";
a.BP_Wizard_bulkProvOptions="Opciones de aprovisionamiento m\u00faltiple";
a.BP_Wizard_exchangeOptions="Opciones para la migraci\u00f3n desde Microsoft Exchange";
a.BP_Wizard_ldapOptions="Conexi\u00f3n a directorio";
a.BP_Wizard_File_Upload="Carga de archivos";
a.MIG_Wizard_overview="Resumen";
a.MIG_Wizard_review="Revisar opciones de migraci\u00f3n";
a.MIG_Wizard_mailServerInfo="Datos del servidor de correo";
a.MIG_Wizard_migrationOptions="Opciones de migraci\u00f3n";
a.MIG_Wizard_ADOptions="Datos de Active Directory";
a.CSV_Upload_file="Archivo CSV:";
a.XML_Upload_file="Archivo XML:";
a.CSV_uploadNotes="Nota: Cada fila del archivo CSV corresponde a la entrada de una cuenta. Cada entrada de cuenta consiste en tres columnas separadas por comas (,) en el siguiente orden: nombre de cuenta, nombre en pantalla y contrase\u00f1a. <p> Una entrada de ejemplo aparecer\u00e1 como: usuario@dominio.tld, nombre en pantalla, contrase\u00f1a </p> <p> Si no se indica ninguna contrase\u00f1a, se generar\u00e1 una contrase\u00f1a al azar para la cuenta. Adem\u00e1s se les pedir\u00e1 a los usuarios que cambien la contrase\u00f1a despu\u00e9s de iniciar sesi\u00f3n por primera vez. </p>";
a.CSV_uploadTitle="Carga el archivo CSV que contiene los datos de las m\u00faltiples cuentas.";
a.CSV_uploadNotes_new="Nota: Cada fila del archivo CSV corresponde a la entrada de una cuenta. Cada entrada de cuenta consiste en seis columnas separadas por comas (,) en el siguiente orden: direcci\u00f3n de correo electr\u00f3nico, nombre en pantalla, nombre propio, apellidos, contrase\u00f1a y TRUE (verdadero) o FALSE (falso)<br/>TRUE si quieres pedir al usuario que cambie la contrase\u00f1a despu\u00e9s de iniciar sesi\u00f3n; FALSE en caso contrario.<br/><p> Una entrada de ejemplo aparecer\u00e1 como: <br/> juan.salinas@empresa.com, Juan Salinas, Juan, Salinas, contrase\u00f1a000, TRUE <br/>o bien como: <br/>clara.salinas@empresa.com, Clara Salinas, Clara, Salinas, contrase\u00f1a111, FALSE </p>";
a.XML_uploadNotes="Consulta la descripci\u00f3n del formato XML en la documentaci\u00f3n";
a.CKB_mustChangePasswd="El usuario debe cambiar la contrase\u00f1a al iniciar sesi\u00f3n por primera vez";
a.BP_wizard_upload_status="Tu archivo CSV se ha cargado correctamente. Haz clic en \u201cSiguiente\u201d para aprovisionar las cuentas.";
a.BP_wizard_csv_invalid="El archivo CSV que has cargado contiene errores que impiden la carga, por favor, arr\u00e9glalos y vuelve a cargar el archivo.";
a.error_no_bulk_file_specified="Selecciona un archivo v\u00e1lido para cargar.";
a.error_upload_bulk_no_aid="La carga del archivo ha fallado. No se ha devuelto ning\u00fan ID de archivo adjunto.";
a.error_upload_bulk="La carga del archivo ha fallado. Estado {0}. Int\u00e9ntalo de nuevo.";
a.error_no_csv_file_specified="Selecciona un archivo CSV v\u00e1lido para cargar.";
a.error_upload_csv="La carga del archivo CSV ha fallado. Estado {0}. Int\u00e9ntalo de nuevo.    ";
a.error_upload_csv_no_aid="La carga del archivo CSV ha fallado. No se ha devuelto ning\u00fan ID de archivo adjunto.";
a.error_no_aid="Falta el ID del archivo adjunto.";
a.error_unmatching_aid="Los ID del archivo adjunto cargado y devuelto no coinciden.";
a.summary_download="Las cuentas se han creado correctamente. Puedes hacer clic en el siguiente enlace para descargar el informe de aprovisionamiento m\u00faltiple.";
a.download_csv="Descargar informe en formato CSV";
a.no_accounts="No hay cuentas de aprovisionamiento m\u00faltiple";
a.ALV_Password_col="Contrase\u00f1a";
a.ALV_Stauts_col="Estado de aprovisionamiento";
a.title_provision="Aprovisionando cuentas";
a.BUSY_GENERATING_BULK_FILE="Generando archivo m\u00faltiple\u2026";
a.BUSY_GET_PROVISION_ACCOUNTS="Obteniendo cuentas de aprovisionamiento m\u00faltiple\u2026";
a.BUSY_START_PROVISION_ACCOUNTS="Aprovisionando cuentas ahora ...";
a.BUSY_GETTING_PROVISIONING_STATUS="Solicitando el estado del proceso de aprovisionamiento\u2026";
a.BUSY_ABORTING_IMPORT_THREAD="Cancelando el proceso de aprovisionamiento\u2026";
a.BUSY_GET_BULK_TASKS="Obteniendo todas las tareas de aprovisionamiento... ";
a.BUSY_CREATE_ACCOUNTS="Creando cuenta {0}  ";
a.SUCCEEDED="Realizado";
a.SKIPPED="Omitido";
a.BUSY_FAILED="Fallo";
a.BUSY_UPDATE_BP_STATUS="Actualizando el estado de aprovisionamiento de cuentas\u2026";
a.DONE="Hecho.";
a.ABORTED="Cancelado.";
a.ERROR_TOO_MANY_ACCOUNTS="Hay demasiadas cuentas en el archivo CSV que has cargado.";
a.ERROR_MUST_SPECIFY_DOMAIN_NAME="Debes especificar el dominio de destino.";
a.ERROR_PASSWORDS_DONT_MATCH="Las contrase\u00f1as no coinciden.";
a.MUST_SELECT_TARGET_DOMAIN="El asistente de migraci\u00f3n para Exchange requiere un dominio de destino.";
a.ERROR_LDAP_FILTER_REQUIRED="Es necesario especificar el filtro LDAP.";
a.ERROR_LDAP_BASE_REQUIRED="Es necesario especificar la base de b\u00fasqueda de LDAP.";
a.ERROR_LDAP_URL_REQUIRED="Es necesario especificar la URL de LDAP.";
a.ERROR_BIND_DN_REQUIRED="Es necesario especificar el DN de enlace.";
a.ERROR_MUST_SELECT_ACCOUNTS="Es necesario seleccionar varias cuentas para importar.";
a.ERROR_INVALID_SEARCH_FILTER="Has introducido un filtro LDAP no v\u00e1lido. {0}";
a.BP_NAMING_EXCEPTION="El servidor LDAP ha devuelto un error. Comprueba las credenciales de enlace de LDAP, la URL de LDAP, la sintaxis de tu base de b\u00fasqueda de LDAP y el filtro de LDAP. Problema: {0}";
a.REQUIRED_TO_USE_ADMIN_CREDENTIALS="Es necesario proporcionar credenciales de administraci\u00f3n para la conexi\u00f3n IMAP excepto en caso de que hayas cargado la lista de cuentas en un archivo XML con la informaci\u00f3n de inicio de sesi\u00f3n y las contrase\u00f1as de cada cuenta.";
a.ERROR_IMAP_CONNECTION_TYPE_REQUIRED="Es necesario especificar el tipo de conexi\u00f3n IMAP.";
a.ERROR_IMAP_PORT_REQUIRED="Es necesario especificar el n\u00famero de puerto IMAP.";
a.ERROR_IMAP_HOST_REQUIRED="Es necesario especificar el nombre de host IMAP.";
a.ERROR_IMAP_ADMIN_LOGIN_REQUIRED="Es necesario especificar el inicio de sesi\u00f3n de administrador de IMAP.";
a.ERROR_IMAP_ADMIN_PASSWORD_REQUIRED="Es necesario especificar la contrase\u00f1a de administrador de IMAP.";
a.ERROR_NO_ACCOUNTS_TO_IMPORT="No hay ninguna cuenta para importar. Comprueba si las cuentas que est\u00e1s intentando importar no se han creado todav\u00eda. ";
a.ERROR_PLEASE_SELECT_YES='Responde "S\u00ed" a una de las preguntas o haz clic en "Cancelar" si no deseas importar ning\u00fan dato en este momento.';
a.ACTBB_DownloadAccounts="Descargar";
a.ACTBB_DownloadAccounts_tt="Descargar los resultados de la b\u00fasqueda";
a.AccountImportWizardOverview="Especifica c\u00f3mo proporcionar\u00e1s la lista de cuentas que se van a facilitar en tu servidor de Zimbra.";
a.ActionImportOnlyAccounts="Importar s\u00f3lo cuentas de una fuente externa (XML, CSV o directorio)";
a.ActionImportFromCSV="Importar de un archivo CSV";
a.ActionImportFromXML="Importar de un archivo XML";
a.ActionImportFromLDAP="Importar de un directorio LDAP";
a.ActionImportFromZimbra="Importar desde otro directorio LDAP de Zimbra";
a.ActionImportAccountsFromAD="Importar cuentas de Active Directory/MS Exchange";
a.ActionGenerateMigXML="Importar cuentas y datos de Microsoft Exchange Server";
a.ActionGenerateBulkXML="Exportar cuentas de un directorio externo a un archivo XML  ";
a.ActionGenerateBulkCSV="Exportar cuentas de un directorio externo a un archivo CSV ";
a.GeneratedBulkProvisionFileLink="Descargar archivo";
a.DownloadMigrationXML="Descargar archivo XML para la utilidad de migraci\u00f3n de MS Exchange";
a.DownloadMigrationWizard="Descargar utilidad de migraci\u00f3n de MS Exchange";
a.ClickToDownloadGeneratedFile="Haz clic en el enlace siguiente para descargar el archivo";
a.UploadFileTitle="Cargar el archivo {0} que contiene los datos de las m\u00faltiples cuentas.";
a.ADInfoStepNote="Introduce los detalles para conectar a tu servidor de Active Directory";
a.ADServerName="Nombre del servidor";
a.ADServerPort="Puerto";
a.ADUseSSL="Utilizar SSL";
a.LDAP_GALServerName="Nombre del servidor";
a.LDAP_GALServerPort="Puerto";
a.LDAP_GALUseSSL="Utilizar SSL";
a.LdapInfoStepNote="Introduce los detalles para conectar a tu servidor AD o LDAP";
a.LDAPMaxResults="N\u00famero m\u00e1ximo de registros a recuperar (0 para ilimitado):";
a.SourceDomainName="Dominio de origen:";
a.TargetDomainName="Dominio de destino:";
a.ProvOptionsNote="Introduce las opciones comunes que se van a utilizar para las m\u00faltiples cuentas durante el aprovisionamiento";
a.GenerateRandomPassword="Generar contrase\u00f1a aleatoria para cada cuenta (recomendado)";
a.RevGenerateRandomPassword="Generar contrase\u00f1a aleatoria:";
a.UseSamePassword="Usar la misma contrase\u00f1a para todas las cuentas nuevas";
a.PasswordToUse="Contrase\u00f1a a utilizar:";
a.PasswordToUseConfirm="Confirmar contrase\u00f1a:";
a.GeneratedPasswordLength="Longitud de la contrase\u00f1a generada:";
a.RequireChangePassword="Solicitar que los usuarios cambien la contrase\u00f1a despu\u00e9s de iniciar sesi\u00f3n por primera vez:";
a.RevRequireChangePassword="Solicitar que los usuarios cambien la contrase\u00f1a:";
a.ProvisioningStatusIdle="Inactiva";
a.ProvisioningStatusStarted="Iniciada";
a.ProvisioningStatusStarting="Comenzando";
a.ProvisioningStatusCreatingAccounts="Creando cuentas";
a.ProvisioningStatusFinished="Hecho";
a.ProvisioningStatusAborting="Cancelando";
a.ProvisioningStatusAborted="Cancelado";
a.ProvisioningStatusError="Error";
a.ProvisioningStatusNotRunning="No se est\u00e1 ejecutando";
a.ProvisioningStatusNote="Se ha iniciado el proceso de importaci\u00f3n. ";
a.ProvisioningSuccessReportsNote="El proceso de importaci\u00f3n ha terminado. Puedes descargar el informe en el siguiente enlace:";
a.ProvisioningFailedReportsNote="El proceso de importaci\u00f3n ha fallado. Puedes descargar los informes en los enlaces siguientes:";
a.ProvisioningWithErrorsReportsNote="El proceso de importaci\u00f3n ha terminado con errores. Puedes descargar los informes en los enlaces siguientes:";
a.ProvisioningAbortedReportsNote="El proceso de importaci\u00f3n se ha cancelado. Puedes descargar los informes en los enlaces siguientes:";
a.DownloadSuccessReportLink="Descargar lista de cuentas aprovisionadas (CSV)";
a.DownloadErrorReportLink="Descargar lista de cuentas con fallos (CSV)";
a.GeneratePasswordsNote="Si eliges generar contrase\u00f1as aleatorias, debes descargar la lista de cuentas aprovisionadas con contrase\u00f1as en formato CSV al completar este asistente.";
a.ProcessStatus="Estado del proceso de importaci\u00f3n:";
a.TotalAccounts="N\u00famero total de cuentas:";
a.FailedAccounts="N\u00famero de cuentas con fallo:";
a.ProvisionedAccounts="N\u00famero de cuentas aprovisionadas:";
a.Skipped="Cuentas omitidas (ya existentes):";
a.Progress="Progreso:";
a.NumTotalAccts="N\u00famero total de importaciones";
a.NumCompletedAccts="Finalizada";
a.NumFailedAccts="Fallo";
a.TaskStatus="Estado";
a.TaskOwner="Propietario de la tarea";
a.TaskComplete="Finalizado";
a.TaskInProgress="Procesando";
a.TotalMailboxes="N\u00famero de buzones de correo:";
a.IdleMailboxes="Buzones de correo que se importar\u00e1n:";
a.FinishedMaiboxes="Buzones de correo ya importados:";
a.RunningMailboxes="Buzones de correo en los que se est\u00e1 ejecutando la importaci\u00f3n en estos momentos:";
a.MigInvalidSSLOk="Ignorar certificado SSL no v\u00e1lido";
a.RevMigInvalidSSLOk="Ignorar certificado SSL no v\u00e1lido:";
a.RevMigIgnorePreviouslyImported="Ignorar los correos electr\u00f3nicos importados anteriormente:";
a.MigIgnorePreviouslyImported="Ignorar los correos electr\u00f3nicos importados anteriormente";
a.RevMigImportJunk="Importar carpeta \u201cSpam\u201d:";
a.MigImportJunk="Importar carpeta \u201cSpam\u201d";
a.MigImportDeletedItems="Importar elementos eliminados";
a.RevMigImportDeletedItems="Importar elementos eliminados:";
a.RevMigImportCalendar="Importar calendario:";
a.MigImportCalendar="Importar calendario";
a.RevMigImportTasks="Importar tareas:";
a.MigImportTasks="Importar tareas";
a.RevMigImportContacts="Importar contactos:";
a.MigImportContacts="Importar contactos";
a.RevMigImportMails="Importar mensajes de correo electr\u00f3nico:";
a.MigImportMails="Importar mensajes de correo electr\u00f3nico";
a.LDAPUrl="URL de LDAP:";
a.A2_MapiProfile="Nombre del perfil MAPI:";
a.A2_MapiServer="Nombre del servidor MAPI:";
a.A2_MapiLogonUserDN="DN de usuario conectado a MAPI:";
a.ZimbraAdminPasswordNote="La utilidad de migraci\u00f3n de MS Exchange utilizar\u00e1 el inicio de sesi\u00f3n y la contrase\u00f1a de administrador de Zimbra para crear bandejas de correo en ZCS";
a.MAPIINfoNote="El perfil MAPI se utilizar\u00e1 para conectar al servidor Microsoft Exchange para obtener datos";
a.A2_ZimbraAdminLogin="Inicio de sesi\u00f3n de administrador de Zimbra:";
a.A2_ZimbraAdminPassword="Contrase\u00f1a de administrador de Zimbra:";
a.A2_ZimbraAdminPasswordConfirm="Confirmar contrase\u00f1a:";
a.RevA2_provisionUsers="Crear cuentas de usuario en ZCS:";
a.A2_provisionUsers="Crear cuentas de usuario en ZCS ";
a.A2_createDomains="Crear autom\u00e1ticamente los dominios que falten";
a.generateProvFileNote="Puedes descargar una lista de cuentas de un directorio externo (LDAP o AD) como un \u00fanico archivo XML o CSV. Puedes personalizar el archivo generado y utilizarlo con este asistente para importar las cuentas a tu servidor Zimbra. <br/>Selecciona una de las dos opciones siguientes para descargar un archivo generado:";
a.A2_generateProvFileXML="Generar archivo XML";
a.A2_generateProvFileCSV="Generar archivo CSV ";
a.ReviewDomainCount="N\u00famero de dominios hallados:";
a.ReviewSkippedDomainCount="Dominios ya existentes en Zimbra:";
a.ReviewAccountCount="N\u00famero de cuentas halladas:";
a.ReviewSkippedAccountCount="Cuentas ya existentes en Zimbra:";
a.ReviewStepNote="Revisa las opciones para la migraci\u00f3n desde el servidor MS Exchange.Pulsa \u201cAnterior\u201d para realizar cambios.Pulsa \u201cSiguiente\u201d para descargar la utilidad de migraci\u00f3n MS Exchange y el archivo XML con la configuraci\u00f3n de la utilidad.";
a.ExchMigrationWizardIntro='En los pr\u00f3ximos pasos de este asistente, se te solicitar\u00e1 informaci\u00f3n acerca de tus servidores de Exchange y Active Directory, generar\u00e1 un archivo XML con configuraci\u00f3n de migraci\u00f3n y te permitir\u00e1 descargar la utilidad de migraci\u00f3n de MS Exchange.<br/>Aseg\u00farate de leer la <a href="/zimbraAdmin/adminhelp/pdf/MigrationWizard.pdf" target="_blank">gu\u00eda de planificaci\u00f3n de la migraci\u00f3n</a> antes de continuar con la migraci\u00f3n.';
a.AccountImportReviewNote='Revisa las opciones para importar cuentas.Pulsa "Anterior" para realizar cambios.Pulsa "Siguiente" para empezar a importar cuentas.';
a.DataImportWizardOverview="Este asistente te guiar\u00e1 a trav\u00e9s del proceso de importaci\u00f3n de datos de tu viejo servidor. Los dos principales pasos del proceso de migraci\u00f3n son los siguientes: <ol><li>Aprovisionar cuentas</li><li>Importar buzones de correo</li></ol>Las dos opciones que se encuentran disponibles actualmente para aprovisionar cuentas son las siguientes: <ol><li>Cargar la lista de cuentas en un archivo XML</li><li> Importar la lista de cuentas desde un servidor de directorios</li></ol> ";
a.SourceServerType="Tipo de servidor de correo:";
a.AccountListType="Los registros de mi cuenta se encuentran en:";
a.AccountListTypeLDAP="Directorio LDAP externo";
a.AccountListTypeAD="Directorio activo externo";
a.AccountListTypeXML="Archivo XML";
a.AccountListTypeCSV="Archivo CSV";
a.SourceServerTypeIMAP="Servidor IMAP gen\u00e9rico";
a.SourceServerTypeExchange="Servidor MS Exchange";
a.SourceServerTypeExchangeIMAP="Servidor IMAP MS Exchange";
a.SourceServerTypeZimbra="Zimbra Collaboration Suite";
a.AccountListTypeNote="\u00bfC\u00f3mo deseas especificar la lista de cuentas cuyo correo deseas importar?";
a.SMTPHost="Host SMTP:";
a.SMTPPort="Puerto SMTP:";
a.IMAPHost="Host IMAP:";
a.IMAPPort="Puerto IMAP:";
a.UseIMAPAdminCredentials="Utilizar las credenciales de administraci\u00f3n para la conexi\u00f3n IMAP:";
a.UseIMAPAdminCredentialsChkBx="Utilizar las credenciales de administraci\u00f3n para la conexi\u00f3n IMAP";
a.IMAPAdminLogin="Inicio de sesi\u00f3n de administrador de IMAP:";
a.IMAPAdminPassword="Contrase\u00f1a de administrador de IMAP:";
a.IMAPAdminPasswordConfirm="Confirmar contrase\u00f1a:";
a.IMAPConnectionType="Tipo de conexi\u00f3n IMAP:";
a.IMAPConnectionSSL="SSL";
a.IMAPConnectionCleartext="Borrar texto";
a.IMAPConnectionTLS="TLS";
a.IMAPConnectionTLSIfAvailable="TLS est\u00e1 disponible  ";
a.DataImportStarted="Se ha iniciado la tarea de importaci\u00f3n de datos. Puedes cerrar este asistente ahora.";
a.UI_Comp_bulkProvisioning="Migraci\u00f3n de cuenta";
a.OVP_bulkProvisioning="Migraci\u00f3n de cuenta";
a.TB_IMAP_Import="Asistente de migraci\u00f3n";
a.TB_IMAP_Import_tt="Iniciar asistente de importaci\u00f3n de datos";
a.BP_view_title="Tareas de aprovisionamiento";
a.BulkDataImport_Wiz_title="Importaci\u00f3n de datos";
a.DataImport_Wizard_Intro="Introducci\u00f3n";
a.DataImport_Wizard_Options="Opciones de importaci\u00f3n";
a.DataImport_Wizard_AcctPicker="Seleccionar cuentas";
a.DataImport_File_Upload="Cargar archivo fuente con las cuentas";
a.DataImport_LDAP_Info="Detalles de conexi\u00f3n LDAP";
a.DataImport_IMAP_Info="Detalles de conexi\u00f3n IMAP";
a.DataImport_Review="Revisar opciones";
a.DataImport_Finish="Iniciar importaci\u00f3n";
a.NewButton_Import="Importar cuentas";
a.NewButton_Import_tt="Importar varias cuentas de correo electr\u00f3nico";
a.TBB_migration_wizard="Migraci\u00f3n de MS Exchange";
a.TBB_migration_wizard_tt="Iniciar un asistente para migrar cuentas y datos de MS Exchange";
a.ImportAccountRecordsQ="\u00bfDeseas importar registros de cuentas?";
a.ImportAccountMailQ="\u00bfDeseas importar correo? ";
a.PickAccounts="Seleccionar cuentas para importar";
a.UploadAccountsInXML="Cargar lista de cuentas en formato XML";
a.ReuseAccountsXML="Utilizar archivo XML cargado previamente";
a.RetrieveAccountsFromLDAP="Recuperar cuentas del directorio LDAP";
a.RetrieveAccountsFromLAD="Recuperar cuentas de Active Directory";
a.AccountsForDataImport="Cuentas para la importaci\u00f3n de datos";
a.ClickNextToStartImport='Haz clic en "Siguiente" para iniciar el proceso de importaci\u00f3n. Una vez iniciado, podr\u00e1s cerrar este cuadro de di\u00e1logo y comprobar el progreso en la vista "Migraci\u00f3n de cuenta".';
a.DeleteTask="Eliminar tarea";
a.DeleteTask_tt="Eliminar la tarea seleccionada y las fuentes de datos temporales.";
a.ConfirmDeleteTask="\u00bfEst\u00e1s seguro de que quieres eliminar la tarea seleccionada? ";
a.SplitDomainOptionsNote="Las siguientes opciones son para ejecutar una configuraci\u00f3n de dominio dividido. Aseg\u00farate de consultar la documentaci\u00f3n antes de editar estas opciones.";
a.SwitchTransportToLocal="Cambiar el transporte de correo a local";
delete a;
if(!window.com_zimbra_cert_manager){
window.com_zimbra_cert_manager={}
}
a=window.com_zimbra_cert_manager;
a.label="Certificate Manager";
a.description="Certificate Manager Admin Extension";
a.BUSY_GET_CSR="Getting the CSR ... ";
a.CERT_WIZARD_title="Certificate Installation Wizard ";
a.CERT_WIZARD_TABT_gencsr="Generate the Certificate Signing Request ";
a.CERT_WIZARD_TABT_uploadCert="Upload the Certificate ";
a.CERT_WIZARD_TABT_installCert="Install the Certificate";
a.CERT_WIZARD_TABT_useroption="Choose the Installation Option";
a.CERT_WIZARD_TABT_downloadCSR="Download the Certificate Signing Request ";
a.CERT_WIZARD_TABT_reviewCSR="Review the Certificate Signing Request";
a.CERT_WIZARD_TABT_selectServer="Select the Target Server ";
a.CERT_INFO_CN="Common Name:  ";
a.CERT_INFO_OU="Organizational Unit:  ";
a.CERT_INFO_C="Country Name: ";
a.CERT_INFO_ST="State/Province:  ";
a.CERT_INFO_O="Organization Name:  ";
a.CERT_INFO_L="City:  ";
a.CERT_INFO_SubjectAltName="Subject Alternative Name: ";
a.NAD_Remove="Remove";
a.NAD_Add="Add";
a.CERT_INFO_SUBJECT="Subject: ";
a.CERT_INFO_ISSUER="Issuer:";
a.CERT_INFO_VALIDATION_DAYS="Validation Days: ";
a.CERT_select_server="Please select the target server :";
a.CERT_select_option="Please choose one of the following options : ";
a.CERT_self_signed="Install the self-signed certificate ";
a.CERT_gen_csr="Generate the CSR for the commercial certificate authorizer ";
a.CERT_comm_signed="Install the commercially signed certificate ";
a.CERT_uploadTitle="Please upload the following files from your CA";
a.CERT_upload_comm_cert="Certificate: ";
a.CERT_upload_intermediate_ca="Intermediate CA:";
a.CERT_upload_root_CA="Root CA:  ";
a.ADD_IntermediateCA_Label="Add Intermediate CA";
a.Remove_IntermediateCA_Label="Remove";
a.CERT_validate_days="Certificate Validation Days: ";
a.CERT_installTitle="Enter the certificate validation days, then click install to install the certificate. ";
a.CERT_server_name="Server Name:";
a.CERT_target_server="Target Server:";
a.CERT_digest="Digest:";
a.CERT_keysize="Key Length: ";
a.CERT_SubjectAlt_Note="Note: Subject Alternative Name is used to set the SubjectAltName extension of the certificate. It can be used to allow a certificate to be validated for multiple hosts. Please use the valid domain names.";
a.CERT_INSTALLING="Installing the certificates ... ";
a.CERT_INSTALL_STATUS_0="Your certificate was installed successfully. You must restart your ZCS server to apply the changes. ";
a.CERT_INSTALL_STATUS_1="Your certificate was not installed due to the error  ";
a.CERT_INSTALL_BUTTON_text="Install ";
a.UploadCertErrorMsg="Upload status {0}: failed to upload the certificate files at this moment. ";
a.genCSRError="There was an error generating the CSR. ";
a.certFile="Upload proxy CA file:";
a.certFileNameError="Invalid file name. Use browse button to select a valid license file. ";
a.noCertFileError="You must choose a certificate file.";
a.noRootCAError="You must choose a root CA. If you don\u2019t have one, please contact your CA.";
a.certTypeError="Please select the certificate type. ";
a.invalidContentType="Invalid Certificate Content Type for uploaded file";
a.dupFileNameError="Duplicate filename is not allowed: ";
a.CSR_EXISTS_WARNING="The following CSR exists already. ";
a.CSR_NON_EXISTS_WARNING="No valid CSR was found. ";
a.FORCE_NEW_CSR="Replace the existing CSR ";
a.CSR_NON_EXISTS_MSG="To install a commercially signed certificate, you must create the CSR first. Please go back to choose Generate the CSR for the commerical certificate authorizer option to create the CSR. ";
a.CSR_download_msg_1="In order to obtain a commercially signed certificate, you must download the generated CSR and submit it to your commercial certificate authorizer. Once you get the certificate, please restart the Certificate Installation Wizard and choose the option Install the commercially signed certificate to complete the certificate installation.";
a.CSR_download_msg_2="Download the CSR ";
a.CSR_REVIEW="Please review the current CSR information, then click next to upload your certificate signed by the commercial certificate authorizer.";
a.TBB_launch_cert_wizard="Install Certificate ";
a.TBB_launch_cert_wizard_tt="Launch the certificate installation wizard ";
a.TBB_view_cert="View Certificate";
a.TBB_view_cert_tt="View the certificate information of the server";
a.TBB_Refresh="Refresh";
a.TBB_Help="Help";
a.OVP_certs="Certificates";
a.Cert_view_title="Certificates";
a.TBB_New_Cert_tt="Create/Install the new certificates";
a.TBB_Edit_Cert_tt="Edit/Modify the current certificates";
a.TBB_Help_tt="Show help topics related to the current screen";
a.BUSY_RETRIEVE_CERT="Getting the certificate information ...";
a.BUSY_GENERATE_CSR="Generating the Certificate Request ...";
a.BUSY_INSTALL_CERT="Installing the Certificate";
a.BUSY_VERIFY_CERTKEY="Verifying the Certificate and private key";
a.manage_certs_title="Manage Certificates";
a.Use_Wildcard_Server_Name="Use Wildcard Common Name";
a.Cert_Service_title="Certificate for Zimbra {0} Service:";
a.Cert_Info_Unavailable="The certificate information is unavailable.";
a.Cert_Service_Unavailable="The service or the certificate for this service is unavailable.";
a.Cert_Uploaded_Info='Your domain certificates and keys are successfully saved. To complete the deployment of certificates and keys, as zimbra, run "/opt/zimbra/libexec/zmdomaincertmgr deploycrts"';
a.NO_TARGET_SERVER_ERROR="No target server for the certificate view.";
a.UNKNOW_INSTALL_TYPE_ERROR='"Unknown installation type"';
a.CERT_CN_INVALID="Common Name must be a valid domain name or a wildcard domain name. {0} is not valid.";
a.CERT_SUBJ_ALT_NAME_INVALID="Subject Alternative Name must be a valid domain name. {0} is not valid.";
a.UI_Comp_certsView="Certificates View";
a.lb_ALL_SERVERS="--- All Servers ---";
a.lb_target_server="Target Server:";
a.CERT_UploadButton="Upload";
a.noKeyFileError="You must choose a key file.";
a.BUSY_UPLOAD_CERTKEY="Uploading the certificate or key file ...";
a.ExpiredCertMsg="{0} certificate(s) has been expired. ";
a.ExpiringCertMsg="{0} certificate(s) will be expired soon.";
a.SingleExpDate="The expiration date is {0}.";
a.MultiExpDate="The earliest expiration date is {0}.";
a.ManageCert="Manage Certificates...";
delete a;
if(!window.com_zimbra_cert_manager){
window.com_zimbra_cert_manager={}
}
a=window.com_zimbra_cert_manager;
a.label="Gestor de certificados";
a.description="Extensi\u00f3n de administraci\u00f3n del gestor de certificados";
a.BUSY_GET_CSR="Obteniendo CSR... ";
a.CERT_WIZARD_title="Asistente de instalaci\u00f3n de certificado ";
a.CERT_WIZARD_TABT_gencsr="Generar petici\u00f3n de firma del certificado ";
a.CERT_WIZARD_TABT_uploadCert="Cargar el certificado ";
a.CERT_WIZARD_TABT_installCert="Instalar el certificado";
a.CERT_WIZARD_TABT_useroption="Selecciona la opci\u00f3n de instalaci\u00f3n";
a.CERT_WIZARD_TABT_downloadCSR="Descargar la petici\u00f3n de firma del certificado ";
a.CERT_WIZARD_TABT_reviewCSR="Revisar la petici\u00f3n de firma del certificado";
a.CERT_WIZARD_TABT_selectServer="Selecciona el servidor e destino ";
a.CERT_INFO_CN="Nombre com\u00fan:  ";
a.CERT_INFO_OU="Unidad de organizaci\u00f3n:  ";
a.CERT_INFO_C="Pa\u00eds: ";
a.CERT_INFO_ST="Estado/Provincia:  ";
a.CERT_INFO_O="Nombre de la organizaci\u00f3n:  ";
a.CERT_INFO_L="Ciudad:  ";
a.CERT_INFO_SubjectAltName="Nombre alternativo de asunto: ";
a.NAD_Remove="Eliminar";
a.NAD_Add="A\u00f1adir";
a.CERT_INFO_SUBJECT="Asunto: ";
a.CERT_INFO_ISSUER="Emisor:";
a.CERT_INFO_VALIDATION_DAYS="D\u00edas de validaci\u00f3n: ";
a.CERT_select_server="Selecciona el servidor de destino:";
a.CERT_select_option="Selecciona una de las siguientes opciones: ";
a.CERT_self_signed="Instalar el certificado autofirmado ";
a.CERT_gen_csr="Generar la funci\u00f3n CSR para la autoridad de certificaci\u00f3n comercial ";
a.CERT_comm_signed="Instalar el certificado comercial firmado ";
a.CERT_uploadTitle="Carga los siguientes archivos de tu CA (Autoridad de certificaci\u00f3n)";
a.CERT_upload_comm_cert="Certificado: ";
a.CERT_upload_intermediate_ca="CA intermedia:";
a.CERT_upload_root_CA="CA ra\u00edz:  ";
a.ADD_IntermediateCA_Label="A\u00f1adir CA intermedia";
a.Remove_IntermediateCA_Label="Eliminar";
a.CERT_validate_days="D\u00edas de validaci\u00f3n del certificado: ";
a.CERT_installTitle="Introduce los d\u00edas de validaci\u00f3n del certificado y luego haz clic  para instalar el certificado. ";
a.CERT_server_name="Nombre del servidor:";
a.CERT_target_server="Servidor de destino:";
a.CERT_digest="Resumen:";
a.CERT_keysize="Longitud de la clave: ";
a.CERT_SubjectAlt_Note="Nota: El nombre alternativo del asunto se utiliza para configurar la extensi\u00f3n SubjectAltName del certificado. Se puede usar para permitir que un certificado pueda validarse para varios servidores. Utiliza los nombres de dominio v\u00e1lidos.";
a.CERT_INSTALLING="Instalando los certificados\u2026 ";
a.CERT_INSTALL_STATUS_0="El certificado se ha instalado correctamente. Debes reiniciar el servidor ZCS para que los cambios surtan efecto. ";
a.CERT_INSTALL_STATUS_1="El certificado no se ha instalado debido al error  ";
a.CERT_INSTALL_BUTTON_text="Instalar ";
a.UploadCertErrorMsg="Estado de la carga {0}: no se han podido cargar los archivos de certificado en este momento. ";
a.genCSRError="Ha surgido un error al generar la CSR. ";
a.certFile="Cargar archivo CA del proxy:";
a.certFileNameError="Nombre de archivo no v\u00e1lido. Utiliza el bot\u00f3n Examinar para seleccionar un archivo de licencia v\u00e1lido. ";
a.noCertFileError="Debes seleccionar un archivo de certificado.";
a.noRootCAError="Debes seleccionar una CA ra\u00edz. Si a\u00fan no tienes una, contacta a tu CA.";
a.certTypeError="Selecciona el tipo de certificado. ";
a.invalidContentType="Tipo de contenido de certificado no v\u00e1lido para cargar el archivo";
a.dupFileNameError="No se permite duplicar nombres de archivos: ";
a.CSR_EXISTS_WARNING="La siguiente CSR ya existe. ";
a.CSR_NON_EXISTS_WARNING="No se ha encontrado ninguna CSR v\u00e1lida. ";
a.FORCE_NEW_CSR="Reemplaza la CSR existente ";
a.CSR_NON_EXISTS_MSG="Para instalar un certificado firmado comercialmente, primero debes crear la CSR. Vuelve y selecciona la opci\u00f3n para \u201cGenerar la CSR para la autoridad de certificaci\u00f3n comercial\u201d para crear la CSR. ";
a.CSR_download_msg_1="Para poder obtener un certificado firmado comercialmente, debes descargar la CSR generada y enviarla a la autoridad de certificaci\u00f3n comercial. Una vez obtenido el certificado, reinicia el Asistente de instalaci\u00f3n de certificado y selecciona la opci\u00f3n Instalar el certificado comercial firmado para completar la instalaci\u00f3n del certificado.";
a.CSR_download_msg_2="Descargar la CSR ";
a.CSR_REVIEW="Revisa la informaci\u00f3n de CSR actual y luego pulsa en Siguiente para cargar el certificado firmado por la autoridad de certificaci\u00f3n comercial.";
a.TBB_launch_cert_wizard="Instalar certificado ";
a.TBB_launch_cert_wizard_tt="Ejecutar el asistente de instalaci\u00f3n de certificado ";
a.TBB_view_cert="Ver certificado";
a.TBB_view_cert_tt="Ver la informaci\u00f3n de certificado del servidor";
a.TBB_Refresh="Actualizar";
a.TBB_Help="Ayuda";
a.OVP_certs="Certificados";
a.Cert_view_title="Certificados";
a.TBB_New_Cert_tt="Crear/Instalar los nuevos certificados";
a.TBB_Edit_Cert_tt="Editar/Modificar los certificados actuales";
a.TBB_Help_tt="Mostrar temas de ayuda relacionados con la pantalla actual";
a.BUSY_RETRIEVE_CERT="Obteniendo la informaci\u00f3n del certificado\u2026";
a.BUSY_GENERATE_CSR="Generando la petici\u00f3n de certificado\u2026";
a.BUSY_INSTALL_CERT="Instalando el certificado";
a.BUSY_VERIFY_CERTKEY="Verificando el certificado y la clave privada";
a.manage_certs_title="Administrar los certificados...";
a.Use_Wildcard_Server_Name="Utilizar el comod\u00edn del nombre com\u00fan";
a.Cert_Service_title="Certificado para el servicio de Zimbra {0}:";
a.Cert_Info_Unavailable="No est\u00e1 disponible la informaci\u00f3n del certificado.";
a.Cert_Service_Unavailable="No est\u00e1 disponible el servicio o el certificado para este servicio.";
a.Cert_Uploaded_Info='Tus certificados y claves de dominio se han guardado correctamente.  Para finalizar la implementaci\u00f3n de los certificados y las claves, como Zimbra, ejecuta "/opt/zimbra/libexec/zmdomaincertmgrdeploycrts" ';
a.NO_TARGET_SERVER_ERROR="No hay un servidor de destino para la visualizaci\u00f3n del certificado.";
a.UNKNOW_INSTALL_TYPE_ERROR="\u201cTipo de instalaci\u00f3n desconocido\u201d";
a.CERT_CN_INVALID="El nombre com\u00fan debe de ser un nombre de dominio v\u00e1lido o un comod\u00edn para el nombre de dominio. {0} no es v\u00e1lido.";
a.CERT_SUBJ_ALT_NAME_INVALID="El Nombre alternativo del asunto debe de ser un nombre de dominio v\u00e1lido. {0} no es v\u00e1lido.";
a.UI_Comp_certsView="Vista de certificados";
a.lb_ALL_SERVERS="--- Todos los servidores ---";
a.lb_target_server="Servidor de destino:";
a.CERT_UploadButton="Cargar";
a.noKeyFileError="Debes seleccionar un archivo de clave.";
a.BUSY_UPLOAD_CERTKEY="Cargando el archivo de certificado o de clave...";
a.ExpiredCertMsg="{0} certificados han caducado. ";
a.ExpiringCertMsg="{0} certificados caducan en breve. ";
a.SingleExpDate="La fecha de vencimiento es {0}.";
a.MultiExpDate="La fecha de vencimiento m\u00e1s temprana es {0}.";
a.ManageCert="Administrar los certificados...";
delete a;
if(!window.com_zimbra_chat_video){
window.com_zimbra_chat_video={}
}
a=window.com_zimbra_chat_video;
a.VcButton_text_button="New Meeting";
a.VcButton_tooltip_button="Click to open new video conference link";
a.VcCalendar_message_link="Click on the link below to attend the meeting:\n[vclink]";
a.VcCalendar_text_button="Add";
a.VcCalendar_tooltip_button_disabled="You must have an Chat account and be authenticated to add a video conference to the event.";
a.VcCalendar_tooltip_button_enabled="Click to add the Videoconference link to the created event.";
delete a;
if(!window.com_zimbra_chat_video){
window.com_zimbra_chat_video={}
}
a=window.com_zimbra_chat_video;
a.VcButton_text_button="Nueva reunio&#769;n";
a.VcButton_tooltip_button="Haga clic para abrir un nuevo enlace de videoconferencia";
a.VcCalendar_message_link="Click en el siguiente link para participar de la reunio&#769;n:\n [vclink]";
a.VcCalendar_text_button="Agregar reunio&#769;n";
a.VcCalendar_tooltip_button_disabled="Tienes que tener una cuenta de Chat y estar autenticado para agregar una videoconferencia a este evento.";
a.VcCalendar_tooltip_button_enabled="Click para agregar el link de videoconferencia al evento creado.";
delete a;
if(!window.com_zimbra_click2call_cisco){
window.com_zimbra_click2call_cisco={}
}
a=window.com_zimbra_click2call_cisco;
a.label="Cisco Click2Call";
a.description="Provides Click to Call capability Cisco UC";
a.provider="Cisco";
a.providerError="Cisco Error";
a.fromPhoneDlgTitle="Place Call";
a.from="From:";
a.to="To:";
a.call="Call";
a.click2callDlgTitle="Cisco Click-To-Call";
a.calling="Connecting...";
a.connectionSuccessfulStr="Call successfully initiated";
a.connectionFailedTryRedialling="Connection failed, try redialing.";
a.callHungUp="Call Hung up";
a.coulNotConnect="Could not connect";
a.hangUp="Hang up";
a.redial="Redial";
a.notAValidPhoneNumber="{0} is not a valid phone number. Please enter a valid phone number.";
a.voicePIN="Voice PIN";
a.voicePINTooltip="Update Voice PIN";
a.pinStr="PIN:";
a.confirmPINStr="Confirm PIN:";
a.voicePINDlgTitle="Update Voice PIN";
a.updatePin="Update PIN";
a.pinAndConfirmPinDidntMatch="PIN and Confirm PIN didn\u2019t match";
a.invalidPin="Invalid PIN";
a.pinCanOnlyBeDigits="PIN can only be digits";
a.err_invalidUCInfo="Invalid voice/chat information";
a.err_noPhoneNumber="No device is configured.";
a.err_failedFetchUCINfo="Failed to get user voice/chat information";
delete a;
if(!window.com_zimbra_click2call_cisco){
window.com_zimbra_click2call_cisco={}
}
a=window.com_zimbra_click2call_cisco;
a.label="Cisco Click2Call";
a.description="Brinda la opci\u00f3n de hacer clic para llamar de Cisco UC";
a.provider="Cisco";
a.providerError="Error de Cisco";
a.fromPhoneDlgTitle="Realizar llamada";
a.from="De:";
a.to="Para:";
a.call="Llamar";
a.click2callDlgTitle="Cisco Click-To-Call";
a.calling="Conectando...";
a.connectionSuccessfulStr="Llamada iniciada correctamente";
a.connectionFailedTryRedialling="Error de conexi\u00f3n, intente volver a marcar.";
a.callHungUp="Llamada interrumpida";
a.coulNotConnect="Imposible conectarse";
a.hangUp="Colgar";
a.redial="Volver a marcar";
a.notAValidPhoneNumber="{0} no es un n\u00famero de tel\u00e9fono v\u00e1lido. Introduzca un n\u00famero de tel\u00e9fono v\u00e1lido.";
a.voicePIN="PIN de voz";
a.voicePINTooltip="Actualizar PIN de voz";
a.pinStr="PIN:";
a.confirmPINStr="Confirmar PIN:";
a.voicePINDlgTitle="Actualizar PIN de voz";
a.updatePin="Actualizar PIN";
a.pinAndConfirmPinDidntMatch="El PIN y su confirmaci\u00f3n no coinciden";
a.invalidPin="El PIN no es v\u00e1lido";
a.pinCanOnlyBeDigits="El PIN solo puede contener d\u00edgitos";
a.err_invalidUCInfo="La informaci\u00f3n de chat o de voz no es v\u00e1lida";
a.err_noPhoneNumber="No se ha configurado ning\u00fan dispositivo.";
a.err_failedFetchUCINfo="No se pudo obtener la informaci\u00f3n de chat o de voz";
delete a;
if(!window.com_zimbra_click2call_mitel){
window.com_zimbra_click2call_mitel={}
}
a=window.com_zimbra_click2call_mitel;
a.label="Mitel Click2Call";
a.description="Provides Click to Call capability Mitel UC";
a.provider="Mitel";
a.providerError="Mitel Error";
a.fromPhoneDlgTitle="Place Call";
a.from="From:";
a.to="To:";
a.call="Call";
a.click2callDlgTitle="Mitel Click-To-Call";
a.calling="Connecting...";
a.connectionSuccessfulStr="Call successfully initiated";
a.connectionFailedTryRedialling="Connection failed, try redialing.";
a.callHungUp="Call Hung up";
a.coulNotConnect="Could not connect";
a.hangUp="Hang up";
a.redial="Redial";
a.notAValidPhoneNumber="{0} is not a valid phone number. Please enter a valid phone number.";
a.voicePIN="Voice PIN";
a.voicePINTooltip="Update Voice PIN";
a.pinStr="PIN:";
a.confirmPINStr="Confirm PIN:";
a.voicePINDlgTitle="Update Voice PIN";
a.updatePin="Update PIN";
a.pinAndConfirmPinDidntMatch="PIN and Confirm PIN didn't match";
a.invalidPin="Invalid PIN";
a.pinCanOnlyBeDigits="PIN can only be digits";
delete a;
if(!window.com_zimbra_click2call_mitel){
window.com_zimbra_click2call_mitel={}
}
a=window.com_zimbra_click2call_mitel;
a.label="Mitel Click2Call";
a.description="Brinda la opci\u00f3n de hacer clic para llamar de Mitel UC";
a.provider="Mitel";
a.providerError="Error de Mitel";
a.fromPhoneDlgTitle="Realizar llamada";
a.from="De:";
a.to="Para:";
a.call="Llamar";
a.click2callDlgTitle="Mitel Click-To-Call";
a.calling="Conectando...";
a.connectionSuccessfulStr="Llamada iniciada correctamente";
a.connectionFailedTryRedialling="Error de conexi\u00f3n, intente volver a marcar.";
a.callHungUp="Llamada interrumpida";
a.coulNotConnect="Imposible conectarse";
a.hangUp="Colgar";
a.redial="Volver a marcar";
a.notAValidPhoneNumber="{0} no es un n\u00famero de tel\u00e9fono v\u00e1lido.  Introduzca un n\u00famero de tel\u00e9fono v\u00e1lido.";
a.voicePIN="PIN de voz";
a.voicePINTooltip="Actualizar PIN de voz";
a.pinStr="PIN:";
a.confirmPINStr="Confirmar PIN:";
a.voicePINDlgTitle="Actualizar PIN de voz";
a.updatePin="Actualizar PIN";
a.pinAndConfirmPinDidntMatch="El PIN y su confirmaci\u00f3n no coinciden";
a.invalidPin="El PIN no es v\u00e1lido";
a.pinCanOnlyBeDigits="El PIN solo puede contener d\u00edgitos";
delete a;
if(!window.com_zimbra_convertd){
window.com_zimbra_convertd={}
}
a=window.com_zimbra_convertd;
a.label="Attachment Conversion";
a.description="Attachment Conversion Admin Extension";
a.NAD_AttachmentsViewInHtmlOnly="Attachments can be viewed in HTML only";
a.NAD_AttachmentsViewOrigOnly="Attachments can be viewed in their original format only";
a.NAD_AttachmentsViewOrigAndHtml="Attachments can be viewed in HTML and their original format";
a.NAD_zimbraAttachmentsIndexingEnabled="Enable Attachment indexing";
delete a;
if(!window.com_zimbra_convertd){
window.com_zimbra_convertd={}
}
a=window.com_zimbra_convertd;
a.label="Conversi\u00f3n de archivos adjuntos";
a.description="Extensi\u00f3n de administraci\u00f3n de la conversi\u00f3n de adjuntos";
a.NAD_AttachmentsViewInHtmlOnly="Los archivos adjuntos s\u00f3lo se pueden visualizar en formato HTML";
a.NAD_AttachmentsViewOrigOnly="Los archivos adjuntos s\u00f3lo se pueden visualizar en su formato original";
a.NAD_AttachmentsViewOrigAndHtml="Los archivos adjuntos se pueden visualizar en formato HTML y en su formato original";
a.NAD_zimbraAttachmentsIndexingEnabled="Activar la funci\u00f3n de indizado de archivos adjuntos";
delete a;
if(!window.com_zimbra_date){
window.com_zimbra_date={}
}
a=window.com_zimbra_date;
a.label="Date";
a.description="Highlights dates, previews associated appointments and creates a link to the calendar.";
a.viewDay="Day";
a.appointmentNewTitle="New Appointment";
a.searchForMessages="Search for mail messages";
a.boundaryTrue="true";
a.boundaryFalse="false";
a["format.boundary"]="true";
a["format1.pattern"]="(today|tonight|this morning)";
a["format1.rule"]="now";
a["format2.pattern"]="(tomorrow night|tomorrow morning|tomorrow)";
a["format2.rule"]="now +1 day";
a["format3.pattern"]="(last night|yesterday morning|yesterday)";
a["format3.rule"]="now -1 day";
a["format4.pattern"]="(this|next) {dayname}";
a["format4.rule"]="now +1 {dayname}";
a["format5.pattern"]="last {dayname}";
a["format5.rule"]="now -1 {dayname}";
a["format6.pattern"]="{weekord} {dayname} (of|in) {monthname}";
a["format6.rule"]="now date=1 +1 {monthname} week={weekord},{dayname}";
a["format7.pattern"]="{weekord} {dayname}";
a["format7.rule"]="now week={weekord},{dayname}";
a["format8.pattern"]="{datenum}(st|nd|rd|th)? (of|in) {monthname}";
a["format8.rule"]="now month={monthname},{datenum}";
a["format9.pattern"]="{monthname} {datenum}(st|nd|rd|th)?.? {timenum}.?(am|pm)";
a["format9.rule"]="now month={monthname},{datenum}";
a["format10.pattern"]="{datenum}(st|nd|rd|th)? {monthname} {timenum}.?(am|pm)";
a["format10.rule"]="now month={monthname},{datenum}";
a["format11.pattern"]="{monthname} {datenum}(st|nd|rd|th).? {militarytimenum} (hrs|hours)";
a["format11.rule"]="now month={monthname},{datenum}";
a["format12.pattern"]="{datenum}(st|nd|rd|th).? {monthname}.? {militarytimenum} (hrs|hours)";
a["format12.rule"]="now month={monthname},{datenum}";
a["format13.pattern"]="{monthname} {datenum}(st|nd|rd|th).? {yearnum}";
a["format13.rule"]="now year={yearnum},{monthname},{datenum}";
a["format14.pattern"]="{dayname}.? {datenum} {monthname} {yearnum}";
a["format14.rule"]="now year={yearnum},{monthname},{datenum}";
a["format15.pattern"]="{dayname}.? {monthname}  {datenum}";
a["format15.rule"]="now month={monthname},{datenum}";
a["format16.pattern"]="{monthname} {datenum}(st|nd|rd|th)?";
a["format16.rule"]="now month={monthname},{datenum}";
a["format17.pattern"]="{datenum} {monthname}.? {yearnum}";
a["format17.rule"]="now year={yearnum},{monthname},{datenum}";
a["format18.pattern"]="{monthnum}/{datenum}/{yearnum}";
a["format18.rule"]="now year={yearnum},{monthnum},{datenum}";
a["format19.pattern"]="{yearnum}-{monthnum}-{datenum}";
a["format19.rule"]="now year={yearnum},{monthnum},{datenum}";
a["format20.pattern"]="{monthname} {yearnum}";
a["format20.rule"]="now year={yearnum},{monthname},1";
a["format21.pattern"]="{dayname}";
a["format21.rule"]="now +1 {dayname}";
a["format22.pattern"]="{datenum}(st|nd|rd|th)? {monthname}.? {yearnum}";
a["format22.rule"]="now year={yearnum},{monthname},{datenum}";
a["format23.pattern"]="Thanksgiving";
a["format23.rule"]="now month=November week=fourth,Thursday";
a["format24.pattern"]="Christmas Eve";
a["format24.rule"]="now month=December,24";
a["format25.pattern"]="Christmas";
a["format25.rule"]="now month=December,25";
a["format26.pattern"]="New Year\u2019?s Eve";
a["format26.rule"]="now month=December,31";
a["format27.pattern"]="New Year\u2019?s Day";
a["format27.rule"]="now +1 year month=January,1";
a["format28.pattern"]="###";
delete a;
if(!window.com_zimbra_date){
window.com_zimbra_date={}
}
a=window.com_zimbra_date;
a.label="Fecha";
a.description="Resalta las fechas, previsualiza las citas asociadas y crea un enlace a la agenda.";
a.viewDay="D\u00eda";
a.appointmentNewTitle="Nueva cita";
a.searchForMessages="Buscar mensajes de correo";
a.boundaryTrue="true";
a.boundaryFalse="false";
a["format.boundary"]="true";
a["format1.pattern"]="(hoy|esta noche|esta ma\u00f1ana)";
a["format1.rule"]="now";
a["format2.pattern"]="(ma\u00f1ana por la noche|ma\u00f1ana por la ma\u00f1ana|ma\u00f1ana)";
a["format2.rule"]="now +1 day";
a["format3.pattern"]="(ayer por la noche|ayer por la ma\u00f1ana|ayer)";
a["format3.rule"]="now -1 day";
a["format4.pattern"]="(este|siguiente) {dayname}";
a["format4.rule"]="now +1 {dayname}";
a["format5.pattern"]="el pasado {dayname}";
a["format5.rule"]="now -1 {dayname}";
a["format6.pattern"]="{weekord} {dayname} (de|en) {monthname}";
a["format6.rule"]="now date=1 +1 {monthname} week={weekord},{dayname}";
a["format7.pattern"]="{weekord} {dayname}";
a["format7.rule"]="now week={weekord},{dayname}";
a["format8.pattern"]="{datenum}(\u00ba|\u00ba|\u00ba|\u00ba)? (de|en) {monthname}";
a["format8.rule"]="now month={monthname},{datenum}";
a["format9.pattern"]="{monthname} {datenum}.? {timenum}.?(am|pm)";
a["format9.rule"]="now month={monthname},{datenum}";
a["format10.pattern"]="{datenum} {monthname} {timenum}.?(am|pm)";
a["format10.rule"]="now month={monthname},{datenum}";
a["format11.pattern"]="{monthname} {datenum}.? {militarytimenum} (hrs|horas)";
a["format11.rule"]="now month={monthname},{datenum}";
a["format12.pattern"]="{datenum}.? {monthname}.? {militarytimenum} (hrs|horas)";
a["format12.rule"]="now month={monthname},{datenum}";
a["format13.pattern"]="{monthname} {datenum}.? {yearnum}";
a["format13.rule"]="now year={yearnum},{monthname},{datenum}";
a["format14.pattern"]="{dayname}.? {datenum} {monthname} {yearnum}";
a["format14.rule"]="now year={yearnum},{monthname},{datenum}";
a["format15.pattern"]="{dayname}.? {monthname}  {datenum}";
a["format15.rule"]="now month={monthname},{datenum}";
a["format16.pattern"]="{monthname} {datenum}";
a["format16.rule"]="now month={monthname},{datenum}";
a["format17.pattern"]="{datenum} {monthname}.? {yearnum}";
a["format17.rule"]="now year={yearnum},{monthname},{datenum}";
a["format18.pattern"]="{datenum}/{monthnum}/{yearnum} ";
a["format18.rule"]="now year={yearnum},{monthnum},{datenum}";
a["format19.pattern"]="{yearnum}-{monthnum}-{datenum}";
a["format19.rule"]="now year={yearnum},{monthnum},{datenum}";
a["format20.pattern"]="{monthname} {yearnum}";
a["format20.rule"]="now year={yearnum},{monthname},1";
a["format21.pattern"]="{dayname}";
a["format21.rule"]="now +1 {dayname}";
a["format22.pattern"]="\u00bf{datenum}(\u00ba|\u00ba|\u00ba|\u00ba)? {monthname}.? {yearnum}";
a["format22.rule"]="now year={yearnum},{monthname},{datenum}";
a["format23.pattern"]="D\u00eda de Acci\u00f3n de Gracias";
a["format23.rule"]="now month=November week=fourth,Thursday";
a["format24.pattern"]="Nochebuena";
a["format24.rule"]="now month=December,24";
a["format25.pattern"]="D\u00eda de Navidad";
a["format25.rule"]="now month=December,25";
a["format26.pattern"]="V\u00edspera de A\u00f1o Nuevo";
a["format26.rule"]="now month=December,31";
a["format27.pattern"]="D\u00eda de A\u00f1o Nuevo";
a["format27.rule"]="now +1 year month=January,1";
a["format28.pattern"]="{datenum}/{monthnum}/{yearnum}";
a["format28.rule"]="now year={yearnum},{monthnum},{datenum}";
a["format29.pattern"]="{datenum}-{monthnum}-{yearnum}";
a["format29.rule"]="now year={yearnum},{monthnum},{datenum}";
a["format30.pattern"]="###";
delete a;
if(!window.com_zimbra_delegatedadmin){
window.com_zimbra_delegatedadmin={}
}
a=window.com_zimbra_delegatedadmin;
a.label="Delegated Administrator";
a.description="Delegated Administrator Admin Extension";
a.OVP_rights="Rights";
a.OVP_global_grants="Global ACL";
a.TI_custom_rights="Custom Rights";
a.manage_rights_title="View Rights";
a.Add_UIComp_Title="Add Admin Views";
a.NAD_IsAdmin="Administrator";
a.NAD_IsAssignDefaultDARights="Assign default domain administrator views and rights";
a.label_ResetPasswords="Reset passwords";
a.label_EditContactInfo="Edit contact info";
a.Col_right_name="Name";
a.Col_right_type="Type";
a.Col_right_attr_name="Attributes";
a.Col_grantee_name="Grantee Name";
a.Label_grantee_id="Grantee ID:";
a.Col_grantee_id="Grantee ID";
a.Col_grantee_type="Grantee Type";
a.Col_target_name="Target Name";
a.Col_target_type="Target Type";
a.Col_grant_right_name="Right Name";
a.Col_deny="Is Negative Right (Deny)";
a.Col_allow="Is Positive Right (Allow)";
a.Col_can_grant="Can grant the right to other admins";
a.Col_can_not_inherited="Can not be inherited by sub groups ";
a.Col_canDelegate="Can delegate";
a.Col_canInheritedBySubDomain="Can be inherited by sub domains";
a.Label_right_desc="Description:";
a.Col_right_desc="Description";
a.Col_system_right="System Defined Right";
a.Col_inline_right="Attribute Right";
a.Col_inline_verb_get="Read";
a.Col_inline_verb_set="Write";
a.Col_comp_name="Admin View Name";
a.Tab_permission="ACL";
a.Tab_ui_components="Admin Views";
a.Tab_All="All";
a.Tab_InDomains="By Domains";
a.Tab_ByEntries="By Entries";
a.Bt_revoke="Delete";
a.Bt_grant="Add";
a.NAD_Remove="Remove";
a.NAD_Add="More";
a.RIGHT_New_tt="Open the new right creation wizard";
a.RIGHT_Delete_tt="Delete the selected right(s)";
a.RIGHT_Edit_tt="Edit the selected right";
a.RIGHT_View_tt="View details of the selected right";
a.Grant_New_tt="Add a new ACE";
a.Grant_Delete_tt="Delete the selected ACE";
a.Grant_Edit_tt="Edit the selected ACE";
a.Label_ACE="ACE {0}";
a.Label_target_name="Target Name: ";
a.Label_target_type="Target Type:";
a.Label_grantee_name="Grantee Name:";
a.Label_grantee_type="Grantee Type:";
a.Label_right_name="Right Name:";
a.Label_right_type="Right Type:";
a.Label_inline_verb="Attribute Right Verb:";
a.Label_inline_target_type="Attribute Right Target Type:";
a.Label_inline_attr="Attribute Name:";
a.Label_admin_account="Administrator account name:";
a.Label_ui_comp_name="Admin View name:";
a.Label_rights="Rights:";
a.Label_getAttr="Readable attributes:";
a.Label_setAttr="Modifiable attributes:";
a.Label_rights_to_add="Select the rights to be added:";
a.Label_permission="Granted ACL";
a.Label_ui_comp="Available Admin Views";
a.Title_add_rights="Add Rights";
a.Title_grant_rights="Add ACE";
a.Title_edit_rights="Edit ACE";
a.Label_GranteeIsAdmin="Grantee is Administrator";
a.IsAdminGroup="Admin Group";
a.LBL_IsAdminGroup="Admin Group:";
a.val_global_grant="Global Grant";
a.GlobalGrants_view_title="Manage Global Grants";
a.BUSY_GRANTING_RIGHT="Granting the ACL ...";
a.BUSY_GET_GRANTS="Getting ACL ...";
a.BUSY_DELETE_RIGHT="Deleting the ACL ...";
a.BUSY_GET_ALL_RIGHT="Getting system rights ...";
a.BUSY_GET_RIGHT="Getting rights ...";
a.BUSY_GET_ALL_EFFECTIVE_RIGHTS="Getting all effective rights ...";
a.error_grant_right="Failed to grant the ACL:";
a.error_get_permission="Failed to get the ACL:";
a.error_revoke_right="Failed to delete the ACL:";
a.error_invalid_inline_right="Invalid attribute right value.";
a.confirm_delete_grants="Are you sure you want to delete the following ACL?";
a.grant_exist_msg="The following ACL exists already.";
a.confirm_edit_grants="You are modifying an existing ACL. Please click Yes to proceed. Note, your existing ACL will be removed and the new ACL will be added. You can also click No to cancel the modification.";
a.confirm_edit_grants_existing_acl="Existing ACL:";
a.confirm_edit_grants_new_acl="New ACL:";
a.no_grant_selected_msg="Please select one granted ACL.";
a.UI_Comp_RightListView="Right List View";
a.UI_Comp_GlobalPermView="Global ACL View";
a.UI_Comp_AccountsPermTab="Account View, ACL Page";
a.UI_Comp_dlPermTab="Distribution List View, ACL Page";
a.UI_Comp_resourcePermTab="Resource View, ACL Page";
a.UI_Comp_domainPermTab="Domain View, ACL Page";
a.UI_Comp_cosPermTab="Class of Service View, ACL Page";
a.UI_Comp_serverPermTab="Server View, ACL Page";
a.UI_Comp_configPermTab="Gobal Settings View, ACL Page";
a.UI_Comp_zimletPermTab="Zimlet View, ACL Page";
a.UI_Comp_domainAcctLimitsTab="Account View, Account Limits Page ";
a.UI_Comp_AccountsUICompTab="Account View, Admin Views Page";
a.UI_Comp_dlUICompTab="Distribution List View, Admin Views Page";
a.GrantStatus_Revoke="ACL deleted.";
a.GrantStatus_Update="ACL updated.";
a.GrantStatus_Grant="ACL granted.";
a.GrantStatus_Revoke_Failed="Failed to delete the ACL(s).";
a.GrantStatus_Update_Failed="Failed to update the ACL.";
a.GrantStatus_Grant_Failed="Failed to grant ACL.";
a.tt_DomainAdminMaxMailQuota="Input 0 to allow unlimited quota";
a.tt_domainAdminMaxQuota="The maximum account quota allowed is {0} MB.";
a.tt_domainAdminUnlimitedQuota="Unlimited account quota is not allowed. The maximum account quota allowed is {0} MB.";
a.NAD_IsDomainAdminAccount="Domain administrator";
a.NAD_DomainAdminMailQuotaAllowed="Allow delegated admin to modify the account mail quota";
a.NAD_DomainAdminMaxMailQuota="Maximum quota (MB) domain administrator can specify:";
a.NAD_DomainMaxAccounts="Maximum accounts for this domain:";
a.TT_account_limits="Account Limits";
a.HELP_OTHER_GUIDES_ISYNC="Guide to Installing ZCS Connector for Apple iSync (Mac OS 10.4)";
a.HELP_OTHER_GUIDES_ISYNC_10_5="Guide to Installing ZCS Connector for Apple iSync (Mac OS 10.5 +)";
a.HELP_OTHER_GUIDES_OUTLOOK_User="Zimbra Connector for Microsoft Outlook (User Guide)";
a.HELP_OTHER_GUIDES_OUTLOOK_Admin="Zimbra Connector for Microsoft Outlook (Admin Guide)";
a.CONNECTOR_MSI_DOWNLOAD_TEXT="This Windows application (JavaScript Edition) customizes the standard ZCO MSI by setting server name, port, and other variables particular to an organization.";
a.ZCO_BRANDING_DOWNLOAD_TEXT="This Windows application (Visual Basic Script Edition) customizes the standard ZCO MSI by replacing all instances of the Zimbra product name and logo.";
a.CONNECTOR_DOWNLOAD_TEXT="This MSI installs the ZCO on to a user\u2019s Windows system. It enables Outlook to synchronize calendar, contacts, and mail with a ZCS server for the user.";
a.CONNECTOR_ISYNC_DOWNLOAD_TEXT="This DMG installs the Zimbra Connector for Apple iSync on to a user\u2019s Mac OS X system. It enables applications such as iCal to synchronize calendar and contacts with a ZCS server for the user.";
a.ENABLE_GLOB_CONSOLE_DNS_CHECK="Allow domain administrators to check MX records from Admin Console";
a.ENABLE_DOM_CONSOLE_DNS_CHECK="Allow administrators of this domain to check MX records from Admin Console";
a.Edit_Al_Title="Edit maximum accounts";
a.Add_Al_Title="Add maximum accounts";
a.Add_FeatureAl_Title="Add feature limits";
a.Edit_FeatureAl_Title="Edit feature limits";
a.accountLimitsByAccountType="Maximum accounts per account type:";
a.accountLimitsByFeature="Maximum accounts per feature:";
a.accountLimitsByCos="Maximum accounts per COS:";
a.Col_account_type="Account type";
a.WARNING_TOTAL_LIMIT_OUT_OF_SYNC="The maximum accounts for this domain should not be less than the total of maximum accounts per COS";
a.WARNING_FEATURE_MAX_ACCOUNTS="Account limits on the features only apply when features are explicitly set on the accounts.";
a.NAD_Skin_Logo_Settings="Customize the logo of the themes";
a.NAD_zimbraSkinLogoURL="Logo URL of the themes:";
a.NAD_zimbraSkinLogoLoginBanner="Login logo banner URL of the themes:";
a.NAD_zimbraSkinLogoAppBanner="Application logo banner URL of the themes:";
a.NAD_zimbraLogoAppBannerPreview="Application logo banner preview (200x35):";
a.NAD_zimbraLogoLoginBannerPreview="Login logo banner preview (440x60):";
a.AppBannerAlt="application logo banner unavailable";
a.LoginBannerAlt="login logo banner unavailable";
a.bt_ResetAllSkinLogo="Reset all logo attributes";
a.Label_AssignAdminRole="Administrator Role:";
a.searchTermAdminGroup="enter an admin group name";
a.searchTermRight="enter a right name";
a.searchTermGrantee="enter a grantee name";
a.searchTermTarget="enter a target name";
a.title_new_admin_wizard="New Administrator";
a.ADMINBB_New_menuItem="New Administrator";
a.ADMINBB_New_tt="Create a New Administrator Account/Group";
a.NA_Wizard_pick_admin_type="Choose the Administrator Type";
a.NA_Wizard_new_admin_acct="Create a New Administrator Account";
a.NA_Wizard_new_admin_dl="Create a New Administrator Group";
a.NA_Wizard_set_proposed_permission="Configure default grants";
a.NA_Wizard_set_permission="Configure extra grants";
a.NA_Wizard_config_ui="Configure the Admin Views";
a.NA_Wizard_finish_summary="Summary";
a.type_account="Admin Account";
a.Label_admin_type="Administrator type:";
a.tLabel_direct_ui_comp="Directly Assigned Admin Views";
a.tLabel_indirect_ui_comp="Inherited Admin Views";
a.BUSY_CREATE_ADMIN="Creating administrator ...";
a.BUSY_SETTING_UI_COMP="Setting the admin console Admin Views ...";
a.ERROR_CREATE_ADMIN="Admin creation failed.";
a.ERROR_SETTING_UI_COMP="Setting the admin console Admin Views failed.";
a.ERROR_INVALID_ADMIN_TYPE="Administrator type is not valid.";
a.ERROR_INVALID_ADMIN_ROLE="Invalid administrator role";
a.Help_new_administrator="New Administrator wizard guides you through the following steps to create a rights-based administrator account. <br /><br />1.\tChoose the administrator type, Administrator Group or Administrator Account. An Administrator Group is DL with an administrator role configured. Administrator accounts can be assigned to the group and can inherit the rights assigned to this administrator group. <br /><br />2.\tCreate the new administrator account.        <br /><br />3.\tConfigure the admin views that are visible when and admin logs into the administration console. This may also set the default rights needed for these views.  You can change these rights.<br /><br />4.\tOn the Configure the Grants page configure new rights that are not part of the admin views you selected.  You can also edit or delete rights. <br /><br />";
a.Help_new_admin_summary="Administrator {0} is successfully created and configured. <br /><br />To configure the rights for this administrator, please go to individual target\u2019s ACL view to grant or revoke the proper rights. <br /><br />To configure the administrator console UI for this administrator, please modify the Admin Views in the ACL tab of the administrator\u2019s {1} view.";
a.Help_new_admin_summary_account="account";
a.Help_new_admin_summary_dl="distribution list";
a.Help_proposed_grantsList='Based on the views you assigned to {0}, you may need to add the following grants to the newly created administrator group {0}. Click "Next" or "Finish" to create the following grants. Or click "Skip" to configure the grants by yourself.';
a.btSkip="Skip";
a.btAddFinish="Add and Finish";
a.btAddMore="Add and More";
a.btEditFinish="Edit and Finish";
a.ACTBB_ViewRights="View Rights";
a.ACTBB_ViewRights_tt="View all the effective rights of an administrator or administrator group";
a.tt_tab_view_effective_rights="View all the effective rights of {0}";
a.tt_tab_config_grants="Display, add and delete the ACL granted to {0}";
a.er_of_target='All the effective rights {0} has on the "{1}" target .';
a.er_no_rights='No rights are granted to {0} on the target "{1}".';
a.er_rights_granted="ACL granted to {0} on target(s) {1}";
a.lb_grantee="Grantee:";
a.lb_targets="Targets:";
a.lb_rights="Granted Rights:";
a.lb_modifiable_attrs="Modifiable Attributes:";
a.lb_readable_attrs="Readable Attributes:";
a.all_attributes="All the attributes";
a.lb_all="All {0}";
a.lb_targets_by_domain="All {0} in domain(s) {1}";
a.LB_Default_admin_group="Assign default domain admin group views and rights";
a.HELP_NOTES_ACL='An Access Control List (ACL) is a set of Access Control Entries (ACE\u2019s).  An ACE specifies who (the "Grantee") can do what (the "right") on this object (the "target").  The table below allows for adding and removing ACE\u2019s for the target you are editing.';
a.HELP_NOTES_UI_COMP="An admin view defines screen\u2019s availability in the admin console. A directly assigned admin view is the view set on the account.  An inherited admin view is a view set on one or more groups that the account belongs to.  Only the checked views are visible when the admin logs in to the admin console. The checked views are the combination of directly assigned admin views and inherited admin views.";
a.CartBlacheUIEnabled="All the UI views are currently enabled.";
a.bt_config_grants="Configure Grants";
a.bt_config_grants_tt="Display, add and delete the ACEs granted to the administrator";
a.no_rights_to_assign="No rights are available to be assigned.";
a.lb_tab_directGrants="Direct Grants";
a.lb_tab_indirectGrants="Inherited Grants";
a.LBL_admin_name="Administrator Name:";
a.Col_admin_name="Administrator Name";
a.LBL_admin_id="Administrator ID:";
a.Col_admin_id="Administrator ID";
a.rights_desc_invite="automatically add meeting invites from grantee to the target\u2019s calendar";
a.rights_desc_createAccount="create account";
a.rights_desc_renameServer="rename server";
a.msg_admin_created="The administrator account/group was created successfully.";
a.msg_proposed_grants_created="Configuring the following grants: <br />";
a.msg_proposed_grants_start="Grant ACE: {0}  ......";
a.msg_proposed_grants_failed="Failed <br />";
a.msg_proposed_grants_skipped="Skipped <br />";
a.msg_proposed_grants_granted="Granted <br />";
a.msg_proposed_grants_done="Done. <br />";
a.Alert_SingleDomain="Please note that account domain and account group domain are different. New account is always created with the default domain unless a different domain is selected.";
a.ERROR_ASSIGN_DEFAULT_DA_RIGHTS="Failed to assign the default domain administrator rights and views.";
a.LBL_searchRights="Search Rights:";
a.LBL_searchAllRights="All rights";
a.LBL_searchComboRights="Combo rights";
a.LBL_searchPresetRights="Preset rights";
a.LBL_searchGetAttrRights="GetAttr rights";
a.LBL_searchSetAttrRights="SetAttr rights";
a.BTL_searchButton="Find";
a.LBL_searchCaseSensitive="Case sensitive";
a.LBL_grantExtGrpRight="Grant External Group Right";
a.HELP_OTHER_GUIDES_CONNNECTOR_INFO="Use Zimbra with other clients? Check out these guides.";
a.HELP_CONFIG_OTHER_GUIDES_CONNNECTOR_INFO="Configuring Zimbra for users by other clients? Check out these guides.";
delete a;
if(!window.com_zimbra_delegatedadmin){
window.com_zimbra_delegatedadmin={}
}
a=window.com_zimbra_delegatedadmin;
a.label="Administrador delegado";
a.description="Extensi\u00f3n de administraci\u00f3n del administrador delegado";
a.OVP_rights="Derechos";
a.OVP_global_grants="Lista ACL global";
a.TI_custom_rights="Derechos personalizados";
a.manage_rights_title="Ver derechos";
a.Add_UIComp_Title="A\u00f1adir vistas de administrador";
a.NAD_IsAdmin="Administrador";
a.NAD_IsAssignDefaultDARights="Asignar vistas y derechos predeterminados del administrador del dominio";
a.label_EditContactInfo="Editar informaci\u00c3\u00b3n de contacto";
a.label_ResetPasswords="Restablecer contrase\u00c3\u00b1as";
a.Col_right_name="Nombre";
a.Col_right_type="Tipo";
a.Col_right_attr_name="Atributos";
a.Col_grantee_name="Nombre de cesionario";
a.Label_grantee_id="ID del cesionario:";
a.Col_grantee_id="ID de cesionario";
a.Col_grantee_type="Tipo de cesionario";
a.Col_target_name="Nombre del objetivo";
a.Col_target_type="Tipo de objetivo";
a.Col_grant_right_name="Nombre del derecho";
a.Col_deny="Es un derecho negativo (rechazar)";
a.Col_allow="Es un derecho positivo (permitir)";
a.Col_can_grant="Puede conceder derechos a los dem\u00e1s administradores";
a.Col_can_not_inherited="No se puede heredar por parte de los subgrupos ";
a.Col_canDelegate="Puede delegar";
a.Col_canInheritedBySubDomain="Los subdominos pueden heredarlo";
a.Label_right_desc="Descripci\u00f3n:";
a.Col_right_desc="Descripci\u00f3n";
a.Col_system_right="Derecho definido por el sistema";
a.Col_inline_right="Derecho del atributo";
a.Col_inline_verb_get="Leer";
a.Col_inline_verb_set="Escribir";
a.Col_comp_name="Nombre de vista de administrador";
a.Tab_permission="ACL";
a.Tab_ui_components="Vistas de administrador";
a.Tab_All="Todas";
a.Tab_InDomains="Por dominios";
a.Tab_ByEntries="Por entradas";
a.Bt_revoke="Eliminar";
a.Bt_grant="A\u00f1adir";
a.NAD_Remove="Eliminar";
a.NAD_Add="M\u00e1s";
a.RIGHT_New_tt="Abrir el asistente de creaci\u00f3n de derechos nuevos";
a.RIGHT_Delete_tt="Eliminar derechos seleccionados";
a.RIGHT_Edit_tt="Modificar derecho seleccionado";
a.RIGHT_View_tt="Ver detalles del derecho seleccionado";
a.Grant_New_tt="A\u00f1adir una nueva ACE";
a.Grant_Delete_tt="Eliminar la ACE seleccionada";
a.Grant_Edit_tt="Editar la ACE seleccionada";
a.Label_ACE="Entradas ACE {0}";
a.Label_target_name="Nombre del objetivo: ";
a.Label_target_type="Tipo del objetivo:";
a.Label_grantee_name="Nombre de cesionario:";
a.Label_grantee_type="Tipo de cesionario:";
a.Label_right_name="Nombre del derecho:";
a.Label_right_type="Tipo de derecho:";
a.Label_inline_verb="Verbo del derecho del atributo:";
a.Label_inline_target_type="Tipo de derecho del atributo:";
a.Label_inline_attr="Nombre del atributo:";
a.Label_admin_account="Nombre de cuenta del administrador:";
a.Label_ui_comp_name="Nombre de vista de administrador:";
a.Label_rights="Derechos:";
a.Label_getAttr="Atributos accesibles:";
a.Label_setAttr="Atributos modificables:";
a.Label_rights_to_add="Seleccionar los derechos para a\u00f1adir:";
a.Label_permission="Lista ACL concedida";
a.Label_ui_comp="Vistas de administrador disponibles";
a.Title_add_rights="A\u00f1adir derechos";
a.Title_grant_rights="A\u00f1adir ACE";
a.Title_edit_rights="Editar ACE";
a.Label_GranteeIsAdmin="El cesionario es administrador";
a.IsAdminGroup="Grupo de administradores";
a.LBL_IsAdminGroup="Grupo de administradores:";
a.val_global_grant="Concesi\u00f3n global";
a.GlobalGrants_view_title="Gestionar concesiones globales";
a.BUSY_GRANTING_RIGHT="Concediendo lista ACL\u2026";
a.BUSY_GET_GRANTS="Obteniendo lista ACL\u2026";
a.BUSY_DELETE_RIGHT="Eliminando lista ACL\u2026";
a.BUSY_GET_ALL_RIGHT="Obteniendo derechos del sistema\u2026";
a.BUSY_GET_RIGHT="Obteniendo derechos\u2026";
a.BUSY_GET_ALL_EFFECTIVE_RIGHTS="Obteniendo todos los derechos efectivos\u2026";
a.error_grant_right="Fallo al conceder la lista ACL:";
a.error_get_permission="Fallo al obtener la lista ACL:";
a.error_revoke_right="Fallo al eliminar la lista ACL:";
a.error_invalid_inline_right="Valor de derecho del atributo no v\u00e1lido.";
a.confirm_delete_grants="\u00bfEst\u00e1s seguro de que quieres eliminar la siguiente lista ACL?";
a.grant_exist_msg="La siguiente lista ACL ya existe.";
a.confirm_edit_grants="Est\u00e1s modificando una lista ACL existente. Pulsa en S\u00ed para continuar. Ten en cuenta que se eliminar\u00e1 la lista ACL existente y se a\u00f1adir\u00e1 la nueva lista ACL. Tambi\u00e9n puedes hacer clic en No para cancelar la modificaci\u00f3n.";
a.confirm_edit_grants_existing_acl="ACL existente:";
a.confirm_edit_grants_new_acl="Nueva ACL:";
a.no_grant_selected_msg="Selecciona una lista ACL concedida.";
a.UI_Comp_RightListView="Vista de lista de derechos";
a.UI_Comp_GlobalPermView="Vista de ACL global";
a.UI_Comp_AccountsPermTab="Vista de cuenta, p\u00e1gina de ACL";
a.UI_Comp_dlPermTab="Vista de lista de correo, p\u00e1gina de ACL";
a.UI_Comp_resourcePermTab="Vista de recurso, p\u00e1gina de ACL";
a.UI_Comp_domainPermTab="Vista de dominio, p\u00e1gina de ACL";
a.UI_Comp_cosPermTab="Vista de clase de servicio, p\u00e1gina de ACL";
a.UI_Comp_serverPermTab="Vista de servidor, p\u00e1gina de ACL";
a.UI_Comp_configPermTab="Vista de configuraci\u00f3n global, p\u00e1gina de ACL";
a.UI_Comp_zimletPermTab="Vista de Zimlet, p\u00e1gina de ACL";
a.UI_Comp_domainAcctLimitsTab="Vista de cuenta, p\u00e1gina de l\u00edmites de cuentas ";
a.UI_Comp_AccountsUICompTab="Vista de cuenta, p\u00e1gina de vistas de administrador";
a.UI_Comp_dlUICompTab="Vista de lista de correo, p\u00e1gina de vistas de administrador";
a.GrantStatus_Revoke="Se ha eliminado la lista ACL.";
a.GrantStatus_Update="Se ha actualizado la lista ACL.";
a.GrantStatus_Grant="Se ha concedido la lista ACL.";
a.GrantStatus_Revoke_Failed="Fallo al eliminar las listas ACL.";
a.GrantStatus_Update_Failed="Fallo al actualizar la lista ACL.";
a.GrantStatus_Grant_Failed="Fallo al conceder la lista ACL.";
a.tt_DomainAdminMaxMailQuota="Introduce 0 para permitir un espacio ilimitado";
a.tt_domainAdminMaxQuota="El espacio m\u00e1ximo de cuenta permitido es de {0} MB.";
a.tt_domainAdminUnlimitedQuota="No se permite el espacio de cuenta ilimitado. El espacio m\u00e1ximo de cuenta permitido es de {0} MB.";
a.NAD_IsDomainAdminAccount="Administrador de dominio";
a.NAD_DomainAdminMailQuotaAllowed="Permitir que el administrador delegado pueda modificar el espacio de la cuenta";
a.NAD_DomainAdminMaxMailQuota="Espacio m\u00e1ximo (MB) que el administrador del dominio puede especificar:";
a.NAD_DomainMaxAccounts="N\u00famero m\u00e1ximo de cuentas para este dominio:";
a.TT_account_limits="L\u00edmites de cuenta";
a.HELP_OTHER_GUIDES_ISYNC="Manual de instalaci\u00f3n del Conector ZCS para Apple iSync (Mac OS 10.4)";
a.HELP_OTHER_GUIDES_ISYNC_10_5="Manual de instalaci\u00f3n del Conector ZCS para Apple iSync (Mac OS 10.5 +)";
a.HELP_OTHER_GUIDES_OUTLOOK_User="Conector de Zimbra para Microsoft Outlook (Manual de usuario)";
a.HELP_OTHER_GUIDES_OUTLOOK_Admin="Conector de Zimbra para Microsoft Outlook (Manual de administraci\u00f3n)";
a.CONNECTOR_MSI_DOWNLOAD_TEXT="La aplicaci\u00f3n de Windows (JavaScript Edition) personaliza la norma MSI de ZCO configurando el nombre del servidor, el puerto y otras variables espec\u00edficas de una empresa.";
a.ZCO_BRANDING_DOWNLOAD_TEXT="La aplicaci\u00f3n de Windows (Visual Basic Script Edition) personaliza la norma MSI de ZCO sustituyendo todas las instancias del logotipo y el nombre del producto de Zimbra.";
a.CONNECTOR_DOWNLOAD_TEXT="Esta MSI instala ZCO en un sistema de usuario de Windows, y permite que Outlook sincronice la agenda, los contactos y el correo con el servidor ZCS para el usuario.";
a.CONNECTOR_ISYNC_DOWNLOAD_TEXT="El archivo DMG instala el conector de Zimbra para Apple iSync en el sistema Mac OS X del usuario, y permite que aplicaciones como iCal sincronicen la agenda y los contactos con el servidor ZCS para el usuario.";
a.ENABLE_GLOB_CONSOLE_DNS_CHECK="Permitir que los administradores del dominio revisen los registros MX de la consola de administraci\u00f3n";
a.ENABLE_DOM_CONSOLE_DNS_CHECK="Permitir que los administradores del dominio revisen los registros MX de la consola de administraci\u00f3n";
a.Edit_Al_Title="Editar n\u00famero m\u00e1ximo de cuentas";
a.Add_Al_Title="A\u00f1adir n\u00famero m\u00e1ximo de cuentas";
a.Add_FeatureAl_Title="A\u00f1adir l\u00edmites de funciones";
a.Edit_FeatureAl_Title="Modificar l\u00edmites de funciones";
a.accountLimitsByAccountType="N\u00famero m\u00e1ximo de cuentas por tipo de cuenta:";
a.accountLimitsByFeature="N\u00famero m\u00e1ximo de cuentas por funci\u00f3n:";
a.accountLimitsByCos="N\u00famero m\u00e1ximo de cuentas por clase de servicio:";
a.Col_account_type="Tipo de cuenta";
a.WARNING_TOTAL_LIMIT_OUT_OF_SYNC="El n\u00famero m\u00e1ximo de cuentas para este dominio no debe ser inferior al total de cuentas m\u00e1ximas por clase de servicio";
a.WARNING_FEATURE_MAX_ACCOUNTS="Los l\u00edmites de cuenta en las funciones s\u00f3lo se aplican cuando las funciones son establecidas expl\u00edcitamente en las cuentas.";
a.NAD_Skin_Logo_Settings="Personalizar el logotipo de los temas";
a.NAD_zimbraSkinLogoURL="URL del logotipo de los temas:";
a.NAD_zimbraSkinLogoLoginBanner="URL del banner de inicio de sesi\u00f3n de los temas:";
a.NAD_zimbraSkinLogoAppBanner="URL del banner de la aplicaci\u00f3n de los temas:";
a.NAD_zimbraLogoAppBannerPreview="Vista previa del banner de la aplicaci\u00f3n (200x35):";
a.NAD_zimbraLogoLoginBannerPreview="Vista previa del banner de inicio de sesi\u00f3n (440x60):";
a.AppBannerAlt="banner de la aplicaci\u00f3n no disponible";
a.LoginBannerAlt="banner de inicio de sesi\u00f3n no disponible";
a.bt_ResetAllSkinLogo="Restablecer todos los atributos de logotipo";
a.Label_AssignAdminRole="Rol de administrador:";
a.searchTermAdminGroup="introducir un nombre de grupo de administraci\u00f3n";
a.searchTermRight="introducir un nombre de derecho";
a.searchTermGrantee="introducir un nombre de cesionario";
a.searchTermTarget="introducir un nombre del objetivo";
a.title_new_admin_wizard="Nuevo administrador";
a.ADMINBB_New_menuItem="Nuevo administrador";
a.ADMINBB_New_tt="Crear una nueva cuenta o grupo de administraci\u00f3n";
a.NA_Wizard_pick_admin_type="Seleccionar el tipo de administrador";
a.NA_Wizard_new_admin_acct="Crear una nueva cuenta de administrador";
a.NA_Wizard_new_admin_dl="Crear un nuevo grupo de administradores";
a.NA_Wizard_set_proposed_permission="Configurar las concesiones predeterminadas";
a.NA_Wizard_set_permission="Configurar las concesiones adicionales";
a.NA_Wizard_config_ui="Configurar las vistas de administrador";
a.NA_Wizard_finish_summary="Resumen";
a.type_account="Cuenta de administrador";
a.Label_admin_type="Tipo de administrador:";
a.tLabel_direct_ui_comp="Vistas de administrador asignadas directamente";
a.tLabel_indirect_ui_comp="Vistas de administrador heredadas";
a.BUSY_CREATE_ADMIN="Creando administrador\u2026";
a.BUSY_SETTING_UI_COMP="Configurar las vistas de administraci\u00f3n de la consola de administrador\u2026";
a.ERROR_CREATE_ADMIN="Fallo al crear el administrador.";
a.ERROR_SETTING_UI_COMP="Fallo al configurar las vistas de administraci\u00f3n de la consola de administrador.";
a.ERROR_INVALID_ADMIN_TYPE="El tipo de administrador no es v\u00e1lido.";
a.ERROR_INVALID_ADMIN_ROLE="El rol de administrador no es v\u00e1lido";
a.Help_new_administrator="El asistente de Nuevo administrador te guiar\u00e1 a trav\u00e9s de los siguientes pasos para crear una cuenta de administrador basada en los derechos. <br /><br /> 1. Selecciona el tipo de administrador, Grupo de administradores o Cuenta de administrador. Un Grupo de administradores es una lista de correo con un rol de administrador configurado. Las cuentas de administrador pueden ser asignadas al grupo y heredar los derechos asignados a ese grupo de administradores. <br /><br /> 2. Crea la nueva cuenta de administrador.        <br /><br /> 3. Configura las vistas de administrador visibles cuando el administrador se conecte a la consola de administraci\u00f3n. Esto puede establecer tambi\u00e9n los derechos predefinidos requeridos para estas vistas. Puedes cambiar estos derechos.<br /><br /> 4. En la p\u00e1gina para configurar las concesiones configura los nuevos derechos que no forman parte de las vistas de administraci\u00f3n que has seleccionado. Puedes tambi\u00e9n editar o eliminar los derechos. <br /><br />";
a.Help_new_admin_summary="El administrador {0} se ha creado y configurado correctamente. <br /><br /> Para configurar los derechos para este administrador, ve a la vista individual de la lista ACL objetivo para conceder o revocar los derechos adecuados. <br /><br /> Para configurar la interfaz de usuario de la consola de administraci\u00f3n para este administrador, modifica las vistas de administraci\u00f3n en la pesta\u00f1a ACL de la vista de administrador {1}.";
a.Help_new_admin_summary_account="cuenta";
a.Help_new_admin_summary_dl="lista de correo";
a.Help_proposed_grantsList="Seg\u00fan las vistas que has asignado a {0}, puede que necesites a\u00f1adir las siguientes concesiones para el nuevo grupo de administradores {0}. Haz clic en \u201cSiguiente\u201d o \u201cTerminado\u201d para crear las siguientes concesiones. O haz clic en \u201cOmitir\u201d para configurar las concesiones t\u00fa mismo.";
a.btSkip="Omitir";
a.btAddFinish="A\u00f1adir y finalizar";
a.btAddMore="A\u00f1adir y m\u00e1s";
a.btEditFinish="Editar y finalizar";
a.ACTBB_ViewRights="Ver derechos";
a.ACTBB_ViewRights_tt="Ver todos los derechos efectivos de un administrador o grupo de administradores";
a.tt_tab_view_effective_rights="Ver todos los derechos efectivos de {0}";
a.tt_tab_config_grants="Mostrar, a\u00f1adir y eliminar la lista ACL concedida a {0}";
a.er_of_target='Todos los derechos efectivos que {0} tiene sobre el objetivo "{1}".';
a.er_no_rights='No se concede ning\u00fan derecho a {0} para el objetivo de "{1}".';
a.er_rights_granted="Lista ACL concedida a {0} para el objetivo {1}";
a.lb_grantee="Cesionario:";
a.lb_targets="Objetivos:";
a.lb_rights="Derechos concedidos:";
a.lb_modifiable_attrs="Atributos modificables:";
a.lb_readable_attrs="Atributos accesibles:";
a.all_attributes="Todos los atributos";
a.lb_all="Todos los elementos de {0}";
a.lb_targets_by_domain="Todos los elementos de {0} en los dominios {1}";
a.LB_Default_admin_group="Asignar vistas y derechos de grupo de administradores de dominio predefinido";
a.HELP_NOTES_ACL='Una Lista de control de acceso (ACL) es un conjunto de Entradas de control de acceso (ACE).  Una ACE especifica qui\u00e9n (el "cesionario") puede hacer qu\u00e9 (el "derecho") con el objeto (el "objetivo"). En la tabla a continuaci\u00f3n se permite a\u00f1adir y eliminar entradas ACE para el objetivo que est\u00e1s modificando.';
a.HELP_NOTES_UI_COMP="La vista de administrador define la disponibilidad de la pantalla en la consola de administraci\u00f3n. La vista de administrador directamente asignada es la vista establecida para la cuenta. Una vista de administrador heredada es la vista establecida en uno o m\u00e1s grupos a los que pertenece la cuenta. S\u00f3lo las vistas marcadas son visibles cuando el administrador accede a la consola de administraci\u00f3n. Las vistas marcadas son una combinaci\u00f3n de vistas de administraci\u00f3n directamente asignadas y vistas de administraci\u00f3n heredadas. ";
a.CartBlacheUIEnabled="Todas las vistas de la interfaz de usuario est\u00e1n activadas en estos momentos.";
a.bt_config_grants="Configurar concesiones";
a.bt_config_grants_tt="Mostrar, a\u00f1adir y eliminar las entradas ACE concedidas al administrador";
a.no_rights_to_assign="No hay derechos disponibles para asignar.";
a.lb_tab_directGrants="Concesiones directas";
a.lb_tab_indirectGrants="Concesiones heredadas";
a.LBL_admin_name="Nombre del administrador:";
a.Col_admin_name="Nombre del administrador";
a.LBL_admin_id="ID del administrador:";
a.Col_admin_id="ID del administrador";
a.rights_desc_invite="a\u00f1adir autom\u00e1ticamente las invitaciones de los cesionarios a la agenda definida";
a.rights_desc_createAccount="crear cuenta";
a.rights_desc_renameServer="cambiar nombre del servidor";
a.msg_admin_created="Se ha creado correctamente la cuenta o grupo de administraci\u00f3n.";
a.msg_proposed_grants_created="Configurar las siguientes concesiones: <br />";
a.msg_proposed_grants_start="Conceder ACE: {0}  ......";
a.msg_proposed_grants_failed="Fall\u00f3 <br />";
a.msg_proposed_grants_skipped="Omitido <br />";
a.msg_proposed_grants_granted="Concedido <br />";
a.msg_proposed_grants_done="Hecho. <br />";
a.Alert_SingleDomain="Tenga en cuenta que el dominio de la cuenta y el dominio del grupo de cuentas es diferente. La nueva cuenta se crea siempre con el dominio predeterminado a menos que se seleccione un dominio distinto.";
a.ERROR_ASSIGN_DEFAULT_DA_RIGHTS="Fallo al asignar los derechos y vistas predeterminados del administrador del dominio.";
a.LBL_searchRights="Derechos de b\u00fasqueda:";
a.LBL_searchAllRights="Todos los derechos";
a.LBL_searchComboRights="Derechos combinados";
a.LBL_searchPresetRights="Derechos preestablecidos";
a.LBL_searchGetAttrRights="Derechos GetAttr";
a.LBL_searchSetAttrRights="Derechos SetAttr";
a.BTL_searchButton="Buscar";
a.LBL_searchCaseSensitive="Tiene en cuenta may\u00fasculas/min\u00fasculas";
a.LBL_grantExtGrpRight="Conceder derecho de grupo externo";
a.HELP_OTHER_GUIDES_CONNNECTOR_INFO="\u00bfUtilizas Zimbra con otros clientes? Comprueba estas gu\u00edas.";
a.HELP_CONFIG_OTHER_GUIDES_CONNNECTOR_INFO="\u00bfDeseas configurar Zimbra para usuarios con otros clientes? Echa un vistazo a estas gu\u00edas.";
delete a;
if(!window.com_zimbra_email){
window.com_zimbra_email={}
}
a=window.com_zimbra_email;
a.zimletLabel="Email Contact Details";
a.description="Highlights and previews associated contact details for an email address.";
a.preferencesSaved="Preferences Saved";
a.emailZimletPreferences="Email Zimlet Preferences";
a.label="Email";
a.tooltip="Shows Email Zimlet\u2019s preferences";
a.VERYSMALL="Very Small";
a.SMALL="Small";
a.MEDIUM="Medium";
a.LARGE="Large";
a.XL="XL";
a["2XL"]="2XL";
a.selectToolTipSize="Please select tool-tip\u2019s size:";
a.rightClickForMoreOptions="Right click for more options";
a.contact="Contact";
a.close="Close";
a.slideTooltip="Email Profile";
a.slideMailTooltip="New Email";
a.slideCalendarTooltip="New Appointment";
a.loading="Loading...";
a.msg_available="Available";
a.msg_unavailable="Unavailable";
a.msg_busy="Busy";
a.msg_away="Away";
a.msg_dnd="Do not disturb";
a.msg_onthephone="On the phone";
a.msg_vacation="Vacation";
a.msg_unknown="Unknown";
a.postalAddress="{0} {1} {2} {3}";
a.jobTitleDepartmentCompany="jobTitle,department,company";
delete a;
if(!window.com_zimbra_email){
window.com_zimbra_email={}
}
a=window.com_zimbra_email;
a.zimletLabel="Detalles de contacto del correo electr\u00f3nico";
a.description="Resalta y previsualiza los detalles de contacto asociados a una direcci\u00f3n de correo electr\u00f3nico.";
a.preferencesSaved="Preferencias guardadas";
a.emailZimletPreferences="Preferencias del Zimlet de correo electr\u00f3nico";
a.label="Correo electr\u00f3nico";
a.tooltip="Muestra las preferencias del Zimlet de correo electr\u00f3nico";
a.VERYSMALL="Muy peque\u00f1o";
a.SMALL="Peque\u00f1o";
a.MEDIUM="Mediano";
a.LARGE="Grande";
a.XL="XL";
a["2XL"]="2XL";
a.selectToolTipSize="Selecciona el tama\u00f1o de la descripci\u00f3n emergente: ";
a.rightClickForMoreOptions="Haz clic con el bot\u00f3n derecho para ver m\u00e1s opciones";
a.contact="Contacto";
a.close="Cerrar";
a.slideTooltip="Enviar perfil por correo electr\u00f3nico";
a.slideMailTooltip="Nuevo correo";
a.slideCalendarTooltip="Nueva cita";
a.slideChatTooltip="Chat";
a.loading="Cargando...";
a.msg_available="Disponible";
a.msg_unavailable="No disponible";
a.msg_busy="Ocupado";
a.msg_away="Ausente";
a.msg_dnd="No molestar";
a.msg_onthephone="Al tel\u00e9fono";
a.msg_vacation="De vacaciones";
a.msg_unknown="Desconocido";
a.jobTitleDepartmentCompany="jobTitle,department,company";
delete a;
if(!window.com_zimbra_hsm){
window.com_zimbra_hsm={}
}
a=window.com_zimbra_hsm;
a.label="Storage Management";
a.description="Storage Management Admin Extension";
a.zimbraHsmPolicy="SM Policy";
a.AbortPolicyConfirmMessage="Are you sure you want to abort Storage Management Policies execution? Please note that aborting the process may result in inconsistent data across volumes.";
a.AbortPolicyConfirmTitle="Abort Current Session";
a.AddPolicyTitle="Add Storage Management Policy";
a.DeletePolicyWarningMessage="Are you sure you want to delete the policy?";
a.DeletePolicyWarningTitle="Delete Policy";
a.EditBucketTitle="Edit S3 Bucket";
a.EditBucketWarningMessage="Warning: Changing the settings below may make data unavailable and affect multiple services. Please proceed with caution.";
a.EditPolicyTitle="Edit Storage Management Policy";
a.ItemType_Appointments="Appointments";
a.ItemType_Chats="Chats";
a.ItemType_Contacts="Contacts";
a.ItemType_Documents="Documents";
a.ItemType_Messages="Messages";
a.ItemType_Notes="Notes";
a.ItemType_Tasks="Tasks";
a.ItemType_Wiki="Wiki";
a.ItemTypes4Hsm="Types of items to move:";
a.Label_VM_CurrentpriMessageVolume="Current primary {0} volume:";
a.Label_VM_CurrentSecMessageVolume="Current secondary {0} volume:";
a.LBL_VM_AccessKey="Access key";
a.LBL_VM_BucketName="Bucket name";
a.LBL_VM_CustomS3Bucket="Custom S3 compatible bucket";
a.LBL_VM_CustomStoreManager="Use custom store manager";
a.LBL_VM_DestinationPath="Destination path";
a.LBL_VM_InfrequentAccess="Infrequent access";
a.LBL_VM_InfrequentAccessTreshold="Infrequent access threshold";
a.LBL_VM_IntelligentTiering="Intelligent tiering";
a.LBL_VM_NewBucket="Create a new bucket";
a.LBL_VM_OpenIOAccount="Account";
a.LBL_VM_OpenIOAccountPort="Account Port";
a.LBL_VM_OpenIONamespace="Namespace";
a.LBL_VM_OpenIOProxyPort="Proxy Port";
a.LBL_VM_Region="Region";
a.LBL_VM_S3CompatibleBucket="S3 compatible bucket";
a.LBL_VM_SecretAccessKey="Secret";
a.LBL_VM_StoreManagerClassPath="Store Manager Class Path";
a.LBL_VM_TestBucket="Test Bucket";
a.LBL_VM_UnifiedStorage="Unified Storage";
a.LBL_VM_URL="URL";
a.LBL_VM_VolumeName="Volume name";
a.LBL_VM_VolumePrefix="Volume prefix";
a.LBL_VM_VolumeRootPath="Volume root path";
a.LBL_VM_VolumeType="Volume type";
a.LBL_VM_VolumeTypeCeph="Ceph";
a.LBL_VM_VolumeTypeCustomS3="Custom S3";
a.LBL_VM_VolumeTypeEMC="EMC";
a.LBL_VM_VolumeTypeInternal="Internal";
a.LBL_VM_VolumeTypeNASG="NetApp StorageGrid";
a.LBL_VM_VolumeTypeOpenIO="OpenIO";
a.LBL_VM_VolumeTypeS3="Amazon S3";
a.LBL_VM_VolumeTypeScality="Scality";
a.MoveOlderThen="Move items older than:";
a.OptIncl_Junk="Include junk";
a.OptIncl_Trash="Include trash";
a.Options4Hsm="Options:";
a.PoliciesGrpTitle="Storage Management Policies";
a.PolicyActive="Active";
a.PolicyItemsToMove="Items to move";
a.PolicyLastExecuted="Last executed";
a.PolicyOlderThan="Older than";
a.PolicyString="Policy string:";
a.StartPolicyConfirmMessage="Are you sure you want to execute Storage Management Policies?";
a.StartPolicyConfirmTitle="Run Session";
a.TABT_CephBucketPage="New Ceph bucket";
a.TABT_CephVolumePage="Ceph compatible volume";
a.TABT_CustomS3BucketPage="New Custom S3 bucket";
a.TABT_CustomS3VolumePage="Custom S3 compatible volume";
a.TABT_EMCBucketPage="New EMC bucket";
a.TABT_EMCVolumePage="EMC compatible volume";
a.TABT_InternalVolumePage="Internal volume";
a.TABT_NetAppStorageGridBucketPage="New NetApp StorageGrid bucket";
a.TABT_NetAppStorageGridVolumePage="NetApp Storage Grid volume";
a.TABT_ScalityBucketPage="New Scality bucket";
a.TABT_ScalityVolumePage="Scality compatible volume";
a.TABT_OpenIOVolumePage="OpenIO compatible volume";
a.TABT_S3BucketPage="New S3 bucket";
a.TABT_S3VolumePage="Amazon S3 compatible volume";
a.TABT_VolumeTypePage="Volume type";
a.UI_Comp_configHSMTab="Global Settings View, SM Page";
a.UI_Comp_serverHSMTab="Server View, SM Page";
a.VM_HSM_Aborted="Aborted";
a.VM_HSM_AbortHsm="Abort SM Session";
a.VM_HSM_EnableScheduleHsm="Enable session scheduling";
a.VM_HSM_ErrorMsg="Something went wrong, Please start a new session";
a.VM_HSM_Idle="Idle";
a.VM_HSM_LastEnd="SM session ended:";
a.VM_HSM_LastStart="SM session started:";
a.VM_HSM_ManageHsm="Manage SM Session";
a.VM_HSM_NoSession="No Session in Progress";
a.VM_Error_InvalidBucket="Bucket is not valid";
a.VM_Error_RepeatedBucketName="Bucket with that name already exists";
a.VM_Error_InvalidStoreManagerPath="Please provide a valid custom store manager path";
a.VM_Error_InvalidVolumeName="Volume name can contain only alphanumeric characters, _ (underscore), - (hyphen) and . (period)";
a.VM_Error_InvalidBeginVolumeName="Volume name must begin with a letter or number";
a.VM_Error_InvalidVolumePrefix='Path must start with / and cannot contain other special characters except "-", "." and "/"';
a.VM_Error_RequiredVolumeName="Please enter volume name";
a.VM_Error_RequiredVolumePrefix="Please enter volume prefix";
a.VM_HSM_PrimaryMsg="Primary Data";
a.VM_HSM_Refresh="Refresh SM Status";
a.VM_HSM_Running="Running";
a.VM_HSM_ScheduleHsm="SM Session Scheduling";
a.VM_HSM_ScheduleHsmStartTime="Schedule session for";
a.VM_HSM_SecMsg="Secondary Data";
a.VM_HSM_ServerVolGrpTitle="SM";
a.VM_HSM_StartHsm="Start SM Session";
a.VM_HSM_Status="SM session status:";
a.VM_HSM_Threshold="Message age threshold for SM:";
a.VM_Info_BucketConnectionSuccessful="Bucket connection successful.";
a.VM_S3CustomStoreManagerHelpButton="Click this icon for Zimbra documentation about using Custom Store Manager.";
a.VM_S3IntelligentTieringHelpButton="Click this icon for official AWS documentation about Intelligent Tiering.";
a.VM_S3UnifiedStorageButton="Click this icon for Zimbra documentation about using Unified Storage.";
a.VM_VolumeName="Volume Name";
a.VM_VolumeRootPath="Volume Path or S3 Prefix";
a.VM_VolumeType="Volume Type";
a.VM_VolumeTypeCeph="Ceph";
a.VM_VolumeTypeInternal="Internal";
a.VM_VolumeTypeS3="S3";
a.VM_VolumeTypeSelectTitle="Please select the type of volume you would like to create.";
a.VM_HSM_AbortingSession="Aborting the session";
a.BucketsGrpTitle="Manage S3 Buckets";
a.DeleteBucketWarningMessage="Deleting this bucket will make the volume associated with it unusable. Are you sure you want to proceed?";
delete a;
if(!window.com_zimbra_hsm){
window.com_zimbra_hsm={}
}
a=window.com_zimbra_hsm;
a.label="Administraci\u00f3n de almacenamiento";
a.description="Extensi\u00f3n de administraci\u00f3n de gesti\u00f3n de almacenamiento";
a.zimbraHsmPolicy="Pol\u00edtica de SM";
a.AbortPolicyConfirmMessage="\u00bfEst\u00e1 seguro de que desea cancelar la ejecuci\u00f3n de las pol\u00edticas de administraci\u00f3n de almacenamiento? Tenga en cuenta que cancelar el proceso puede generar datos incoherentes entre los vol\u00famenes.";
a.AbortPolicyConfirmTitle="Abortar sesi\u00f3n actual";
a.AddPolicyTitle="Agregar pol\u00edtica de administraci\u00f3n de almacenamiento";
a.DeletePolicyWarningMessage="\u00bfEst\u00e1s seguro de que deseas eliminar esta pol\u00edtica?";
a.DeletePolicyWarningTitle="Eliminar pol\u00edtica";
a.EditBucketTitle="Editar bucket S3";
a.EditBucketWarningMessage="Advertencia: cambiar la configuraci\u00f3n puede hacer que los datos no est\u00e9n disponibles y afectar varios servicios. Proceda con precauci\u00f3n.";
a.EditPolicyTitle="Editar pol\u00edtica de administraci\u00f3n de almacenamiento";
a.ItemType_Appointments="Citas";
a.ItemType_Chats="Chats";
a.ItemType_Contacts="Contactos";
a.ItemType_Documents="Documentos";
a.ItemType_Messages="Mensajes";
a.ItemType_Notes="Notas";
a.ItemType_Tasks="Tareas";
a.ItemType_Wiki="Wiki";
a.ItemTypes4Hsm="Tipos de elementos para mover:";
a.LBL_VM_AccessKey="Llave de acceso";
a.LBL_VM_BucketName="Nombre del dep\u00f3sito";
a.LBL_VM_CustomS3Bucket="Cubo compatible con Custom S3";
a.LBL_VM_CustomStoreManager="Usar administrador de tienda personalizado";
a.LBL_VM_DestinationPath="Ruta de destino";
a.LBL_VM_InfrequentAccess="Acceso poco frecuente";
a.LBL_VM_InfrequentAccessTreshold="Umbral de acceso poco frecuente";
a.LBL_VM_IntelligentTiering="Nivelaci\u00f3n inteligente";
a.LBL_VM_NewBucket="Crear un nuevo cubo";
a.LBL_VM_OpenIOAccount="Cuenta";
a.LBL_VM_OpenIOAccountPort="Puerto de cuenta";
a.LBL_VM_OpenIONamespace="Espacio de nombres";
a.LBL_VM_OpenIOProxyPort="Puerto proxy";
a.LBL_VM_Region="Regi\u00f3n";
a.LBL_VM_S3CompatibleBucket="Cubo compatible con S3";
a.LBL_VM_SecretAccessKey="secreto";
a.LBL_VM_StoreManagerClassPath="Ruta de clase del administrador de la tienda";
a.LBL_VM_TestBucket="Cubo de prueba";
a.LBL_VM_UnifiedStorage="Almacenamiento unificado";
a.LBL_VM_URL="Url";
a.LBL_VM_VolumeName="Nombre del volumen";
a.LBL_VM_VolumePrefix="Prefijo de volumen";
a.LBL_VM_VolumeRootPath="Ruta ra\u00edz del volumen";
a.LBL_VM_VolumeType="Tipo de volumen";
a.LBL_VM_VolumeTypeCeph="Ceph";
a.LBL_VM_VolumeTypeCustomS3="Custom S3";
a.LBL_VM_VolumeTypeEMC="EMC";
a.LBL_VM_VolumeTypeInternal="Interno";
a.LBL_VM_VolumeTypeNASG="NetApp StorageGrid";
a.LBL_VM_VolumeTypeOpenIO="OpenIO";
a.LBL_VM_VolumeTypeS3="Amazon S3";
a.LBL_VM_VolumeTypeScality="Scality";
a.Label_VM_CurrentSecMessageVolume="Volumen actual de {0} secundarios:";
a.Label_VM_CurrentpriMessageVolume="Volumen actual de {0} principales:";
a.MoveOlderThen="Mover elementos m\u00e1s antiguos de:";
a.OptIncl_Junk="Incluir la carpeta Spam";
a.OptIncl_Trash="Incluir la Papelera";
a.Options4Hsm="Opciones:";
a.PoliciesGrpTitle="Pol\u00edticas de gesti\u00f3n de almacenamiento";
a.PolicyActive="Activa";
a.PolicyItemsToMove="Elementos a mover";
a.PolicyLastExecuted="\u00faltima ejecuci\u00f3n";
a.PolicyOlderThan="M\u00e1s antiguos que";
a.PolicyString="Cadena de pol\u00edtica:";
a.StartPolicyConfirmMessage="\u00bfEst\u00e1 seguro de que desea ejecutar las pol\u00edticas de administraci\u00f3n de almacenamiento?";
a.StartPolicyConfirmTitle="Ejecutar sesi\u00f3n";
a.TABT_CephBucketPage="Nuevo dep\u00f3sito de Ceph";
a.TABT_CephVolumePage="Volumen compatible con Ceph";
a.TABT_CustomS3BucketPage="Nuevo dep\u00f3sito de Custom S3";
a.TABT_CustomS3VolumePage="Volumen compatible con Custom S3";
a.TABT_EMCBucketPage="Nuevo dep\u00f3sito de EMC";
a.TABT_EMCVolumePage="Volumen compatible con EMC";
a.TABT_InternalVolumePage="Volumen interno";
a.TABT_NetAppStorageGridBucketPage="Nuevo dep\u00f3sito StorageGrid de NetApp";
a.TABT_NetAppStorageGridVolumePage="Volumen de red de almacenamiento de NetApp";
a.TABT_OpenIOVolumePage="Volumen compatible con OpenIO";
a.TABT_S3BucketPage="Nuevo cubo S3";
a.TABT_S3VolumePage="Volumen compatible con Amazon S3";
a.TABT_ScalityBucketPage="Nuevo dep\u00f3sito de Scality";
a.TABT_ScalityVolumePage="Volumen compatible con Scality";
a.TABT_VolumeTypePage="Tipo de volumen";
a.UI_Comp_configHSMTab="Vista de configuraci\u00f3n general, p\u00e1gina de SM";
a.UI_Comp_serverHSMTab="Vista de clase de servicio, p\u00e1gina de SM";
a.VM_Error_InvalidBucket="El cubo no es v\u00e1lido";
a.VM_Error_RepeatedBucketName="El cubo con ese nombre ya existe";
a.VM_Error_InvalidStoreManagerPath="Proporcione una ruta de administrador de tienda personalizada v\u00e1lida";
a.VM_Error_InvalidVolumeName="El nombre del volumen solo puede contener caracteres alfanum\u00e9ricos, _ (guion bajo), - (guion) y . (per\u00edodo)";
a.VM_Error_InvalidBeginVolumeName="El nombre del volumen debe comenzar con una letra o un n\u00famero";
a.VM_Error_InvalidVolumePrefix='La ruta debe comenzar con / y no puede contener otros caracteres especiales excepto "-", "." y "/"';
a.VM_Error_RequiredVolumeName="Ingrese el nombre del volumen";
a.VM_Error_RequiredVolumePrefix="Ingrese el prefijo de volumen";
a.VM_HSM_AbortHsm="Cancelar sesi\u00f3n de SM";
a.VM_HSM_Aborted="Cancelado";
a.VM_HSM_EnableScheduleHsm="Habilitar la programaci\u00f3n de sesiones";
a.VM_HSM_ErrorMsg="Algo sali\u00f3 mal, por favor inicie una nueva sesi\u00f3n";
a.VM_HSM_Idle="Inactivo";
a.VM_HSM_LastEnd="Sesi\u00f3n de SM finalizada:";
a.VM_HSM_LastStart="Sesi\u00f3n de SM iniciada:";
a.VM_HSM_ManageHsm="Administrar sesi\u00f3n SM";
a.VM_HSM_NoSession="No hay sesi\u00f3n en curso";
a.VM_HSM_PrimaryMsg="Datos principales";
a.VM_HSM_Refresh="Actualizar estado de SM";
a.VM_HSM_Running="En ejecuci\u00f3n";
a.VM_HSM_ScheduleHsm="Programaci\u00f3n de sesiones SM";
a.VM_HSM_ScheduleHsmStartTime="Programar sesi\u00f3n para";
a.VM_HSM_SecMsg="Datos secundarios";
a.VM_HSM_ServerVolGrpTitle="SM";
a.VM_HSM_StartHsm="Iniciar sesi\u00f3n de SM";
a.VM_HSM_Status="Estado de la sesi\u00f3n de SM:";
a.VM_HSM_Threshold="Umbral de antig\u00fcedad del mensaje para SM:";
a.VM_Info_BucketConnectionSuccessful="La conexi\u00f3n del bucket se realiz\u00f3 correctamente.";
a.VM_S3CustomStoreManagerHelpButton="Haga clic en este icono para ver la documentaci\u00f3n de Zimbra sobre el uso de Custom Store Manager.";
a.VM_S3IntelligentTieringHelpButton="Haga clic en este \u00edcono para obtener la documentaci\u00f3n oficial de AWS sobre la organizaci\u00f3n inteligente en niveles.";
a.VM_S3UnifiedStorageButton="Haga clic en este icono para ver la documentaci\u00c3\u00b3n de Zimbra sobre el uso del almacenamiento unificado.";
a.VM_VolumeName="Nombre del volumen";
a.VM_VolumeRootPath="Ruta de volumen o prefijo S3";
a.VM_VolumeType="Tipo de volumen";
a.VM_VolumeTypeCeph="Ceph";
a.VM_VolumeTypeInternal="Interno";
a.VM_VolumeTypeS3="s3";
a.VM_VolumeTypeSelectTitle="Seleccione el tipo de volumen que le gustar\u00eda crear.";
a.VM_HSM_AbortingSession="Cancelando la sesi\u00f3n";
delete a;
if(!window.com_zimbra_license){
window.com_zimbra_license={}
}
a=window.com_zimbra_license;
a.label="License Manager";
a.description="License Management Admin Extension";
a.LI_ACCOUNTS_USED="( {0} accounts have been used ) ";
a.LI_ACCOUNT_COUNTING="( User count has not been finished )";
a.LI_ACCOUNT_COUNT_ERROR="( Can\u2019t count number of existing users )";
a.LIW_title="License Installation Wizard";
a.LIW_TABT_upload="License File Upload";
a.LIW_uploadstatus_title="License File Upload Status";
a.LIW_uploadTitle="Please select the license file :";
a.LIW_uLicenseInfo_title="Your license file is uploaded successfully. ";
a.LIW_uLicenseConfirmation="To install the license file, please click Install button. Otherwise, click Cancel and your license file will not be installed.";
a.LI_INSTALL_STATUS_0="<br />Your license file is installed successfully. ";
a.LI_INSTALL_STATUS_1="Your license file is not installed due to the error";
a.LI_INFO_TITLE="<h2>Current License Information</h2>";
a.LIW_ERROR_0="No installLicenseResponse was received.";
a.LIW_INSTALL_BUTTON_text="Install";
a.LI_UNLIMITED="unlimited";
a.LI_NOLICENSE="There is no valid license installed.";
a.LI_GETLICENSE_ERROR_MSG="Can\u2019t get the valid license information from server. To install a new license, go to Global Settings -> License -> Update License";
a.UploadLicenseErrorMsg="Upload status {0}: failed to upload the license file at this moment.";
a.ErrorTryAgain="<br />Please correct any errors and retry.";
a.consoleLicenseExpired="Your Zimbra Network {0} license expired {1} days ago";
a.licenseWillExpire="Your Zimbra Network {0} license will expire in {1} days";
a.licenseLoseSupport="Your Zimbra Network support expired {0} days ago";
a.licenseExpirationDate="Your {0} license expiration date is {1}";
a.licenseWillLoseSupport="Your Zimbra Network support will expire in {0} days";
a.licenseNotYetValid="Your ZCS license is not yet valid.";
a.licenseTrial="trial";
a.licenseActivateInstrucution='Please go to GlobalSettings -> License and click "Activate License" button to activate your license. ';
a.licenseNotYetActivated="Your ZCS license is not yet activated. ";
a.licenseFileNameError="Invalid file name. Use browse button to select a valid license file.";
a.ERROR_LICENSE_NOT_YET_VALID="Your ZCS license is not yet valid. <br />The current server time is {0}. <br /> Installed ZCS license is valid from {1} .";
a.NAD_Tab_License="License";
a.LB_company_name="Company name:";
a.LB_license_type="License type:";
a.LB_license_id="License ID:";
a.LB_issue_date="Issue date:";
a.LB_effective_date="Effective date:";
a.LB_expiration_date="Expiration date:";
a.LB_support_end_date="Support end date:";
a.LB_account_limit="Accounts limit:";
a.LB_mapi_limit="MAPI accounts limit:";
a.LB_mobile_limit="Mobile accounts limit:";
a.LB_archiving_limit="Archiving accounts limit:";
a.LB_attachment_limit="Attachment indexing accounts limit:";
a.LB_smime_limit="SMIME accounts limit:";
a.LB_voice_limit="Voice accounts limit:";
a.LB_activation_id="Activation ID:";
a.LB_activation_fingerprint="Activation fingerprint:";
a.LB_activation_last_update="Activation last update:";
a.LB_activation_version="Product version:";
a.UI_Comp_configLicenseTab="Global Settings View, License Page";
a.TBB_UpdateLicense="Update License";
a.ALTBB_UpdateLicense_tt="Update the license using the license key installation wizard";
a.TBB_ActivateLicense="Activate License";
a.ALTBB_ActivateLicense_tt="Activate the currently installed license";
a.BUSY_ACTIVATE_LICENSE="Activating the license ...";
a.TBB_ManualActivation="Manually Activate License";
a.ALTBB_ManualActivate_tt="Manually activate the license by uploading the activation file";
a.activationsucceed="Your license is successfully activated.";
a.license_not_activated='Your license is not yet activated. Please click the "Activate License" button in the toolbar to activate your license.';
a.LAW_title="License Activation ";
a.LAW_TABT_upload="Activation File Upload";
a.LAW_uploadTitle="Please select the activation file:";
a.LAW_activate="Upload and Activate";
a.LAW_instructions="To manually activate your ZCS license, please follow the instructions below: <br /> Step 1) Login the Zimbra support portal and click ZCS License. <br />Step 2) Submit your license ID and fingerprint, then you will be prompted to save an activation file locally.<br />Step 3) Upload your saved activation file and activate the license from this dialog. <br />";
a.LAW_no_license="No installed license found.";
a.activationFileNameError="Invalid file name. Use browse button to select a valid activation file.";
a.UploadActivationErrorMsg="Upload status {0}: failed to upload the activation file at this moment.";
a.LBL_HomeManageLicense="Manage Licenses...";
a.LBL_HomeInstallLicense="Install Licenses...";
delete a;
if(!window.com_zimbra_license){
window.com_zimbra_license={}
}
a=window.com_zimbra_license;
a.label="Gestor de licencias";
a.description="Extensi\u00f3n de administraci\u00f3n de la gesti\u00f3n de licencias";
a.LI_ACCOUNTS_USED="( se han utilizado {0} cuentas) ";
a.LI_ACCOUNT_COUNTING="(El recuento de usuarios no ha finalizado)";
a.LI_ACCOUNT_COUNT_ERROR="(No se puede realizar el recuento de usuarios)";
a.LIW_title="Asistente de instalaci\u00f3n de licencia";
a.LIW_TABT_upload="Carga del archivo de licencia";
a.LIW_uploadstatus_title="Estado de la carga del archivo de licencia";
a.LIW_uploadTitle="Selecciona el archivo de licencia:";
a.LIW_uLicenseInfo_title="El archivo de licencia se ha cargado satisfactoriamente. ";
a.LIW_uLicenseConfirmation="Para instalar el archivo de licencia, haz clic en el bot\u00f3n Instalar. De lo contrario, haz clic en Cancelar y no se instalar\u00e1 el archivo de licencia.";
a.LI_INSTALL_STATUS_0="<br />El archivo de licencia se ha instalado correctamente. ";
a.LI_INSTALL_STATUS_1="No se ha instalado el archivo de licencia debido a un error";
a.LI_INFO_TITLE="<h2>Informaci\u00f3n de licencia actual</h2>";
a.LIW_ERROR_0="No se recibi\u00f3 la cadena installLicenseResponse.";
a.LIW_INSTALL_BUTTON_text="Instalar";
a.LI_UNLIMITED="sin l\u00edmite";
a.LI_NOLICENSE="No hay una licencia v\u00e1lida instalada.";
a.LI_GETLICENSE_ERROR_MSG="No es posible obtener la informaci\u00f3n de licencia v\u00e1lida del servidor. Para obtener una nueva licencia, ve a Configuraci\u00f3n general -> Licencia -> Actualizar licencia";
a.UploadLicenseErrorMsg="Estado de la carga {0}: no se ha podido cargar el archivo de licencia en este momento.";
a.ErrorTryAgain="<br />Por favor, corrige cualquier error e int\u00e9ntalo de nuevo.";
a.consoleLicenseExpired="Tu licencia {0} de la red Zimbra caduc\u00f3 hace {1} d\u00edas";
a.licenseWillExpire="Tu licencia {0} de la Red Zimbra caducar\u00e1 en {1} d\u00edas";
a.licenseLoseSupport="Tu soporte de la red Zimbra Network caduc\u00f3 hace {0} d\u00edas";
a.licenseExpirationDate="La fecha de vencimiento de la licencia {0} es {1}";
a.licenseWillLoseSupport="Tu soporte de la red Zimbra Network caducar\u00e1 en {0} d\u00edas";
a.licenseNotYetValid="Tu licencia de ZCS a\u00fan no es v\u00e1lida.";
a.licenseTrial="prueba";
a.licenseActivateInstrucution='Dir\u00edgete a GlobalSettings -> Licencia y haz clic en el bot\u00f3n "Activar licencia" para activar tu licencia. ';
a.licenseNotYetActivated="Tu licencia de ZCS a\u00fan no est\u00e1 activada. ";
a.licenseFileNameError="Nombre de archivo no v\u00e1lido. Utiliza el bot\u00f3n Examinar para seleccionar un archivo de licencia v\u00e1lido.";
a.ERROR_LICENSE_NOT_YET_VALID="Tu licencia de ZCS a\u00fan no es v\u00e1lida. <br />Actualmente, son las {0}en el servidor. <br /> La licencia de ZCS instalada ser\u00e1 v\u00e1lida a partir de las {1}.";
a.NAD_Tab_License="Licencia";
a.LB_company_name="Nombre de empresa:";
a.LB_license_type="Tipo de licencia:";
a.LB_license_id="ID de licencia:";
a.LB_issue_date="Fecha de expedici\u00f3n:";
a.LB_effective_date="Fecha de entrada en vigor:";
a.LB_expiration_date="Fecha de vencimiento:";
a.LB_support_end_date="Fecha de finalizaci\u00f3n del soporte:";
a.LB_account_limit="L\u00edmite de cuentas:";
a.LB_mapi_limit="L\u00edmite de cuentas MAPI:";
a.LB_mobile_limit="L\u00edmite de cuentas para m\u00f3viles:";
a.LB_archiving_limit="L\u00edmite de cuentas de archivado:";
a.LB_attachment_limit="L\u00edmite de cuentas de indizado de archivos adjuntos:";
a.LB_smime_limit="L\u00edmite de cuentas SMIME:";
a.LB_voice_limit="L\u00edmite de cuentas de voz:";
a.LB_activation_id="ID de activaci\u00f3n:";
a.LB_activation_fingerprint="Huella dactilar de activaci\u00f3n:";
a.LB_activation_last_update="\u00daltima actualizaci\u00f3n de la activaci\u00f3n:";
a.LB_activation_version="Versi\u00f3n del producto:";
a.UI_Comp_configLicenseTab="Vista de configuraci\u00f3n general, p\u00e1gina de licencia";
a.TBB_UpdateLicense="Actualizar licencia";
a.ALTBB_UpdateLicense_tt="Actualizar la licencia utilizando el asistente de instalaci\u00f3n de la clave de licencia";
a.TBB_ActivateLicense="Activar licencia";
a.ALTBB_ActivateLicense_tt="Activar la licencia actualmente instalada";
a.BUSY_ACTIVATE_LICENSE="Activando la licencia ...";
a.TBB_ManualActivation="Activar la licencia manualmente";
a.ALTBB_ManualActivate_tt="Carga el archivo de activaci\u00f3n para activar manualmente la licencia";
a.activationsucceed="La licencia se ha activado correctamente.";
a.license_not_activated='Tu licencia a\u00fan no est\u00e1 activada. Haz clic en el bot\u00f3n "Activar licencia" en la barra de herramientas para activar tu licencia.';
a.LAW_title="Activaci\u00f3n de la licencia ";
a.LAW_TABT_upload="Carga del archivo de activaci\u00f3n";
a.LAW_uploadTitle="Selecciona el archivo de activaci\u00f3n:";
a.LAW_activate="Cargar y activar";
a.LAW_instructions="Para activar manualmente la licencia de ZCS, sigue las instrucciones que aparecen a continuaci\u00f3n: <br /> Paso 1) Inicia sesi\u00f3n en el portal de soporte de Zimbra y haz clic en la licencia de ZCS. <br />Paso 2) Introduce tu ID de licencia y huella digital y, a continuaci\u00f3n, se te solicitar\u00e1 que guardes un archivo de activaci\u00f3n de forma local.<br />Paso 3) Carga el archivo de activaci\u00f3n guardado y activa la licencia desde este di\u00e1logo. <br />";
a.LAW_no_license="No se ha encontrado ninguna licencia instalada.";
a.activationFileNameError="Nombre de archivo no v\u00e1lido. Utiliza el bot\u00f3n Examinar para seleccionar un archivo de activaci\u00f3n v\u00e1lido.";
a.UploadActivationErrorMsg="Estado de la carga {0}: no se ha podido cargar el archivo de activaci\u00f3n en estos momentos.";
a.LBL_HomeManageLicense="Administrar licencias...";
a.LBL_HomeInstallLicense="Instalar licencias...";
delete a;
if(!window.com_zimbra_mailarchive){
window.com_zimbra_mailarchive={}
}
a=window.com_zimbra_mailarchive;
a.label="Archive";
a.description="One button click to move items to an archive folder for those who like a tidy Inbox.";
a.archived="Archived";
a.archivedFolderCreated="\u2018Archive\u2019 folder Created";
a.couldNotCreateArchivedFolder="Could not create \u2018Archive\u2019 folder";
a.archiveZimlet_archiveFolderNotFound="Could not find \u2018Archive\u2019 folder";
a.archiveZimletPrefsSaved="Archive folder preferences saved";
a.archivePrefsTitle="Archive Preferences";
a.archiveButtonToolTip="Move selected item(s) to Archive Folder";
a.archiveHideDeleteButton="Delete Button";
a.archiveHide="Hide";
a.archiveShow="Show";
a.archiveFolderPrefLabel="Archive Folder";
a.archiveFolderBrowse="Browse...";
a.archiveMustChooseFolder="You must choose an archive folder";
a.archiveInvalidFolder="Invalid archive folder chosen";
a.preferences="Preferences";
a.sendAndArchiveButton="Send & Archive";
a.sendAndArchiveToolTip="Send message and move replied-to message to Archive Folder";
a.sendAndArchiveToolTipConv="Send message and move conversation to Archive Folder";
a.sendAndArchiveLabel="Send and Archive";
delete a;
if(!window.com_zimbra_mailarchive){
window.com_zimbra_mailarchive={}
}
a=window.com_zimbra_mailarchive;
a.label="Archivo";
a.description="Clic de un solo bot\u00f3n para mover elementos a una carpeta de archivo para aquellos que desean tener una bandeja de entrada ordenada.";
a.archived="Archivado";
a.archivedFolderCreated="Carpeta \u201cArchivo\u201d creada";
a.couldNotCreateArchivedFolder="Imposible crear carpeta \u201cArchivo\u201d";
a.archiveZimlet_archiveFolderNotFound="Imposible encontrar carpeta \u201cArchivo\u201d";
a.archiveZimletPrefsSaved="Preferencias de la carpeta \u201cArchivo\u201d guardadas";
a.archivePrefsTitle="Preferencias de archivo";
a.archiveButtonToolTip="Mover elementos seleccionados a la carpeta Archivo";
a.archiveHideDeleteButton="Bot\u00f3n Eliminar";
a.archiveHide="Ocultar";
a.archiveShow="Mostrar";
a.archiveFolderPrefLabel="Carpeta \u201cArchivo\u201d";
a.archiveFolderBrowse="Examinar...";
a.archiveMustChooseFolder="Debes seleccionar una carpeta de archivo";
a.archiveInvalidFolder="Carpeta de archivo elegido no v\u00e1lida";
a.preferences="Preferencias";
a.sendAndArchiveButton="Enviar y archivar";
a.sendAndArchiveToolTip="Enviar mensaje y mover mensaje respondido a la carpeta Archivo";
a.sendAndArchiveToolTipConv="Enviar mensaje y mover conversaci\u00f3n a la carpeta Archivo";
a.sendAndArchiveLabel="Enviar y archivar";
delete a;
if(!window.com_zimbra_mobilesync){
window.com_zimbra_mobilesync={}
}
a=window.com_zimbra_mobilesync;
a.label="Zimbra Mobile";
a.description="Mobile Sync Admin Extension";
a.BUSY_GETTING_SYNC_DEVICES="Getting synced devices ...";
a.BUSY_QUARANTINE_SYNC_DEVICES="Suspending synced devices ...";
a.BUSY_RESUMING_SYNC_DEVICES="Allowing synced devices to resume...";
a.BUSY_REMOVING_SYNC_DEVICES="Removing synced devices ...";
a.BUSY_RESETING_SYNC_DEVICES="Reseting synced devices ...";
a.BUSY_WIPING_SYNC_DEVICES="Wiping synced devices ...";
a.TABT_Mobile="Mobile";
a.MB_Registered_Devices="Registered Devices";
a.MB_Email_Address_col="Email Address";
a.MB_Last_Login_col="Last Login";
a.MB_Device_col="Device";
a.MB_Device_Id_col="Device ID";
a.MB_Status_col="Status";
a.MB_Eas_col="EAS";
a.MB_But_Suspend="Suspend Sync";
a.MB_But_Resume="Resume Sync";
a.MB_But_Wipe="Wipe Device";
a.MB_But_Wipe_Cancel="Cancel Wipe";
a.MB_But_Remove_Account="Remove Account";
a.MB_But_Remove_Account_Cancel="Cancel Remove Account";
a.MB_But_Block="Block";
a.MB_Waiting="Waiting for device";
a.MB_Active="Active";
a.MB_Suspended="Suspended";
a.MB_Wipe_ACK="Wipe pending";
a.MB_Wipe_Comp="Wipe completed";
a.MB_Blocked="Blocked";
a.MB_Remove_Account_ACK="Remove account pending";
a.MB_Remove_Account_Comp="Account removed";
a.BUSY_BLOCKING_SYNC_DEVICES="Blocking synced devices ...";
a.BUSY_CANCELLING_WIPE="Canceling wipe operation ...";
a.MB_But_Remove_From_List="Remove From List";
a.BUSY_REMOVING_SYNC_ACCOUNT="Removing synced account from device ...";
a.BUSY_CANCELLING_ACCOUNT_WIPE="Canceling Account wipe operation ...";
a.zimbraFeatureMobileSyncEnable="Enable Mobile Sync";
a.zimbraFeatureMobilePolicyEnabled="Enable Mobile Policy";
a.zimbraMobilePolicyAllowPartialProvisioning="Allow partial policy enforcement on device";
a.mobileDevices="Mobile Devices";
a.deviceDetail="Device Detail";
a.headerDevice="Device";
a.headerDeviceID="Device ID";
a.headerStatus="Status";
a.headerProtocalVersion="Protocol version";
a.headerProvisionable="Provisionable";
a.headerDeviceWidth="Device";
a.headerDeviceIDWidth="250";
a.headerStatusWidth="150";
a.headerProtocalVersionWidth="100";
a.headerProvisionableWidth="100";
a.msgNoDeviceDetected="No devices detected";
a.msgChangeNote="Note: Changes to mobile devices are save immediately.";
a.msgMobileDeviceWipeConfirm="Are you sure you want to wipe the contents of your lost or stolen device? (This device will be restored to the factory default settings.)";
a.mobileStatusNeedProvision="Needs provisioning";
a.mobileStatusOk="OK";
a.mobileStatusSuspended="Suspended";
a.mobileStatusWipe="Remote wipe requested";
a.mobileStatusWipeComplete="Remote wipe completed";
a.lbRemoveFromList="Remove from List";
a.lbSuspendSync="Suspend Sync";
a.lbResumeSync="Resume Sync";
a.lbWipeData="Wipe All Data from Device";
a.lbCancelWipe="Cancel Pending Wipe";
a.mobileDevice="Device";
a.mobileUserAgent="User agent";
a.mobileDeviceId="Device ID";
a.mobileProtocolVersion="Protocol version";
a.mobileProvisionable="Provisionable";
a.status="Status";
a.mobileFirstReqReceived="Device registration";
a.mobileLastPolicyUpdate="Last policy update";
a.mobileRemoteWipeReq="Remote wipe requested";
a.mobileRemoteWipeAck="Remote wipe confirmed";
a.mobileBusyMessage="Loading data from server";
a.generalSetting="General";
a.allowNonProvionableDevices="Allow non-provisionable devices:";
a.policyRefreshInterval="Refresh Interval (hours):";
a.passwordSetting="Password Settings";
a.requirePassword="Require password:";
a.minPasswordLen="Minimum password length:";
a.requireAlphaNumericPassword="Require alphanumeric password:";
a.minComplexChar="Minimum complex characters required:";
a.allowSimplePassword="Allow simple password:";
a.enablePasswordRecovery="Enable password recovery:";
a.requireStorageEncryption="Require storage card encryption:";
a.requireDeviceEncryption="Require device encryption:";
a.passwordMaxInactivityTime="Password re-entry required after inactivity (min):";
a.maxDevicePasswordFailedAttempts="Failed attempts allowed:";
a.devicePasswordExpiration="Expiration (days):";
a.passwordReuseHistory="Passwords stored to prevent reuse:";
a.smimeSetting="S/MIME Settings";
a.enableSMIMEPublicKeyEncrptAndSign="Enable S/MIME public key encryption and signing:";
a.requireSendSignedMsg="Require device to send signed messages:";
a.requireSMIMEAlgorithm="Require S/MIME algorithm for signing:";
a.requireDeviceSendEncryptedMsg="Require device to send encrypted messages:";
a.requireSMIMEAlgorithmForEncrypt="Require S/MIME algorithm for encrypting:";
a.algorithmNegotiation="Algorithm negotiation:";
a.allowSMIMESoftwareCert="Allow S/MIME software certificates:";
a.syncSettings="Sync Settings";
a.maxCalendarAgeFilter="Past calendar items sync\u2019d:";
a.maxEmailAgeFilter="Past email items sync\u2019d:";
a.maxEmailBodySize="Limit plain text message size (KB):";
a.allowManualSyncWhenRoaming="Allow direct push while roaming:";
a.allowHTMLEmail="Allow HTML formatted messages:";
a.maxHTMLEmailBodySize="Limit HTML message size (KB):";
a.deviceSetting="Device Settings";
a.allowStorageCard="Allow removable storage:";
a.allowCamera="Allow camera:";
a.allowWifi="Allow Wi-Fi:";
a.allowInfrared="Allow Infrared:";
a.allowShare="Allow sharing:";
a.allowRemoteDesktop="Allow remote desktop:";
a.allowDesktopSync="Allow desktop sync:";
a.allowBluetooth="Allow bluetooth:";
a.deviceApps="Device Applications";
a.allowBrowser="Allow browser:";
a.allowConsumerMail="Allow consumer mail:";
a.allowPOPIMAPMail="Allow POP or IMAP mail:";
a.allowTextMsg="Allow text messaging:";
a.allowUnsignedApp="Allow unsigned applications:";
a.allowUnsignedPkg="Allow unsigned install packages:";
a.approvedAppName="Application Name:";
a.approvedAppHash="File Hash:";
a.blockedAppName="Application Name:";
a.addApprovedAppDlgTitle="Add Approved Application";
a.addBlockedAppDlgTitle="Add Blocked Application";
a.approvedApp="Approved Applications";
a.blockedApp="Blocked Applications";
a.addApp="Add Application";
a.removeApp="Remove Application";
a.passAll="Past All";
a.oneDay="One Day";
a.threeDay="Three Days";
a.oneWeek="One Week";
a.twoWeek="Two Weeks";
a.oneMonth="One Month";
a.threeMonth="Three Months";
a.sixMonth="Six Months";
a.blockNegotiation="Block Negotiation";
a.strongNegotiationOnly="Strong Algorithm Only";
a.allowAllNegotiation="Allow Any Algorithm";
a.bluetoothDisable="Disable";
a.bluetoothHandsFreeOnly="Hands-Free Only";
a.bluetoothAllow="Allow";
a.wipeWarningMessage="This action will return the device to default factory settings, wiping all accounts, media and other data. Are you sure you want to proceed?";
a.removeAccountWarningMessage="This action will remove the user's account from the device. Are you sure you want to proceed?";
a.removeAccountUnsupportedWarningMessage="Remove Account not supported for EAS versions below 16.1. Please click Remove from List instead.";
a.removeWarningMessage="This action will remove the device and account from the database. Are you sure you want to proceed?";
delete a;
if(!window.com_zimbra_mobilesync){
window.com_zimbra_mobilesync={}
}
a=window.com_zimbra_mobilesync;
a.label="Zimbra para m\u00f3viles";
a.description="Extensi\u00f3n de administraci\u00f3n de sincronizaci\u00f3n m\u00f3vil";
a.BUSY_GETTING_SYNC_DEVICES="Obteniendo dispositivos sincronizados ...";
a.BUSY_QUARANTINE_SYNC_DEVICES="Suspendiendo dispositivos sincronizados ...";
a.BUSY_REMOVING_SYNC_DEVICES="Eliminando dispositivos sincronizados ...";
a.BUSY_RESETING_SYNC_DEVICES="Reiniciando dispositivos sincronizados ...";
a.BUSY_RESUMING_SYNC_DEVICES="Permitiendo que los dispositivos sincronizados se reanuden ...";
a.BUSY_WIPING_SYNC_DEVICES="Limpiando dispositivos sincronizados ...";
a.MB_Active="activo";
a.MB_Blocked="Obstruido";
a.MB_But_Resume="Reanudar sincronizaci\u00f3n";
a.MB_But_Suspend="Suspender sincronizaci\u00f3n";
a.MB_But_Wipe="Limpiar dispositivo";
a.MB_Device_Id_col="ID del dispositivo";
a.MB_Device_col="Dispositivo";
a.MB_Eas_col="EAS";
a.MB_Email_Address_col="Direcci\u00f3n de correo electr\u00f3nico";
a.MB_Last_Login_col="\u00daltimo acceso";
a.MB_Registered_Devices="Dispositivos registrados";
a.MB_Status_col="Estado";
a.MB_Suspended="Suspendido";
a.MB_Wipe_ACK="Limpiar pendiente";
a.MB_Wipe_Comp="Limpiar completado";
a.TABT_Mobile="M\u00f3vil";
a.MB_But_Block="Bloquear";
a.MB_But_Wipe_Cancel="Cancelar limpieza";
a.MB_Waiting="Esperando por el dispositivo";
a.BUSY_BLOCKING_SYNC_DEVICES="Bloqueando dispositivos sincronizados ...";
a.BUSY_CANCELLING_WIPE="Cancelando la operaci\u00f3n de limpieza ...";
a.MB_But_Remove_From_List="Quitar de la lista";
a.MB_Remove_Account_ACK="Eliminar cuenta pendiente";
a.MB_Remove_Account_Comp="Cuenta eliminada";
a.MB_But_Remove_Account="Eliminar cuenta";
a.MB_But_Remove_Account_Cancel="Cancelar Quitar cuenta";
a.BUSY_REMOVING_SYNC_ACCOUNT="S\u00fcnkroonitud konto eemaldamine seadmest ...";
a.BUSY_CANCELLING_ACCOUNT_WIPE="Konto kustutamise toimingu t\u00fchistamine ...";
a.zimbraFeatureMobileSyncEnable="Habilitar sincronizaci\u00f3n m\u00f3vil";
a.zimbraFeatureMobilePolicyEnabled="Habilitar pol\u00edtica m\u00f3vil";
a.zimbraMobilePolicyAllowPartialProvisioning="Permitir la aplicaci\u00f3n de una pol\u00edtica parcial en el dispositivo";
a.mobileDevices="Dispositivos m\u00f3viles";
a.deviceDetail="Detalle del dispositivo";
a.headerDevice="Dispositivo";
a.headerDeviceID="ID del dispositivo";
a.headerStatus="Estado";
a.headerProtocalVersion="Versi\u00f3n de protocolo";
a.headerProvisionable="Con opci\u00f3n de aprovisionamiento";
a.headerDeviceWidth="Dispositivo";
a.headerDeviceIDWidth="250";
a.headerStatusWidth="150";
a.headerProtocalVersionWidth="100";
a.headerProvisionableWidth="100";
a.msgNoDeviceDetected="No se han detectado dispositivos";
a.msgChangeNote="Nota: los cambios en los dispositivos m\u00f3viles se guardan de inmediato.";
a.msgMobileDeviceWipeConfirm="\u00bfEst\u00e1s seguro de que quieres borrar el contenido del dispositivo perdido o robado? (La configuraci\u00f3n del dispositivo se restablecer\u00e1 con los par\u00e1metros predefinidos de f\u00e1brica).";
a.mobileStatusNeedProvision="Necesita aprovisionamiento";
a.mobileStatusOk="Aceptar";
a.mobileStatusSuspended="Suspendido";
a.mobileStatusWipe="Borrado remoto solicitado";
a.mobileStatusWipeComplete="Borrado remoto finalizado";
a.lbRemoveFromList="Eliminar de la lista";
a.lbSuspendSync="Detener sincronizaci\u00f3n";
a.lbResumeSync="Reanudar sincronizaci\u00f3n";
a.lbWipeData="Borrar todos los datos del dispositivo";
a.lbCancelWipe="Cancelar limpieza pendiente";
a.mobileDevice="Dispositivo";
a.mobileUserAgent="Agente de usuario";
a.mobileDeviceId="ID del dispositivo";
a.mobileProtocolVersion="Versi\u00f3n de protocolo";
a.mobileProvisionable="Con opci\u00f3n de aprovisionamiento";
a.status="Estado";
a.mobileFirstReqReceived="Registro del dispositivo";
a.mobileLastPolicyUpdate="\u00daltima actualizaci\u00f3n de la pol\u00edtica";
a.mobileRemoteWipeReq="Borrado remoto solicitado";
a.mobileRemoteWipeAck="Borrado remoto confirmado";
a.mobileBusyMessage="Cargando datos del servidor";
a.generalSetting="General";
a.allowNonProvionableDevices="Permitir dispositivos que no admiten aprovisionamiento:";
a.policyRefreshInterval="Actualizar intervalo (horas):";
a.passwordSetting="Configuraci\u00f3n de contrase\u00f1a";
a.requirePassword="Exigir contrase\u00f1a:";
a.minPasswordLen="Tama\u00f1o m\u00ednimo de la contrase\u00f1a:";
a.requireAlphaNumericPassword="Exigir contrase\u00f1a alfanum\u00e9rica:";
a.minComplexChar="Caracteres complejos m\u00ednimos obligatorios:";
a.allowSimplePassword="Permitir contrase\u00f1a simple:";
a.enablePasswordRecovery="Activar recuperaci\u00f3n de contrase\u00f1a:";
a.requireStorageEncryption="Solicitar cifrado de la tarjeta de almacenamiento:";
a.requireDeviceEncryption="Exigir cifrado del dispositivo:";
a.passwordMaxInactivityTime="Nueva entrada de contrase\u00f1a obligatoria tras inactividad (min):";
a.maxDevicePasswordFailedAttempts="Intentos con error permitidos:";
a.devicePasswordExpiration="Vencimiento (d\u00edas):";
a.passwordReuseHistory="Contrase\u00f1as almacenadas para evitar reutilizaci\u00f3n:";
a.smimeSetting="Configuraci\u00f3n de S/MIME";
a.enableSMIMEPublicKeyEncrptAndSign="Activar cifrado de clave p\u00fablica y firma S/MIME:";
a.requireSendSignedMsg="Exigir dispositivo para enviar mensajes firmados:";
a.requireSMIMEAlgorithm="Exigir algoritmo S/MIME para firma:";
a.requireDeviceSendEncryptedMsg="Exigir dispositivo para enviar mensajes cifrados:";
a.requireSMIMEAlgorithmForEncrypt="Exigir algoritmo S/MIME para cifrado:";
a.algorithmNegotiation="Negociaci\u00f3n de algoritmo:";
a.allowSMIMESoftwareCert="Permitir certificados de software S/MIME:";
a.syncSettings="Configuraci\u00f3n de sincronizaci\u00f3n";
a.maxCalendarAgeFilter="Elementos pasados de la agenda sincronizados:";
a.maxEmailAgeFilter="Elementos pasados de correo electr\u00f3nico sincronizados:";
a.maxEmailBodySize="Limitar tama\u00f1o de mensajes de texto sin formato (KB):";
a.allowManualSyncWhenRoaming="Permitir env\u00edo directo durante roaming:";
a.allowHTMLEmail="Permitir mensajes con formato HTML:";
a.maxHTMLEmailBodySize="Limitar tama\u00f1o de mensaje HTML (KB):";
a.deviceSetting="Configuraci\u00f3n de dispositivos";
a.allowStorageCard="Permitir almacenamiento extra\u00edble:";
a.allowCamera="Permitir c\u00e1mara:";
a.allowWifi="Permitir Wi-Fi:";
a.allowInfrared="Permitir infrarrojo:";
a.allowShare="Permitir elementos compartidos:";
a.allowRemoteDesktop="Permitir escritorio remoto:";
a.allowDesktopSync="Permitir sincronizaci\u00f3n de escritorio:";
a.allowBluetooth="Permitir Bluetooth:";
a.deviceApps="Aplicaciones del dispositivo";
a.allowBrowser="Permitir navegador:";
a.allowConsumerMail="Permitir correo del cliente:";
a.allowPOPIMAPMail="Permitir correo POP o IMAP:";
a.allowTextMsg="Permitir mensajes de texto:";
a.allowUnsignedApp="Permitir aplicaciones sin firmar:";
a.allowUnsignedPkg="Permitir paquetes de instalaci\u00f3n sin firmar:";
a.approvedAppName="Nombre de la aplicaci\u00f3n:";
a.approvedAppHash="Hash de archivo:";
a.blockedAppName="Nombre de la aplicaci\u00f3n:";
a.addApprovedAppDlgTitle="A\u00f1adir aplicaci\u00f3n aprobada";
a.addBlockedAppDlgTitle="A\u00f1adir aplicaci\u00f3n bloqueada";
a.approvedApp="Aplicaciones aprobadas";
a.blockedApp="Aplicaciones bloqueadas";
a.addApp="A\u00f1adir aplicaci\u00f3n";
a.removeApp="Eliminar aplicaci\u00f3n";
a.passAll="Pegar todo";
a.oneDay="Un d\u00eda";
a.threeDay="Tres d\u00edas";
a.oneWeek="Una semana";
a.twoWeek="Dos semanas";
a.oneMonth="Un mes";
a.threeMonth="Tres meses";
a.sixMonth="Seis meses";
a.blockNegotiation="Bloquear negociaci\u00f3n";
a.strongNegotiationOnly="Algoritmo seguro \u00fanicamente";
a.allowAllNegotiation="Permitir cualquier algoritmo";
a.bluetoothDisable="Desactivar";
a.bluetoothHandsFreeOnly="Manos libres \u00fanicamente";
a.bluetoothAllow="Permitir";
a.wipeWarningMessage="Esta acci\u00f3n devolver\u00ef\u00bf\u00bd el dispositivo a la configuraci\u00ef\u00bf\u00bdn predeterminada de f\u00ef\u00bf\u00bdbrica, borrando todas las cuentas, medios y otros datos. \u00ef\u00bf\u00bdEstas seguro que deseas continuar?";
a.removeAccountWarningMessage="Esta acci\u00f3n eliminar\u00ef\u00bf\u00bd la cuenta del usuario del dispositivo. \u00ef\u00bf\u00bdEstas seguro que deseas continuar?";
a.removeAccountUnsupportedWarningMessage="Eliminar cuenta no es compatible con versiones de EAS inferiores a 16.1. En su lugar, haga clic en Eliminar de la lista.";
a.removeWarningMessage="Esta acci\u00f3n eliminar\u00e1 el dispositivo y la cuenta de la base de datos. Estas seguro que deseas continuar?";
delete a;
if(!window.com_zimbra_phone){
window.com_zimbra_phone={}
}
a=window.com_zimbra_phone;
a.label="Phone";
a.description="Highlights phone numbers to enable Skype calls.";
a.search="Search";
a.addToContacts="Add To Contacts";
a.call="Call";
a.localPhoneRegEx="(\\+?1?)(-?\\s?\\)?\\.?)(\\(?)\\d{3}(-?\\s?\\)?\\.?)+\\d{3}(-?\\s?\\.?)\\d{4}";
a.countryCode="1";
delete a;
if(!window.com_zimbra_phone){
window.com_zimbra_phone={}
}
a=window.com_zimbra_phone;
a.label="Tel\u00e9fono";
a.description="Resalta los n\u00fameros de tel\u00e9fono para permitir las llamadas con Skype";
a.search="Buscar";
a.addToContacts="A\u00f1adir a contactos";
a.call="Llamada";
a.localPhoneRegEx="(\\+\\(34\\))?(-?\\s?\\)?\\.?)(\\(?)\\d{3}(-?\\s?\\)?\\.?)+\\d{2}(-?\\s?\\)?\\.?)+\\d{2}(-?\\s?\\)?\\.?)+\\d{2}";
a.countryCode="34";
delete a;
if(!window.com_zimbra_proxy_config){
window.com_zimbra_proxy_config={}
}
a=window.com_zimbra_proxy_config;
a.label="Proxy Configurator";
a.description="Zimbra Proxy Configuration Admin Extension";
a.OVT_Proxy="Proxy";
a.LBL_ProxyGeneralConfig="Advanced Proxy Configuration";
a.LBL_ProxyWorkerProcessNum="Worker processes number:";
a.LBL_ProxyWorkerConnectionNum="Max connection number per worker process:";
a.LBL_ProxyLogLevel="Proxy log level:";
a.LBL_ProxyUseSSLToUpstream="Proxy to upstream servers via SSL:";
a.LBL_ProxyAllowServerResolveRoute="Resolve upstream route address in ZCS:";
a.LBL_ProxyGenConfigPerVirtualHostname="Generate proxy configuration for each virtual host name:";
a.LBL_ProxyAdminIPAddresses="Proxy IP addresses where advanced authentication is allowed:";
a.LBL_ProxyWebProxyConfig="Web Proxy Configuration";
a.LBL_ProxyEnableWebProxy="Enable web proxy:";
a.LBL_ProxyDisableWebProxy="Disable web proxy:";
a.LBL_ProxyWebProxyMode="Web proxy mode:";
a.LBL_ProxyWebMode="Web mode:";
a.LBL_ProxyHttpProxyPort="Proxy HTTP port:";
a.LBL_ProxyHttpUpPort="Upstream HTTP port:";
a.LBL_ProxyHttpPort="HTTP port:";
a.LBL_ProxyHttpSSLProxyPort="Proxy HTTPS port:";
a.LBL_ProxyHttpSSLUpPort="Upstream HTTPS port:";
a.LBL_ProxyHttpSSLPort="HTTPS port:";
a.LBL_ProxyClientCertAuthMode="Proxy client certificate authentication node";
a.LBL_ProxyClientCertAuthPort="Proxy Client Certificate Authentication port number";
a.LBL_ProxyAdminEnabled="Enable admin console proxy:";
a.LBL_ProxyAdminProxyPort="Proxy admin console port:";
a.LBL_ProxyAdminUpPort="Upstream admin console port:";
a.LBL_ProxyAdminPort="Admin console port:";
a.LBL_ProxyMailProxyConfig="Mail Proxy Configuration";
a.LBL_ProxyEnableMailProxy="Enable mail proxy:";
a.LBL_ProxyDisableMailProxy="Disable mail proxy:";
a.LBL_ProxyAuthWaitTime="Time to wait when login fails(sec):";
a.LBL_ProxyImapProxyPort="Proxy IMAP port:";
a.LBL_ProxyImapUpPort="Upstream IMAP port:";
a.LBL_ProxyImapPort="IMAP port:";
a.LBL_ProxyPop3ProxyPort="Proxy POP3 port:";
a.LBL_ProxyPop3UpPort="Upstream POP3 port:";
a.LBL_ProxyPop3Port="POP3 port:";
a.LBL_ProxyImapSSLProxyPort="Proxy IMAPS port:";
a.LBL_ProxyImapSSLUpPort="Upstream IMAPS port:";
a.LBL_ProxyImapSSLPort="IMAPS port:";
a.LBL_ProxyPop3SSLProxyPort="Proxy POP3S port:";
a.LBL_ProxyPop3SSLUpPort="Upstream POP3S port:";
a.LBL_ProxyPop3SSLPort="POP3S port:";
a.LBL_ProxyImapEnablePlainAuth="Enable PLAIN authentication for IMAP:";
a.LBL_ProxyPop3EnablePlainAuth="Enable PLAIN authentication for POP3:";
a.LBL_ProxyImapEnableGssapiAuth="Enable GSSAPI authentication for IMAP:";
a.LBL_ProxyPop3EnableGssapiAuth="Enable GSSAPI authentication for POP3:";
a.LBL_ProxyImapStartTlsMode="IMAP clear text login mode:";
a.LBL_ProxyPop3StartTlsMode="POP3 clear text login mode:";
a.LBL_EnableImapCleartextLogin="Enable IMAP clear text login:";
a.LBL_EnablePop3CleartextLogin="Enable POP3 clear text login:";
a.LBL_ProxyStartTLSMode_OFF="clear text login only";
a.LBL_ProxyStartTLSMode_ON="both clear text and starttls";
a.LBL_ProxyStartTLSMode_ONLY="starttls only";
a.LBL_ProxySelectProxyServer="<b>Select Proxy Server</b>";
a.LBL_ProxySelectUpServer="<b>Select Upstream Servers</b>";
a.LBL_ProxySelectLTServer="<b>Select Lookup Target Servers</b>";
a.LBL_ProxyAllMailboxAsUp="Use all available mailbox servers as upstream";
a.LBL_ProxyAllMailboxAsLT="Use all available mailbox servers as lookup target";
a.LBL_ProxyLimitUp="Or limit the upstream servers to:";
a.LBL_ProxyLimitLT="Or limit the lookup target servers to:";
a.LBL_ProxySelectProxyServerToEnableInDetail="select the server where proxy will be enabled:";
a.LBL_ProxySelectProxyServerToDisableInDetail="select the server where proxy will be disabled:";
a.LBL_ProxyServerName="Server Name:";
a.MSG_ProxyEnableFinish="Please click <b>Finish</b> to save the configurations, then manually restart the servers to take effect.";
a.MSG_ProxyDisableFinish="Please click <b>Finish</b> to save the configurations, then manually restart the servers to take effect.";
a.LBL_EnableProxy="Enable Proxy";
a.LBL_DisableProxy="Disable Proxy";
a.LBL_Deploy="Deploy";
a.LBL_Undeploy="Undeploy";
a.LBL_EnableProxyWizTitle="Enable Proxy Wizard";
a.LBL_DisableProxyWizTitle="Disable Proxy Wizard";
a.LBL_ProxyWizardStepSelectServer="Servers Selection";
a.LBL_ProxyWizardStepWebProxy="Web Proxy";
a.LBL_ProxyWizardStepMailProxy="Mail Proxy";
a.LBL_ProxyWizardStepAdvanced="Advanced";
a.LBL_ProxyWizardStepFinish="Complete";
a.MSG_GenConfigPerVirtualHostname="Generating proxy configurations for different virtual host names is required if you want each virtual host name has distinctive configuration (e.g. SSL certificates or client certificate CA).";
a.MSG_ReverseProxyAdminIPAddress="Only the proxies whose IP addresses exist in the below list are allowed to handle GSSAPI and client certification authentication.";
a.MSG_NeedProxyInstalledAndEnabled="Proxy is not available for configuration unless it\u2019s installed and enabled in the current server.";
delete a;
if(!window.com_zimbra_proxy_config){
window.com_zimbra_proxy_config={}
}
a=window.com_zimbra_proxy_config;
a.label="Configurador de proxy";
a.description="Extensi\u00f3n de administraci\u00f3n de configuraci\u00f3n de proxy de Zimbra";
a.OVT_Proxy="Proxy";
a.LBL_ProxyGeneralConfig="Configuraci\u00f3n de proxy avanzada";
a.LBL_ProxyWorkerProcessNum="N\u00famero de procesos de trabajador:";
a.LBL_ProxyWorkerConnectionNum="N\u00famero de conexiones m\u00e1ximo por proceso de trabajador:";
a.LBL_ProxyLogLevel="Nivel de registro de proxy:";
a.LBL_ProxyUseSSLToUpstream="Proxy a servidores upstream a trav\u00e9s de SSL:";
a.LBL_ProxyAllowServerResolveRoute="Resolver direcci\u00f3n de ruta upstream en ZCS:";
a.LBL_ProxyGenConfigPerVirtualHostname="Generar configuraci\u00f3n de proxy para cada nombre de host virtual:";
a.LBL_ProxyAdminIPAddresses="Direcciones IP de proxy cuando se permita la autenticaci\u00f3n avanzada:";
a.LBL_ProxyWebProxyConfig="Configuraci\u00f3n de proxy web";
a.LBL_ProxyEnableWebProxy="Activar proxy web:";
a.LBL_ProxyDisableWebProxy="Desactivar proxy web:";
a.LBL_ProxyWebProxyMode="Modo de proxy web:";
a.LBL_ProxyWebMode="Modo web:";
a.LBL_ProxyHttpProxyPort="Puerto HTTP proxy:";
a.LBL_ProxyHttpUpPort="Puerto HTTP upstream:";
a.LBL_ProxyHttpPort="Puerto HTTP:";
a.LBL_ProxyHttpSSLProxyPort="Puerto HTTPS proxy:";
a.LBL_ProxyHttpSSLUpPort="Puerto HTTPS upstream:";
a.LBL_ProxyHttpSSLPort="Puerto HTTPS:";
a.LBL_ProxyClientCertAuthMode="Nodo de autenticaci\u00f3n de certificados de cliente proxy";
a.LBL_ProxyClientCertAuthPort="N\u00famero de puerto de autenticaci\u00f3n de certificados de cliente proxy";
a.LBL_ProxyAdminEnabled="Activar proxy de la consola de administrador:";
a.LBL_ProxyAdminProxyPort="Puerto de la consola de administrador proxy:";
a.LBL_ProxyAdminUpPort="Puerto de la consola de administrador upstream:";
a.LBL_ProxyAdminPort="Puerto de la consola de administrador:";
a.LBL_ProxyMailProxyConfig="Configuraci\u00f3n de proxy de correo";
a.LBL_ProxyEnableMailProxy="Activar proxy de correo:";
a.LBL_ProxyDisableMailProxy="Desactivar proxy de correo:";
a.LBL_ProxyAuthWaitTime="Tiempo de espera cuando se produce un fallo de inicio de sesi\u00f3n (s):";
a.LBL_ProxyImapProxyPort="Puerto IMAP proxy:";
a.LBL_ProxyImapUpPort="Puerto IMAP upstream:";
a.LBL_ProxyImapPort="Puerto IMAP:";
a.LBL_ProxyPop3ProxyPort="Puerto POP3 proxy:";
a.LBL_ProxyPop3UpPort="Puerto POP3 upstream:";
a.LBL_ProxyPop3Port="Puerto POP3:";
a.LBL_ProxyImapSSLProxyPort="Puerto IMAPS proxy:";
a.LBL_ProxyImapSSLUpPort="Puerto IMAPS upstream:";
a.LBL_ProxyImapSSLPort="Puerto IMAPS:";
a.LBL_ProxyPop3SSLProxyPort="Puerto POP3S proxy:";
a.LBL_ProxyPop3SSLUpPort="Puerto POP3S upstream:";
a.LBL_ProxyPop3SSLPort="Puerto POP3S:";
a.LBL_ProxyImapEnablePlainAuth="Activar la autenticaci\u00f3n PLAIN para IMAP:";
a.LBL_ProxyPop3EnablePlainAuth="Activar la autenticaci\u00f3n PLAIN para POP3:";
a.LBL_ProxyImapEnableGssapiAuth="Activar la autenticaci\u00f3n GSSAPI para IMAP:";
a.LBL_ProxyPop3EnableGssapiAuth="Activar la autenticaci\u00f3n GSSAPI para POP3:";
a.LBL_ProxyImapStartTlsMode="Modo de inicio de sesi\u00f3n de texto no cifrado IMAP:";
a.LBL_ProxyPop3StartTlsMode="Modo de inicio de sesi\u00f3n de texto no cifrado POP3:";
a.LBL_EnableImapCleartextLogin="Activar inicio de sesi\u00f3n de texto no cifrado IMAP:";
a.LBL_EnablePop3CleartextLogin="Activar inicio de sesi\u00f3n de texto no cifrado POP3:";
a.LBL_ProxyStartTLSMode_OFF="solamente inicio de sesi\u00f3n de texto no cifrado";
a.LBL_ProxyStartTLSMode_ON="texto no cifrado y starttls";
a.LBL_ProxyStartTLSMode_ONLY="solamente starttls";
a.LBL_ProxySelectProxyServer="<b>Seleccionar servidor proxy</b>";
a.LBL_ProxySelectUpServer="<b>Seleccionar servidores upstream</b>";
a.LBL_ProxySelectLTServer="<b>Seleccionar servidores de destino de b\u00fasqueda</b>";
a.LBL_ProxyAllMailboxAsUp="Utilizar todos los servidores de buz\u00f3n de correo disponibles como upstream";
a.LBL_ProxyAllMailboxAsLT="Utilizar todos los servidores de buz\u00f3n de correo disponibles como destino de b\u00fasqueda";
a.LBL_ProxyLimitUp="O limitar los servidores upstream a:";
a.LBL_ProxyLimitLT="O limitar los servidores de destino de b\u00fasqueda a:";
a.LBL_ProxySelectProxyServerToEnableInDetail="seleccionar el servidor en el que se activar\u00e1 el proxy:";
a.LBL_ProxySelectProxyServerToDisableInDetail="seleccionar el servidor en el que se desactivar\u00e1 el proxy:";
a.LBL_ProxyServerName="Nombre del servidor:";
a.MSG_ProxyEnableFinish="Haz clic en <b>Finalizar</b> para guardar las configuraciones y, a continuaci\u00f3n, reinicia manualmente los servidores para habilitar los cambios.";
a.MSG_ProxyDisableFinish="Haz clic en <b>Finalizar</b> para guardar las configuraciones y, a continuaci\u00f3n, reinicia manualmente los servidores para habilitar los cambios.";
a.LBL_EnableProxy="Habilitar Proxy";
a.LBL_DisableProxy="Deshabilitar Proxy";
a.LBL_Deploy="Implementar";
a.LBL_Undeploy="Desmantelar";
a.LBL_EnableProxyWizTitle="Activar asistente de proxy";
a.LBL_DisableProxyWizTitle="Desactivar asistente de proxy";
a.LBL_ProxyWizardStepSelectServer="Selecci\u00f3n de servidores";
a.LBL_ProxyWizardStepWebProxy="Proxy web";
a.LBL_ProxyWizardStepMailProxy="Proxy de correo";
a.LBL_ProxyWizardStepAdvanced="Avanzado";
a.LBL_ProxyWizardStepFinish="Finalizado";
a.MSG_GenConfigPerVirtualHostname="Es necesario generar configuraciones de proxy para nombres de host virtuales diferentes si deseas que cada nombre de host virtual disponga de una configuraci\u00f3n distintiva (por ejemplo, certificados SSL o CA de certificado de cliente).";
a.MSG_ReverseProxyAdminIPAddress="Solamente se permite manejar GSSAPI y autenticaciones de certificaci\u00f3n de cliente a los proxy cuyas direcciones IP se encuentran en la lista facilitada a continuaci\u00f3n.";
a.MSG_NeedProxyInstalledAndEnabled="El proxy no podr\u00e1 configurarse a no ser que se encuentre instalado y activado en el servidor actual.";
delete a;
if(!window.com_zimbra_securemail){
window.com_zimbra_securemail={}
}
a=window.com_zimbra_securemail;
a.label="Secure Email";
a.description="Sign & verify emails with S/MIME";
a.prefSection="Secure Email";
a.prefSecurityLabel="Settings";
a.prefSecurityAuto="Remember setting from last email";
a.prefSecurityNone="Do not sign or encrypt";
a.prefSecuritySign="Sign only";
a.prefSecurityBoth="Sign and encrypt";
a.dontSignMessage="Don\u2019t Sign";
a.signMessage="Sign";
a.signAndEncryptMessage="Sign and Encrypt";
a.browseBtnLabel="Browse to certificate...";
a.settingHeader="Default Setting for New Emails";
a.settingHelpText="You can change this when sending an email.";
a.certificateHeader="Certificate";
a.certificateHelpText="Please upload a certificate to enable Secure Email.";
a.certificateUploadingHelpText="Uploading and verifying...";
a.certificateLoadingHelpText="Getting your certificate...";
a.certificateViewLabel="View";
a.certificateRemoveLabel="Remove";
a.certificateRemoveWarning="Are you sure you would like to remove this certificate?";
a.dragDropLabel="Drag and Drop a certificate here";
a.uploadOptionsOr="or";
a.uploadOptionsAnd="and";
a.saveToCompleteUpload="Click Save to complete upload";
a.passwordDialogTitle="Password Required";
a.passwordDialogCancel="Cancel";
a.passwordDialogSubmit="Submit";
a.passwordDialogError="Invalid Password. Please try again.";
a.passwordDialogInputLabel="Please enter password for this certificate";
a.certificate="Certificate";
a.certSubject="Issued to";
a.certSubjectCN="Common Name (CN)";
a.certSubjectOrg="Organization (O)";
a.certSubjectOrgUnit="Organizational Unit (OU)";
a.certSubjectEmail="Email";
a.certSubjectCountry="Country";
a.certSubjectState="State";
a.certSubjectCity="City";
a.certIssuer="Issued by";
a.certIssuerCN="Common Name (CN)";
a.certIssuerOrg="Organization (O)";
a.certIssuerOrgUnit="Organizational Unit (OU)";
a.certIssuerEmail="Email";
a.certIssuerCountry="Country";
a.certIssuerState="State";
a.certIssuerCity="City";
a.certValidity="Period of Validity";
a.certValidityBegin="Begins on";
a.certValidityEnd="Ends on";
a.certInfo="Fingerprints";
a.certInfoSN="Serial number";
a.certInfoAlg="Algorithm";
a.subjectAltName="Subject Alternative Name";
a.subjectAltNameotherName="Other Name";
a.subjectAltNamerfc822Name="Email";
a.subjectAltNamedNSName="Domain";
a.subjectAltNamex400Address="X.400";
a.subjectAltNamedirectoryName="Directory";
a.subjectAltNameediPartyName="EDI Party";
a.subjectAltNameuniformResourceIdentifier="URI";
a.subjectAltNameiPAddress="IP Address";
a.subjectAltNameregisteredID="Registered ID";
a.signedMsg="Signed by";
a.encryptedMsg="This message is encrypted";
a.signedAndencryptedMsg="Signed and Encrypted by";
a.tamperedMsg="This message has been tampered with";
a.invalidCertificateMsg="Certificate is invalid";
a.expiredCertificateMsg="Certificate expired";
a.notYetValidCertificateMsg="Certificate is not yet valid";
a.revokedCertificateMsg="Certificate is revoked";
a.untrustedCertificateMsg="Certificate is not trusted";
a.certificateEmailInvalidMsg="Certificate is invalid because the email address does not match";
a.invalidSignatureMsg="Signature is invalid";
a.signatureValidationFailedMsg="Unable to validate signature";
a.certificateViewFullLabel="View certificate";
a.tamperedCertificate="This certificate has been tampered with";
a.invalidCertificate="This certificate is not yet valid";
a.expiredCertificate="This certificate has expired";
a["decryptionError.LOAD_CERTIFICATE_FAILED"]="This message cannot be decrypted because your certificate is not valid or is missing.";
a["decryptionError.LOAD_PRIVATE_KEY_FAILED"]="This message cannot be decrypted because your private key is not valid or is missing.";
a["decryptionError.DECRYPTION_FAILED"]="Something went wrong and this message cannot be decrypted.";
a["decryptionError.USER_CERT_MISMATCH"]="This message cannot be decrypted because it was not encrypted with your current certificate.";
a.security="Security";
a.validFileTypes="Valid file types are";
a.allowedFileTypes="Allowed file types are";
a.invalidCertificateUploaded="Certificate validation failed. Invalid certificate uploaded.";
a.duplicateCertificateUploaded="This certificate already exists";
a["smime.ENCRYPTION_FAILED"]="Message encryption failed.";
a["smime.SIGNING_FAILED"]="Message signing failed.";
a["smime.RECIPIENT_SMIME_CERT_NOT_FOUND"]="No valid public certificate found for {0}";
a["smime.MSG_ENCRYPTION_FAILED"]="Something went wrong and this message cannot be encrypted.";
a["smime.MSG_SIGNING_FAILED"]="Something went wrong and this message cannot be signed.";
a["smime.LOAD_CERTIFICATE_FAILED"]="No certificate found.";
a["smime.USER_CERT_NOT_YET_VALID"]="Certificate is not yet valid.";
a["smime.CERT_VALIDATION_FAILED"]="Certificate validation failed.";
a["smime.USER_CERT_EXPIRED"]="Certificate has expired.";
a["smime.USER_CERT_REVOKED"]="Certificate has been revoked.";
a["smime.USER_CERT_EMAIL_ADDRESS_NOT_MATCHING"]="Certificate email address does not match your account email address.";
a["smime.USER_CERT_NOT_TRUSTED"]="Certificate is not from trusted authority.";
a["smime.OPERATION_DENIED"]="This operation is not permitted";
a["smime.DELEGATE_SEND_SECURE_PERM_DENIED"]="Delegate can not send Secure Mail on behalf of owner.";
a["smime.SERVER_EXTENSION_NOT_INSTALLED"]="S/MIME extension for server is not installed. Please contact your System Administrator.";
delete a;
if(!window.com_zimbra_securemail){
window.com_zimbra_securemail={}
}
a=window.com_zimbra_securemail;
a.label="Correo electr\u00f3nico seguro";
a.description="Firmar y verificar correos electr\u00f3nicos mediante S/MIME";
a.prefSection="Correo electr\u00f3nico seguro";
a.prefSecurityLabel="Configuraci\u00f3n";
a.prefSecurityAuto="Recordar configuraci\u00f3n del \u00faltimo correo electr\u00f3nico";
a.prefSecurityNone="No firmar o cifrar";
a.prefSecuritySign="Firmar solamente";
a.prefSecurityBoth="Firmar y cifrar";
a.dontSignMessage="No firmar";
a.signMessage="Firmar";
a.signAndEncryptMessage="Firmar y cifrar";
a.browseBtnLabel="Buscar certificado...";
a.settingHeader="Configuraci\u00f3n predeterminada para nuevos correos electr\u00f3nicos";
a.settingHelpText="Puedes cambiar esta configuraci\u00f3n al enviar un correo electr\u00f3nico.";
a.certificateHeader="Certificado";
a.certificateHelpText="Por favor, carga un certificado para habilitar el Correo electr\u00f3nico seguro.";
a.certificateUploadingHelpText="Cargando y verificando...";
a.certificateLoadingHelpText="Obteniendo tu certificado...";
a.certificateViewLabel="Ver";
a.certificateRemoveLabel="Eliminar";
a.certificateRemoveWarning="\u00bfDe verdad quieres eliminar este certificado?";
a.dragDropLabel="Arrastrar y soltar el certificado aqu\u00ed";
a.uploadOptionsOr="o";
a.uploadOptionsAnd="y";
a.saveToCompleteUpload="Pulsa Guardar para completar la carga";
a.passwordDialogTitle="Requiere contrase\u00f1a";
a.passwordDialogCancel="Cancelar";
a.passwordDialogSubmit="Enviar";
a.passwordDialogError="Contrase\u00f1a no v\u00e1lida. Int\u00e9ntalo de nuevo.";
a.passwordDialogInputLabel="Introduce la contrase\u00f1a para este certificado";
a.certificate="Certificado";
a.certSubject="Expedido para";
a.certSubjectCN="Nombre com\u00fan (NC)";
a.certSubjectOrg="Organizaci\u00f3n (O)";
a.certSubjectOrgUnit="Unidad de organizaci\u00f3n (UO)";
a.certSubjectEmail="Correo electr\u00f3nico";
a.certSubjectCountry="Pa\u00eds";
a.certSubjectState="Estado";
a.certSubjectCity="Ciudad";
a.certIssuer="Expedido por";
a.certIssuerCN="Nombre com\u00fan (NC)";
a.certIssuerOrg="Organizaci\u00f3n (O)";
a.certIssuerOrgUnit="Unidad de organizaci\u00f3n (UO)";
a.certIssuerEmail="Correo electr\u00f3nico";
a.certIssuerCountry="Pa\u00eds";
a.certIssuerState="Estado";
a.certIssuerCity="Ciudad";
a.certValidity="Per\u00edodo de validez";
a.certValidityBegin="Comienza el";
a.certValidityEnd="Finaliza el";
a.certInfo="Huellas digitales";
a.certInfoSN="N\u00famero de serie";
a.certInfoAlg="Algoritmo";
a.subjectAltName="Nombre alternativo del asunto";
a.subjectAltNameotherName="Otro nombre";
a.subjectAltNamerfc822Name="Correo electr\u00f3nico";
a.subjectAltNamedNSName="Dominio";
a.subjectAltNamex400Address="X.400";
a.subjectAltNamedirectoryName="Directorio";
a.subjectAltNameediPartyName="Parte EDI";
a.subjectAltNameuniformResourceIdentifier="URI";
a.subjectAltNameiPAddress="Direcci\u00f3n IP";
a.subjectAltNameregisteredID="ID registrada";
a.signedMsg="Firmado por";
a.encryptedMsg="Este mensaje est\u00e1 cifrado";
a.signedAndencryptedMsg="Firmado y cifrado por";
a.tamperedMsg="Este mensaje ha sido alterado";
a.invalidCertificateMsg="El certificado no es v\u00e1lido";
a.expiredCertificateMsg="El certificado ha caducado";
a.notYetValidCertificateMsg="El certificado a\u00fan no es v\u00e1lido";
a.revokedCertificateMsg="Se ha revocado el certificado";
a.untrustedCertificateMsg="El certificado no es de fiar";
a.certificateEmailInvalidMsg="El certificado no es v\u00e1lido porque la direcci\u00f3n de correo electr\u00f3nico no coincide";
a.invalidSignatureMsg="La firma no es v\u00e1lida";
a.signatureValidationFailedMsg="No se puede validar la firma";
a.certificateViewFullLabel="Ver certificado";
a.tamperedCertificate="Este certificado ha sido alterado";
a.invalidCertificate="Este certificado a\u00fan no es v\u00e1lido";
a.expiredCertificate="Este certificado ha caducado";
a["decryptionError.LOAD_CERTIFICATE_FAILED"]="No se puede descifrar el mensaje porque falta el certificado o no es v\u00e1lido.";
a["decryptionError.LOAD_PRIVATE_KEY_FAILED"]="No se puede descifrar el mensaje porque falta la clave privada o no es v\u00e1lida.";
a["decryptionError.DECRYPTION_FAILED"]="Ha surgido un error y no se puede descifrar el mensaje.";
a["decryptionError.USER_CERT_MISMATCH"]="No se puede descifrar el mensaje porque no se cifr\u00f3 con tu certificado actual.";
a.security="Seguridad";
a.validFileTypes="Los tipos de archivo v\u00e1lidos son";
a.allowedFileTypes="Los tipos de archivo permitidos son";
a.invalidCertificateUploaded="Ha surgido un error al intentar validar el certificado. Se ha cargado un certificado no v\u00e1lido.";
a.duplicateCertificateUploaded="Este certificado ya existe";
a["smime.ENCRYPTION_FAILED"]="Ha surgido un error al cifrar el mensaje.";
a["smime.SIGNING_FAILED"]="Ha surgido un error al firmar el mensaje.";
a["smime.RECIPIENT_SMIME_CERT_NOT_FOUND"]="No se ha encontrado ning\u00fan certificado p\u00fablico v\u00e1lido para {0}";
a["smime.MSG_ENCRYPTION_FAILED"]="Ha surgido un error y no se puede cifrar este mensaje.";
a["smime.MSG_SIGNING_FAILED"]="Ha surgido un error y no se puede firmar este mensaje.";
a["smime.LOAD_CERTIFICATE_FAILED"]="No se ha encontrado ning\u00fan certificado.";
a["smime.USER_CERT_NOT_YET_VALID"]="El certificado a\u00fan no es v\u00e1lido.";
a["smime.CERT_VALIDATION_FAILED"]="Ha surgido un error al intentar validar el certificado.";
a["smime.USER_CERT_EXPIRED"]="El certificado ha caducado.";
a["smime.USER_CERT_REVOKED"]="El certificado ha sido revocado.";
a["smime.USER_CERT_EMAIL_ADDRESS_NOT_MATCHING"]="La direcci\u00f3n de correo electr\u00f3nico del certificado no coincide con la de tu cuenta.";
a["smime.USER_CERT_NOT_TRUSTED"]="El certificado no es de una autoridad de confianza.";
a["smime.OPERATION_DENIED"]="No se permite realizar esta operaci\u00f3n.";
a["smime.DELEGATE_SEND_SECURE_PERM_DENIED"]="El delegado no puede enviar un mensaje seguro en nombre del propietario.";
a["smime.SERVER_EXTENSION_NOT_INSTALLED"]="La extensi\u00f3n S/MIME para el servidor no est\u00e1 instalada. Comun\u00edcate con el administrador del sistema.";
delete a;
if(!window.com_zimbra_smime_cert_admin){
window.com_zimbra_smime_cert_admin={}
}
a=window.com_zimbra_smime_cert_admin;
a.label="S/MIME";
a.description="S/MIME Admin Extension";
a.Domain_Tab_SMIME="S/MIME";
a.Domain_SMIME_Settings="S/MIME Public Keys";
a.Domain_SMIMEConfName="Configuration Name:";
a.Domain_SMIMELdapURL="LDAP URL:";
a.Domain_SMIMELdapBindDn="LDAP Bind DN:";
a.Domain_SMIMELdapBindPassword="LDAP Bind Password:";
a.Domain_SMIMELdapSearchBase="LDAP Search Base:";
a.Domain_SMIMELdapDiscoverSearchBaseEnabled="Automatically discover search base";
a.Domain_SMIMELdapFilter="LDAP Filter:";
a.Domain_SMIMELdapAttribute="LDAP Attribute:";
a.Domain_Add_SMIME="Add Configuration";
a.Domain_REPEAT_REMOVE="Remove";
a.ERROR_SMIME_MSG_NULL="Configuration name or Ldap URL should not be empty.";
a.ERROR_SMIME_MSG_SAMENAME="Configuration name {0} exists. Please choose another one.";
delete a;
if(!window.com_zimbra_smime_cert_admin){
window.com_zimbra_smime_cert_admin={}
}
a=window.com_zimbra_smime_cert_admin;
a.label="S/MIME";
a.description="Extensi\u00f3n de administraci\u00f3n de S/MIME";
a.Domain_Tab_SMIME="S/MIME";
a.Domain_SMIME_Settings="Configuraci\u00f3n de S/MIME";
a.Domain_SMIMEConfName="Nombre de la configuraci\u00f3n:";
a.Domain_SMIMELdapURL="URL de Ldap de S/MIME:";
a.Domain_SMIMELdapBindDn="DN de enlace a Ldap de S/MIME:";
a.Domain_SMIMELdapBindPassword="Contrase\u00f1a de enlace a Ldap de S/MIME:";
a.Domain_SMIMELdapSearchBase="Base de b\u00fasqueda de Ldap de S/MIME:";
a.Domain_SMIMELdapDiscoverSearchBaseEnabled="Descubrir autom\u00e1ticamente la base de b\u00fasqueda";
a.Domain_SMIMELdapFilter="Filtro Ldap de S/MIME:";
a.Domain_SMIMELdapAttribute="Atributo Ldap de SMIME:";
a.Domain_Add_SMIME="A\u00f1adir configuraci\u00f3n";
a.Domain_REPEAT_REMOVE="Eliminar";
a.ERROR_SMIME_MSG_NULL="El nombre de la configuraci\u00f3n y la URL de Ldap no pueden estar vac\u00edos.";
a.ERROR_SMIME_MSG_SAMENAME="El nombre de configuraci\u00f3n {0} ya existe. Por favor, introduce otro nombre.";
delete a;
if(!window.com_zimbra_srchhighlighter){
window.com_zimbra_srchhighlighter={}
}
a=window.com_zimbra_srchhighlighter;
a.label="Search Highlighter";
a.description="After a mail search, this Zimlet highlights Search terms with yellow color.";
a.SearchHighlighterZimlet_MenuLabel="Clear Search Highlights";
a.SearchHighlighterZimlet_ZimletError="Search Highlighter Zimlet Error:";
delete a;
if(!window.com_zimbra_srchhighlighter){
window.com_zimbra_srchhighlighter={}
}
a=window.com_zimbra_srchhighlighter;
a.label="Buscar el resaltador";
a.description="Tras la b\u00fasqueda de un correo, esta opci\u00f3n de Zimlet resalta los t\u00e9rminos de b\u00fasqueda en amarillo";
a.SearchHighlighterZimlet_MenuLabel="Borrar los objetos resaltados en la b\u00fasqueda";
a.SearchHighlighterZimlet_ZimletError="Error del Zimlet resaltador de la b\u00fasqueda:";
delete a;
if(!window.com_zimbra_tooltip){
window.com_zimbra_tooltip={}
}
a=window.com_zimbra_tooltip;
a.label="Help Tooltip";
a.description="Help Tooltip Admin Extension";
a.llMore="More";
a.llHide="Hide";
a.llAttributeName="Attribute Name";
a.llDesc="Description";
a.llLoading="Loading";
a.llNoResult="No description is found";
a.BUSY_GET_DESC="Getting Description...";
delete a;
if(!window.com_zimbra_tooltip){
window.com_zimbra_tooltip={}
}
a=window.com_zimbra_tooltip;
a.label="Descripci\u00f3n emergente de ayuda";
a.description="Extensi\u00f3n de administraci\u00f3n de descripci\u00f3n emergente de ayuda";
a.llMore="M\u00e1s";
a.llHide="Ocultar";
a.llAttributeName="Nombre del atributo";
a.llDesc="Descripci\u00f3n";
a.llLoading="Cargando";
a.llNoResult="No se ha encontrado ninguna descripci\u00f3n";
a.BUSY_GET_DESC="Obteniendo descripci\u00f3n...";
delete a;
if(!window.com_zimbra_two_factor_auth){
window.com_zimbra_two_factor_auth={}
}
a=window.com_zimbra_two_factor_auth;
a.label="Two-factor Authentication";
a.description="Two-factor Authentication Admin Extension";
a.Two_Factor_Authentication="Two Factor Authentication";
a.LBL_Two_Step_Authentication="Two Step Authentication";
a.LBL_Enable_Two_Factor_Authentication="Enable two-factor authentication";
a.LBL_Two_Factor_Authentication_Active="Active";
a.LBL_Require_Two_Step_Authentication="Require two-step authentication";
a.LBL_Number_Of_One_Time_Codes="Number of one-time codes to generate:";
a.MSG_Number_Of_One_Time_Codes="Number of one-time codes to generate";
a.LBL_Enable_Application_Passcodes="Enable application passcodes";
delete a;
if(!window.com_zimbra_two_factor_auth){
window.com_zimbra_two_factor_auth={}
}
a=window.com_zimbra_two_factor_auth;
a.label="Autenticaci\u00f3n de doble factor";
a.description="Extensi\u00f3n de administrador de la autenticaci\u00f3n de doble factor";
a.Two_Factor_Authentication="Autenticaci\u00f3n de dos factores";
a.LBL_Two_Step_Authentication="Autenticaci\u00f3n de dos pasos";
a.LBL_Enable_Two_Factor_Authentication="Activar autenticaci\u00f3n de dos factores";
a.LBL_Two_Factor_Authentication_Active="Activa";
a.LBL_Require_Two_Step_Authentication="Requiere autenticaci\u00f3n de dos pasos";
a.LBL_Number_Of_One_Time_Codes="N\u00famero de c\u00f3digos para un solo acceso para generar:";
a.MSG_Number_Of_One_Time_Codes="N\u00famero de c\u00f3digos para un solo acceso para generar";
a.LBL_Enable_Application_Passcodes="Activar c\u00f3digos de acceso de la aplicaci\u00f3n";
delete a;
if(!window.com_zimbra_ucconfig){
window.com_zimbra_ucconfig={}
}
a=window.com_zimbra_ucconfig;
a.label="Zimbra Voice/Chat service";
a.description="An extension for administrators to configure Voice/Chat services.";
a.UI_Comp_UCConfiguration="Voice/Chat Service Configuration View";
a.OVP_UCService="Voice/Chat Service";
a.TTL_UCConfig="Voice/Chat Service";
a.TTL_ChooseProvider="Choose Voice/Chat Vendor";
a.TTL_ActivatePresence="Generate Session ID";
a.BTN_RETRY="Retry";
a.BUSY_GET_UCServices="Getting voice/chat services ...";
a.BUSY_GET_UCProviders="Getting voice/chat provider ...";
a.BUSY_CREATE_UCService="Creating voice/chat service ...";
a.BUSY_DELETE_UCService="Deleting voice/chat service ...";
a.BUSY_MODIFY_UCService="Modifying voice/chat service ...";
a.BUSY_GET_RELATED_OBJECTS="Getting objects related to this voice/chat services ...";
a.MSG_UCServiceCreated="Voice/Chat service {0} is created";
a.MSG_UCServiceModified="Voice/Chat service {0} is modified";
a.MSG_UCPresenseIdModified="The presence session Id is updated";
a.MSG_UCGenPresenseIdLink="Generate Session ID for Presence Server Connection ...";
a.MSG_UCPresenceIdPrompt="Enter the credential for the presence server to generate a valid session ID This ID will be stored and allow Zimbra to retrieve presence information for individual users.";
a.MSG_UCPresenceGenSuccess="A session ID has been generated successfully. This ID is stored by Zimbra and will be used to retrieve presence information for users so that it may be displayed in Zimbra.";
a.MSG_UCServiceAssignedInfo='You have selected a voice/chat service, to fully support this service, you should do the following: <ul><li>Enable the Voice feature in "Features" section<li>Disable the voice/chat zimlets from other vendors in "Zimlets" section<li>Enable your vendor\u2019s voice/chat zimlets in "Zimlets" section</ul>';
a.SUB_UCPresenceGenSuccess="Successfully Generated";
a.SUB_UCPresenceGenFail="Failed to Generate the ID";
a.WARNING_UCService_EXISTS="The specified voice/chat service already exists. Please choose another name.";
a.WARNING_UCService_EXISTS_RENAME="Failed to rename voice/chat service. Another voice/chat service with the specified name already exists.<br>Please choose another name.";
a.ERROR_UC_NAME_TOOLONG="The specified Voice/Chat Service name is too long.";
a.ERROR_VoiceURLRequired="Please specify Voice URL.";
a.ERROR_CallURLRequired="Please specify Call URL.";
a.ERROR_UserURLRequired="Please specify User URL.";
a.ERROR_FailedSaveProvider='Failed to set "zimbraUCProviderEnabled" to Global Configuration.';
a.ERROR_FailedGenerateSessionId="Failed to generate the presence session ID. Please retry it.";
a.ucProviderCisco="Cisco";
a.ucProviderMitel="Mitel";
a.MNU_ActivatePresence="Generate Session ID";
a.TGT_ucSettings="Voice and Chat";
a.TGT_ucFeatures="Other Voice/Chat features";
a.LBL_EnableVoiceFeature="Enable Voice Feature:";
a.LBL_MSG_enableVoiceFeature="Enable Voice Feature";
a.LBL_serviceType="Service Type:";
a.LBL_ucVoiceMailURL="Voice URL:";
a.LBL_callControlURL="Call URL:";
a.LBL_ucUserURL="User URL:";
a.LBL_ucPresenceURL="Presence URL:";
a.LBL_ucPresenceSessionId="Presence Session ID:";
a.LBL_UCService="Voice/Chat Service:";
a.LBL_UCProvider="Voice/Chat Vendor:";
a.LBL_AppName="Presence User Name:";
a.LBL_Password="Presence Password:";
a.LBL_VoiceUsername="Chat/Voice Username:";
a.LBL_MSG_VoiceUsername="Chat/Voice Username";
a.UCService_view_title="Manage Voice/Chat Service";
a.UCService_new_title="New Voice/Chat Service";
a.CLV_Name_col="Name";
a.CLV_Type_col="Type";
a.CLV_Call_URL_col="Call URL";
a.CLV_Voicemail_URL_col="Voicemail URL";
a.CHC_noSet="Not set";
a.Q_DELETE_UCService="Are you sure you want to delete this voice/chat service?";
a.Q_DELETE_UCServices="Are you sure you want to delete these voice/chat services:";
a.Q_Choose_Provider="Before a Voice/Chat service can be created, a vendor must be selected. Only one vendor may be selected per Zimbra installation. The vendor may be changed later if all Voice/Chat services are deleted. What Voice/Chat vendor would you like to choose?";
delete a;
if(!window.com_zimbra_ucconfig){
window.com_zimbra_ucconfig={}
}
a=window.com_zimbra_ucconfig;
a.label="Servicio de voz/chat de Zimbra";
a.description="Extensi\u00f3n que permite a los administradores configurar los servicios de voz/chat";
a.UI_Comp_UCConfiguration="Vista de configuraci\u00f3n del servicio de voz/chat";
a.OVP_UCService="Servicio de voz/chat";
a.TTL_UCConfig="Servicio de voz/chat";
a.TTL_ChooseProvider="Elija el proveedor de voz/chat";
a.TTL_ActivatePresence="Generar ID de sesi\u00f3n";
a.BTN_RETRY="Volver a intentarlo";
a.BUSY_GET_UCServices="Obteniendo servicios de voz/chat ...";
a.BUSY_GET_UCProviders="Obteniendo proveedor de voz/chat ...";
a.BUSY_CREATE_UCService="Creando servicio de voz/chat ...";
a.BUSY_DELETE_UCService="Eliminando servicios de voz/chat ...";
a.BUSY_MODIFY_UCService="Modificando servicio de voz/chat ...";
a.BUSY_GET_RELATED_OBJECTS="Obteniendo objetos relacionados con estos servicios de voz/chat ...";
a.MSG_UCServiceCreated="Se cre\u00f3 el servicio de voz/chat {0}";
a.MSG_UCServiceModified="Se modific\u00f3 el servicio de voz/chat {0}";
a.MSG_UCPresenseIdModified="Se actualiz\u00f3 el ID de sesi\u00f3n de presencia";
a.MSG_UCGenPresenseIdLink="Generar ID de sesi\u00f3n para la conexi\u00f3n del servidor de presencia ...";
a.MSG_UCPresenceIdPrompt="Introduzca la credencial para el servidor de presencia para generar una sesi\u00f3n v\u00e1lida Este ID se ordenar\u00e1 y permitir\u00e1 que Zimbra recupere la informaci\u00f3n de presencia para usuarios individuales.";
a.MSG_UCPresenceGenSuccess="Se ha generado correctamente un ID de sesi\u00f3n. Este ID se ordena por Zimbra y se utiliza para recuperar la informaci\u00f3n de presencia de los usuarios para que figuren en Zimbra.";
a.MSG_UCServiceAssignedInfo='Ha seleccionado un servicio de voz/chat; para que este servicio sea completamente compatible, realice el siguiente procedimiento: <ul><li>Habilite la funci\u00f3n de voz en la secci\u00f3n de "Funciones"<li>Deshabilite los zimlets de voz/chat de otros proveedores en la secci\u00f3n de "Zimlets"<li>Habilite el zimlet de voz/chat de su proveedor en la secci\u00f3n de "Zimlets"</ul>';
a.SUB_UCPresenceGenSuccess="Se ha generado correctamente";
a.SUB_UCPresenceGenFail="No se pudo generar el ID";
a.WARNING_UCService_EXISTS="El servicio de voz/chat especificado ya existe. Por favor, introduzca otro nombre.";
a.WARNING_UCService_EXISTS_RENAME="No se pudo cambiar el nombre del servicio de voz/chat. Ya existe un servicio de voz/chat con el nombre especificado.<br>Elija otro nombre.";
a.ERROR_UC_NAME_TOOLONG="El nombre del servicio de voz/chat especificado es demasiado largo.";
a.ERROR_VoiceURLRequired="Especifique el URL de voz.";
a.ERROR_CallURLRequired="Especifique la URL de llamada.";
a.ERROR_UserURLRequired="Especifique el URL de usuario.";
a.ERROR_FailedSaveProvider='No se pudo configurar "zimbraUCProviderEnabled" en la configuraci\u00f3n global.';
a.ERROR_FailedGenerateSessionId="No se pudo generar la ID de sesi\u00f3n de presencia. Vuelva a intentarlo.";
a.ucProviderCisco="Cisco";
a.ucProviderMitel="Mitel";
a.MNU_ActivatePresence="Generar ID de sesi\u00f3n";
a.TGT_ucSettings="Voz y chat";
a.TGT_ucFeatures="Otras funciones de voz/chat";
a.LBL_EnableVoiceFeature="Habilitar la funci\u00f3n de voz:";
a.LBL_MSG_enableVoiceFeature="Habilitar la funci\u00f3n de voz";
a.LBL_serviceType="Tipo de servicio:";
a.LBL_ucVoiceMailURL="URL de voz:";
a.LBL_callControlURL="URL de llamada:";
a.LBL_ucUserURL="URL de usuario:";
a.LBL_ucPresenceURL="URL de presencia:";
a.LBL_ucPresenceSessionId="ID de sesi\u00f3n de presencia:";
a.LBL_UCService="Servicio de voz/chat:";
a.LBL_UCProvider="Proveedor de voz/chat:";
a.LBL_AppName="Nombre de usuario de presencia:";
a.LBL_Password="Contrase\u00f1a de presencia:";
a.LBL_VoiceUsername="Nombre de usuario de chat/voz:";
a.LBL_MSG_VoiceUsername="Nombre de usuario de chat/voz";
a.UCService_view_title="Administrar el servicio de voz/chat";
a.UCService_new_title="Nuevo servicio de voz/chat";
a.CLV_Name_col="Nombre";
a.CLV_Type_col="Tipo";
a.CLV_Call_URL_col="URL de llamada";
a.CLV_Voicemail_URL_col="URL de correo de voz";
a.CHC_noSet="No establecido";
a.Q_DELETE_UCService="\u00bfSeguro que desea eliminar este servicio de voz/chat?";
a.Q_DELETE_UCServices="Aseg\u00farese de querer eliminar estos servicios de voz/chat:";
a.Q_Choose_Provider="Para poder crear un servicio de voz/chat, se debe seleccionar un proveedor. Solo se puede seleccionar un proveedor por cada instalaci\u00f3n de Zimbra. El proveedor puede cambiarse m\u00e1s adelante si se eliminan todos los servicios de voz/chat. \u00bfQu\u00e9 proveedor de voz/chat le gustar\u00eda elegir?";
delete a;
if(!window.com_zimbra_url){
window.com_zimbra_url={}
}
a=window.com_zimbra_url;
a.zimletLabel="URL Links";
a.description="Highlight Web URLs for linking in email messages.";
a.youTubeTitle="Videos from this email";
a.youTubeTitleMax="Showing {0} videos from this email";
a.youTubeClickToToggle="Click to play or hide video";
a.goToUrl="Go to URL";
a.newCalendar="Create New Calendar";
delete a;
if(!window.com_zimbra_url){
window.com_zimbra_url={}
}
a=window.com_zimbra_url;
a.zimletLabel="Enlaces URL";
a.description="Resaltar las URL de p\u00e1ginas web para crear enlaces en los mensajes de correo electr\u00f3nico.";
a.youTubeTitle="V\u00eddeos de este correo electr\u00f3nico";
a.youTubeTitleMax="Mostrando {0} v\u00eddeos de este correo electr\u00f3nico";
a.youTubeClickToToggle="Haz clic para reproducir u ocultar el v\u00eddeo";
a.goToUrl="Ir a la URL";
a.newCalendar="Crear nueva agenda";
delete a;
if(!window.com_zimbra_viewmail){
window.com_zimbra_viewmail={}
}
a=window.com_zimbra_viewmail;
a.label="Mail Viewer";
a.description="Admin Extension to allow administrator to view mails";
a.ACTBB_ViewMail="View Mail";
a.ACTBB_ViewMail_tt="Login to email application on behalf of this account";
delete a;
if(!window.com_zimbra_viewmail){
window.com_zimbra_viewmail={}
}
a=window.com_zimbra_viewmail;
a.label="Visor de correo";
a.description="Extensi\u00f3n de administraci\u00f3n para permitir al administrador ver los correos";
a.ACTBB_ViewMail="Ver correo";
a.ACTBB_ViewMail_tt="Iniciar sesi\u00f3n en la aplicaci\u00f3n de correo electr\u00f3nico en nombre de esta cuenta";
delete a;
if(!window.com_zimbra_voiceprefs){
window.com_zimbra_voiceprefs={}
}
a=window.com_zimbra_voiceprefs;
a.voice="Voice";
a.label="Voice Preferences";
a.description="Configure your voice account settings";
a.voicePrefsInstruction="Registered Numbers";
a.phoneNumber="Phone Number";
a.generalHeader="Voice Account Settings";
a.editPhone="Edit Phone";
a.couldNotAddOrUpdatePhone="Could not add or update phone.";
a.voiceError="Voice Error";
a.phoneNotEditable="This phone is not editable";
a.voiceAccountSettingsDlgTitle="Update Account Login";
a.invalidAccountSettings="Invalid password";
a.usernameLabel="Username:";
a.passwordLabel="Password:";
a.missingPassword="Password cannot be blank";
a.accountSettingsUpdated="Account Login updated";
a.updatePinHeader="Update Voice Mail PIN";
a.oldPinLabel="Old PIN:";
a.newPinLabel="New PIN:";
a.confirmNewPinLabel="Confirm New PIN:";
a.newPinAndConfirmPinDoesNotMatch="'New PIN' and 'Confirm New PIN' does not match";
a.updatePassword="Update Account Login";
a.updatePasswordDlgBtn="Update";
a.updatePIN="Reset Voicemail PIN";
a.pleaseSelectVoiceMailAccountAbove="Please select a voice mail account from the above list before updating PIN.";
a.couldNotUpdatePIN="Could not update PIN";
a.voicePINUpdated="Voice PIN updated";
a.invalidOldPin="Invalid old PIN";
a.missingOldPin="Old PIN is required";
a.missingNewPin="New PIN is required";
a.voicePIN="Voice PIN";
a.voicePINTooltip="Update Voice PIN";
a.pinStr="PIN:";
a.confirmPINStr="Confirm PIN:";
a.voicePINDlgTitle="Update Voice PIN";
a.updatePin="Update PIN";
a.pinAndConfirmPinDidntMatch="PIN and Confirm PIN didn't match";
a.invalidPin="Invalid PIN";
a.pinCanOnlyBeDigits="PIN can only be digits";
a.err_failedFetchUCINfo="Failed to get user voice/chat username.";
delete a;
if(!window.com_zimbra_voiceprefs){
window.com_zimbra_voiceprefs={}
}
a=window.com_zimbra_voiceprefs;
a.voice="Voz";
a.label="Preferencias de voz";
a.description="Configura las propiedades de tu cuenta de voz";
a.voicePrefsInstruction="N\u00fameros registrados";
a.phoneNumber="N\u00famero de tel\u00e9fono";
a.generalHeader="Configuraci\u00f3n de la cuenta de voz";
a.editPhone="Editar tel\u00e9fono";
a.couldNotAddOrUpdatePhone="No se pudo agregar o actualizar el tel\u00e9fono.";
a.voiceError="Error de voz";
a.phoneNotEditable="Este tel\u00e9fono no se puede editar";
a.voiceAccountSettingsDlgTitle="Actualizar inicio de sesi\u00f3n de cuenta";
a.invalidAccountSettings="Contrase\u00f1a no v\u00e1lida";
a.usernameLabel="Nombre de usuario:";
a.passwordLabel="Contrase\u00f1a:";
a.missingPassword="No se puede dejar en blanco la contrase\u00f1a";
a.accountSettingsUpdated="Se actualiz\u00f3 el inicio de sesi\u00f3n de la cuenta";
a.updatePinHeader="Actualizar el PIN del correo de voz";
a.oldPinLabel="PIN anterior:";
a.newPinLabel="Nuevo PIN:";
a.confirmNewPinLabel="Confirmar el nuevo PIN:";
a.newPinAndConfirmPinDoesNotMatch='Los campos "Nuevo PIN" y "Confirmar el nuevo PIN" no coinciden';
a.updatePassword="Actualizar inicio de sesi\u00f3n de cuenta";
a.updatePasswordDlgBtn="Actualizar";
a.updatePIN="Restablecer el PIN del correo de voz";
a.pleaseSelectVoiceMailAccountAbove="Seleccione la cuenta de correo de voz de la lista antes de actualizar el PIN.";
a.couldNotUpdatePIN="No se pudo actualizar el PIN";
a.voicePINUpdated="Se actualiz\u00f3 el PIN de voz";
a.invalidOldPin="El PIN anterior no es v\u00e1lido";
a.missingOldPin="Se requiere el PIN anterior";
a.missingNewPin="Se requiere el nuevo PIN";
a.voicePIN="PIN de voz";
a.voicePINTooltip="Actualizar PIN de voz";
a.pinStr="PIN:";
a.confirmPINStr="Confirmar PIN:";
a.voicePINDlgTitle="Actualizar PIN de voz";
a.updatePin="Actualizar PIN";
a.pinAndConfirmPinDidntMatch="El PIN y su confirmaci\u00f3n no coinciden";
a.invalidPin="El PIN no es v\u00e1lido";
a.pinCanOnlyBeDigits="El PIN solo puede contener d\u00edgitos";
a.err_failedFetchUCINfo="No se pudo obtener el nombre de usuario de voz o de chat.";
delete a;
if(!window.com_zimbra_webex){
window.com_zimbra_webex={}
}
a=window.com_zimbra_webex;
a.label="WebEx";
a.description="Easily schedule, start or join WebEx meetings";
a.WebExZimlet_insertWebExDetails="Insert WebEx details";
a.WebExZimlet_insertWebExDetailsAndSendAppointment="Insert WebEx details and send appointment";
a.WebExZimlet_label="WebEx";
a.WebExZimlet_toolTip="Easily schedule, start or join WebEx meetings";
a.WebExZimlet_rightClickForOptions="Please <b>right-click</b> for preferences and other options.";
a.WebExZimlet_quickMeeting="Quick Start a New Meeting";
a.WebExZimlet_startJoinExistingMeeting="Start or Join an Existing Meeting";
a.WebExZimlet_manageAccounts="Manage Accounts";
a.WebExZimlet_preferences="Preferences";
a.WebExZimlet_addAccount="Add Account";
a.WebExZimlet_selectDefaultTimeZone="Select default timezone:";
a.WebExZimlet_appendMeetingInfoToSubOrLoc="Append meeting information";
a.WebExZimlet_appendToSubject="Append <b>below</b> meeting information to subject field";
a.WebExZimlet_appendToLocation="Append <b>below</b> meeting information to location field";
a.WebExZimlet_informationToAppend="Information to append:";
a.WebExZimlet_appendWebExUrl="Append WebEx URL to";
a.WebExZimlet_appendMeetingPwd="Append meeting password to:";
a.WebExZimlet_appendToolFreeNumber="Append toll-free number to:";
a.WebExZimlet_appendTollConfNumber="Append toll number to:";
a.WebExZimlet_appendPhonePasscode="Append phone passcode to:";
a.WebExZimlet_PrefSaved="Saved WebEx Preferences";
a.WebExZimlet_none="None";
a.WebExZimlet_subject="Subject";
a.WebExZimlet_location="Location";
a.WebExZimlet_subjectAndLocation="Subject & Location";
a.WebExZimlet_accountNumber="WebEx Account {0}";
a.WebExZimlet_accountName="Account Name:";
a.WebExZimlet_delete="Delete";
a.WebExZimlet_accountSettings="WebEx Settings";
a.WebExZimlet_userName="Username:";
a.WebExZimlet_password="Password:";
a.WebExZimlet_companyId="Company ID:";
a.WebExZimlet_altHosts="Alternate Host(s):";
a.WebExZimlet_companyIdExample='<br/>Company ID is the first part of the company-specific WebEx URL. <br/>For example: <b>zimbra</b> in http://<b>zimbra</b>.webex.com/. <br><br><b>NOTE:</b> This only works with enterprise accounts that have a custom URL, not for "meetings.webex.com".';
a.WebExZimlet_useThisAccountFor="Associate to:";
a.WebExZimlet_associateCalendarHdr="Auto-associate a Calendar to a WebEx account:";
a.WebExZimlet_meetingPwd="WebEx Meeting Password:";
a.WebExZimlet_optional="optional";
a.WebExZimlet_validateWebExAccntNumber="Validate Account {0}";
a.WebExZimlet_addTeleConfSettings="Add Phone Settings";
a.WebExZimlet_removeTeleConfSettings="Remove";
a.WebExZimlet_teleConfSettings="Phone Settings";
a.WebExZimlet_tollFreeNumber="Toll-Free Number:";
a.WebExZimlet_tollNumber="Toll Number:";
a.WebExZimlet_webExUrl="WebEx URL:";
a.WebExZimlet_otherPhoneNumbers="Alternate Numbers:";
a.WebExZimlet_phonePasscode="Passcode:";
a.WebExZimlet_digitsOnly="digits only";
a.WebExZimlet_passwordNotRequired="(Password is not required for this meeting.)";
a.WebExZimlet_account1UsedAsDefaultForUnAssociatedCal="Note: Account 1 settings are used for all un-associated Calendars";
a.WebExZimlet_testFailed="Test failed. This WebEx account is not valid.";
a.WebExZimlet_testPassed="WebEx account has been validated.";
a.WebExZimlet_testSucceeded="Test Succeeded";
a.WebExZimlet_errorInWebExXml="Error parsing WebEx XML response or malformed XML.";
a.WebExZimlet_accountNumberNotSetup="WebEx <b>Account {0}</b> is not setup.";
a.WebExZimlet_pleaseWait="Please wait...";
a.WebExZimlet_allCalendars="All Calendars";
a.WebExZimlet_selectAccntToUse="Select WebEx Account";
a.WebExZimlet_webExAccntToUse="WebEx Account:";
a.WebExZimlet_enterYourName="[Enter your name]";
a.WebExZimlet_email="Email:";
a.WebExZimlet_enterYourEmail="[Enter your email]";
a.WebExZimlet_notConfigured="Not configured";
a.WebExZimlet_accntNumberAndName="Account {0} ({1})";
a.WebExZimlet_getAccounts="Account Options";
a.WebExZimlet_help="help";
a.WebExZimlet_startQuickWebExMeeting="Quick Start a New Meeting";
a.WebExZimlet_addAttendees="Add Attendee(s):";
a.WebExZimlet_quickMeetingSubject="Quick WebEx Meeting (Please join now)";
a.WebExZimlet_quickMeetingLocation="Quick WebEx Meeting (Please join now)";
a.WebExZimlet_startOrJoinWebExMeeting="Start or Join an Existing Meeting";
a.WebExZimlet_host="Host";
a.WebExZimlet_startTime="Start Time";
a.WebExZimlet_action="Action";
a.WebExZimlet_meetingName="Meeting Name";
a.WebExZimlet_meetingsList="WebEx Meetings List:";
a.WebExZimlet_startJoin="Start/Join";
a.WebExZimlet_fromNowOn="Current and future";
a.WebExZimlet_today="Today";
a.WebExZimlet_tomorrow="Tomorrow";
a.WebExZimlet_next7days="Next 7 days";
a.WebExZimlet_showMeetings="Show meetings:";
a.WebExZimlet_savesThisApptAsWebEx="Save as WebEx";
a.WebExZimlet_saveAsWebEx="Save as WebEx";
a.WebExZimlet_successfullyCreatedWebEx="Successfully created WebEx appointment";
a.WebExZimlet_unableToCreateMeeting="Unable to create WebEx meeting";
a.WebExZimlet_noWebExAccount="No WebEx Account(s) have been configured.<br/>Right-click on the Zimlet and Select \u2018Manage Accounts\u2019 to configure.";
a.WebExZimlet_webExError="WebEx Error";
a.WebExZimlet_failureReason="Failure Reason:";
a.WebExZimlet_webExDidntReturnMeetingKey="WebEx did not return meeting key, perhaps, meeting didn\u2019t get created on the WebEx server.";
a.WebExZimlet_unableToGetMeetingInfo="Unable to get WebEx meetings information";
a.WebExZimlet_unableToGetJoinOrHostURL="Unable to get WebEx Join/Host Meeting URL";
a.WebExZimlet_couldNotGetJoinMeetingUrl="Could not get Join-Meeting-URL from WebEx";
a.WebExZimlet_unableToDeleteWebExAppt="Unable to Delete WebEx meeting";
a.WebExZimlet_unableToCreateOrModifyMeeting="Unable to create/modify WebEx meeting";
a.WebExZimlet_invalidAlternateHost="Invalid alternative Host.<br/>Alternative Hosts are used to to allow other hosts to schedule meetings on your behalf. To use this feature, this must be configured in your WebEx Profile. <br/><br/>To grant permission for an alternative host:<br/>1. Login to your WebEx account.<br/>2. Browse to Setup > My Profile > Session Options > Scheduling permission.<br/>3. Enter Alternative Hosts.<br/>4. Save your profile.";
a.WebExZimlet_setupAlternateHost="Alternative Hosts are used to to allow other hosts to schedule meetings on your behalf. To use this feature, this must be configured in your WebEx Profile. <br/><br/>To grant permission for an alternative host:<br/>1. Login to your WebEx account.<br/>2. Go to Setup > My Profile > Session Options > Scheduling permission.<br/>3. Enter Alternative Hosts.<br/>4. Save your profile.";
a.WebExZimlet_userPwdCIdRequired="WebEx Username, Password & Company ID are required.";
a.WebExZimlet_couldNotRegisterAttendees="Could not register attendees";
a.cannotContinueInvalidEmails="Cannot continue. Following invalid email(s) found";
a.modifyAlertNotice="WebEx meeting has been successfully created. <br><br>Please Note:<br> If you modify this meeting (other than its body content), you will have to recreate WebEx meeting";
a.WebExZimlet_noMeetingsFound="WebEx meetings can not be displayed.  No records found.";
a.WebExZimlet_findingMeetings="Retrieving meetings from WebEx...";
a.WebExZimlet_meetingWasDeleted="WebEx meeting was deleted";
a.WebExZimlet_entireSeriesWillBeDeleted="WebEx Appointment found.<br/> For a recurring appointment, entire series will be deleted on WebEx server.<br/> Do you want to continue?";
a.WebExZimlet_modifyApptAvoidDuplicateInfoWarning="Modifying WebEx Appointment.<br/> Please make sure to remove older WebEx data from body, subject and location fields in order to avoid inserting multiple WebEx information. <br/>Do you want to continue?";
a.WebExZimlet_teleconferenceDetails="Teleconference Details:";
a.WebExZimlet_webExDetails="WebEx Details:";
delete a;
if(!window.com_zimbra_webex){
window.com_zimbra_webex={}
}
a=window.com_zimbra_webex;
a.label="WebEx";
a.description="Programa, inicia o participa f\u00e1cilmente en reuniones de WebEx";
a.WebExZimlet_insertWebExDetails="Insertar detalles de WebEx";
a.WebExZimlet_insertWebExDetailsAndSendAppointment="Insertar detalles de WebEx y enviar cita";
a.WebExZimlet_label="WebEx";
a.WebExZimlet_toolTip="Programa, inicia o participa f\u00e1cilmente en reuniones de WebEx";
a.WebExZimlet_rightClickForOptions="<b>Haz clic con el bot\u00f3n derecho</b> para acceder a las preferencias y otras opciones.";
a.WebExZimlet_quickMeeting="Iniciar una Reuni\u00f3n r\u00e1pida";
a.WebExZimlet_startJoinExistingMeeting="Iniciar una reuni\u00f3n o participa en una existente";
a.WebExZimlet_manageAccounts="Administrar cuentas";
a.WebExZimlet_preferences="Preferencias";
a.WebExZimlet_addAccount="A\u00f1adir cuenta";
a.WebExZimlet_selectDefaultTimeZone="Seleccionar la zona horaria predeterminada:";
a.WebExZimlet_appendMeetingInfoToSubOrLoc="A\u00f1adir informaci\u00f3n sobre una reuni\u00f3n a los campos del asunto o de la ubicaci\u00f3n:";
a.WebExZimlet_appendToSubject="A\u00f1adir <b>a continuaci\u00f3n</b> informaci\u00f3n sobre la reuni\u00f3n al campo del asunto";
a.WebExZimlet_appendToLocation="A\u00f1adir <b>a continuaci\u00f3n</b> informaci\u00f3n sobre la reuni\u00f3n al campo de la ubicaci\u00f3n";
a.WebExZimlet_informationToAppend="Informaci\u00f3n que se debe a\u00f1adir:";
a.WebExZimlet_appendWebExUrl="A\u00f1adir la URL de WebEx a";
a.WebExZimlet_appendMeetingPwd="A\u00f1adir la contrase\u00f1a de la reuni\u00f3n a";
a.WebExZimlet_appendToolFreeNumber="A\u00f1adir el N\u00famero para conferencias gratuitas a";
a.WebExZimlet_appendTollConfNumber="A\u00f1adir el N\u00famero para conferencias de pago a";
a.WebExZimlet_appendPhonePasscode="A\u00f1adir el c\u00f3digo de acceso del tel\u00e9fono a";
a.WebExZimlet_PrefSaved="Preferencias de WebEx guardadas";
a.WebExZimlet_none="Ninguno";
a.WebExZimlet_subject="Asunto";
a.WebExZimlet_location="Ubicaci\u00f3n";
a.WebExZimlet_subjectAndLocation="Asunto y ubicaci\u00f3n";
a.WebExZimlet_accountNumber="Cuenta WebEx {0}:";
a.WebExZimlet_accountName="Nombre de cuenta:";
a.WebExZimlet_delete="Eliminar";
a.WebExZimlet_accountSettings="Configuraci\u00f3n de la cuenta:";
a.WebExZimlet_userName="Nombre de usuario de WebEx:*";
a.WebExZimlet_password="Contrase\u00f1a de WebEx:*";
a.WebExZimlet_companyId="ID de la empresa WebEx:*";
a.WebExZimlet_altHosts="Anfitri\u00f3n(es) alternativo(s)";
a.WebExZimlet_companyIdExample='<br/>El ID de la empresa es la primera parte de la URL de WebEx espec\u00edfica de la empresa. <br/>Por ejemplo: <b>zimbra</b> en http://<b>zimbra</b>.webex.com/. <br><br><b>NOTA:</b> Esto solo funciona con cuentas de empresa que tienen una URL personalizada, no para direcciones como "meetings.webex.com".';
a.WebExZimlet_useThisAccountFor="Usa esta cuenta WebEx para:";
a.WebExZimlet_associateCalendarHdr="Asociar autom\u00e1ticamente un calendario a una cuenta WebEx:";
a.WebExZimlet_meetingPwd="Contrase\u00f1a de la reuni\u00f3n de WebEx:";
a.WebExZimlet_optional="(opcional)";
a.WebExZimlet_validateWebExAccntNumber="Validar cuenta {0}";
a.WebExZimlet_addTeleConfSettings="A\u00f1adir configuraci\u00f3n del tel\u00e9fono";
a.WebExZimlet_removeTeleConfSettings="Eliminar";
a.WebExZimlet_teleConfSettings="Configuraci\u00f3n de teleconferencias:";
a.WebExZimlet_tollFreeNumber="N\u00famero de tel\u00e9fono gratuito:";
a.WebExZimlet_tollNumber="N\u00famero de tel\u00e9fono de pago:";
a.WebExZimlet_webExUrl="URL de WebEx:";
a.WebExZimlet_otherPhoneNumbers="Otros n\u00fameros de tel\u00e9fono:";
a.WebExZimlet_phonePasscode="C\u00f3digo de acceso del tel\u00e9fono:";
a.WebExZimlet_digitsOnly="(solo d\u00edgitos)";
a.WebExZimlet_passwordNotRequired="(No se necesita contrase\u00f1a para esta reuni\u00f3n).";
a.WebExZimlet_account1UsedAsDefaultForUnAssociatedCal="Nota: la configuraci\u00f3n de la cuenta 1 se usa para todos los calendarios no asociados";
a.WebExZimlet_testFailed="Error de prueba. Esta cuenta WebEx no es v\u00e1lida.";
a.WebExZimlet_testPassed="Prueba realizada correctamente. Esta cuenta WebEx es v\u00e1lida.";
a.WebExZimlet_testSucceeded="Prueba realizada correctamente";
a.WebExZimlet_errorInWebExXml="Error al analizar la respuesta del archivo XML de WebEx o archivo XML en mal estado.";
a.WebExZimlet_accountNumberNotSetup="La <b>cuenta {0}</b> WebEx no est\u00e1 configurada.";
a.WebExZimlet_pleaseWait="Espera...";
a.WebExZimlet_allCalendars="Todos los calendarios";
a.WebExZimlet_selectAccntToUse="Selecciona una cuenta WebEx";
a.WebExZimlet_webExAccntToUse="Cuenta WebEx:";
a.WebExZimlet_enterYourName="[Introduce tu nombre]";
a.WebExZimlet_email="Correo electr\u00f3nico:";
a.WebExZimlet_enterYourEmail="[Introduce tu correo electr\u00f3nico]";
a.WebExZimlet_notConfigured="No configurada";
a.WebExZimlet_accntNumberAndName="Cuenta {0} ({1})";
a.WebExZimlet_getAccounts="Opciones de la cuenta:";
a.WebExZimlet_help="ayuda";
a.WebExZimlet_startQuickWebExMeeting="Iniciar una Reuni\u00f3n r\u00e1pida de WebEx";
a.WebExZimlet_addAttendees="A\u00f1adir asistente(s):";
a.WebExZimlet_quickMeetingSubject="Reuni\u00f3n r\u00e1pida de WebEx (participar ahora)";
a.WebExZimlet_quickMeetingLocation="Reuni\u00f3n r\u00e1pida de WebEx (participar ahora)";
a.WebExZimlet_startOrJoinWebExMeeting="Iniciar o participar en una reuni\u00f3n de WebEx";
a.WebExZimlet_host="Anfitri\u00f3n";
a.WebExZimlet_startTime="Hora de inicio";
a.WebExZimlet_action="Acci\u00f3n";
a.WebExZimlet_meetingName="Nombre de la reuni\u00f3n";
a.WebExZimlet_meetingsList="Lista de reuniones de WebEx:";
a.WebExZimlet_startJoin="Iniciar/participar";
a.WebExZimlet_fromNowOn="Actuales y futuras";
a.WebExZimlet_today="Hoy";
a.WebExZimlet_tomorrow="Ma\u00f1ana";
a.WebExZimlet_next7days="Los pr\u00f3ximos 7 d\u00edas";
a.WebExZimlet_showMeetings="Mostrar reuniones:";
a.WebExZimlet_savesThisApptAsWebEx="Guardar como WebEx";
a.WebExZimlet_saveAsWebEx="Guardar como WebEx";
a.WebExZimlet_successfullyCreatedWebEx="Cita de WebEx creada correctamente";
a.WebExZimlet_unableToCreateMeeting="Imposible crear reuni\u00f3n de WebEx";
a.WebExZimlet_noWebExAccount="No se ha configurado ninguna cuenta WebEx.<br/>Haz clic con el bot\u00f3n derecho en el Zimlet y selecciona \u2018Administrar cuentas\u2019 para proceder a la configuraci\u00f3n.";
a.WebExZimlet_webExError="Error de WebEx";
a.WebExZimlet_failureReason="Motivo del error:";
a.WebExZimlet_webExDidntReturnMeetingKey="WebEx no ha encontrado la clave de la reuni\u00f3n. Es posible que la reuni\u00f3n no se haya creado en el servidor de WebEx.";
a.WebExZimlet_unableToGetMeetingInfo="Imposible obtener la informaci\u00f3n sobre las reuniones de WebEx";
a.WebExZimlet_unableToGetJoinOrHostURL="Imposible obtener la URL de WebEx para iniciar o participar en la reuni\u00f3n";
a.WebExZimlet_couldNotGetJoinMeetingUrl="Imposible obtener la URL de WebEx para participar en la reuni\u00f3n";
a.WebExZimlet_unableToDeleteWebExAppt="Imposible eliminar la reuni\u00f3n de WebEx";
a.WebExZimlet_unableToCreateOrModifyMeeting="Imposible crear o modificar la reuni\u00f3n de WebEx";
a.WebExZimlet_invalidAlternateHost="Anfitri\u00f3n alternativo no v\u00e1lido.<br/>Los anfitriones alternativos se utilizan para permitir que otros anfitriones programen reuniones en su nombre. Para utilizar esta funci\u00f3n, se debe configurar en el perfil de WebEx. <br/><br/>Para otorgar permisos para un anfitri\u00f3n alternativo:<br/>1. Inicie sesi\u00f3n en su cuenta WebEx.<br/>2. Vaya a Configuraci\u00f3n > Mi perfil > Opciones de sesi\u00f3n > Permiso de programaci\u00f3n.<br/>3. Introduzca anfitriones alternativos.<br/>4. Guarde el perfil.";
a.WebExZimlet_setupAlternateHost="Los anfitriones alternativos se usan para permitir que otros anfitriones programen reuniones en su nombre. Para usar esta funci\u00f3n, se debe configurar en el Perfil de WebEx. <br/><br/>Para otorgar permisos para un anfitri\u00f3n alternativo:<br/>1. Inicie sesi\u00f3n en su cuenta WebEx.<br/>2. Vaya a Configuraci\u00f3n > Mi perfil > Opciones de sesi\u00f3n > Permiso de programaci\u00f3n.<br/>3. Introduzca anfitriones alternativos.<br/>4. Guarde el perfil.";
a.WebExZimlet_userPwdCIdRequired="El nombre de usuario, la contrase\u00f1a y el ID de la empresa WebEx son obligatorios.";
a.WebExZimlet_couldNotRegisterAttendees="No se ha podido registrar a los asistentes";
a.cannotContinueInvalidEmails="No se puede continuar. Se han encontrado los siguientes correos electr\u00f3nicos no v\u00e1lidos";
a.modifyAlertNotice="La reuni\u00f3n de WebEx se ha creado correctamente. <br><br>Ten en cuenta que:<br> Si modificas esta reuni\u00f3n (excepto el cuerpo), deber\u00e1s volver a crear la reuni\u00f3n de WebEx";
a.WebExZimlet_noMeetingsFound="Las reuniones WebEx no se pueden mostrar.  No se ha encontrado ning\u00fan registro.";
a.WebExZimlet_findingMeetings="Recuperando reuniones de WebEx\u2026";
a.WebExZimlet_meetingWasDeleted="La reuni\u00f3n de WebEx se ha eliminado.";
a.WebExZimlet_entireSeriesWillBeDeleted="Cita de WebEx encontrada.<br/> Para una cita recurrente, se eliminar\u00e1 del servidor WebEx la serie completa.<br/> \u00bfDeseas continuar?";
a.WebExZimlet_modifyApptAvoidDuplicateInfoWarning="Modificaci\u00f3n de una cita de WebEx.<br/> Aseg\u00farate de eliminar de los campos del cuerpo, el asunto y la ubicaci\u00f3n los datos anteriores de WebEx para evitar introducir informaci\u00f3n diversa sobre WebEx. <br/>\u00bfDeseas continuar?";
a.WebExZimlet_teleconferenceDetails="Detalles de teleconferencias:";
a.WebExZimlet_webExDetails="Detalles de WebEx:";
delete a;
if(!window.com_zimbra_ymemoticons){
window.com_zimbra_ymemoticons={}
}
a=window.com_zimbra_ymemoticons;
a.label="Yahoo! Emoticons";
a.description="Displays Yahoo! Emoticons images in email messages.";
a.yahooEmoticons="Yahoo! Emoticons";
a.temporarilyDisableInMail="Temporarily disable in Mail";
a.preferences="Preferences";
a.enableInMail="Enable Emoticons In Mail";
a.yahoo_emoticons_pref_dialog_title="Yahoo! Emoticons Preferences";
a.emoticon_happy="happy";
a.emoticon_sad="sad";
a.emoticon_pumpkin="pumpkin";
a.emoticon_coffee="coffee";
a.emoticon_blushing="blushing";
a.emoticon_not_talking="not talking";
a.emoticon_big_hug="big hug";
a.emoticon_d_oh="d\u2019oh";
a.emoticon_shame_on_you="shame on you";
a.emoticon_time_out="time out";
a.emoticon_monkey="monkey";
a.emoticon_clown="clown";
a.emoticon_sleepy="sleepy";
a.emoticon_batting_eyelashes="batting eyelashes";
a.emoticon_liar="liar";
a.emoticon_party="party";
a.emoticon_angry="angry";
a.emoticon_confused="confused";
a.emoticon_whew="whew!";
a.emoticon_daydreaming="daydreaming";
a.emoticon_big_grin="big grin";
a.emoticon_dancing="dancing";
a.emoticon_nerd="nerd";
a.emoticon_chatterbox="chatterbox";
a.emoticon_wave="wave";
a.emoticon_call_me="call me";
a.emoticon_drooling="drooling";
a.emoticon_yawn="yawn";
a.emoticon_surprise="surprise";
a.emoticon_hiro="hiro";
a.emoticon_laughing="laughing";
a.emoticon_raised_eyebrow="raised eyebrow";
a.emoticon_idea="idea";
a.emoticon_on_the_phone="on the phone";
a.emoticon_nailbiting="nailbiting";
a.emoticon_yin_yang="yin yang";
a.emoticon_kiss="kiss";
a.emoticon_at_wits_end="at wits\u2019 end";
a.emoticon_billy="billy";
a.emoticon_I_dont_know="I don\u2019t know";
a.emoticon_hypnotized="hypnotized";
a.emoticon_cow="cow";
a.emoticon_applause="applause";
a.emoticon_waiting="waiting";
a.emoticon_love_struck="love struck";
a.emoticon_dont_tell_anyone="don\u2019t tell anyone";
a.emoticon_chicken="chicken";
a.emoticon_bug="bug";
a.emoticon_star="star";
a.emoticon_straight_face="straight face";
a.emoticon_crying="crying";
a.emoticon_skull="skull";
a.emoticon_angel="angel";
a.emoticon_phbbbbt="phbbbbt";
a.emoticon_alien="alien";
a.emoticon_broken_heart="broken heart";
a.emoticon_loser="loser";
a.emoticon_pig="pig";
a.emoticon_bring_it_on="bring it on";
a.emoticon_feeling_beat_up="feeling beat up";
a.emoticon_money_eyes="money eyes";
a.emoticon_thinking="thinking";
a.emoticon_peace_sign="peace sign";
a.emoticon_oh_go_on="oh go on";
a.emoticon_good_luck="good luck";
a.emoticon_not_listening="not listening";
a.emoticon_tongue="tongue";
a.emoticon_not_worthy="not worthy";
a.emoticon_whistling="whistling";
a.emoticon_sigh="sigh";
a.emoticon_puppy_dog_eyes="puppy dog eyes";
a.emoticon_devil="devil";
a.emoticon_talk_to_the_hand="talk to the hand";
a.emoticon_rolling_eyes="rolling eyes";
a.emoticon_flag="flag";
a.emoticon_april="april";
a.emoticon_silly="silly";
a.emoticon_rolling_on_the_floor="rolling on the floor";
a.emoticon_frustrated="frustrated";
a.emoticon_cool="cool";
a.emoticon_winking="winking";
a.emoticon_smug="smug";
a.emoticon_sick="sick";
a.emoticon_cowboy="cowboy";
a.emoticon_worried="worried";
a.emoticon_hee_hee="hee hee";
a.emoticon_praying="praying";
a.emoticon_rose="rose";
delete a;
if(!window.com_zimbra_ymemoticons){
window.com_zimbra_ymemoticons={}
}
a=window.com_zimbra_ymemoticons;
a.label="Emoticonos de Yahoo!";
a.description="Muestra las im\u00e1genes de los emoticonos de Yahoo! en los mensajes de correo electr\u00f3nico";
a.yahooEmoticons="Yahoo! Emoticonos";
a.temporarilyDisableInMail="Temporalmente desactivados en el correo";
a.preferences="Preferencias";
a.enableInMail="Habilitar los emoticonos en mensajes de correo";
a.yahoo_emoticons_pref_dialog_title="Preferencias de los emoticonos de Yahoo!";
a.yahoo_emoticons_toaster_enabled="Emoticonos activados en Correo";
a.yahoo_emoticons_toaster_disabled="Emoticonos desactivados en Correo";
a.yahoo_emoticons_toaster_temporarily_disabled="Emoticonos temporalmente desactivados";
a.emoticon_happy="feliz";
a.emoticon_sad="triste";
a.emoticon_pumpkin="calabaza";
a.emoticon_coffee="caf\u00e9";
a.emoticon_blushing="sonrojarse";
a.emoticon_not_talking="no te hablo";
a.emoticon_big_hug="fuerte abrazo";
a.emoticon_d_oh="\u00a1Oh no!";
a.emoticon_shame_on_you="deber\u00eda darte verg\u00fcenza";
a.emoticon_time_out="tiempo muerto";
a.emoticon_monkey="mono";
a.emoticon_clown="payaso";
a.emoticon_sleepy="tener sue\u00f1o";
a.emoticon_batting_eyelashes="pesta\u00f1eando coquetamente";
a.emoticon_liar="mentiroso";
a.emoticon_party="fiesta";
a.emoticon_angry="enfadado";
a.emoticon_confused="confundido";
a.emoticon_whew="\u00a1uf!";
a.emoticon_daydreaming="so\u00f1ando despierto";
a.emoticon_big_grin="gran sonrisa";
a.emoticon_dancing="bailando";
a.emoticon_nerd="empoll\u00f3n";
a.emoticon_chatterbox="parlanch\u00edn";
a.emoticon_wave="ola";
a.emoticon_call_me="ll\u00e1mame";
a.emoticon_drooling="babeando";
a.emoticon_yawn="bostezo";
a.emoticon_surprise="sorpresa";
a.emoticon_hiro="hiro";
a.emoticon_laughing="riendo";
a.emoticon_raised_eyebrow="ceja levantada";
a.emoticon_idea="idea";
a.emoticon_on_the_phone="al tel\u00e9fono";
a.emoticon_nailbiting="morder las u\u00f1as";
a.emoticon_yin_yang="yin yang";
a.emoticon_kiss="beso";
a.emoticon_at_wits_end="desesperado";
a.emoticon_billy="billy";
a.emoticon_I_dont_know="No lo s\u00e9";
a.emoticon_hypnotized="hipnotizado";
a.emoticon_cow="vaca";
a.emoticon_applause="aplauso";
a.emoticon_waiting="esperando";
a.emoticon_love_struck="enamorado";
a.emoticon_dont_tell_anyone="no se lo cuentes a nadie";
a.emoticon_chicken="gallina";
a.emoticon_bug="chinche";
a.emoticon_star="estrella";
a.emoticon_straight_face="cara seria";
a.emoticon_crying="llorando";
a.emoticon_skull="calavera";
a.emoticon_angel="angel";
a.emoticon_phbbbbt="sacar la lengua";
a.emoticon_alien="alien";
a.emoticon_broken_heart="coraz\u00f3n roto";
a.emoticon_loser="perdedor";
a.emoticon_pig="cerdo";
a.emoticon_bring_it_on="\u00a1vamos!";
a.emoticon_feeling_beat_up="sentirse apaleado";
a.emoticon_money_eyes="ver dinero";
a.emoticon_thinking="pensando";
a.emoticon_peace_sign="signo de paz";
a.emoticon_oh_go_on="sigue";
a.emoticon_good_luck="buena suerte";
a.emoticon_not_listening="no quiero escuchar";
a.emoticon_tongue="lengua";
a.emoticon_not_worthy="no merece la pena";
a.emoticon_whistling="silbando";
a.emoticon_sigh="suspiro";
a.emoticon_puppy_dog_eyes="ojos de cachorro";
a.emoticon_devil="demonio";
a.emoticon_talk_to_the_hand="no quiero escuchar";
a.emoticon_rolling_eyes="poner los ojos en blanco";
a.emoticon_flag="bandera";
a.emoticon_april="april";
a.emoticon_silly="hacer el tonto";
a.emoticon_rolling_on_the_floor="revolcarse en el suelo de risa";
a.emoticon_frustrated="frustrado";
a.emoticon_cool="guay";
a.emoticon_winking="gui\u00f1ar el ojo";
a.emoticon_smug="engre\u00eddo";
a.emoticon_sick="enfermo";
a.emoticon_cowboy="vaquero";
a.emoticon_worried="preocupado";
a.emoticon_hee_hee="je je";
a.emoticon_praying="rezando";
a.emoticon_rose="rosa";
delete a;
if(!window["zimbra-zimlet-additional-signature-setting"]){
window["zimbra-zimlet-additional-signature-setting"]={}
}
a=window["zimbra-zimlet-additional-signature-setting"];
a.label="Additional signatures";
a.description="Allows user to make extra signatures to use with any accounts";
delete a;
if(!window["zimbra-zimlet-additional-signature-setting"]){
window["zimbra-zimlet-additional-signature-setting"]={}
}
a=window["zimbra-zimlet-additional-signature-setting"];
a.label="Firmas Adicionales";
a.description="Permite al usuario hacer firmas adicionales para usar con cualquier cuenta";
delete a;
if(!window["zimbra-zimlet-calendar-subscription"]){
window["zimbra-zimlet-calendar-subscription"]={}
}
a=window["zimbra-zimlet-calendar-subscription"];
a.label="Calendar subscriptions";
a.description="Adds option to subscribe external calendar feeds";
delete a;
if(!window["zimbra-zimlet-calendar-subscription"]){
window["zimbra-zimlet-calendar-subscription"]={}
}
a=window["zimbra-zimlet-calendar-subscription"];
a.label="Suscripciones de calendario";
a.description="Agrega la opci\u00f3n de suscribirse a fuentes de calendario externas";
delete a;
if(!window["zimbra-zimlet-chat-video"]){
window["zimbra-zimlet-chat-video"]={}
}
a=window["zimbra-zimlet-chat-video"];
a.label="Chat and Video";
a.description="Chat and video meeting features for organizations";
delete a;
if(!window["zimbra-zimlet-chat-video"]){
window["zimbra-zimlet-chat-video"]={}
}
a=window["zimbra-zimlet-chat-video"];
a.label="Chat y Video";
a.description="Funciones de chat y videollamadas para organizaciones";
delete a;
if(!window["zimbra-zimlet-classic-document-editor"]){
window["zimbra-zimlet-classic-document-editor"]={}
}
a=window["zimbra-zimlet-classic-document-editor"];
a.NewPresentation_description="New Presentation";
a.NewPresentation_display="N,P";
a.NewPresentation_keycode="78,80";
a.NewPresentation_sort="10139";
a.NewSpreadsheet_description="New Spreadsheet";
a.NewSpreadsheet_display="N,X";
a.NewSpreadsheet_keycode="78,88";
a.NewSpreadsheet_sort="10138";
a.convert_dialog_description="This file will be converted to .docx format after editing.";
a.convert_dialog_title="Convert .txt to .docx";
a.description="Allow user to edit briefcase file and share.";
a.edit_type="Edit";
a.file_create_title_Document="Create New Document";
a.file_create_title_Presentation="Create New Presentation";
a.file_create_title_Spreadsheet="Create New Spreadsheet";
a.file_edit_properties="Edit Properties";
a.file_exist_error='File with name "{0}" already exists. Please use a different name.';
a.file_open="Open";
a.file_properties="File Properties";
a.internal_user="Internal User";
a.label="Document Editor";
a.name_label="Name:";
a.presentation_label="Presentation";
a.public_link_access_label="You can access the shared document at:";
a.public_share="Public Share";
a.public_share_checkbox_lbl="Generate a public Link. This is your easiest but least secure and least flexible option for sharing.";
a.rights_label="Rights:";
a.share_button="Share";
a.share_file="Share File";
a.share_file_with_self="You cannot share a file with yourself";
a.sharing_for_this_file="Sharing for this file";
a.spreadsheet_label="Spreadsheet";
a.view_type="View";
delete a;
if(!window["zimbra-zimlet-classic-document-editor"]){
window["zimbra-zimlet-classic-document-editor"]={}
}
a=window["zimbra-zimlet-classic-document-editor"];
a.NewPresentation_description="Nueva presentaci\u00f3n";
a.NewPresentation_display="N,P";
a.NewPresentation_keycode="78,80";
a.NewPresentation_sort="10139";
a.NewSpreadsheet_description="Nueva hoja de c\u00e1lculo";
a.NewSpreadsheet_display="N,X";
a.NewSpreadsheet_keycode="78,88";
a.NewSpreadsheet_sort="10138";
a.convert_dialog_description="Este archivo se convertir\u00e1 a formato .docx despu\u00e9s de editarlo.";
a.convert_dialog_title="Convertir .txt a .docx";
a.description="Permita que el usuario edite el archivo del malet\u00edn y comparta.";
a.edit_type="Editar";
a.file_create_title_Document="Crear nuevo documento";
a.file_create_title_Presentation="Crear nueva presentaci\u00f3n";
a.file_create_title_Spreadsheet="Crear nueva hoja de c\u00e1lculo";
a.file_edit_properties="Editar propiedades";
a.file_exist_error='El archivo con el nombre "{0}" ya existe. Utilice un nombre diferente.';
a.file_open="Abierto";
a.file_properties="Propiedades de archivo";
a.internal_user="Usuario Interno";
a.label="Editor de documentos";
a.name_label="Nombre:";
a.presentation_label="Presentaci\u00f3n";
a.public_link_access_label="Puede acceder al documento compartido en:";
a.public_share="Compartir p\u00fablico";
a.public_share_checkbox_lbl="Generar un enlace p\u00fablico. Esta es la opci\u00f3n m\u00e1s f\u00e1cil pero menos segura y menos flexible para compartir.";
a.rights_label="Derechos:";
a.share_button="Compartir";
a.share_file="Recurso compartido de archivos";
a.share_file_with_self="No puedes compartir un archivo contigo mismo";
a.sharing_for_this_file="Compartir para este archivo";
a.spreadsheet_label="Hoja de c\u00e1lculo";
a.view_type="Ver";
delete a;
if(!window["zimbra-zimlet-date"]){
window["zimbra-zimlet-date"]={}
}
a=window["zimbra-zimlet-date"];
a.label="Highlight dates";
a.description="Detects dates in emails or other content and displays list of the day's event on hover";
delete a;
if(!window["zimbra-zimlet-date"]){
window["zimbra-zimlet-date"]={}
}
a=window["zimbra-zimlet-date"];
a.label="Destacar fechas";
a.description="Detecta fechas en correos electr\u00f3nicos u otro contenido y muestra la lista del evento del d\u00eda al pasar el mouse";
delete a;
if(!window["zimbra-zimlet-document-editor"]){
window["zimbra-zimlet-document-editor"]={}
}
a=window["zimbra-zimlet-document-editor"];
a.label="Document editor zimlet";
a.description="A zimlet that allows user to edit documents";
delete a;
if(!window["zimbra-zimlet-document-editor"]){
window["zimbra-zimlet-document-editor"]={}
}
a=window["zimbra-zimlet-document-editor"];
a.label="zimlet editor de documentos";
a.description="Un zimlet que permite al usuario editar documentos";
delete a;
if(!window["zimbra-zimlet-emptysubject"]){
window["zimbra-zimlet-emptysubject"]={}
}
a=window["zimbra-zimlet-emptysubject"];
a.label="Emptysubject Zimlet";
a.description="Zimlet for showing modal when user tries to send mail without any subject";
delete a;
if(!window["zimbra-zimlet-emptysubject"]){
window["zimbra-zimlet-emptysubject"]={}
}
a=window["zimbra-zimlet-emptysubject"];
a.label="Vac\u00edosujeto Zimlet";
a.description="Zimlet para mostrar modal cuando el usuario intenta enviar un correo sin ning\u00fan asunto";
delete a;
if(!window["zimbra-zimlet-install-pwa"]){
window["zimbra-zimlet-install-pwa"]={}
}
a=window["zimbra-zimlet-install-pwa"];
a.label="Progressive web app";
a.description="Adds option in Gear menu to install Zimbra as progressive web app";
delete a;
if(!window["zimbra-zimlet-install-pwa"]){
window["zimbra-zimlet-install-pwa"]={}
}
a=window["zimbra-zimlet-install-pwa"];
a.label="aplicaci\u00f3n web progresiva";
a.description="Agrega la opci\u00f3n en el men\u00fa Gear para instalar Zimbra como una aplicaci\u00f3n web progresiva";
delete a;
if(!window["zimbra-zimlet-secure-mail"]){
window["zimbra-zimlet-secure-mail"]={}
}
a=window["zimbra-zimlet-secure-mail"];
a.label="Securemail Zimlet";
a.description="Zimlet for secure email communication";
delete a;
if(!window["zimbra-zimlet-secure-mail"]){
window["zimbra-zimlet-secure-mail"]={}
}
a=window["zimbra-zimlet-secure-mail"];
a.label="Zimlet de correo seguro";
a.description="Zimlet para comunicaciones seguras por correo electr\u00f3nico";
delete a;
if(!window["zimbra-zimlet-set-default-client"]){
window["zimbra-zimlet-set-default-client"]={}
}
a=window["zimbra-zimlet-set-default-client"];
a.label="Set default client";
a.description="Allows user to set default client to Modern or Classic";
delete a;
if(!window["zimbra-zimlet-set-default-client"]){
window["zimbra-zimlet-set-default-client"]={}
}
a=window["zimbra-zimlet-set-default-client"];
a.label="Establecer cliente predeterminado";
a.description="Permite al usuario configurar el cliente predeterminado en Moderno o Cl\u00e1sico";
delete a;
if(!window["zimbra-zimlet-user-sessions-management"]){
window["zimbra-zimlet-user-sessions-management"]={}
}
a=window["zimbra-zimlet-user-sessions-management"];
a.label="User session management";
a.description="Displays all active sessions on all devices and allows user to end them";
delete a;
if(!window["zimbra-zimlet-user-sessions-management"]){
window["zimbra-zimlet-user-sessions-management"]={}
}
a=window["zimbra-zimlet-user-sessions-management"];
a.label="Gesti\u00f3n de sesiones de usuario";
a.description="Muestra todas las sesiones activas en todos los dispositivos y permite al usuario finalizarlas";
delete a;
if(window.console&&window.console.log){
console.log("Loading com_zimbra_proxy_config.js")
}
if(ZaSettings&&ZaSettings.EnabledZimlet.com_zimbra_proxy_config){
ZaProxyConfig=function(){};
ZaProxyConfig.MAIL_MODE_CHOICES=["http","https","both","mixed","redirect"];
ZaProxyConfig.CLIENT_CERT_MODE_CHOICES=["off","on","optional"];
ZaProxyConfig.STARTTLS_MODE_CHOICES=[{
label:com_zimbra_proxy_config.LBL_ProxyStartTLSMode_OFF,value:"off"}
,{
label:com_zimbra_proxy_config.LBL_ProxyStartTLSMode_ON,value:"on"}
,{
label:com_zimbra_proxy_config.LBL_ProxyStartTLSMode_ONLY,value:"only"}
];
ZaProxyConfig.PROXY_LOG_LEVEL_CHOICES=["crit","error","warn","notice","info","debug_zimbra","debug_http","debug_mail","debug"];
ZaProxyConfig.A_zimbraReverseProxyWorkerProcesses="zimbraReverseProxyWorkerProcesses";
ZaProxyConfig.A_zimbraReverseProxyWorkerConnections="zimbraReverseProxyWorkerConnections";
ZaProxyConfig.A_zimbraReverseProxyDnsLookupInServerEnabled="zimbraReverseProxyDnsLookupInServerEnabled";
ZaProxyConfig.A_zimbraReverseProxyGenConfigPerVirtualHostname="zimbraReverseProxyGenConfigPerVirtualHostname";
ZaProxyConfig.A_zimbraReverseProxyAdminIPAddress="zimbraReverseProxyAdminIPAddress";
ZaProxyConfig.A_zimbraReverseProxyLogLevel="zimbraReverseProxyLogLevel";
ZaProxyConfig.A_zimbraReverseProxyUpstreamServers="zimbraReverseProxyUpstreamServers";
ZaProxyConfig.A_zimbraReverseProxyAvailableLookupTargets="zimbraReverseProxyAvailableLookupTargets";
ZaProxyConfig.A_zimbraReverseProxyHttpEnabled="zimbraReverseProxyHttpEnabled";
ZaProxyConfig.A_zimbraReverseProxyMailMode="zimbraReverseProxyMailMode";
ZaProxyConfig.A_zimbraMailProxyPort="zimbraMailProxyPort";
ZaProxyConfig.A_zimbraMailSSLProxyPort="zimbraMailSSLProxyPort";
ZaProxyConfig.A_zimbraMailSSLProxyClientCertPort="zimbraMailSSLProxyClientCertPort";
ZaProxyConfig.A_zimbraReverseProxyClientCertMode="zimbraReverseProxyClientCertMode";
ZaProxyConfig.A_zimbraReverseProxyAdminEnabled="zimbraReverseProxyAdminEnabled";
ZaProxyConfig.A_zimbraAdminProxyPort="zimbraAdminProxyPort";
ZaProxyConfig.A_zimbraAdminPort="zimbraAdminPort";
ZaProxyConfig.A_zimbraMailPort="zimbraMailPort";
ZaProxyConfig.A_zimbraMailSSLPort="zimbraMailSSLPort";
ZaProxyConfig.A_zimbraMailMode="zimbraMailMode";
ZaProxyConfig.A_zimbraReverseProxySSLToUpstreamEnabled="zimbraReverseProxySSLToUpstreamEnabled";
ZaProxyConfig.A_zimbraReverseProxyMailEnabled="zimbraReverseProxyMailEnabled";
ZaProxyConfig.A_zimbraReverseProxyAuthWaitInterval="zimbraReverseProxyAuthWaitInterval";
ZaProxyConfig.A_zimbraReverseProxyImapSaslPlainEnabled="zimbraReverseProxyImapSaslPlainEnabled";
ZaProxyConfig.A_zimbraReverseProxyPop3SaslPlainEnabled="zimbraReverseProxyPop3SaslPlainEnabled";
ZaProxyConfig.A_zimbraReverseProxyImapSaslGssapiEnabled="zimbraReverseProxyImapSaslGssapiEnabled";
ZaProxyConfig.A_zimbraReverseProxyPop3SaslGssapiEnabled="zimbraReverseProxyPop3SaslGssapiEnabled";
ZaProxyConfig.A_zimbraImapProxyBindPort="zimbraImapProxyBindPort";
ZaProxyConfig.A_zimbraPop3ProxyBindPort="zimbraPop3ProxyBindPort";
ZaProxyConfig.A_zimbraImapSSLProxyBindPort="zimbraImapSSLProxyBindPort";
ZaProxyConfig.A_zimbraPop3SSLProxyBindPort="zimbraPop3SSLProxyBindPort";
ZaProxyConfig.A_zimbraImapBindPort="zimbraImapBindPort";
ZaProxyConfig.A_zimbraPop3BindPort="zimbraPop3BindPort";
ZaProxyConfig.A_zimbraImapSSLBindPort="zimbraImapSSLBindPort";
ZaProxyConfig.A_zimbraPop3SSLBindPort="zimbraPop3SSLBindPort";
ZaProxyConfig.A_zimbraReverseProxyImapStartTlsMode="zimbraReverseProxyImapStartTlsMode";
ZaProxyConfig.A_zimbraReverseProxyPop3StartTlsMode="zimbraReverseProxyPop3StartTlsMode";
ZaProxyConfig.A_zimbraImapCleartextLoginEnabled="zimbraImapCleartextLoginEnabled";
ZaProxyConfig.A_zimbraPop3CleartextLoginEnabled="zimbraPop3CleartextLoginEnabled";
ZaProxyConfig.A_zimbraServiceEnabled="zimbraServiceEnabled";
ZaProxyConfig.A_zimbraReverseProxyLookupTarget="zimbraReverseProxyLookupTarget";
ZaProxyConfig.A_zimbraImapCleartextLoginEnabled="zimbraImapCleartextLoginEnabled";
ZaProxyConfig.A_zimbraPop3CleartextLoginEnabled="zimbraPop3CleartextLoginEnabled";
ZaProxyConfig.A2_proxy_name_array="proxy_name_array";
ZaProxyConfig.A2_mbx_name_array="mbx_name_array";
ZaProxyConfig.A2_target_server="proxy_target_server";
ZaProxyConfig.A2_target_up_servers="proxy_target_up_servers";
ZaProxyConfig.A2_target_lt_servers="proxy_target_lt_servers";
ZaProxyConfig.A2_current_server="proxy_current_server";
ZaProxyConfig.A2_all_mailbox_as_upstream="proxy_all_mailbox_as_upstream";
ZaProxyConfig.A2_all_mailbox_as_lookuptarget="proxy_all_mailbox_as_lookuptarget";
ZaProxyConfig.A2_all_servers="proxy_all_servers";
ZaProxyConfig.DEFAULT_MAIL_MODE="http";
ZaProxyConfig.DEFAULT_MAIL_PORT=80;
ZaProxyConfig.DEFAULT_MAIL_PORT_ZCS=8080;
ZaProxyConfig.DEFAULT_MAIL_SSL_PORT=443;
ZaProxyConfig.DEFAULT_MAIL_SSL_PORT_ZCS=7443;
ZaProxyConfig.DEFAULT_ADMIN_CONSOLE_PORT=9071;
ZaProxyConfig.DEFAULT_ADMIN_CONSOLE_PORT_ZCS=7071;
ZaProxyConfig.DEFAULT_IMAP_PORT=143;
ZaProxyConfig.DEFAULT_IMAP_PORT_ZCS=7143;
ZaProxyConfig.DEFAULT_IMAP_SSL_PORT=993;
ZaProxyConfig.DEFAULT_IMAP_SSL_PORT_ZCS=7993;
ZaProxyConfig.DEFAULT_POP3_PORT=110;
ZaProxyConfig.DEFAULT_POP3_PORT_ZCS=7110;
ZaProxyConfig.DEFAULT_POP3_SSL_PORT=995;
ZaProxyConfig.DEFAULT_POP3_SSL_PORT_ZCS=7995;
if(ZaGlobalConfig&&ZaGlobalConfig.myXModel){
ZaGlobalConfig.myXModel.items.push({
id:ZaProxyConfig.A_zimbraReverseProxyWorkerProcesses,type:_INT_,ref:"attrs/"+ZaProxyConfig.A_zimbraReverseProxyWorkerProcesses,minInclusive:"1",maxInclusive:"16"}
,{
id:ZaProxyConfig.A_zimbraReverseProxyWorkerConnections,type:_INT_,ref:"attrs/"+ZaProxyConfig.A_zimbraReverseProxyWorkerConnections,minInclusive:"1"}
,{
id:ZaProxyConfig.A_zimbraReverseProxySSLToUpstreamEnabled,type:_ENUM_,ref:"attrs/"+ZaProxyConfig.A_zimbraReverseProxySSLToUpstreamEnabled,choices:ZaModel.BOOLEAN_CHOICES}
,{
id:ZaProxyConfig.A_zimbraReverseProxyGenConfigPerVirtualHostname,type:_ENUM_,ref:"attrs/"+ZaProxyConfig.A_zimbraReverseProxyGenConfigPerVirtualHostname,choices:ZaModel.BOOLEAN_CHOICES}
,{
id:ZaProxyConfig.A_zimbraReverseProxyDnsLookupInServerEnabled,type:_ENUM_,ref:"attrs/"+ZaProxyConfig.A_zimbraReverseProxyDnsLookupInServerEnabled,choices:ZaModel.BOOLEAN_CHOICES}
,{
id:ZaProxyConfig.A_zimbraReverseProxyAdminIPAddress,type:_LIST_,ref:"attrs/"+ZaProxyConfig.A_zimbraReverseProxyAdminIPAddress,listItem:{
type:_HOSTNAME_OR_IP_,maxLength:256}}
,{
id:ZaProxyConfig.A_zimbraReverseProxyLogLevel,type:_ENUM_,ref:"attrs/"+ZaProxyConfig.A_zimbraReverseProxyLogLevel,choices:ZaProxyConfig.PROXY_LOG_LEVEL_CHOICES}
,{
id:ZaProxyConfig.A_zimbraReverseProxyHttpEnabled,type:_ENUM_,ref:"attrs/"+ZaProxyConfig.A_zimbraReverseProxyHttpEnabled,choices:ZaModel.BOOLEAN_CHOICES}
,{
id:ZaProxyConfig.A_zimbraReverseProxyMailMode,type:_ENUM_,ref:"attrs/"+ZaProxyConfig.A_zimbraReverseProxyMailMode,choices:ZaProxyConfig.MAIL_MODE_CHOICES}
,{
id:ZaProxyConfig.A_zimbraMailProxyPort,type:_PORT_,ref:"attrs/"+ZaProxyConfig.A_zimbraMailProxyPort}
,{
id:ZaProxyConfig.A_zimbraMailSSLProxyPort,type:_PORT_,ref:"attrs/"+ZaProxyConfig.A_zimbraMailSSLProxyPort}
,{
id:ZaProxyConfig.A_zimbraMailSSLProxyClientCertPort,type:_PORT_,ref:"attrs/"+ZaProxyConfig.A_zimbraMailSSLProxyClientCertPort}
,{
id:ZaProxyConfig.A_zimbraReverseProxyClientCertMode,type:_ENUM_,ref:"attrs/"+ZaProxyConfig.A_zimbraReverseProxyClientCertMode,choices:ZaProxyConfig.CLIENT_CERT_MODE_CHOICES}
,{
id:ZaProxyConfig.A_zimbraReverseProxyAdminEnabled,type:_ENUM_,ref:"attrs/"+ZaProxyConfig.A_zimbraReverseProxyAdminEnabled,choices:ZaModel.BOOLEAN_CHOICES}
,{
id:ZaProxyConfig.A_zimbraAdminProxyPort,type:_PORT_,ref:"attrs/"+ZaProxyConfig.A_zimbraAdminProxyPort}
,{
id:ZaProxyConfig.A_zimbraReverseProxyMailEnabled,type:_ENUM_,ref:"attrs/"+ZaProxyConfig.A_zimbraReverseProxyMailEnabled,choices:ZaModel.BOOLEAN_CHOICES}
,{
id:ZaProxyConfig.A_zimbraReverseProxyAuthWaitInterval,type:_LIFETIME_NUMBER_,ref:"attrs/"+ZaProxyConfig.A_zimbraReverseProxyAuthWaitInterval,minInclusive:0}
,{
id:ZaProxyConfig.A_zimbraReverseProxyImapSaslPlainEnabled,type:_ENUM_,ref:"attrs/"+ZaProxyConfig.A_zimbraReverseProxyImapSaslPlainEnabled,choices:ZaModel.BOOLEAN_CHOICES}
,{
id:ZaProxyConfig.A_zimbraReverseProxyPop3SaslPlainEnabled,type:_ENUM_,ref:"attrs/"+ZaProxyConfig.A_zimbraReverseProxyPop3SaslPlainEnabled,choices:ZaModel.BOOLEAN_CHOICES}
,{
id:ZaProxyConfig.A_zimbraReverseProxyImapSaslGssapiEnabled,type:_ENUM_,ref:"attrs/"+ZaProxyConfig.A_zimbraReverseProxyImapSaslGssapiEnabled,choices:ZaModel.BOOLEAN_CHOICES}
,{
id:ZaProxyConfig.A_zimbraReverseProxyPop3SaslGssapiEnabled,type:_ENUM_,ref:"attrs/"+ZaProxyConfig.A_zimbraReverseProxyPop3SaslGssapiEnabled,choices:ZaModel.BOOLEAN_CHOICES}
,{
id:ZaProxyConfig.A_zimbraImapProxyBindPort,type:_PORT_,ref:"attrs/"+ZaProxyConfig.A_zimbraImapProxyBindPort}
,{
id:ZaProxyConfig.A_zimbraPop3ProxyBindPort,type:_PORT_,ref:"attrs/"+ZaProxyConfig.A_zimbraPop3ProxyBindPort}
,{
id:ZaProxyConfig.A_zimbraImapSSLProxyBindPort,type:_PORT_,ref:"attrs/"+ZaProxyConfig.A_zimbraImapSSLProxyBindPort}
,{
id:ZaProxyConfig.A_zimbraPop3SSLProxyBindPort,type:_PORT_,ref:"attrs/"+ZaProxyConfig.A_zimbraPop3SSLProxyBindPort}
,{
id:ZaProxyConfig.A_zimbraReverseProxyImapStartTlsMode,type:_ENUM_,ref:"attrs/"+ZaProxyConfig.A_zimbraReverseProxyImapStartTlsMode,choices:ZaProxyConfig.STARTTLS_MODE_CHOICES}
,{
id:ZaProxyConfig.A_zimbraReverseProxyPop3StartTlsMode,type:_ENUM_,ref:"attrs/"+ZaProxyConfig.A_zimbraReverseProxyPop3StartTlsMode,choices:ZaProxyConfig.STARTTLS_MODE_CHOICES}
)
}
if(ZaServer&&ZaServer.myXModel){
ZaServer.myXModel.items.push({
id:ZaProxyConfig.A_zimbraReverseProxyWorkerProcesses,type:_COS_INT_,ref:"attrs/"+ZaProxyConfig.A_zimbraReverseProxyWorkerProcesses,minInclusive:"1",maxInclusive:"16"}
,{
id:ZaProxyConfig.A_zimbraReverseProxyWorkerConnections,type:_COS_INT_,ref:"attrs/"+ZaProxyConfig.A_zimbraReverseProxyWorkerConnections,minInclusive:"1"}
,{
id:ZaProxyConfig.A_zimbraReverseProxySSLToUpstreamEnabled,type:_COS_ENUM_,ref:"attrs/"+ZaProxyConfig.A_zimbraReverseProxySSLToUpstreamEnabled,choices:ZaModel.BOOLEAN_CHOICES}
,{
id:ZaProxyConfig.A_zimbraReverseProxyDnsLookupInServerEnabled,type:_COS_ENUM_,ref:"attrs/"+ZaProxyConfig.A_zimbraReverseProxyDnsLookupInServerEnabled,choices:ZaModel.BOOLEAN_CHOICES}
,{
id:ZaProxyConfig.A_zimbraReverseProxyGenConfigPerVirtualHostname,type:_COS_ENUM_,ref:"attrs/"+ZaProxyConfig.A_zimbraReverseProxyGenConfigPerVirtualHostname,choices:ZaModel.BOOLEAN_CHOICES}
,{
id:ZaProxyConfig.A_zimbraReverseProxyLogLevel,type:_COS_ENUM_,ref:"attrs/"+ZaProxyConfig.A_zimbraReverseProxyLogLevel,choices:ZaProxyConfig.PROXY_LOG_LEVEL_CHOICES}
,{
id:ZaProxyConfig.A_zimbraReverseProxyHttpEnabled,type:_COS_ENUM_,ref:"attrs/"+ZaProxyConfig.A_zimbraReverseProxyHttpEnabled,choices:ZaModel.BOOLEAN_CHOICES}
,{
id:ZaProxyConfig.A_zimbraReverseProxyMailMode,type:_COS_ENUM_,ref:"attrs/"+ZaProxyConfig.A_zimbraReverseProxyMailMode,choices:ZaProxyConfig.MAIL_MODE_CHOICES}
,{
id:ZaProxyConfig.A_zimbraMailProxyPort,type:_COS_PORT_,ref:"attrs/"+ZaProxyConfig.A_zimbraMailProxyPort}
,{
id:ZaProxyConfig.A_zimbraMailSSLProxyPort,type:_COS_PORT_,ref:"attrs/"+ZaProxyConfig.A_zimbraMailSSLProxyPort}
,{
id:ZaProxyConfig.A_zimbraMailSSLProxyClientCertPort,type:_COS_PORT_,ref:"attrs/"+ZaProxyConfig.A_zimbraMailSSLProxyClientCertPort}
,{
id:ZaProxyConfig.A_zimbraReverseProxyClientCertMode,type:_COS_ENUM_,ref:"attrs/"+ZaProxyConfig.A_zimbraReverseProxyClientCertMode,choices:ZaProxyConfig.CLIENT_CERT_MODE_CHOICES}
,{
id:ZaProxyConfig.A_zimbraReverseProxyAdminEnabled,type:_COS_ENUM_,ref:"attrs/"+ZaProxyConfig.A_zimbraReverseProxyAdminEnabled,choices:ZaModel.BOOLEAN_CHOICES}
,{
id:ZaProxyConfig.A_zimbraAdminProxyPort,type:_COS_PORT_,ref:"attrs/"+ZaProxyConfig.A_zimbraAdminProxyPort}
,{
id:ZaProxyConfig.A_zimbraReverseProxyMailEnabled,type:_COS_ENUM_,ref:"attrs/"+ZaProxyConfig.A_zimbraReverseProxyMailEnabled,choices:ZaModel.BOOLEAN_CHOICES}
,{
id:ZaProxyConfig.A_zimbraReverseProxyImapSaslPlainEnabled,type:_COS_ENUM_,ref:"attrs/"+ZaProxyConfig.A_zimbraReverseProxyImapSaslPlainEnabled,choices:ZaModel.BOOLEAN_CHOICES}
,{
id:ZaProxyConfig.A_zimbraReverseProxyPop3SaslPlainEnabled,type:_COS_ENUM_,ref:"attrs/"+ZaProxyConfig.A_zimbraReverseProxyPop3SaslPlainEnabled,choices:ZaModel.BOOLEAN_CHOICES}
,{
id:ZaProxyConfig.A_zimbraReverseProxyImapSaslGssapiEnabled,type:_COS_ENUM_,ref:"attrs/"+ZaProxyConfig.A_zimbraReverseProxyImapSaslGssapiEnabled,choices:ZaModel.BOOLEAN_CHOICES}
,{
id:ZaProxyConfig.A_zimbraReverseProxyPop3SaslGssapiEnabled,type:_COS_ENUM_,ref:"attrs/"+ZaProxyConfig.A_zimbraReverseProxyPop3SaslGssapiEnabled,choices:ZaModel.BOOLEAN_CHOICES}
,{
id:ZaProxyConfig.A_zimbraImapProxyBindPort,type:_COS_PORT_,ref:"attrs/"+ZaProxyConfig.A_zimbraImapProxyBindPort}
,{
id:ZaProxyConfig.A_zimbraPop3ProxyBindPort,type:_COS_PORT_,ref:"attrs/"+ZaProxyConfig.A_zimbraPop3ProxyBindPort}
,{
id:ZaProxyConfig.A_zimbraImapSSLProxyBindPort,type:_COS_PORT_,ref:"attrs/"+ZaProxyConfig.A_zimbraImapSSLProxyBindPort}
,{
id:ZaProxyConfig.A_zimbraPop3SSLProxyBindPort,type:_COS_PORT_,ref:"attrs/"+ZaProxyConfig.A_zimbraPop3SSLProxyBindPort}
,{
id:ZaProxyConfig.A_zimbraReverseProxyImapStartTlsMode,type:_COS_ENUM_,ref:"attrs/"+ZaProxyConfig.A_zimbraReverseProxyImapStartTlsMode,choices:ZaProxyConfig.STARTTLS_MODE_CHOICES}
,{
id:ZaProxyConfig.A_zimbraReverseProxyPop3StartTlsMode,type:_COS_ENUM_,ref:"attrs/"+ZaProxyConfig.A_zimbraReverseProxyPop3StartTlsMode,choices:ZaProxyConfig.STARTTLS_MODE_CHOICES}
)
}
ZaOperation.ENABLE_PROXY=++ZA_OP_INDEX;
ZaProxyConfig.initPopupMenu=function(){
if(!ZaProxyConfig.isProxyInstalledInAnyServer()){
return
}
this._popupOperations[ZaOperation.ENABLE_PROXY]=(new ZaOperation(ZaOperation.ENABLE_PROXY,com_zimbra_proxy_config.LBL_EnableProxy,com_zimbra_proxy_config.LBL_EnableProxy,com_zimbra_proxy_config.LBL_Deploy,com_zimbra_proxy_config.LBL_Deploy,new AjxListener(this,ZaProxyConfig._enableProxyBtnListener)));
this._popupOperations[ZaOperation.DISABLE_PROXY]=(new ZaOperation(ZaOperation.ENABLE_PROXY,com_zimbra_proxy_config.LBL_DisableProxy,com_zimbra_proxy_config.LBL_DisableProxy,com_zimbra_proxy_config.LBL_Undeploy,com_zimbra_proxy_config.LBL_Undeploy,new AjxListener(this,ZaProxyConfig._disableProxyBtnListener)))
};
if(ZaController.initPopupMenuMethods.ZaServerController){
ZaController.initPopupMenuMethods.ZaServerController.push(ZaProxyConfig.initPopupMenu)
}
if(ZaController.initPopupMenuMethods.ZaServerListController){
ZaController.initPopupMenuMethods.ZaServerListController.push(ZaProxyConfig.initPopupMenu)
}
ZaProxyConfig._enableProxyBtnListener=function(o){
try{
var e=new ZaEnableProxy();
if(!this._enableProxyWiz){
this._enableProxyWiz=new ZaEnableProxyWizard(this._container,e)
}
if(this._currentObject){
e[ZaProxyConfig.A2_current_server]=this._currentObject.zimbraServiceHostname
}
this._enableProxyWiz.setObject(e);
this._enableProxyWiz.popup()
}
catch(t){
this._handleException(t,"ZaProxyConfig._enableProxyBtnListener",null,false)
}};
ZaProxyConfig._disableProxyBtnListener=function(t){
try{
var o=new ZaDisableProxy();
if(!this._disableProxyWiz){
this._disableProxyWiz=new ZaDisableProxyWizard(this._container,o)
}
if(this._currentObject){
o[ZaProxyConfig.A2_current_server]=this._currentObject.zimbraServiceHostname
}
this._disableProxyWiz.setObject(o);
this._disableProxyWiz.popup()
}
catch(e){
this._handleException(e,"ZaProxyConfig._disableProxyBtnListener",null,false)
}};
ZaProxyConfig.isProxyInstalledInAnyServer=function(){
if(ZaProxyConfig._proxy_installed){
return ZaProxyConfig._proxy_installed
}
var o=ZaServer.getAll().getArray();
for(var e=0;
e<o.length;
e++){
var t=o[e];
if(t.attrs[ZaServer.A_zimbraMailProxyServiceInstalled]){
ZaProxyConfig._proxy_installed=true;
break
}}
if(!ZaProxyConfig._proxy_installed){
ZaProxyConfig._proxy_installed=false
}
return ZaProxyConfig._proxy_installed
};
ZaProxyConfig.isProxyWizardEnabled=function(r,s,o){
if(!r){
return true
}
if(AjxUtil.isEmpty(s)&&AjxUtil.isEmpty(o)){
return true
}
if(!AjxUtil.isEmpty(s)){
var t=s.length;
for(var e=0;
e<t;
e++){
if(ZaItem.hasWritePermission(s[e],r)){
return true
}}}
if(!AjxUtil.isEmpty(o)){
var n=o.length;
for(var e=0;
e<n;
e++){
if(ZaItem.hasRight(o[e],r)){
return true
}}}};
ZaProxyConfig.changeActionsStateMethod=function(){
var n=this._currentObject;
var o=ZaProxyConfig.ENABLE_PROXY_ATTRS;
var t=ZaProxyConfig.ENABLE_PROXY_RIGHTS;
var e=ZaProxyConfig.isProxyWizardEnabled(n,o,t);
if(this._popupOperations[ZaOperation.ENABLE_PROXY]){
this._popupOperations[ZaOperation.ENABLE_PROXY].enabled=e
}
e=ZaProxyConfig.isProxyWizardEnabled(n,o,t);
if(this._popupOperations[ZaOperation.DISABLE_PROXY]){
this._popupOperations[ZaOperation.DISABLE_PROXY].enabled=e
}};
ZaController.changeActionsStateMethods.ZaServerController.push(ZaProxyConfig.changeActionsStateMethod);
ZaProxyConfig.isWebProxyEnabled=function(){
var e=this.getInstanceValue(ZaProxyConfig.A_zimbraReverseProxyHttpEnabled);
return(e=="TRUE")
};
ZaProxyConfig.isAdminProxyEnabled=function(){
if(!ZaProxyConfig.isWebProxyEnabled.call(this)){
return false
}
var e=this.getInstanceValue(ZaProxyConfig.A_zimbraReverseProxyAdminEnabled);
return(e=="TRUE")
};
ZaProxyConfig.isClientCertAuthEnabled=function(){
if(!ZaProxyConfig.isWebProxyEnabled.call(this)){
return false
}
var e=this.getInstanceValue(ZaProxyConfig.A_zimbraReverseProxyClientCertMode);
return(e=="on"||e=="optional")
};
ZaProxyConfig.isMailProxyEnabled=function(){
var e=this.getInstanceValue(ZaProxyConfig.A_zimbraReverseProxyMailEnabled);
return(e=="TRUE")
};
ZaProxyConfig.PROXY_CONFIG_GENERAL_ATTRS=[ZaProxyConfig.A_zimbraReverseProxyWorkerProcesses,ZaProxyConfig.A_zimbraReverseProxyWorkerConnections,ZaProxyConfig.A_zimbraReverseProxySSLToUpstreamEnabled,ZaProxyConfig.A_zimbraReverseProxyDnsLookupInServerEnabled,ZaProxyConfig.A_zimbraReverseProxyGenConfigPerVirtualHostname];
ZaProxyConfig.GLOBAL_PROXY_CONFIG_GENERAL_ATTRS=ZaProxyConfig.PROXY_CONFIG_GENERAL_ATTRS.push(ZaProxyConfig.A_zimbraReverseProxyAdminIPAddress);
ZaProxyConfig.PROXY_CONFIG_WEB_PROXY_ATTRS=[ZaProxyConfig.A_zimbraReverseProxyHttpEnabled,ZaProxyConfig.A_zimbraReverseProxyMailMode,ZaProxyConfig.A_zimbraMailProxyPort,ZaProxyConfig.A_zimbraMailSSLProxyPort,ZaProxyConfig.A_zimbraReverseProxyAdminEnabled,ZaProxyConfig.A_zimbraAdminProxyPort];
ZaProxyConfig.PROXY_CONFIG_MAIL_PROXY_ATTRS=[ZaProxyConfig.A_zimbraReverseProxyMailEnabled,ZaProxyConfig.A_zimbraReverseProxyImapSaslPlainEnabled,ZaProxyConfig.A_zimbraReverseProxyPop3SaslPlainEnabled,ZaProxyConfig.A_zimbraReverseProxyImapSaslGssapiEnabled,ZaProxyConfig.A_zimbraReverseProxyPop3SaslGssapiEnabled,ZaProxyConfig.A_zimbraImapProxyBindPort,ZaProxyConfig.A_zimbraPop3ProxyBindPort,ZaProxyConfig.A_zimbraImapSSLProxyBindPort,ZaProxyConfig.A_zimbraPop3SSLProxyBindPort,ZaProxyConfig.A_zimbraReverseProxyImapStartTlsMode,ZaProxyConfig.A_zimbraReverseProxyPop3StartTlsMode];
ZaProxyConfig.GLOBAL_PROXY_CONFIG_MAIL_PROXY_ATTRS=ZaProxyConfig.PROXY_CONFIG_MAIL_PROXY_ATTRS.push(ZaProxyConfig.A_zimbraReverseProxyAuthWaitInterval);
ZaProxyConfig.GLOBAL_PROXY_CONFIG_CHAT_PROXY_ATTRS=ZaProxyConfig.PROXY_CONFIG_CHAT_PROXY_ATTRS;
ZaProxyConfig.GLOBAL_PROXY_CONFIG_TAB_ATTRS=[].concat(ZaProxyConfig.GLOBAL_PROXY_CONFIG_GENERAL_ATTRS,ZaProxyConfig.PROXY_CONFIG_WEB_PROXY_ATTRS,ZaProxyConfig.GLOBAL_PROXY_CONFIG_MAIL_PROXY_ATTRS);
ZaProxyConfig.SERVER_PROXY_CONFIG_GLOBAL_TAB_ATTRS=[].concat(ZaProxyConfig.PROXY_CONFIG_GENERAL_ATTRS,ZaProxyConfig.PROXY_CONFIG_WEB_PROXY_ATTRS,ZaProxyConfig.PROXY_CONFIG_MAIL_PROXY_ATTRS,ZaProxyConfig.PROXY_CONFIG_CHAT_PROXY_ATTRS);
ZaProxyConfig.GLOBAL_PROXY_CONFIG_TAB_RIGHTS=[];
ZaProxyConfig.SERVER_PROXY_CONFIG_TAB_RIGHTS=[];
ZaProxyConfig.ENABLE_PROXY_ATTRS=[ZaProxyConfig.A_zimbraReverseProxyHttpEnabled,ZaProxyConfig.A_zimbraReverseProxyMailMode,ZaProxyConfig.A_zimbraMailMode,ZaProxyConfig.A_zimbraMailPort,ZaProxyConfig.A_zimbraMailProxyPort,ZaProxyConfig.A_zimbraMailSSLPort,ZaProxyConfig.A_zimbraMailSSLProxyPort,ZaProxyConfig.A_zimbraReverseProxyAdminEnabled,ZaProxyConfig.A_zimbraAdminProxyPort,ZaProxyConfig.A_zimbraReverseProxyMailEnabled,ZaProxyConfig.A_zimbraImapProxyBindPort,ZaProxyConfig.A_zimbraImapBindPort,ZaProxyConfig.A_zimbraPop3ProxyBindPort,ZaProxyConfig.A_zimbraPop3BindPort,ZaProxyConfig.A_zimbraImapSSLProxyBindPort,ZaProxyConfig.A_zimbraImapSSLBindPort,ZaProxyConfig.A_zimbraPop3SSLProxyBindPort,ZaProxyConfig.A_zimbraPop3SSLBindPort,ZaProxyConfig.A_zimbraReverseProxyImapStartTlsMode,ZaProxyConfig.A_zimbraReverseProxyPop3StartTlsMode,ZaProxyConfig.A_zimbraReverseProxyWorkerProcesses,ZaProxyConfig.A_zimbraReverseProxyWorkerConnections,ZaProxyConfig.A_zimbraReverseProxySSLToUpstreamEnabled,ZaProxyConfig.A_zimbraReverseProxyDnsLookupInServerEnabled,ZaProxyConfig.A_zimbraReverseProxyGenConfigPerVirtualHostname,ZaProxyConfig.A_zimbraReverseProxyLookupTarget,ZaProxyConfig.A_zimbraReverseProxyUpstreamServers,ZaProxyConfig.A_zimbraReverseProxyAvailableLookupTargets];
ZaProxyConfig.ENABLE_PROXY_RIGHTS=["listServer"];
ZaProxyConfig.myGlobalXFormModifier=function(s,o){
if(!ZaProxyConfig.isProxyInstalledInAnyServer()){
return
}
if(ZaTabView.isTAB_ENABLED(o,ZaProxyConfig.GLOBAL_PROXY_CONFIG_TAB_ATTRS,ZaProxyConfig.GLOBAL_PROXY_CONFIG_TAB_RIGHTS)){
var n=++this.TAB_INDEX;
var e={
type:_ZATABCASE_,caseKey:n,colSizes:["auto"],numCols:1,paddingStyle:"padding-left:15px;",width:"98%",items:[{
type:_DWT_ALERT_,containerCssStyle:"padding-bottom:0px",style:DwtAlert.WARNING,iconVisible:true,content:ZaMsg.Alert_ProxyConfig}
,{
type:_ZA_TOP_GROUPER_,numCols:2,colSizes:["275px","auto"],label:com_zimbra_proxy_config.LBL_ProxyWebProxyConfig,visibilityChecks:[[ZATopGrouper_XFormItem.isGroupVisible,ZaProxyConfig.PROXY_CONFIG_WEB_PROXY_ATTRS]],items:[{
type:_CHECKBOX_,label:com_zimbra_proxy_config.LBL_ProxyEnableWebProxy,ref:ZaProxyConfig.A_zimbraReverseProxyHttpEnabled,trueValue:"TRUE",falseValue:"FALSE"}
,{
type:_SELECT1_,label:com_zimbra_proxy_config.LBL_ProxyWebProxyMode,ref:ZaProxyConfig.A_zimbraReverseProxyMailMode,width:"60px",enableDisableChecks:[ZaProxyConfig.isWebProxyEnabled],enableDisableChangeEventSources:[ZaProxyConfig.A_zimbraReverseProxyHttpEnabled]}
,{
type:_CHECKBOX_,label:com_zimbra_proxy_config.LBL_ProxyUseSSLToUpstream,ref:ZaProxyConfig.A_zimbraReverseProxySSLToUpstreamEnabled,trueValue:"TRUE",falseValue:"FALSE"}
,{
type:_TEXTFIELD_,label:com_zimbra_proxy_config.LBL_ProxyHttpProxyPort,ref:ZaProxyConfig.A_zimbraMailProxyPort,width:"60px",enableDisableChecks:[ZaProxyConfig.isWebProxyEnabled],enableDisableChangeEventSources:[ZaProxyConfig.A_zimbraReverseProxyHttpEnabled]}
,{
type:_TEXTFIELD_,label:com_zimbra_proxy_config.LBL_ProxyHttpSSLProxyPort,ref:ZaProxyConfig.A_zimbraMailSSLProxyPort,width:"60px",enableDisableChecks:[ZaProxyConfig.isWebProxyEnabled],enableDisableChangeEventSources:[ZaProxyConfig.A_zimbraReverseProxyHttpEnabled]}
,{
type:_SPACER_,height:10}
,{
type:_CHECKBOX_,label:com_zimbra_proxy_config.LBL_ProxyAdminEnabled,ref:ZaProxyConfig.A_zimbraReverseProxyAdminEnabled,trueValue:"TRUE",falseValue:"FALSE",enableDisableChecks:[ZaProxyConfig.isWebProxyEnabled],enableDisableChangeEventSources:[ZaProxyConfig.A_zimbraReverseProxyHttpEnabled]}
,{
type:_TEXTFIELD_,label:com_zimbra_proxy_config.LBL_ProxyAdminProxyPort,ref:ZaProxyConfig.A_zimbraAdminProxyPort,width:"60px",enableDisableChecks:[ZaProxyConfig.isAdminProxyEnabled],enableDisableChangeEventSources:[ZaProxyConfig.A_zimbraReverseProxyHttpEnabled,ZaProxyConfig.A_zimbraReverseProxyAdminEnabled]}
]}
,{
type:_ZA_TOP_GROUPER_,numCols:2,colSizes:["275px","auto"],label:com_zimbra_proxy_config.LBL_ProxyMailProxyConfig,visibilityChecks:[[ZATopGrouper_XFormItem.isGroupVisible,ZaProxyConfig.GLOBAL_PROXY_CONFIG_MAIL_PROXY_ATTRS]],items:[{
type:_CHECKBOX_,label:com_zimbra_proxy_config.LBL_ProxyEnableMailProxy,ref:ZaProxyConfig.A_zimbraReverseProxyMailEnabled,trueValue:"TRUE",falseValue:"FALSE"}
,{
type:_TEXTFIELD_,label:com_zimbra_proxy_config.LBL_ProxyAuthWaitTime,ref:ZaProxyConfig.A_zimbraReverseProxyAuthWaitInterval,width:"60px",getDisplayValue:function(l){
return parseInt(l)
}
,elementChanged:function(d,c,l){
c=d+"s";
this.getForm().itemChanged(this,c,l)
}
,enableDisableChecks:[ZaProxyConfig.isMailProxyEnabled],enableDisableChangeEventSources:[ZaProxyConfig.A_zimbraReverseProxyMailEnabled]}
,{
type:_SPACER_,height:10}
,{
type:_TEXTFIELD_,label:com_zimbra_proxy_config.LBL_ProxyImapProxyPort,ref:ZaProxyConfig.A_zimbraImapProxyBindPort,width:"60px",enableDisableChecks:[ZaProxyConfig.isMailProxyEnabled],enableDisableChangeEventSources:[ZaProxyConfig.A_zimbraReverseProxyMailEnabled]}
,{
type:_TEXTFIELD_,label:com_zimbra_proxy_config.LBL_ProxyImapSSLProxyPort,ref:ZaProxyConfig.A_zimbraImapSSLProxyBindPort,width:"60px",enableDisableChecks:[ZaProxyConfig.isMailProxyEnabled],enableDisableChangeEventSources:[ZaProxyConfig.A_zimbraReverseProxyMailEnabled]}
,{
type:_CHECKBOX_,label:com_zimbra_proxy_config.LBL_ProxyImapEnablePlainAuth,ref:ZaProxyConfig.A_zimbraReverseProxyImapSaslPlainEnabled,trueValue:"TRUE",falseValue:"FALSE",enableDisableChecks:[ZaProxyConfig.isMailProxyEnabled],enableDisableChangeEventSources:[ZaProxyConfig.A_zimbraReverseProxyMailEnabled]}
,{
type:_CHECKBOX_,label:com_zimbra_proxy_config.LBL_ProxyImapEnableGssapiAuth,ref:ZaProxyConfig.A_zimbraReverseProxyImapSaslGssapiEnabled,trueValue:"TRUE",falseValue:"FALSE",enableDisableChecks:[ZaProxyConfig.isMailProxyEnabled],enableDisableChangeEventSources:[ZaProxyConfig.A_zimbraReverseProxyMailEnabled]}
,{
type:_SELECT1_,label:com_zimbra_proxy_config.LBL_ProxyImapStartTlsMode,ref:ZaProxyConfig.A_zimbraReverseProxyImapStartTlsMode,enableDisableChecks:[ZaProxyConfig.isMailProxyEnabled],enableDisableChangeEventSources:[ZaProxyConfig.A_zimbraReverseProxyMailEnabled]}
,{
type:_SPACER_,height:10}
,{
type:_TEXTFIELD_,label:com_zimbra_proxy_config.LBL_ProxyPop3ProxyPort,ref:ZaProxyConfig.A_zimbraPop3ProxyBindPort,width:"60px",enableDisableChecks:[ZaProxyConfig.isMailProxyEnabled],enableDisableChangeEventSources:[ZaProxyConfig.A_zimbraReverseProxyMailEnabled]}
,{
type:_TEXTFIELD_,label:com_zimbra_proxy_config.LBL_ProxyPop3SSLProxyPort,ref:ZaProxyConfig.A_zimbraPop3SSLProxyBindPort,width:"60px",enableDisableChecks:[ZaProxyConfig.isMailProxyEnabled],enableDisableChangeEventSources:[ZaProxyConfig.A_zimbraReverseProxyMailEnabled]}
,{
type:_CHECKBOX_,label:com_zimbra_proxy_config.LBL_ProxyPop3EnablePlainAuth,ref:ZaProxyConfig.A_zimbraReverseProxyPop3SaslPlainEnabled,trueValue:"TRUE",falseValue:"FALSE",enableDisableChecks:[ZaProxyConfig.isMailProxyEnabled],enableDisableChangeEventSources:[ZaProxyConfig.A_zimbraReverseProxyMailEnabled]}
,{
type:_CHECKBOX_,label:com_zimbra_proxy_config.LBL_ProxyPop3EnableGssapiAuth,ref:ZaProxyConfig.A_zimbraReverseProxyPop3SaslGssapiEnabled,trueValue:"TRUE",falseValue:"FALSE",enableDisableChecks:[ZaProxyConfig.isMailProxyEnabled],enableDisableChangeEventSources:[ZaProxyConfig.A_zimbraReverseProxyMailEnabled]}
,{
type:_SELECT1_,label:com_zimbra_proxy_config.LBL_ProxyPop3StartTlsMode,ref:ZaProxyConfig.A_zimbraReverseProxyPop3StartTlsMode,enableDisableChecks:[ZaProxyConfig.isMailProxyEnabled],enableDisableChangeEventSources:[ZaProxyConfig.A_zimbraReverseProxyMailEnabled]}
]}
,{
type:_ZA_TOP_GROUPER_,numCols:2,colSizes:["275px","auto"],label:com_zimbra_proxy_config.LBL_ProxyGeneralConfig,visibilityChecks:[[ZATopGrouper_XFormItem.isGroupVisible,ZaProxyConfig.GLOBAL_PROXY_CONFIG_GENERAL_ATTRS]],items:[{
type:_TEXTFIELD_,label:com_zimbra_proxy_config.LBL_ProxyWorkerProcessNum,ref:ZaProxyConfig.A_zimbraReverseProxyWorkerProcesses,width:"60px"}
,{
type:_TEXTFIELD_,label:com_zimbra_proxy_config.LBL_ProxyWorkerConnectionNum,ref:ZaProxyConfig.A_zimbraReverseProxyWorkerConnections,width:"60px"}
,{
type:_SELECT1_,label:com_zimbra_proxy_config.LBL_ProxyLogLevel,ref:ZaProxyConfig.A_zimbraReverseProxyLogLevel}
,{
type:_CHECKBOX_,label:com_zimbra_proxy_config.LBL_ProxyAllowServerResolveRoute,ref:ZaProxyConfig.A_zimbraReverseProxyDnsLookupInServerEnabled,trueValue:"TRUE",falseValue:"FALSE"}
,{
type:_DWT_ALERT_,style:DwtAlert.INFO,iconVisible:true,colSpan:"*",content:com_zimbra_proxy_config.MSG_GenConfigPerVirtualHostname,visibilityChecks:[[ZaItem.hasReadPermission,ZaProxyConfig.A_zimbraReverseProxyGenConfigPerVirtualHostname]]}
,{
type:_CHECKBOX_,label:com_zimbra_proxy_config.LBL_ProxyGenConfigPerVirtualHostname,ref:ZaProxyConfig.A_zimbraReverseProxyGenConfigPerVirtualHostname,trueValue:"TRUE",falseValue:"FALSE"}
,{
type:_SPACER_,height:10}
,{
type:_DWT_ALERT_,style:DwtAlert.INFO,iconVisible:true,colSpan:"*",content:com_zimbra_proxy_config.MSG_ReverseProxyAdminIPAddress,visibilityChecks:[[ZaItem.hasReadPermission,ZaProxyConfig.A_zimbraReverseProxyAdminIPAddress]]}
,{
type:_REPEAT_,label:com_zimbra_proxy_config.LBL_ProxyAdminIPAddresses,ref:ZaProxyConfig.A_zimbraReverseProxyAdminIPAddress,repeatInstance:"",labelWrap:true,showAddButton:true,showRemoveButton:true,showAddOnNextRow:true,items:[{
ref:".",type:_TEXTFIELD_,label:null}
]}
]}
]};
var t=s.items[1].choices;
t.push({
value:n,label:com_zimbra_proxy_config.OVT_Proxy}
);
var r=s.items[2].items;
r.push(e)
}};
ZaTabView.XFormModifiers.GlobalConfigXFormView.push(ZaProxyConfig.myGlobalXFormModifier);
ZaProxyConfig.isProxyInstalled=function(){
return XForm.checkInstanceValue.call(this,ZaServer.A_zimbraMailProxyServiceInstalled,true)
};
ZaProxyConfig.isProxyEnabled=function(){
return XForm.checkInstanceValue.call(this,ZaServer.A_zimbraMailProxyServiceEnabled,true)
};
ZaProxyConfig.isProxyInstalledAndEnabled=function(){
return(ZaProxyConfig.isProxyInstalled.call(this)&&ZaProxyConfig.isProxyEnabled.call(this))
};
ZaProxyConfig.isProxyNotInstalledOrEnabled=function(){
return !ZaProxyConfig.isProxyInstalledAndEnabled.call(this)
};
ZaProxyConfig.myServerXFormModifier=function(s,o){
if(!ZaProxyConfig.isProxyInstalledInAnyServer()){
return
}
if(ZaTabView.isTAB_ENABLED(o,ZaProxyConfig.SERVER_PROXY_CONFIG_TAB_ATTRS,ZaProxyConfig.SERVER_PROXY_CONFIG_TAB_RIGHTS)){
var n=++this.TAB_INDEX;
var e={
type:_ZATABCASE_,caseKey:n,colSizes:["auto"],numCols:1,paddingStyle:"padding-left:15px;",width:"98%",items:[{
type:_DWT_ALERT_,containerCssStyle:"padding-bottom:0px",style:DwtAlert.WARNING,iconVisible:true,content:ZaMsg.Alert_ProxyConfig}
,{
type:_GROUP_,numCols:1,visibilityChecks:[ZaProxyConfig.isProxyInstalledAndEnabled],visibilityChangeEventSources:[ZaServer.A_zimbraMailProxyServiceInstalled,ZaServer.A_zimbraMailProxyServiceEnabled],items:[{
type:_ZA_TOP_GROUPER_,numCols:2,colSizes:["275px","*"],label:com_zimbra_proxy_config.LBL_ProxyWebProxyConfig,visibilityChecks:[[ZATopGrouper_XFormItem.isGroupVisible,ZaProxyConfig.PROXY_CONFIG_WEB_PROXY_ATTRS]],items:[{
type:_SUPER_CHECKBOX_,checkBoxLabel:com_zimbra_proxy_config.LBL_ProxyEnableWebProxy,ref:ZaProxyConfig.A_zimbraReverseProxyHttpEnabled,trueValue:"TRUE",falseValue:"FALSE",resetToSuperLabel:ZaMsg.NAD_ResetToGlobal,onChange:ZaServerXFormView.onFormFieldChanged}
,{
type:_SUPER_SELECT1_,label:com_zimbra_proxy_config.LBL_ProxyWebProxyMode,ref:ZaProxyConfig.A_zimbraReverseProxyMailMode,colSpan:"2",resetToSuperLabel:ZaMsg.NAD_ResetToGlobal,onChange:ZaServerXFormView.onFormFieldChanged,enableDisableChecks:[ZaProxyConfig.isWebProxyEnabled],enableDisableChangeEventSources:[ZaProxyConfig.A_zimbraReverseProxyHttpEnabled]}
,{
type:_SUPER_CHECKBOX_,checkBoxLabel:com_zimbra_proxy_config.LBL_ProxyUseSSLToUpstream,ref:ZaProxyConfig.A_zimbraReverseProxySSLToUpstreamEnabled,colSpan:"3",trueValue:"TRUE",falseValue:"FALSE",resetToSuperLabel:ZaMsg.NAD_ResetToGlobal,onChange:ZaServerXFormView.onFormFieldChanged}
,{
type:_SUPER_TEXTFIELD_,txtBoxLabel:com_zimbra_proxy_config.LBL_ProxyHttpProxyPort,ref:ZaProxyConfig.A_zimbraMailProxyPort,textFieldWidth:"60px",resetToSuperLabel:ZaMsg.NAD_ResetToGlobal,colSpan:"3",onChange:ZaServerXFormView.onFormFieldChanged,enableDisableChecks:[ZaProxyConfig.isWebProxyEnabled],enableDisableChangeEventSources:[ZaProxyConfig.A_zimbraReverseProxyHttpEnabled]}
,{
type:_SUPER_TEXTFIELD_,txtBoxLabel:com_zimbra_proxy_config.LBL_ProxyHttpSSLProxyPort,ref:ZaProxyConfig.A_zimbraMailSSLProxyPort,textFieldWidth:"60px",resetToSuperLabel:ZaMsg.NAD_ResetToGlobal,colSpan:"3",onChange:ZaServerXFormView.onFormFieldChanged,enableDisableChecks:[ZaProxyConfig.isWebProxyEnabled],enableDisableChangeEventSources:[ZaProxyConfig.A_zimbraReverseProxyHttpEnabled]}
,{
type:_SPACER_,height:10,colSpan:"3"}
,{
type:_SUPER_CHECKBOX_,checkBoxLabel:com_zimbra_proxy_config.LBL_ProxyAdminEnabled,ref:ZaProxyConfig.A_zimbraReverseProxyAdminEnabled,trueValue:"TRUE",falseValue:"FALSE",resetToSuperLabel:ZaMsg.NAD_ResetToGlobal,colSpan:"3",onChange:ZaServerXFormView.onFormFieldChanged,enableDisableChecks:[ZaProxyConfig.isWebProxyEnabled],enableDisableChangeEventSources:[ZaProxyConfig.A_zimbraReverseProxyHttpEnabled]}
,{
type:_SUPER_TEXTFIELD_,txtBoxLabel:com_zimbra_proxy_config.LBL_ProxyAdminProxyPort,ref:ZaProxyConfig.A_zimbraAdminProxyPort,textFieldWidth:"60px",resetToSuperLabel:ZaMsg.NAD_ResetToGlobal,colSpan:"3",onChange:ZaServerXFormView.onFormFieldChanged,enableDisableChecks:[ZaProxyConfig.isAdminProxyEnabled],enableDisableChangeEventSources:[ZaProxyConfig.A_zimbraReverseProxyHttpEnabled,ZaProxyConfig.A_zimbraReverseProxyAdminEnabled]}
]}
,{
type:_ZA_TOP_GROUPER_,numCols:2,colSizes:["275px","*"],label:com_zimbra_proxy_config.LBL_ProxyMailProxyConfig,visibilityChecks:[[ZATopGrouper_XFormItem.isGroupVisible,ZaProxyConfig.PROXY_CONFIG_MAIL_PROXY_ATTRS]],items:[{
type:_SUPER_CHECKBOX_,checkBoxLabel:com_zimbra_proxy_config.LBL_ProxyEnableMailProxy,ref:ZaProxyConfig.A_zimbraReverseProxyMailEnabled,trueValue:"TRUE",falseValue:"FALSE",resetToSuperLabel:ZaMsg.NAD_ResetToGlobal,colSpan:"3",onChange:ZaServerXFormView.onFormFieldChanged}
,{
type:_SPACER_,height:10,colSpan:3}
,{
type:_SUPER_TEXTFIELD_,txtBoxLabel:com_zimbra_proxy_config.LBL_ProxyImapProxyPort,ref:ZaProxyConfig.A_zimbraImapProxyBindPort,textFieldWidth:"60px",resetToSuperLabel:ZaMsg.NAD_ResetToGlobal,colSpan:"3",onChange:ZaServerXFormView.onFormFieldChanged,enableDisableChecks:[ZaProxyConfig.isMailProxyEnabled],enableDisableChangeEventSources:[ZaProxyConfig.A_zimbraReverseProxyMailEnabled]}
,{
type:_SUPER_TEXTFIELD_,txtBoxLabel:com_zimbra_proxy_config.LBL_ProxyImapSSLProxyPort,ref:ZaProxyConfig.A_zimbraImapSSLProxyBindPort,textFieldWidth:"60px",resetToSuperLabel:ZaMsg.NAD_ResetToGlobal,colSpan:"3",onChange:ZaServerXFormView.onFormFieldChanged,enableDisableChecks:[ZaProxyConfig.isMailProxyEnabled],enableDisableChangeEventSources:[ZaProxyConfig.A_zimbraReverseProxyMailEnabled]}
,{
type:_SUPER_CHECKBOX_,checkBoxLabel:com_zimbra_proxy_config.LBL_ProxyImapEnablePlainAuth,ref:ZaProxyConfig.A_zimbraReverseProxyImapSaslPlainEnabled,trueValue:"TRUE",falseValue:"FALSE",resetToSuperLabel:ZaMsg.NAD_ResetToGlobal,colSpan:"3",enableDisableChecks:[ZaProxyConfig.isMailProxyEnabled],enableDisableChangeEventSources:[ZaProxyConfig.A_zimbraReverseProxyMailEnabled]}
,{
type:_SUPER_CHECKBOX_,checkBoxLabel:com_zimbra_proxy_config.LBL_ProxyImapEnableGssapiAuth,ref:ZaProxyConfig.A_zimbraReverseProxyImapSaslGssapiEnabled,trueValue:"TRUE",falseValue:"FALSE",resetToSuperLabel:ZaMsg.NAD_ResetToGlobal,colSpan:"3",onChange:ZaServerXFormView.onFormFieldChanged,enableDisableChecks:[ZaProxyConfig.isMailProxyEnabled],enableDisableChangeEventSources:[ZaProxyConfig.A_zimbraReverseProxyMailEnabled]}
,{
type:_SUPER_SELECT1_,label:com_zimbra_proxy_config.LBL_ProxyImapStartTlsMode,ref:ZaProxyConfig.A_zimbraReverseProxyImapStartTlsMode,resetToSuperLabel:ZaMsg.NAD_ResetToGlobal,colSpan:"2",onChange:ZaServerXFormView.onFormFieldChanged,enableDisableChecks:[ZaProxyConfig.isMailProxyEnabled],enableDisableChangeEventSources:[ZaProxyConfig.A_zimbraReverseProxyMailEnabled]}
,{
type:_SPACER_,height:10,colSpan:"3"}
,{
type:_SUPER_TEXTFIELD_,txtBoxLabel:com_zimbra_proxy_config.LBL_ProxyPop3ProxyPort,ref:ZaProxyConfig.A_zimbraPop3ProxyBindPort,textFieldWidth:"60px",resetToSuperLabel:ZaMsg.NAD_ResetToGlobal,colSpan:"3",onChange:ZaServerXFormView.onFormFieldChanged,enableDisableChecks:[ZaProxyConfig.isMailProxyEnabled],enableDisableChangeEventSources:[ZaProxyConfig.A_zimbraReverseProxyMailEnabled]}
,{
type:_SUPER_TEXTFIELD_,txtBoxLabel:com_zimbra_proxy_config.LBL_ProxyPop3SSLProxyPort,ref:ZaProxyConfig.A_zimbraPop3SSLProxyBindPort,textFieldWidth:"60px",resetToSuperLabel:ZaMsg.NAD_ResetToGlobal,colSpan:"3",onChange:ZaServerXFormView.onFormFieldChanged,enableDisableChecks:[ZaProxyConfig.isMailProxyEnabled],enableDisableChangeEventSources:[ZaProxyConfig.A_zimbraReverseProxyMailEnabled]}
,{
type:_SUPER_CHECKBOX_,checkBoxLabel:com_zimbra_proxy_config.LBL_ProxyPop3EnablePlainAuth,ref:ZaProxyConfig.A_zimbraReverseProxyPop3SaslPlainEnabled,trueValue:"TRUE",falseValue:"FALSE",colSpan:"3",resetToSuperLabel:ZaMsg.NAD_ResetToGlobal,onChange:ZaServerXFormView.onFormFieldChanged,enableDisableChecks:[ZaProxyConfig.isMailProxyEnabled],enableDisableChangeEventSources:[ZaProxyConfig.A_zimbraReverseProxyMailEnabled]}
,{
type:_SUPER_CHECKBOX_,checkBoxLabel:com_zimbra_proxy_config.LBL_ProxyPop3EnableGssapiAuth,ref:ZaProxyConfig.A_zimbraReverseProxyPop3SaslGssapiEnabled,trueValue:"TRUE",falseValue:"FALSE",colSpan:"3",resetToSuperLabel:ZaMsg.NAD_ResetToGlobal,onChange:ZaServerXFormView.onFormFieldChanged,enableDisableChecks:[ZaProxyConfig.isMailProxyEnabled],enableDisableChangeEventSources:[ZaProxyConfig.A_zimbraReverseProxyMailEnabled]}
,{
type:_SUPER_SELECT1_,label:com_zimbra_proxy_config.LBL_ProxyPop3StartTlsMode,ref:ZaProxyConfig.A_zimbraReverseProxyPop3StartTlsMode,resetToSuperLabel:ZaMsg.NAD_ResetToGlobal,colSpan:"2",onChange:ZaServerXFormView.onFormFieldChanged,enableDisableChecks:[ZaProxyConfig.isMailProxyEnabled],enableDisableChangeEventSources:[ZaProxyConfig.A_zimbraReverseProxyMailEnabled]}
]}
,{
type:_ZA_TOP_GROUPER_,numCols:2,colSizes:["275px","*"],label:com_zimbra_proxy_config.LBL_ProxyGeneralConfig,visibilityChecks:[[ZATopGrouper_XFormItem.isGroupVisible,ZaProxyConfig.PROXY_CONFIG_GENERAL_ATTRS]],items:[{
type:_SUPER_TEXTFIELD_,txtBoxLabel:com_zimbra_proxy_config.LBL_ProxyWorkerProcessNum,ref:ZaProxyConfig.A_zimbraReverseProxyWorkerProcesses,textFieldWidth:"60px",resetToSuperLabel:ZaMsg.NAD_ResetToGlobal,colSpan:"3",onChange:ZaServerXFormView.onFormFieldChanged}
,{
type:_SUPER_TEXTFIELD_,txtBoxLabel:com_zimbra_proxy_config.LBL_ProxyWorkerConnectionNum,ref:ZaProxyConfig.A_zimbraReverseProxyWorkerConnections,textFieldWidth:"60px",resetToSuperLabel:ZaMsg.NAD_ResetToGlobal,colSpan:"3",onChange:ZaServerXFormView.onFormFieldChanged}
,{
type:_SUPER_SELECT1_,label:com_zimbra_proxy_config.LBL_ProxyLogLevel,ref:ZaProxyConfig.A_zimbraReverseProxyLogLevel,resetToSuperLabel:ZaMsg.NAD_ResetToGlobal,colSpan:"2",onChange:ZaServerXFormView.onFormFieldChanged}
,{
type:_SUPER_CHECKBOX_,checkBoxLabel:com_zimbra_proxy_config.LBL_ProxyAllowServerResolveRoute,ref:ZaProxyConfig.A_zimbraReverseProxyDnsLookupInServerEnabled,trueValue:"TRUE",falseValue:"FALSE",resetToSuperLabel:ZaMsg.NAD_ResetToGlobal,onChange:ZaServerXFormView.onFormFieldChanged}
,{
type:_DWT_ALERT_,style:DwtAlert.INFO,iconVisible:true,colSpan:"3",content:com_zimbra_proxy_config.MSG_GenConfigPerVirtualHostname,visibilityChecks:[[ZaItem.hasReadPermission,ZaProxyConfig.A_zimbraReverseProxyGenConfigPerVirtualHostname]]}
,{
type:_SUPER_CHECKBOX_,checkBoxLabel:com_zimbra_proxy_config.LBL_ProxyGenConfigPerVirtualHostname,ref:ZaProxyConfig.A_zimbraReverseProxyGenConfigPerVirtualHostname,colSpan:"3",trueValue:"TRUE",falseValue:"FALSE",resetToSuperLabel:ZaMsg.NAD_ResetToGlobal,onChange:ZaServerXFormView.onFormFieldChanged}
]}
]}
,{
type:_GROUP_,numCols:1,colSize:["*"],colSpan:"*",items:[{
type:_DWT_ALERT_,style:DwtAlert.WARNING,iconVisible:true,colSpan:"*",content:com_zimbra_proxy_config.MSG_NeedProxyInstalledAndEnabled}
],visibilityChecks:[ZaProxyConfig.isProxyNotInstalledOrEnabled],visibilityChangeEventSources:[ZaServer.A_zimbraMailProxyServiceInstalled,ZaServer.A_zimbraMailProxyServiceEnabled]}
]};
var t=s.items[1].choices;
t.push({
value:n,label:com_zimbra_proxy_config.OVT_Proxy}
);
var r=s.items[2].items;
r.push(e)
}};
ZaTabView.XFormModifiers.ZaServerXFormView.push(ZaProxyConfig.myServerXFormModifier)
}
if(ZaSettings&&ZaSettings.EnabledZimlet.com_zimbra_proxy_config){
function ZaEnableProxy(){
ZaItem.call(this,"ZaEnableProxy");
this._init();
this.type=ZaItem.ENABLE_PROXY
}
ZaItem.ENABLE_PROXY="enable_proxy";
ZaEnableProxy.prototype=new ZaItem;
ZaEnableProxy.prototype.constructor=ZaEnableProxy;
ZaEnableProxy.myXModel={
items:[{
id:ZaProxyConfig.A_zimbraReverseProxyHttpEnabled,type:_ENUM_,ref:"attrs/"+ZaProxyConfig.A_zimbraReverseProxyHttpEnabled,choices:ZaModel.BOOLEAN_CHOICES}
,{
id:ZaProxyConfig.A_zimbraReverseProxyMailMode,type:_ENUM_,ref:"attrs/"+ZaProxyConfig.A_zimbraReverseProxyMailMode,choices:ZaProxyConfig.MAIL_MODE_CHOICES}
,{
id:ZaProxyConfig.A_zimbraMailPort,type:_PORT_,ref:"attrs/"+ZaProxyConfig.A_zimbraMailPort}
,{
id:ZaProxyConfig.A_zimbraMailProxyPort,type:_PORT_,ref:"attrs/"+ZaProxyConfig.A_zimbraMailProxyPort}
,{
id:ZaProxyConfig.A_zimbraMailSSLPort,type:_PORT_,ref:"attrs/"+ZaProxyConfig.A_zimbraMailSSLPort}
,{
id:ZaProxyConfig.A_zimbraMailSSLProxyPort,type:_PORT_,ref:"attrs/"+ZaProxyConfig.A_zimbraMailSSLProxyPort}
,{
id:ZaProxyConfig.A_zimbraReverseProxyAdminEnabled,type:_ENUM_,ref:"attrs/"+ZaProxyConfig.A_zimbraReverseProxyAdminEnabled,choices:ZaModel.BOOLEAN_CHOICES}
,{
id:ZaProxyConfig.A_zimbraAdminPort,type:_PORT_,ref:"attrs/"+ZaProxyConfig.A_zimbraAdminPort}
,{
id:ZaProxyConfig.A_zimbraAdminProxyPort,type:_PORT_,ref:"attrs/"+ZaProxyConfig.A_zimbraAdminProxyPort}
,{
id:ZaProxyConfig.A_zimbraReverseProxySSLToUpstreamEnabled,type:_ENUM_,ref:"attrs/"+ZaProxyConfig.A_zimbraReverseProxySSLToUpstreamEnabled,choices:ZaModel.BOOLEAN_CHOICES}
,{
id:ZaProxyConfig.A_zimbraReverseProxyMailEnabled,type:_ENUM_,ref:"attrs/"+ZaProxyConfig.A_zimbraReverseProxyMailEnabled,choices:ZaModel.BOOLEAN_CHOICES}
,{
id:ZaProxyConfig.A_zimbraImapBindPort,type:_PORT_,ref:"attrs/"+ZaProxyConfig.A_zimbraImapBindPort}
,{
id:ZaProxyConfig.A_zimbraImapProxyBindPort,type:_PORT_,ref:"attrs/"+ZaProxyConfig.A_zimbraImapProxyBindPort}
,{
id:ZaProxyConfig.A_zimbraImapSSLProxyBindPort,type:_PORT_,ref:"attrs/"+ZaProxyConfig.A_zimbraImapSSLProxyBindPort}
,{
id:ZaProxyConfig.A_zimbraImapSSLBindPort,type:_PORT_,ref:"attrs/"+ZaProxyConfig.A_zimbraImapSSLBindPort}
,{
id:ZaProxyConfig.A_zimbraPop3BindPort,type:_PORT_,ref:"attrs/"+ZaProxyConfig.A_zimbraPop3BindPort}
,{
id:ZaProxyConfig.A_zimbraPop3ProxyBindPort,type:_PORT_,ref:"attrs/"+ZaProxyConfig.A_zimbraPop3ProxyBindPort}
,{
id:ZaProxyConfig.A_zimbraPop3SSLProxyBindPort,type:_PORT_,ref:"attrs/"+ZaProxyConfig.A_zimbraPop3SSLProxyBindPort}
,{
id:ZaProxyConfig.A_zimbraPop3SSLBindPort,type:_PORT_,ref:"attrs/"+ZaProxyConfig.A_zimbraPop3SSLBindPort}
,{
id:ZaProxyConfig.A_zimbraReverseProxyImapStartTlsMode,type:_ENUM_,ref:"attrs/"+ZaProxyConfig.A_zimbraReverseProxyImapStartTlsMode,choices:ZaProxyConfig.STARTTLS_MODE_CHOICES}
,{
id:ZaProxyConfig.A_zimbraReverseProxyPop3StartTlsMode,type:_ENUM_,ref:"attrs/"+ZaProxyConfig.A_zimbraReverseProxyPop3StartTlsMode,choices:ZaProxyConfig.STARTTLS_MODE_CHOICES}
,{
id:ZaProxyConfig.A_zimbraReverseProxyWorkerProcesses,type:_INT_,ref:"attrs/"+ZaProxyConfig.A_zimbraReverseProxyWorkerProcesses,minInclusive:"1",maxInclusive:"16"}
,{
id:ZaProxyConfig.A_zimbraReverseProxyWorkerConnections,type:_INT_,ref:"attrs/"+ZaProxyConfig.A_zimbraReverseProxyWorkerConnections,minInclusive:"1"}
,{
id:ZaProxyConfig.A_zimbraReverseProxyGenConfigPerVirtualHostname,type:_ENUM_,ref:"attrs/"+ZaProxyConfig.A_zimbraReverseProxyGenConfigPerVirtualHostname,choices:ZaModel.BOOLEAN_CHOICES}
,{
id:ZaProxyConfig.A_zimbraReverseProxyDnsLookupInServerEnabled,type:_ENUM_,ref:"attrs/"+ZaProxyConfig.A_zimbraReverseProxyDnsLookupInServerEnabled,choices:ZaModel.BOOLEAN_CHOICES}
,{
id:ZaProxyConfig.A_zimbraReverseProxyLogLevel,type:_ENUM_,ref:"attrs/"+ZaProxyConfig.A_zimbraReverseProxyLogLevel,choices:ZaProxyConfig.PROXY_LOG_LEVEL_CHOICES}
,{
id:ZaProxyConfig.A2_mbx_name_array,type:_LIST_,itemType:_STRING_}
,{
id:ZaProxyConfig.A2_proxy_name_array,type:_LIST_,itemType:_STRING_}
,{
id:ZaProxyConfig.A2_target_server,type:_STRING_}
,{
id:ZaProxyConfig.A2_target_up_servers,type:_LIST_,itemType:_STRING_}
,{
id:ZaProxyConfig.A2_target_lt_servers,type:_LIST_,itemType:_STRING_}
,{
id:ZaProxyConfig.A2_all_mailbox_as_upstream,type:_ENUM_,choices:ZaModel.BOOLEAN_CHOICES}
,{
id:ZaProxyConfig.A2_all_mailbox_as_lookuptarget,type:_ENUM_,choices:ZaModel.BOOLEAN_CHOICES}
]};
ZaEnableProxy.init=function(){
this.attrs={};
this.attrs[ZaProxyConfig.A_zimbraReverseProxyHttpEnabled]="TRUE";
this.attrs[ZaProxyConfig.A_zimbraReverseProxyMailMode]=ZaProxyConfig.DEFAULT_MAIL_MODE;
this.attrs[ZaProxyConfig.A_zimbraMailPort]=ZaProxyConfig.DEFAULT_MAIL_PORT_ZCS;
this.attrs[ZaProxyConfig.A_zimbraMailProxyPort]=ZaProxyConfig.DEFAULT_MAIL_PORT;
this.attrs[ZaProxyConfig.A_zimbraMailSSLPort]=ZaProxyConfig.DEFAULT_MAIL_SSL_PORT_ZCS;
this.attrs[ZaProxyConfig.A_zimbraMailSSLProxyPort]=ZaProxyConfig.DEFAULT_MAIL_SSL_PORT;
this.attrs[ZaProxyConfig.A_zimbraReverseProxyAdminEnabled]="FALSE";
this.attrs[ZaProxyConfig.A_zimbraAdminPort]=ZaProxyConfig.DEFAULT_ADMIN_CONSOLE_PORT_ZCS;
this.attrs[ZaProxyConfig.A_zimbraAdminProxyPort]=ZaProxyConfig.DEFAULT_ADMIN_CONSOLE_PORT;
this.attrs[ZaProxyConfig.A_zimbraReverseProxySSLToUpstreamEnabled]="TRUE";
this.attrs[ZaProxyConfig.A_zimbraReverseProxyMailEnabled]="TRUE";
this.attrs[ZaProxyConfig.A_zimbraImapBindPort]=ZaProxyConfig.DEFAULT_IMAP_PORT_ZCS;
this.attrs[ZaProxyConfig.A_zimbraImapProxyBindPort]=ZaProxyConfig.DEFAULT_IMAP_PORT;
this.attrs[ZaProxyConfig.A_zimbraImapSSLBindPort]=ZaProxyConfig.DEFAULT_IMAP_SSL_PORT_ZCS;
this.attrs[ZaProxyConfig.A_zimbraImapSSLProxyBindPort]=ZaProxyConfig.DEFAULT_IMAP_SSL_PORT;
this.attrs[ZaProxyConfig.A_zimbraPop3BindPort]=ZaProxyConfig.DEFAULT_POP3_PORT_ZCS;
this.attrs[ZaProxyConfig.A_zimbraPop3ProxyBindPort]=ZaProxyConfig.DEFAULT_POP3_PORT;
this.attrs[ZaProxyConfig.A_zimbraPop3SSLBindPort]=ZaProxyConfig.DEFAULT_POP3_SSL_PORT_ZCS;
this.attrs[ZaProxyConfig.A_zimbraPop3SSLProxyBindPort]=ZaProxyConfig.DEFAULT_POP3_SSL_PORT;
this.attrs[ZaProxyConfig.A_zimbraReverseProxyImapStartTlsMode]="only";
this.attrs[ZaProxyConfig.A_zimbraReverseProxyPop3StartTlsMode]="only";
this.attrs[ZaProxyConfig.A_zimbraReverseProxyWorkerProcesses]=4;
this.attrs[ZaProxyConfig.A_zimbraReverseProxyWorkerConnections]=10240;
this.attrs[ZaProxyConfig.A_zimbraReverseProxyLogLevel]="info";
this.attrs[ZaProxyConfig.A_zimbraReverseProxyGenConfigPerVirtualHostname]="TRUE";
this.attrs[ZaProxyConfig.A_zimbraReverseProxyDnsLookupInServerEnabled]="TRUE";
this[ZaProxyConfig.A2_all_mailbox_as_upstream]="TRUE";
this[ZaProxyConfig.A2_all_mailbox_as_lookuptarget]="TRUE";
this.initServerList()
};
ZaItem.initMethods.ZaEnableProxy=[ZaEnableProxy.init];
ZaEnableProxy.prototype.initServerList=function(){
this[ZaProxyConfig.A2_proxy_name_array]=[];
this[ZaProxyConfig.A2_mbx_name_array]=[];
var d=ZaServer.getAll().getArray();
for(var o=0;
o<d.length;
o++){
var n=d[o];
if(n.attrs[ZaServer.A_zimbraMailProxyServiceInstalled]){
this[ZaProxyConfig.A2_proxy_name_array].push(n.zimbraServiceHostname)
}
if(n.attrs[ZaServer.A_zimbraMailboxServiceEnabled]){
this[ZaProxyConfig.A2_mbx_name_array].push(n.zimbraServiceHostname)
}}
var l=this[ZaProxyConfig.A2_mbx_name_array];
var c=[];
var e=[];
for(var t=0;
t<l.length;
t++){
c.push(l[t]);
e.push(l[t])
}
this[ZaProxyConfig.A2_target_up_servers]=c;
this[ZaProxyConfig.A2_target_lt_servers]=e;
ZaEnableProxyWizard.proxyServerChoices.setChoices(this[ZaProxyConfig.A2_proxy_name_array]);
ZaEnableProxyWizard.proxyServerChoices.dirtyChoices();
ZaEnableProxyWizard.mbxServerChoices.setChoices(this[ZaProxyConfig.A2_mbx_name_array]);
ZaEnableProxyWizard.mbxServerChoices.dirtyChoices();
var r={};
for(var o=0;
o<d.length;
o++){
var n=d[o];
r[n.zimbraServiceHostname]=n
}
this[ZaProxyConfig.A2_all_servers]=r
};
function ZaEnableProxyWizard(t){
var e="500px";
if(AjxEnv.isIE){
e="550px"
}
ZaXWizardDialog.call(this,t,null,com_zimbra_proxy_config.LBL_EnableProxyWizTitle,e,"330px","ZaEnableProxyWizard");
this.stepChoices=[{
label:com_zimbra_proxy_config.LBL_ProxyWizardStepSelectServer,value:ZaEnableProxyWizard.STEP_SELECT_SERVER}
,{
label:com_zimbra_proxy_config.LBL_ProxyWizardStepWebProxy,value:ZaEnableProxyWizard.STEP_CONFIG_WEBPROXY}
,{
label:com_zimbra_proxy_config.LBL_ProxyWizardStepMailProxy,value:ZaEnableProxyWizard.STEP_CONFIG_MAILPROXY}
,{
label:com_zimbra_proxy_config.LBL_ProxyWizardStepAdvanced,value:ZaEnableProxyWizard.STEP_CONFIG_ADVANCED}
,{
label:com_zimbra_proxy_config.LBL_ProxyWizardStepFinish,value:ZaEnableProxyWizard.STEP_FINISH}
];
this.initForm(ZaEnableProxy.myXModel,this.getMyXForm());
this._localXForm.setController();
this._localXForm.addListener(DwtEvent.XFORMS_FORM_DIRTY_CHANGE,new AjxListener(this,ZaEnableProxyWizard.prototype.handleXFormChange));
this._localXForm.addListener(DwtEvent.XFORMS_VALUE_ERROR,new AjxListener(this,ZaEnableProxyWizard.prototype.handleXFormChange))
}
ZaEnableProxyWizard.prototype=new ZaXWizardDialog;
ZaEnableProxyWizard.prototype.constructor=ZaEnableProxyWizard;
ZaEnableProxyWizard.proxyServerChoices=new XFormChoices([],XFormChoices.SIMPLE_LIST);
ZaEnableProxyWizard.mbxServerChoices=new XFormChoices([],XFormChoices.SIMPLE_LIST);
ZaXDialog.XFormModifiers.ZaEnableProxyWizard=new Array();
ZaEnableProxyWizard.helpURL=location.pathname+"help/admin/html/tools/config_proxy.htm?locid="+AjxEnv.DEFAULT_LOCALE;
ZaEnableProxyWizard.STEP_INDEX=1;
ZaEnableProxyWizard.STEP_SELECT_SERVER=ZaEnableProxyWizard.STEP_INDEX++;
ZaEnableProxyWizard.STEP_CONFIG_WEBPROXY=ZaEnableProxyWizard.STEP_INDEX++;
ZaEnableProxyWizard.STEP_CONFIG_MAILPROXY=ZaEnableProxyWizard.STEP_INDEX++;
ZaEnableProxyWizard.STEP_CONFIG_ADVANCED=ZaEnableProxyWizard.STEP_INDEX++;
ZaEnableProxyWizard.STEP_FINISH=ZaEnableProxyWizard.STEP_INDEX++;
ZaEnableProxyWizard.prototype.handleXFormChange=function(){
var e=this._containedObject[ZaModel.currentStep];
var t=this._containedObject;
if(e==ZaEnableProxyWizard.STEP_SELECT_SERVER){
if(!AjxUtil.isEmpty(t[ZaProxyConfig.A2_target_server])&&this.isUpstreamServersConfigValid()&&this.isLookupTargetServersConfigValid()){
this._button[DwtWizardDialog.NEXT_BUTTON].setEnabled(true)
}else{
this._button[DwtWizardDialog.NEXT_BUTTON].setEnabled(false)
}}};
ZaEnableProxyWizard.prototype.isUpstreamServersConfigValid=function(){
var e=this._containedObject;
if(!AjxUtil.isEmpty(e[ZaProxyConfig.A2_target_up_servers])||e[ZaProxyConfig.A2_all_mailbox_as_upstream]=="TRUE"){
return true
}else{
return false
}};
ZaEnableProxyWizard.prototype.isLookupTargetServersConfigValid=function(){
var e=this._containedObject;
if(!AjxUtil.isEmpty(e[ZaProxyConfig.A2_target_lt_servers])||e[ZaProxyConfig.A2_all_mailbox_as_lookuptarget]=="TRUE"){
return true
}else{
return false
}};
ZaEnableProxyWizard.prototype.popup=function(e){
ZaXWizardDialog.prototype.popup.call(this,e);
this.changeButtonStateForStep(ZaEnableProxyWizard.STEP_SELECT_SERVER)
};
ZaEnableProxyWizard.prototype.changeButtonStateForStep=function(e){
if(e==ZaEnableProxyWizard.STEP_SELECT_SERVER){
this._button[DwtWizardDialog.FINISH_BUTTON].setEnabled(false);
if(AjxUtil.isEmpty(this._containedObject[ZaProxyConfig.A2_target_server])){
this._button[DwtWizardDialog.NEXT_BUTTON].setEnabled(false)
}else{
this._button[DwtWizardDialog.NEXT_BUTTON].setEnabled(true)
}
this._button[DwtWizardDialog.PREV_BUTTON].setEnabled(false)
}else{
if(e==ZaEnableProxyWizard.STEP_FINISH){
this._button[DwtWizardDialog.NEXT_BUTTON].setEnabled(false);
this._button[DwtWizardDialog.PREV_BUTTON].setEnabled(true);
this._button[DwtWizardDialog.FINISH_BUTTON].setEnabled(true)
}else{
this._button[DwtWizardDialog.NEXT_BUTTON].setEnabled(true);
this._button[DwtWizardDialog.PREV_BUTTON].setEnabled(true);
this._button[DwtWizardDialog.FINISH_BUTTON].setEnabled(false)
}}};
ZaEnableProxyWizard.prototype.goPage=function(e){
ZaXWizardDialog.prototype.goPage.call(this,e);
this.changeButtonStateForStep(e)
};
ZaEnableProxyWizard.prototype.finishWizard=function(){
try{
this.applyProxyConfig();
this.popdown()
}
catch(e){
ZaApp.getInstance().getCurrentController()._handleException(e,"ZaEnableWizard.prototype.finishWizard",null,false)
}};
ZaEnableProxyWizard.prototype.applyProxyConfig=function(){
var x=this._localXForm.getInstance();
var r={};
var p=x[ZaProxyConfig.A2_all_servers];
var q;
if(x[ZaProxyConfig.A2_all_mailbox_as_upstream]=="TRUE"){
q=x[ZaProxyConfig.A2_mbx_name_array]
}else{
q=x[ZaProxyConfig.A2_target_up_servers]
}
for(var y=0;
y<q.length;
y++){
var c=q[y];
r[c]={
isUpstream:true}
}
if(x[ZaProxyConfig.A2_all_mailbox_as_lookuptarget]=="TRUE"){
q=x[ZaProxyConfig.A2_mbx_name_array]
}else{
q=x[ZaProxyConfig.A2_target_lt_servers]
}
for(var y=0;
y<q.length;
y++){
var c=q[y];
if(!r[c]){
r[c]={
isLookupTarget:true}
}}
var v=AjxSoapDoc.create("BatchRequest","urn:zimbra");
v.setMethodAttribute("onerror","stop");
for(var c in r){
var j=v.set("ModifyServerRequest",null,null,ZaZimbraAdmin.URN);
var f=p[c].id;
v.set("id",f,j);
ZaEnableProxyWizard.setAttr(v,ZaProxyConfig.A_zimbraReverseProxyLookupTarget,"TRUE",j);
if(r[c].isUpstream){
if(x.attrs[ZaProxyConfig.A_zimbraReverseProxyHttpEnabled]=="TRUE"){
ZaEnableProxyWizard.setAttr(v,ZaProxyConfig.A_zimbraMailSSLPort,x.attrs[ZaProxyConfig.A_zimbraMailSSLPort],j);
ZaEnableProxyWizard.setAttr(v,ZaProxyConfig.A_zimbraMailPort,x.attrs[ZaProxyConfig.A_zimbraMailPort],j);
if(x.attrs[ZaProxyConfig.A_zimbraReverseProxySSLToUpstreamEnabled]=="TRUE"){
ZaEnableProxyWizard.setAttr(v,ZaProxyConfig.A_zimbraMailMode,"https",j)
}else{
ZaEnableProxyWizard.setAttr(v,ZaProxyConfig.A_zimbraMailMode,"http",j)
}
if(x.attrs[ZaProxyConfig.A_zimbraReverseProxyAdminEnabled]=="TRUE"){
ZaEnableProxyWizard.setAttr(v,ZaProxyConfig.A_zimbraAdminPort,x.attrs[ZaProxyConfig.A_zimbraAdminPort],j)
}}
if(x.attrs[ZaProxyConfig.A_zimbraReverseProxyMailEnabled]=="TRUE"){
ZaEnableProxyWizard.setAttr(v,ZaProxyConfig.A_zimbraImapBindPort,x.attrs[ZaProxyConfig.A_zimbraImapBindPort],j);
ZaEnableProxyWizard.setAttr(v,ZaProxyConfig.A_zimbraPop3BindPort,x.attrs[ZaProxyConfig.A_zimbraPop3BindPort],j);
ZaEnableProxyWizard.setAttr(v,ZaProxyConfig.A_zimbraImapSSLBindPort,x.attrs[ZaProxyConfig.A_zimbraImapSSLBindPort],j);
ZaEnableProxyWizard.setAttr(v,ZaProxyConfig.A_zimbraPop3SSLBindPort,x.attrs[ZaProxyConfig.A_zimbraPop3SSLBindPort],j);
if(x.attrs[ZaProxyConfig.A_zimbraReverseProxySSLToUpstreamEnabled]!="TRUE"){
ZaEnableProxyWizard.setAttr(v,ZaProxyConfig.A_zimbraImapCleartextLoginEnabled,"TRUE",j);
ZaEnableProxyWizard.setAttr(v,ZaProxyConfig.A_zimbraPop3CleartextLoginEnabled,"TRUE",j)
}}}}
var k=new Object();
k.soapDoc=v;
var u={
controller:ZaApp.getInstance().getCurrentController(),busyMsg:ZaMsg.BUSY_MODIFY_SERVER};
var e=ZaRequestMgr.invoke(k,u).Body.BatchResponse;
var o=p[x[ZaProxyConfig.A2_target_server]];
var d=AjxSoapDoc.create("ModifyServerRequest",ZaZimbraAdmin.URN);
d.set("id",o.id);
if(x.attrs[ZaProxyConfig.A_zimbraReverseProxyHttpEnabled]=="TRUE"){
ZaEnableProxyWizard.setAttr(d,ZaProxyConfig.A_zimbraReverseProxyHttpEnabled,x.attrs[ZaProxyConfig.A_zimbraReverseProxyHttpEnabled]);
ZaEnableProxyWizard.setAttr(d,ZaProxyConfig.A_zimbraReverseProxyMailMode,x.attrs[ZaProxyConfig.A_zimbraReverseProxyMailMode]);
var g=x.attrs[ZaProxyConfig.A_zimbraReverseProxyMailMode];
if(g!="https"){
ZaEnableProxyWizard.setAttr(d,ZaProxyConfig.A_zimbraMailProxyPort,x.attrs[ZaProxyConfig.A_zimbraMailProxyPort])
}
if(g!="http"){
ZaEnableProxyWizard.setAttr(d,ZaProxyConfig.A_zimbraMailSSLProxyPort,x.attrs[ZaProxyConfig.A_zimbraMailSSLProxyPort])
}
if(x.attrs[ZaProxyConfig.A_zimbraReverseProxyAdminEnabled]=="TRUE"){
ZaEnableProxyWizard.setAttr(d,ZaProxyConfig.A_zimbraReverseProxyAdminEnabled,x.attrs[ZaProxyConfig.A_zimbraReverseProxyAdminEnabled]);
ZaEnableProxyWizard.setAttr(d,ZaProxyConfig.A_zimbraAdminProxyPort,x.attrs[ZaProxyConfig.A_zimbraAdminProxyPort])
}}
if(x.attrs[ZaProxyConfig.A_zimbraReverseProxyMailEnabled]=="TRUE"){
ZaEnableProxyWizard.setAttr(d,ZaProxyConfig.A_zimbraReverseProxyMailEnabled,x.attrs[ZaProxyConfig.A_zimbraReverseProxyMailEnabled]);
ZaEnableProxyWizard.setAttr(d,ZaProxyConfig.A_zimbraImapProxyBindPort,x.attrs[ZaProxyConfig.A_zimbraImapProxyBindPort]);
ZaEnableProxyWizard.setAttr(d,ZaProxyConfig.A_zimbraImapSSLProxyBindPort,x.attrs[ZaProxyConfig.A_zimbraImapSSLProxyBindPort]);
ZaEnableProxyWizard.setAttr(d,ZaProxyConfig.A_zimbraReverseProxyImapStartTlsMode,x.attrs[ZaProxyConfig.A_zimbraReverseProxyImapStartTlsMode]);
ZaEnableProxyWizard.setAttr(d,ZaProxyConfig.A_zimbraPop3ProxyBindPort,x.attrs[ZaProxyConfig.A_zimbraPop3ProxyBindPort]);
ZaEnableProxyWizard.setAttr(d,ZaProxyConfig.A_zimbraPop3SSLProxyBindPort,x.attrs[ZaProxyConfig.A_zimbraPop3SSLProxyBindPort]);
ZaEnableProxyWizard.setAttr(d,ZaProxyConfig.A_zimbraReverseProxyPop3StartTlsMode,x.attrs[ZaProxyConfig.A_zimbraReverseProxyPop3StartTlsMode])
}
ZaEnableProxyWizard.setAttr(d,ZaProxyConfig.A_zimbraReverseProxyWorkerProcesses,x.attrs[ZaProxyConfig.A_zimbraReverseProxyWorkerProcesses]);
ZaEnableProxyWizard.setAttr(d,ZaProxyConfig.A_zimbraReverseProxyWorkerConnections,x.attrs[ZaProxyConfig.A_zimbraReverseProxyWorkerConnections]);
ZaEnableProxyWizard.setAttr(d,ZaProxyConfig.A_zimbraReverseProxyDnsLookupInServerEnabled,x.attrs[ZaProxyConfig.A_zimbraReverseProxyDnsLookupInServerEnabled]);
ZaEnableProxyWizard.setAttr(d,ZaProxyConfig.A_zimbraReverseProxyLogLevel,x.attrs[ZaProxyConfig.A_zimbraReverseProxyLogLevel]);
ZaEnableProxyWizard.setAttr(d,ZaProxyConfig.A_zimbraReverseProxySSLToUpstreamEnabled,x.attrs[ZaProxyConfig.A_zimbraReverseProxySSLToUpstreamEnabled]);
if(x[ZaProxyConfig.A2_all_mailbox_as_upstream]){
ZaEnableProxyWizard.setAttr(d,ZaProxyConfig.A_zimbraReverseProxyUpstreamServers,"")
}else{
var t=x[ZaProxyConfig.A2_target_up_servers];
for(var y=0;
y<t.length;
y++){
ZaEnableProxyWizard.setAttr(d,ZaProxyConfig.A_zimbraReverseProxyUpstreamServers,t[y])
}}
if(x[ZaProxyConfig.A2_all_mailbox_as_lookuptarget]){
ZaEnableProxyWizard.setAttr(d,ZaProxyConfig.A_zimbraReverseProxyAvailableLookupTargets,"")
}else{
var n=x[ZaProxyConfig.A2_target_lt_servers];
for(var y=0;
y<n.length;
y++){
ZaEnableProxyWizard.setAttr(d,ZaProxyConfig.A_zimbraReverseProxyAvailableLookupTargets,n[y])
}}
ZaEnableProxyWizard.setAttr(d,ZaProxyConfig.A_zimbraServiceEnabled,"proxy",null,"+");
var b=new Object();
b.soapDoc=d;
var l={
controller:ZaApp.getInstance().getCurrentController(),busyMsg:ZaMsg.BUSY_MODIFY_SERVER};
var m=ZaRequestMgr.invoke(b,l).Body.ModifyServerResponse;
o.initFromJS(m.server[0])
};
ZaEnableProxyWizard.setAttr=function(n,e,s,t,r){
var o;
if(t){
o=n.set("a",s,t)
}else{
o=n.set("a",s)
}
if(r){
o.setAttribute("n",r+e)
}else{
o.setAttribute("n",e)
}};
ZaEnableProxyWizard.prototype.setObject=function(e){
this._containedObject=e;
this._containedObject[ZaModel.currentStep]=e[ZaModel.currentStep]||ZaEnableProxyWizard.STEP_SELECT_SERVER;
if(AjxUtil.arrayContains(e[ZaProxyConfig.A2_proxy_name_array],e[ZaProxyConfig.A2_current_server])){
this._containedObject[ZaProxyConfig.A2_target_server]=e[ZaProxyConfig.A2_current_server]
}else{
this._containedObject[ZaProxyConfig.A2_target_server]=undefined
}
this._localXForm.setInstance(this._containedObject)
};
ZaEnableProxyWizard.isWebProxyEnabled=function(){
var e=this.getInstanceValue(ZaProxyConfig.A_zimbraReverseProxyHttpEnabled);
return(e=="TRUE")
};
ZaEnableProxyWizard.isAdminProxyEnabled=function(){
var e=this.getInstanceValue(ZaProxyConfig.A_zimbraReverseProxyAdminEnabled);
return(e=="TRUE")
};
ZaEnableProxyWizard.isMailProxyEnabled=function(){
var e=this.getInstanceValue(ZaProxyConfig.A_zimbraReverseProxyMailEnabled);
return(e=="TRUE")
};
ZaEnableProxyWizard.isProxyMailModeNotHTTP=function(){
var e=this.getInstanceValue(ZaProxyConfig.A_zimbraReverseProxyMailMode);
return(e!="http")
};
ZaEnableProxyWizard.isProxyMailModeNotHTTPS=function(){
var e=this.getInstanceValue(ZaProxyConfig.A_zimbraReverseProxyMailMode);
return(e!="https")
};
ZaEnableProxyWizard.isSSLToUpstreamEnabled=function(){
var e=this.getInstanceValue(ZaProxyConfig.A_zimbraReverseProxySSLToUpstreamEnabled);
return(e=="TRUE")
};
ZaEnableProxyWizard.isSSLToUpstreamDisabled=function(){
return !ZaEnableProxyWizard.isSSLToUpstreamEnabled.call(this)
};
ZaEnableProxyWizard.isNotAllMbxAsUp=function(){
var e=this.getInstanceValue(ZaProxyConfig.A2_all_mailbox_as_upstream);
return(e=="FALSE")
};
ZaEnableProxyWizard.isNotAllMbxAsLT=function(){
var e=this.getInstanceValue(ZaProxyConfig.A2_all_mailbox_as_lookuptarget);
return(e=="FALSE")
};
ZaEnableProxyWizard.myXFormModifier=function(c){
var r=new Array();
var t={
type:_CASE_,numCols:1,colSizes:["350px"],tabGroupKey:ZaEnableProxyWizard.STEP_SELECT_SERVER,caseKey:ZaEnableProxyWizard.STEP_SELECT_SERVER,align:_LEFT_,valign:_TOP_,width:"90%"};
t.items=[{
type:_SPACER_,height:10}
,{
type:_OUTPUT_,colSpan:2,value:com_zimbra_proxy_config.LBL_ProxySelectProxyServer}
,{
type:_SPACER_,height:10}
,{
type:_GROUP_,colSpan:"*",colSizes:["260px","*"],items:[{
type:_OSELECT1_,ref:ZaProxyConfig.A2_target_server,label:com_zimbra_proxy_config.LBL_ProxySelectProxyServerToEnableInDetail,labelLocation:_LEFT_,labelCssStyle:"text-align:left",choices:ZaEnableProxyWizard.proxyServerChoices,editable:false}
]}
,{
type:_SPACER_,height:20}
,{
type:_GROUP_,colSpan:"*",colSizes:["15px","*"],items:[{
type:_OUTPUT_,colSpan:2,value:com_zimbra_proxy_config.LBL_ProxySelectUpServer}
,{
type:_SPACER_,height:10}
,{
type:_CHECKBOX_,ref:ZaProxyConfig.A2_all_mailbox_as_upstream,label:com_zimbra_proxy_config.LBL_ProxyAllMailboxAsUp,trueValue:"TRUE",falseValue:"FALSE",labelLocation:_RIGHT_}
,{
type:_SPACER_,height:"10px"}
,{
type:_OUTPUT_,colSpan:"*",label:"",labelCssSytle:"padding-left:10px",value:com_zimbra_proxy_config.LBL_ProxyLimitUp,visibilityChecks:[ZaEnableProxyWizard.isNotAllMbxAsUp],visibilityChangeEventSources:[ZaProxyConfig.A2_all_mailbox_as_upstream]}
,{
type:_OSELECT_CHECK_,ref:ZaProxyConfig.A2_target_up_servers,colSpan:"*",cssStyle:"margin-bottom:5px;margin-top:5px;border:2px inset gray;",width:"250px",choices:ZaEnableProxyWizard.mbxServerChoices,visibilityChecks:[ZaEnableProxyWizard.isNotAllMbxAsUp],visibilityChangeEventSources:[ZaProxyConfig.A2_all_mailbox_as_upstream]}
]}
,{
type:_SPACER_,height:20}
,{
type:_GROUP_,colSpan:"*",colSizes:["15px","*"],items:[{
type:_OUTPUT_,colSpan:2,value:com_zimbra_proxy_config.LBL_ProxySelectLTServer}
,{
type:_SPACER_,height:10}
,{
type:_CHECKBOX_,ref:ZaProxyConfig.A2_all_mailbox_as_lookuptarget,label:com_zimbra_proxy_config.LBL_ProxyAllMailboxAsLT,trueValue:"TRUE",falseValue:"FALSE",labelLocation:_RIGHT_}
,{
type:_SPACER_,height:"10px"}
,{
type:_OUTPUT_,colSpan:"*",label:"",labelCssSytle:"padding-left:10px",value:com_zimbra_proxy_config.LBL_ProxyLimitLT,visibilityChecks:[ZaEnableProxyWizard.isNotAllMbxAsLT],visibilityChangeEventSources:[ZaProxyConfig.A2_all_mailbox_as_lookuptarget]}
,{
type:_OSELECT_CHECK_,ref:ZaProxyConfig.A2_target_lt_servers,colSpan:"*",cssStyle:"margin-bottom:5px;margin-top:5px;border:2px inset gray;",width:"250px",choices:ZaEnableProxyWizard.mbxServerChoices,visibilityChecks:[ZaEnableProxyWizard.isNotAllMbxAsLT],visibilityChangeEventSources:[ZaProxyConfig.A2_all_mailbox_as_lookuptarget]}
]}
];
r.push(t);
var o={
type:_CASE_,numCols:1,colSizes:["350px"],tabGroupKey:ZaEnableProxyWizard.STEP_CONFIG_WEBPROXY,caseKey:ZaEnableProxyWizard.STEP_CONFIG_WEBPROXY,align:_LEFT_,valign:_TOP_,width:"90%"};
o.items=[{
type:_GROUP_,numCols:2,colSpan:"*",colSizes:["100px","*"],items:[{
type:_OUTPUT_,colSpan:"*",value:com_zimbra_proxy_config.LBL_ProxyWebProxyConfig,cssStyle:"font-weight:bold"}
,{
type:_OUTPUT_,ref:ZaProxyConfig.A2_target_server,labelLocation:_LEFT_,labelCssStyle:"text-align: left; font-weight:bold",label:com_zimbra_proxy_config.LBL_ProxyServerName}
]}
,{
type:_SPACER_,height:10}
,{
type:_GROUP_,numCols:2,colSizes:["120px","auto"],items:[{
type:_CHECKBOX_,label:com_zimbra_proxy_config.LBL_ProxyEnableWebProxy,ref:ZaProxyConfig.A_zimbraReverseProxyHttpEnabled,trueValue:"TRUE",falseValue:"FALSE",labelCssStyle:"text-align: right"}
]}
,{
type:_GROUP_,numCols:2,colSizes:["200px","auto"],visibilityChecks:[ZaEnableProxyWizard.isWebProxyEnabled],visibilityChangeEventSources:[ZaProxyConfig.A_zimbraReverseProxyHttpEnabled],items:[{
type:_SELECT1_,label:com_zimbra_proxy_config.LBL_ProxyWebProxyMode,ref:ZaProxyConfig.A_zimbraReverseProxyMailMode,width:"60px"}
,{
type:_TEXTFIELD_,label:com_zimbra_proxy_config.LBL_ProxyHttpProxyPort,ref:ZaProxyConfig.A_zimbraMailProxyPort,width:"60px",visibilityChecks:[ZaEnableProxyWizard.isProxyMailModeNotHTTPS],visibilityChangeEventSources:[ZaProxyConfig.A_zimbraReverseProxyMailMode]}
,{
type:_TEXTFIELD_,label:com_zimbra_proxy_config.LBL_ProxyHttpSSLProxyPort,ref:ZaProxyConfig.A_zimbraMailSSLProxyPort,width:"60px",visibilityChecks:[ZaEnableProxyWizard.isProxyMailModeNotHTTP],visibilityChangeEventSources:[ZaProxyConfig.A_zimbraReverseProxyMailMode]}
,{
type:_SPACER_,height:10}
,{
type:_TEXTFIELD_,label:com_zimbra_proxy_config.LBL_ProxyHttpUpPort,ref:ZaProxyConfig.A_zimbraMailPort,width:"60px"}
,{
type:_TEXTFIELD_,label:com_zimbra_proxy_config.LBL_ProxyHttpSSLUpPort,ref:ZaProxyConfig.A_zimbraMailSSLPort,width:"60px"}
,{
type:_SPACER_,height:10}
,{
type:_CHECKBOX_,label:com_zimbra_proxy_config.LBL_ProxyAdminEnabled,ref:ZaProxyConfig.A_zimbraReverseProxyAdminEnabled,trueValue:"TRUE",falseValue:"FALSE",labelCssStyle:"text-align: right"}
,{
type:_TEXTFIELD_,label:com_zimbra_proxy_config.LBL_ProxyAdminProxyPort,ref:ZaProxyConfig.A_zimbraAdminProxyPort,width:"60px",visibilityChecks:[ZaEnableProxyWizard.isAdminProxyEnabled],visibilityChangeEventSources:[ZaProxyConfig.A_zimbraReverseProxyAdminEnabled]}
,{
type:_TEXTFIELD_,label:com_zimbra_proxy_config.LBL_ProxyAdminUpPort,ref:ZaProxyConfig.A_zimbraAdminPort,width:"60px",visibilityChecks:[ZaEnableProxyWizard.isAdminProxyEnabled],visibilityChangeEventSources:[ZaProxyConfig.A_zimbraReverseProxyAdminEnabled]}
,]}
,{
type:_SPACER_,height:10}
];
r.push(o);
var n={
type:_CASE_,numCols:1,colSizes:["350px"],tabGroupKey:ZaEnableProxyWizard.STEP_CONFIG_MAILPROXY,caseKey:ZaEnableProxyWizard.STEP_CONFIG_MAILPROXY,align:_LEFT_,valign:_TOP_,width:"90%"};
n.items=[{
type:_GROUP_,numCols:2,colSpan:"*",colSizes:["100px","*"],items:[{
type:_OUTPUT_,colSpan:"*",value:com_zimbra_proxy_config.LBL_ProxyMailProxyConfig,cssStyle:"font-weight:bold"}
,{
type:_OUTPUT_,ref:ZaProxyConfig.A2_target_server,labelLocation:_LEFT_,labelCssStyle:"text-align: left; font-weight:bold",label:com_zimbra_proxy_config.LBL_ProxyServerName}
]}
,{
type:_SPACER_,height:10}
,{
type:_GROUP_,numCols:2,colSizes:["120px","auto"],items:[{
type:_CHECKBOX_,label:com_zimbra_proxy_config.LBL_ProxyEnableMailProxy,ref:ZaProxyConfig.A_zimbraReverseProxyMailEnabled,trueValue:"TRUE",falseValue:"FALSE",labelCssStyle:"text-align: right"}
]}
,{
type:_GROUP_,numCols:2,colSizes:["200px","auto"],visibilityChecks:[ZaEnableProxyWizard.isMailProxyEnabled],visibilityChangeEventSources:[ZaProxyConfig.A_zimbraReverseProxyMailEnabled],items:[{
type:_TEXTFIELD_,label:com_zimbra_proxy_config.LBL_ProxyImapProxyPort,ref:ZaProxyConfig.A_zimbraImapProxyBindPort,width:"60px"}
,{
type:_TEXTFIELD_,label:com_zimbra_proxy_config.LBL_ProxyImapSSLProxyPort,ref:ZaProxyConfig.A_zimbraImapSSLProxyBindPort,width:"60px"}
,{
type:_TEXTFIELD_,label:com_zimbra_proxy_config.LBL_ProxyImapUpPort,ref:ZaProxyConfig.A_zimbraImapBindPort,width:"60px"}
,{
type:_TEXTFIELD_,label:com_zimbra_proxy_config.LBL_ProxyImapSSLUpPort,ref:ZaProxyConfig.A_zimbraImapSSLBindPort,width:"60px"}
,{
type:_SELECT1_,label:com_zimbra_proxy_config.LBL_ProxyImapStartTlsMode,ref:ZaProxyConfig.A_zimbraReverseProxyImapStartTlsMode}
,{
type:_SPACER_,height:10}
,{
type:_TEXTFIELD_,label:com_zimbra_proxy_config.LBL_ProxyPop3ProxyPort,ref:ZaProxyConfig.A_zimbraPop3ProxyBindPort,width:"60px"}
,{
type:_TEXTFIELD_,label:com_zimbra_proxy_config.LBL_ProxyPop3SSLProxyPort,ref:ZaProxyConfig.A_zimbraPop3SSLProxyBindPort,width:"60px"}
,{
type:_TEXTFIELD_,label:com_zimbra_proxy_config.LBL_ProxyPop3UpPort,ref:ZaProxyConfig.A_zimbraPop3BindPort,width:"60px"}
,{
type:_TEXTFIELD_,label:com_zimbra_proxy_config.LBL_ProxyPop3SSLUpPort,ref:ZaProxyConfig.A_zimbraPop3SSLBindPort,width:"60px"}
,{
type:_SELECT1_,label:com_zimbra_proxy_config.LBL_ProxyPop3StartTlsMode,ref:ZaProxyConfig.A_zimbraReverseProxyPop3StartTlsMode}
]}
];
r.push(n);
var l={
type:_CASE_,numCols:1,colSizes:["350px"],tabGroupKey:ZaEnableProxyWizard.STEP_CONFIG_ADVANCED,caseKey:ZaEnableProxyWizard.STEP_CONFIG_ADVANCED,align:_LEFT_,valign:_TOP_};
l.items=[{
type:_GROUP_,numCols:2,colSpan:"*",colSizes:["100px","*"],items:[{
type:_OUTPUT_,colSpan:"*",value:com_zimbra_proxy_config.LBL_ProxyGeneralConfig,cssStyle:"font-weight:bold"}
,{
type:_OUTPUT_,ref:ZaProxyConfig.A2_target_server,labelLocation:_LEFT_,labelCssStyle:"text-align: left; font-weight:bold",label:com_zimbra_proxy_config.LBL_ProxyServerName}
]}
,{
type:_SPACER_,height:10}
,{
type:_GROUP_,numCols:2,colSizes:["250px","auto"],items:[{
type:_TEXTFIELD_,label:com_zimbra_proxy_config.LBL_ProxyWorkerProcessNum,ref:ZaProxyConfig.A_zimbraReverseProxyWorkerProcesses,width:"60px"}
,{
type:_TEXTFIELD_,label:com_zimbra_proxy_config.LBL_ProxyWorkerConnectionNum,ref:ZaProxyConfig.A_zimbraReverseProxyWorkerConnections,width:"60px"}
,{
type:_SELECT1_,label:com_zimbra_proxy_config.LBL_ProxyLogLevel,ref:ZaProxyConfig.A_zimbraReverseProxyLogLevel,getDisplayValue:function(d){
return d
}}
,{
type:_CHECKBOX_,label:com_zimbra_proxy_config.LBL_ProxyUseSSLToUpstream,ref:ZaProxyConfig.A_zimbraReverseProxySSLToUpstreamEnabled,trueValue:"TRUE",falseValue:"FALSE",labelCssStyle:"text-align: right"}
,{
type:_CHECKBOX_,label:com_zimbra_proxy_config.LBL_ProxyAllowServerResolveRoute,ref:ZaProxyConfig.A_zimbraReverseProxyDnsLookupInServerEnabled,labelCssStyle:"text-align: right",trueValue:"FALSE",falseValue:"TRUE"}
]}
,{
type:_SPACER_,height:10}
];
r.push(l);
var s={
type:_CASE_,numCols:1,colSizes:["350px"],tabGroupKey:ZaEnableProxyWizard.STEP_FINISH,caseKey:ZaEnableProxyWizard.STEP_FINISH,align:_LEFT_,valign:_TOP_};
s.items=[{
type:_GROUP_,numCols:1,colSpan:"*",colSizes:["400px"],items:[{
type:_SPACER_,height:10}
,{
type:_OUTPUT_,labelLocation:_LEFT_,labelCssStyle:"text-align: left",label:com_zimbra_proxy_config.MSG_ProxyEnableFinish}
]}
];
r.push(s);
var e="470px";
if(AjxEnv.isIE){
e="520px"
}
c.items=[{
type:_OUTPUT_,colSpan:2,align:_CENTER_,valign:_TOP_,ref:ZaModel.currentStep,choices:this.stepChoices,valueChangeEventSources:[ZaModel.currentStep]}
,{
type:_SEPARATOR_,align:_CENTER_,valign:_TOP_}
,{
type:_SPACER_,align:_CENTER_,valign:_TOP_}
,{
type:_SWITCH_,width:e,align:_LEFT_,valign:_TOP_,items:r}
]
};
ZaXDialog.XFormModifiers.ZaEnableProxyWizard.push(ZaEnableProxyWizard.myXFormModifier)
}
if(ZaSettings&&ZaSettings.EnabledZimlet.com_zimbra_proxy_config){
function ZaDisableProxy(){
ZaItem.call(this,"ZaDisableProxy");
this._init();
this.type=ZaItem.DISABLE_PROXY
}
ZaItem.DISABLE_PROXY="disable_proxy";
ZaDisableProxy.prototype=new ZaItem;
ZaDisableProxy.prototype.constructor=ZaDisableProxy;
ZaDisableProxy.myXModel={
items:[{
id:ZaProxyConfig.A_zimbraReverseProxyHttpEnabled,type:_ENUM_,ref:"attrs/"+ZaProxyConfig.A_zimbraReverseProxyHttpEnabled,choices:ZaModel.BOOLEAN_CHOICES}
,{
id:ZaProxyConfig.A_zimbraMailMode,type:_ENUM_,ref:"attrs/"+ZaProxyConfig.A_zimbraMailMode,choices:ZaProxyConfig.MAIL_MODE_CHOICES}
,{
id:ZaProxyConfig.A_zimbraMailPort,type:_PORT_,ref:"attrs/"+ZaProxyConfig.A_zimbraMailPort}
,{
id:ZaProxyConfig.A_zimbraMailSSLPort,type:_PORT_,ref:"attrs/"+ZaProxyConfig.A_zimbraMailSSLPort}
,{
id:ZaProxyConfig.A_zimbraAdminPort,type:_PORT_,ref:"attrs/"+ZaProxyConfig.A_zimbraAdminPort}
,{
id:ZaProxyConfig.A_zimbraReverseProxyMailEnabled,type:_ENUM_,ref:"attrs/"+ZaProxyConfig.A_zimbraReverseProxyMailEnabled,choices:ZaModel.BOOLEAN_CHOICES}
,{
id:ZaProxyConfig.A_zimbraImapBindPort,type:_PORT_,ref:"attrs/"+ZaProxyConfig.A_zimbraImapBindPort}
,{
id:ZaProxyConfig.A_zimbraImapSSLBindPort,type:_PORT_,ref:"attrs/"+ZaProxyConfig.A_zimbraImapSSLBindPort}
,{
id:ZaProxyConfig.A_zimbraPop3BindPort,type:_PORT_,ref:"attrs/"+ZaProxyConfig.A_zimbraPop3BindPort}
,{
id:ZaProxyConfig.A_zimbraPop3SSLBindPort,type:_PORT_,ref:"attrs/"+ZaProxyConfig.A_zimbraPop3SSLBindPort}
,{
id:ZaProxyConfig.A_zimbraImapCleartextLoginEnabled,type:_ENUM_,ref:"attrs/"+ZaProxyConfig.A_zimbraImapCleartextLoginEnabled,choices:ZaModel.BOOLEAN_CHOICES}
,{
id:ZaProxyConfig.A_zimbraPop3CleartextLoginEnabled,type:_ENUM_,ref:"attrs/"+ZaProxyConfig.A_zimbraPop3CleartextLoginEnabled,choices:ZaModel.BOOLEAN_CHOICES}
,{
id:ZaProxyConfig.A2_mbx_name_array,type:_LIST_,itemType:_STRING_}
,{
id:ZaProxyConfig.A2_proxy_name_array,type:_LIST_,itemType:_STRING_}
,{
id:ZaProxyConfig.A2_target_up_servers,type:_LIST_,itemType:_STRING_}
]};
ZaDisableProxy.init=function(){
this.attrs={};
this.attrs[ZaProxyConfig.A_zimbraReverseProxyHttpEnabled]="FALSE";
this.attrs[ZaProxyConfig.A_zimbraMailMode]="http";
this.attrs[ZaProxyConfig.A_zimbraMailPort]=ZaProxyConfig.DEFAULT_MAIL_PORT;
this.attrs[ZaProxyConfig.A_zimbraMailSSLPort]=ZaProxyConfig.DEFAULT_MAIL_SSL_PORT;
this.attrs[ZaProxyConfig.A_zimbraAdminPort]=ZaProxyConfig.DEFAULT_ADMIN_CONSOLE_PORT_ZCS;
this.attrs[ZaProxyConfig.A_zimbraReverseProxyMailEnabled]="FALSE";
this.attrs[ZaProxyConfig.A_zimbraImapBindPort]=ZaProxyConfig.DEFAULT_IMAP_PORT;
this.attrs[ZaProxyConfig.A_zimbraImapSSLBindPort]=ZaProxyConfig.DEFAULT_IMAP_SSL_PORT;
this.attrs[ZaProxyConfig.A_zimbraPop3BindPort]=ZaProxyConfig.DEFAULT_POP3_PORT;
this.attrs[ZaProxyConfig.A_zimbraPop3SSLBindPort]=ZaProxyConfig.DEFAULT_POP3_SSL_PORT;
this.attrs[ZaProxyConfig.A_zimbraImapCleartextLoginEnabled]="FALSE";
this.attrs[ZaProxyConfig.A_zimbraPop3CleartextLoginEnabled]="FALSE";
this.initServerList()
};
ZaItem.initMethods.ZaDisableProxy=[ZaDisableProxy.init];
ZaDisableProxy.prototype.initServerList=function(){
this[ZaProxyConfig.A2_proxy_name_array]=[];
this[ZaProxyConfig.A2_mbx_name_array]=[];
var r=ZaServer.getAll().getArray();
for(var e=0;
e<r.length;
e++){
var t=r[e];
if(t.attrs[ZaServer.A_zimbraMailProxyServiceEnabled]){
this[ZaProxyConfig.A2_proxy_name_array].push(t.zimbraServiceHostname)
}
if(t.attrs[ZaServer.A_zimbraMailboxServiceEnabled]){
this[ZaProxyConfig.A2_mbx_name_array].push(t.zimbraServiceHostname)
}}
var n=this[ZaProxyConfig.A2_mbx_name_array];
ZaDisableProxyWizard.proxyServerChoices.setChoices(this[ZaProxyConfig.A2_proxy_name_array]);
ZaDisableProxyWizard.proxyServerChoices.dirtyChoices();
var o={};
for(var e=0;
e<r.length;
e++){
var t=r[e];
o[t.zimbraServiceHostname]=t
}
this[ZaProxyConfig.A2_all_servers]=o
};
function ZaDisableProxyWizard(t){
var e="500px";
if(AjxEnv.isIE){
e="550px"
}
ZaXWizardDialog.call(this,t,null,com_zimbra_proxy_config.LBL_DisableProxyWizTitle,e,"330px","ZaDisableProxyWizard");
this.stepChoices=[{
label:com_zimbra_proxy_config.LBL_ProxyWizardStepSelectServer,value:ZaDisableProxyWizard.STEP_SELECT_SERVER}
,{
label:com_zimbra_proxy_config.LBL_ProxyWizardStepWebProxy,value:ZaDisableProxyWizard.STEP_CONFIG_WEBPROXY}
,{
label:com_zimbra_proxy_config.LBL_ProxyWizardStepMailProxy,value:ZaDisableProxyWizard.STEP_CONFIG_MAILPROXY}
,{
label:com_zimbra_proxy_config.LBL_ProxyWizardStepFinish,value:ZaDisableProxyWizard.STEP_FINISH}
];
this.initForm(ZaDisableProxy.myXModel,this.getMyXForm());
this._localXForm.setController();
this._localXForm.addListener(DwtEvent.XFORMS_FORM_DIRTY_CHANGE,new AjxListener(this,ZaDisableProxyWizard.prototype.handleXFormChange));
this._localXForm.addListener(DwtEvent.XFORMS_VALUE_ERROR,new AjxListener(this,ZaDisableProxyWizard.prototype.handleXFormChange))
}
ZaDisableProxyWizard.prototype=new ZaXWizardDialog;
ZaDisableProxyWizard.prototype.constructor=ZaDisableProxyWizard;
ZaDisableProxyWizard.proxyServerChoices=new XFormChoices([],XFormChoices.SIMPLE_LIST);
ZaDisableProxyWizard.mbxServerChoices=new XFormChoices([],XFormChoices.SIMPLE_LIST);
ZaXDialog.XFormModifiers.ZaDisableProxyWizard=new Array();
ZaDisableProxyWizard.helpURL=location.pathname+"help/admin/html/tools/config_proxy.htm?locid="+AjxEnv.DEFAULT_LOCALE;
ZaDisableProxyWizard.STEP_INDEX=1;
ZaDisableProxyWizard.STEP_SELECT_SERVER=ZaDisableProxyWizard.STEP_INDEX++;
ZaDisableProxyWizard.STEP_CONFIG_WEBPROXY=ZaDisableProxyWizard.STEP_INDEX++;
ZaDisableProxyWizard.STEP_CONFIG_MAILPROXY=ZaDisableProxyWizard.STEP_INDEX++;
ZaDisableProxyWizard.STEP_FINISH=ZaDisableProxyWizard.STEP_INDEX++;
ZaDisableProxyWizard.prototype.handleXFormChange=function(){
var e=this._containedObject[ZaModel.currentStep];
var t=this._containedObject;
if(e==ZaDisableProxyWizard.STEP_SELECT_SERVER){
if(!AjxUtil.isEmpty(t[ZaProxyConfig.A2_target_server])){
this._button[DwtWizardDialog.NEXT_BUTTON].setEnabled(true)
}else{
this._button[DwtWizardDialog.NEXT_BUTTON].setEnabled(false)
}}};
ZaDisableProxyWizard.prototype.popup=function(e){
ZaXWizardDialog.prototype.popup.call(this,e);
this.changeButtonStateForStep(ZaDisableProxyWizard.STEP_SELECT_SERVER)
};
ZaDisableProxyWizard.prototype.changeButtonStateForStep=function(e){
if(e==ZaDisableProxyWizard.STEP_SELECT_SERVER){
this._button[DwtWizardDialog.FINISH_BUTTON].setEnabled(false);
if(AjxUtil.isEmpty(this._containedObject[ZaProxyConfig.A2_target_server])){
this._button[DwtWizardDialog.NEXT_BUTTON].setEnabled(false)
}else{
this._button[DwtWizardDialog.NEXT_BUTTON].setEnabled(true)
}
this._button[DwtWizardDialog.PREV_BUTTON].setEnabled(false)
}else{
if(e==ZaDisableProxyWizard.STEP_FINISH){
this._button[DwtWizardDialog.NEXT_BUTTON].setEnabled(false);
this._button[DwtWizardDialog.PREV_BUTTON].setEnabled(true);
this._button[DwtWizardDialog.FINISH_BUTTON].setEnabled(true)
}else{
this._button[DwtWizardDialog.NEXT_BUTTON].setEnabled(true);
this._button[DwtWizardDialog.PREV_BUTTON].setEnabled(true);
this._button[DwtWizardDialog.FINISH_BUTTON].setEnabled(false)
}}};
ZaDisableProxyWizard.prototype.goPage=function(e){
ZaXWizardDialog.prototype.goPage.call(this,e);
this.changeButtonStateForStep(e)
};
ZaDisableProxyWizard.prototype.finishWizard=function(){
try{
this.applyProxyConfig();
this.popdown()
}
catch(e){
ZaApp.getInstance().getCurrentController()._handleException(e,"ZaDisableProxyWizard.prototype.finishWizard",null,false)
}};
ZaDisableProxyWizard.prototype.applyProxyConfig=function(){
var y=this._localXForm.getInstance();
var f=y[ZaProxyConfig.A2_all_servers];
var v=f[y[ZaProxyConfig.A2_target_server]];
var d=AjxSoapDoc.create("ModifyServerRequest",ZaZimbraAdmin.URN);
d.set("id",v.id);
if(y.attrs[ZaProxyConfig.A_zimbraReverseProxyHttpEnabled]=="FALSE"){
ZaDisableProxyWizard.setAttr(d,ZaProxyConfig.A_zimbraReverseProxyHttpEnabled,y.attrs[ZaProxyConfig.A_zimbraReverseProxyHttpEnabled]);
ZaDisableProxyWizard.setAttr(d,ZaProxyConfig.A_zimbraReverseProxyAdminEnabled,"FALSE");
ZaDisableProxyWizard.setAttr(d,ZaProxyConfig.A_zimbraMailSSLProxyPort,"0",u);
ZaDisableProxyWizard.setAttr(d,ZaProxyConfig.A_zimbraMailProxyPort,"0",u);
ZaDisableProxyWizard.setAttr(d,ZaProxyConfig.A_zimbraAdminProxyPort,"0",u)
}
if(y.attrs[ZaProxyConfig.A_zimbraReverseProxyMailEnabled]=="FALSE"){
ZaDisableProxyWizard.setAttr(d,ZaProxyConfig.A_zimbraReverseProxyMailEnabled,y.attrs[ZaProxyConfig.A_zimbraReverseProxyMailEnabled]);
ZaDisableProxyWizard.setAttr(d,ZaProxyConfig.A_zimbraImapProxyBindPort,"0",u);
ZaDisableProxyWizard.setAttr(d,ZaProxyConfig.A_zimbraPop3ProxyBindPort,"0",u);
ZaDisableProxyWizard.setAttr(d,ZaProxyConfig.A_zimbraImapSSLProxyBindPort,"0",u);
ZaDisableProxyWizard.setAttr(d,ZaProxyConfig.A_zimbraPop3SSLProxyBindPort,"0",u)
}
if(v.attrs[ZaProxyConfig.A_zimbraReverseProxyHttpEnabled]=="FALSE"&&v.attrs[ZaProxyConfig.A_zimbraReverseProxyMailEnabled]=="FALSE"){
ZaDisableProxyWizard.setAttr(d,ZaProxyConfig.A_zimbraServiceEnabled,"proxy",null,"-")
}
var g=new Object();
g.soapDoc=d;
var c={
controller:ZaApp.getInstance().getCurrentController(),busyMsg:ZaMsg.BUSY_MODIFY_SERVER};
var n=ZaRequestMgr.invoke(g,c).Body.ModifyServerResponse;
v.initFromJS(n.server[0]);
var t=v.attrs[ZaProxyConfig.A_zimbraReverseProxyUpstreamServers];
if(t==null){
t=y[ZaProxyConfig.A2_mbx_name_array]
}
var p=AjxSoapDoc.create("BatchRequest","urn:zimbra");
p.setMethodAttribute("onerror","stop");
for(var b in t){
var u=p.set("ModifyServerRequest",null,null,ZaZimbraAdmin.URN);
var o=f[t[b]];
var e=o.id;
p.set("id",e,u);
if(y.attrs[ZaProxyConfig.A_zimbraReverseProxyHttpEnabled]=="FALSE"){
ZaDisableProxyWizard.setAttr(p,ZaProxyConfig.A_zimbraMailSSLPort,y.attrs[ZaProxyConfig.A_zimbraMailSSLPort],u);
ZaDisableProxyWizard.setAttr(p,ZaProxyConfig.A_zimbraMailPort,y.attrs[ZaProxyConfig.A_zimbraMailPort],u);
ZaDisableProxyWizard.setAttr(p,ZaProxyConfig.A_zimbraMailMode,y.attrs[ZaProxyConfig.A_zimbraMailMode],u);
ZaDisableProxyWizard.setAttr(p,ZaProxyConfig.A_zimbraAdminPort,y.attrs[ZaProxyConfig.A_zimbraAdminPort],u)
}
if(y.attrs[ZaProxyConfig.A_zimbraReverseProxyMailEnabled]=="FALSE"){
ZaDisableProxyWizard.setAttr(p,ZaProxyConfig.A_zimbraImapBindPort,y.attrs[ZaProxyConfig.A_zimbraImapBindPort],u);
ZaDisableProxyWizard.setAttr(p,ZaProxyConfig.A_zimbraPop3BindPort,y.attrs[ZaProxyConfig.A_zimbraPop3BindPort],u);
ZaDisableProxyWizard.setAttr(p,ZaProxyConfig.A_zimbraImapSSLBindPort,y.attrs[ZaProxyConfig.A_zimbraImapSSLBindPort],u);
ZaDisableProxyWizard.setAttr(p,ZaProxyConfig.A_zimbraPop3SSLBindPort,y.attrs[ZaProxyConfig.A_zimbraPop3SSLBindPort],u);
ZaDisableProxyWizard.setAttr(p,ZaProxyConfig.A_zimbraImapCleartextLoginEnabled,y.attrs[ZaProxyConfig.A_zimbraImapCleartextLoginEnabled],u);
ZaDisableProxyWizard.setAttr(p,ZaProxyConfig.A_zimbraPop3CleartextLoginEnabled,y.attrs[ZaProxyConfig.A_zimbraPop3CleartextLoginEnabled],u)
}}
var m=new Object();
m.soapDoc=p;
var r={
controller:ZaApp.getInstance().getCurrentController(),busyMsg:ZaMsg.BUSY_MODIFY_SERVER};
var l=ZaRequestMgr.invoke(m,r).Body.BatchResponse
};
ZaDisableProxyWizard.setAttr=function(n,e,s,t,r){
var o;
if(t){
o=n.set("a",s,t)
}else{
o=n.set("a",s)
}
if(r){
o.setAttribute("n",r+e)
}else{
o.setAttribute("n",e)
}};
ZaDisableProxyWizard.prototype.setObject=function(e){
this._containedObject=e;
this._containedObject[ZaModel.currentStep]=e[ZaModel.currentStep]||ZaDisableProxyWizard.STEP_SELECT_SERVER;
if(AjxUtil.arrayContains(e[ZaProxyConfig.A2_proxy_name_array],e[ZaProxyConfig.A2_current_server])){
this._containedObject[ZaProxyConfig.A2_target_server]=e[ZaProxyConfig.A2_current_server]
}else{
this._containedObject[ZaProxyConfig.A2_target_server]=undefined
}
this._localXForm.setInstance(this._containedObject)
};
ZaDisableProxyWizard.isWebProxyDisabled=function(){
var e=this.getInstanceValue(ZaProxyConfig.A_zimbraReverseProxyHttpEnabled);
return(e=="FALSE")
};
ZaDisableProxyWizard.isMailProxyDisabled=function(){
var e=this.getInstanceValue(ZaProxyConfig.A_zimbraReverseProxyMailEnabled);
return(e=="FALSE")
};
ZaDisableProxyWizard.myXFormModifier=function(l){
var r=new Array();
var t={
type:_CASE_,numCols:1,colSizes:["350px"],tabGroupKey:ZaDisableProxyWizard.STEP_SELECT_SERVER,caseKey:ZaDisableProxyWizard.STEP_SELECT_SERVER,align:_LEFT_,valign:_TOP_,width:"90%"};
t.items=[{
type:_SPACER_,height:10}
,{
type:_OUTPUT_,colSpan:2,value:com_zimbra_proxy_config.LBL_ProxySelectProxyServer}
,{
type:_SPACER_,height:10}
,{
type:_GROUP_,colSpan:"*",colSizes:["260px","*"],items:[{
type:_OSELECT1_,ref:ZaProxyConfig.A2_target_server,label:com_zimbra_proxy_config.LBL_ProxySelectProxyServerToDisableInDetail,labelLocation:_LEFT_,labelCssStyle:"text-align:left",choices:ZaDisableProxyWizard.proxyServerChoices,editable:false}
]}
];
r.push(t);
var o={
type:_CASE_,numCols:1,colSizes:["350px"],tabGroupKey:ZaDisableProxyWizard.STEP_CONFIG_WEBPROXY,caseKey:ZaDisableProxyWizard.STEP_CONFIG_WEBPROXY,align:_LEFT_,valign:_TOP_,width:"90%"};
o.items=[{
type:_GROUP_,numCols:2,colSpan:"*",colSizes:["100px","*"],items:[{
type:_OUTPUT_,colSpan:"*",value:com_zimbra_proxy_config.LBL_ProxyWebProxyConfig,cssStyle:"font-weight:bold"}
,{
type:_OUTPUT_,ref:ZaProxyConfig.A2_target_server,labelLocation:_LEFT_,labelCssStyle:"text-align: left; font-weight:bold",label:com_zimbra_proxy_config.LBL_ProxyServerName}
]}
,{
type:_SPACER_,height:10}
,{
type:_GROUP_,numCols:2,colSizes:["120px","auto"],items:[{
type:_CHECKBOX_,label:com_zimbra_proxy_config.LBL_ProxyDisableWebProxy,ref:ZaProxyConfig.A_zimbraReverseProxyHttpEnabled,trueValue:"FALSE",falseValue:"TRUE",labelCssStyle:"text-align: right"}
]}
,{
type:_GROUP_,numCols:2,colSizes:["200px","auto"],visibilityChecks:[ZaDisableProxyWizard.isWebProxyDisabled],visibilityChangeEventSources:[ZaProxyConfig.A_zimbraReverseProxyHttpEnabled],items:[{
type:_SELECT1_,label:com_zimbra_proxy_config.LBL_ProxyWebMode,ref:ZaProxyConfig.A_zimbraMailMode,width:"60px"}
,{
type:_SPACER_,height:10}
,{
type:_TEXTFIELD_,label:com_zimbra_proxy_config.LBL_ProxyHttpPort,ref:ZaProxyConfig.A_zimbraMailPort,width:"60px"}
,{
type:_TEXTFIELD_,label:com_zimbra_proxy_config.LBL_ProxyHttpSSLPort,ref:ZaProxyConfig.A_zimbraMailSSLPort,width:"60px"}
,{
type:_SPACER_,height:10}
,{
type:_TEXTFIELD_,label:com_zimbra_proxy_config.LBL_ProxyAdminPort,ref:ZaProxyConfig.A_zimbraAdminPort,width:"60px"}
]}
,{
type:_SPACER_,height:10}
];
r.push(o);
var n={
type:_CASE_,numCols:1,colSizes:["350px"],tabGroupKey:ZaDisableProxyWizard.STEP_CONFIG_MAILPROXY,caseKey:ZaDisableProxyWizard.STEP_CONFIG_MAILPROXY,align:_LEFT_,valign:_TOP_,width:"90%"};
n.items=[{
type:_GROUP_,numCols:2,colSpan:"*",colSizes:["100px","*"],items:[{
type:_OUTPUT_,colSpan:"*",value:com_zimbra_proxy_config.LBL_ProxyMailProxyConfig,cssStyle:"font-weight:bold"}
,{
type:_OUTPUT_,ref:ZaProxyConfig.A2_target_server,labelLocation:_LEFT_,labelCssStyle:"text-align: left; font-weight:bold",label:com_zimbra_proxy_config.LBL_ProxyServerName}
]}
,{
type:_SPACER_,height:10}
,{
type:_GROUP_,numCols:2,colSizes:["120px","auto"],items:[{
type:_CHECKBOX_,label:com_zimbra_proxy_config.LBL_ProxyEnableMailProxy,ref:ZaProxyConfig.A_zimbraReverseProxyMailEnabled,trueValue:"FALSE",falseValue:"TRUE",labelCssStyle:"text-align: right"}
]}
,{
type:_GROUP_,numCols:2,colSizes:["200px","auto"],visibilityChecks:[ZaDisableProxyWizard.isMailProxyDisabled],visibilityChangeEventSources:[ZaProxyConfig.A_zimbraReverseProxyMailEnabled],items:[{
type:_TEXTFIELD_,label:com_zimbra_proxy_config.LBL_ProxyImapPort,ref:ZaProxyConfig.A_zimbraImapBindPort,width:"60px"}
,{
type:_TEXTFIELD_,label:com_zimbra_proxy_config.LBL_ProxyImapSSLPort,ref:ZaProxyConfig.A_zimbraImapSSLBindPort,width:"60px"}
,{
type:_CHECKBOX_,label:com_zimbra_proxy_config.LBL_EnableImapCleartextLogin,ref:ZaProxyConfig.A_zimbraImapCleartextLoginEnabled,trueValue:"TRUE",falseValue:"FALSE",labelCssStyle:"text-align: right"}
,{
type:_SPACER_,height:10}
,{
type:_TEXTFIELD_,label:com_zimbra_proxy_config.LBL_ProxyPop3Port,ref:ZaProxyConfig.A_zimbraPop3BindPort,width:"60px"}
,{
type:_TEXTFIELD_,label:com_zimbra_proxy_config.LBL_ProxyPop3SSLPort,ref:ZaProxyConfig.A_zimbraPop3SSLBindPort,width:"60px"}
,{
type:_CHECKBOX_,label:com_zimbra_proxy_config.LBL_EnablePop3CleartextLogin,ref:ZaProxyConfig.A_zimbraPop3CleartextLoginEnabled,trueValue:"TRUE",falseValue:"FALSE",labelCssStyle:"text-align: right"}
]}
];
r.push(n);
var s={
type:_CASE_,numCols:1,colSizes:["350px"],tabGroupKey:ZaDisableProxyWizard.STEP_FINISH,caseKey:ZaDisableProxyWizard.STEP_FINISH,align:_LEFT_,valign:_TOP_};
s.items=[{
type:_GROUP_,numCols:1,colSpan:"*",colSizes:["400px"],items:[{
type:_SPACER_,height:10}
,{
type:_OUTPUT_,labelLocation:_LEFT_,labelCssStyle:"text-align: left",label:com_zimbra_proxy_config.MSG_ProxyDisableFinish}
]}
];
r.push(s);
var e="470px";
if(AjxEnv.isIE){
e="520px"
}
l.items=[{
type:_OUTPUT_,colSpan:2,align:_CENTER_,valign:_TOP_,ref:ZaModel.currentStep,choices:this.stepChoices,valueChangeEventSources:[ZaModel.currentStep]}
,{
type:_SEPARATOR_,align:_CENTER_,valign:_TOP_}
,{
type:_SPACER_,align:_CENTER_,valign:_TOP_}
,{
type:_SWITCH_,width:e,align:_LEFT_,valign:_TOP_,items:r}
]
};
ZaXDialog.XFormModifiers.ZaDisableProxyWizard.push(ZaDisableProxyWizard.myXFormModifier)
}
if(window.console&&window.console.log){
window.console.log("Loaded ZaCert.js")
}
if(ZaSettings&&ZaSettings.EnabledZimlet.com_zimbra_cert_manager){
function ZaCert(){
ZaItem.call(this,"ZaCert");
this._init();
this.type=ZaItem.CERT
}
ZaItem.CERT="certificate";
ZaCert.prototype=new ZaItem;
ZaCert.prototype.constructor=ZaCert;
ZaCert.DEFAULT_VALIDATION_DAYS=365;
ZaCert.A_countryName="C";
ZaCert.A_commonName="CN";
ZaCert.A_state="ST";
ZaCert.A_city="L";
ZaCert.A_organization="O";
ZaCert.A_organizationUnit="OU";
ZaCert.A_validation_days="validation_days";
ZaCert.A_subject="subject";
ZaCert.A_type="type";
ZaCert.A_type_self="self";
ZaCert.A_type_comm="comm";
ZaCert.A_type_csr="csr";
ZaCert.A_csr_exists="csr_exists";
ZaCert.A_digest="digest";
ZaCert.A_keysize="keysize";
ZaCert.A_force_new_csr="force_new_csr";
ZaCert.A_target_server="target_server";
ZaCert.A_subject_alt="SubjectAltName";
ZaCert.A_use_wildcard_server_name="user_wildcard_server_name";
ZaCert.ALL_SERVERS="--- All Servers ---";
ZaCert.TARGET_SERVER_CHOICES=[{
label:com_zimbra_cert_manager.lb_ALL_SERVERS,value:ZaCert.ALL_SERVERS}
];
ZaCert.DIGEST_CHOICES=[{
label:"md4",value:"md4"}
,{
label:"md5",value:"md5"}
,{
label:"mdc2",value:"mdc2"}
,{
label:"ripemd160",value:"ripemd160"}
,{
label:"sha",value:"sha"}
,{
label:"sha1",value:"sha1"}
,{
label:"sha224",value:"sha224"}
,{
label:"sha256",value:"sha256"}
,{
label:"sha384",value:"sha384"}
,{
label:"sha512",value:"sha512"}
];
ZaCert.KEY_SIZE_CHOICES=[{
label:"1024",value:"1024"}
,{
label:"2048",value:"2048"}
];
if(ZaSettings){
ZaSettings.CERTS_VIEW="certsView";
ZaSettings.ALL_UI_COMPONENTS.push({
value:ZaSettings.CERTS_VIEW,label:com_zimbra_cert_manager.UI_Comp_certsView}
);
ZaSettings.OVERVIEW_TOOLS_ITEMS.push(ZaSettings.CERTS_VIEW);
ZaSettings.VIEW_RIGHTS[ZaSettings.CERTS_VIEW]="adminConsoleCertificateRights"
}
ZaCert.prototype.init=function(e){
this.attrs={};
this.attrs[ZaCert.A_subject_alt]=[];
this[ZaCert.A_type_self]=true;
this[ZaCert.A_type_comm]=false;
this[ZaCert.A_type_csr]=false;
this[ZaCert.A_digest]="sha256";
this[ZaCert.A_keysize]="2048";
this.initCSR(e);
this[ZaCert.A_validation_days]=ZaCert.DEFAULT_VALIDATION_DAYS;
this[ZaCert.A_force_new_csr]="FALSE"
};
ZaCert.prototype.initCSR=function(n){
if(n){
var e=n[ZaCert.A_csr_exists];
if(e&&e=="1"){
this[ZaCert.A_csr_exists]=true
}else{
this[ZaCert.A_csr_exists]=false
}
for(var o in n){
var s=n[o];
if(s instanceof Array){
if((o==ZaCert.A_subject_alt)||(s.length>1)){
this.attrs[o]=[];
for(var t=0;
t<s.length;
t++){
if(s[t]._content.length>0){
this.attrs[o].push(s[t]._content)
}}}else{
this.attrs[o]=s[0]._content
}}}}
this.modifySubjectAltNames()
};
ZaCert.prototype.modifySubjectAltNames=function(){
if(window.console&&window.console.log){
console.log("Enter ZaCert.prototype.modifySubjectAltNames ")
}
var o=this.attrs[ZaCert.A_subject_alt];
if((!this[ZaCert.A_csr_exists])||(this[ZaCert.A_force_new_csr]=="TRUE")){
if(window.console&&window.console.log){
console.log("Modifying SubjectAltNames ")
}
if(this[ZaCert.A_target_server]==ZaCert.ALL_SERVERS){
for(var t=0;
t<ZaCert.TARGET_SERVER_CHOICES.length;
t++){
if((ZaCert.TARGET_SERVER_CHOICES[t].value!=ZaCert.ALL_SERVERS)&&(ZaUtil.findValueInArray(o,ZaCert.TARGET_SERVER_CHOICES[t].label)==-1)){
if(window.console&&window.console.log){
console.log("Adding "+ZaCert.TARGET_SERVER_CHOICES[t].label)
}
o.push(ZaCert.TARGET_SERVER_CHOICES[t].label)
}}}else{
var e;
for(var t=0;
t<ZaCert.TARGET_SERVER_CHOICES.length;
t++){
if(ZaCert.TARGET_SERVER_CHOICES[t].value==this[ZaCert.A_target_server]){
e=ZaCert.TARGET_SERVER_CHOICES[t].label
}}
if((e!=null)&&(ZaUtil.findValueInArray(o,e)==-1)){
if(window.console&&window.console.log){
console.log("Adding "+e)
}
o.push(e)
}}}};
ZaCert.certOvTreeModifier=function(u){
var d=this;
if(!d){
throw new Exception("ZaCert.certOvTreeModifier: Overview Panel Controller is not set.")
}
if(ZaSettings.ENABLED_UI_COMPONENTS[ZaSettings.CERTS_VIEW]||ZaSettings.ENABLED_UI_COMPONENTS[ZaSettings.CARTE_BLANCHE_UI]){
try{
if(appNewUI){
var o=ZaTree.getPathByArray([ZaMsg.OVP_home,ZaMsg.OVP_configure]);
var l=d._app.getServerList().getArray();
if(l&&l.length){
var t=l.length;
if(t>0){
var s=new ZaTreeItemData({
parent:o,id:ZaId.getTreeItemId(ZaId.PANEL_APP,ZaId.PANEL_CONFIGURATION,null,"CertHV"),text:com_zimbra_cert_manager.OVP_certs,canShowOnRoot:false,forceNode:false,mappingId:ZaZimbraAdmin._CERTS_SERVER_LIST_VIEW}
);
u.addTreeItemData(s);
var e=ZaTree.getPathByArray([ZaMsg.OVP_home,ZaMsg.OVP_configure,com_zimbra_cert_manager.OVP_certs]);
for(var n=0;
n<t;
n++){
var r=new ZaTreeItemData({
parent:e,id:DwtId._makeId(s.id,n+1),text:l[n].name,defaultSelectedItem:1,mappingId:ZaZimbraAdmin._CERTS}
);
r.setData(ZaOverviewPanelController._OBJ_ID,l[n].id);
u.addTreeItemData(r);
ZaCert.TARGET_SERVER_CHOICES.push({
label:l[n].name,value:l[n].id}
)
}
ZaOverviewPanelController.overviewTreeListeners[ZaZimbraAdmin._CERTS_SERVER_LIST_VIEW]=ZaCert.certsServerListTreeListener
}else{
var s=new ZaTreeItemData({
parent:o,id:ZaId.getTreeItemId(ZaId.PANEL_APP,ZaId.PANEL_CONFIGURATION,null,"CertHV"),text:com_zimbra_cert_manager.OVP_certs,mappingId:ZaZimbraAdmin._CERTS}
);
s.setData(ZaOverviewPanelController._OBJ_ID,l[0].id);
u.addTreeItemData(s);
ZaCert.TARGET_SERVER_CHOICES.push({
label:l[0].name,value:l[0].id}
)
}
ZaOverviewPanelController.overviewTreeListeners[ZaZimbraAdmin._CERTS]=ZaCert.certsServerNodeTreeListener
}}else{
d._certTi=new DwtTreeItem({
parent:d._toolsTi,className:"AdminTreeItem"}
);
d._certTi.setText(com_zimbra_cert_manager.OVP_certs);
d._certTi.setImage("OverviewCertificate");
var l=d._app.getServerList().getArray();
if(l&&l.length){
var t=l.length;
if(t>1){
d._certTi.setData(ZaOverviewPanelController._TID,ZaZimbraAdmin._CERTS_SERVER_LIST_VIEW);
for(var n=0;
n<t;
n++){
var r=new DwtTreeItem({
parent:d._certTi,className:"AdminTreeItem"}
);
r.setText(l[n].name);
r.setImage("Server");
r.setData(ZaOverviewPanelController._TID,ZaZimbraAdmin._CERTS);
r.setData(ZaOverviewPanelController._OBJ_ID,l[n].id);
ZaCert.TARGET_SERVER_CHOICES.push({
label:l[n].name,value:l[n].id}
)
}
ZaOverviewPanelController.overviewTreeListeners[ZaZimbraAdmin._CERTS_SERVER_LIST_VIEW]=ZaCert.certsServerListTreeListener
}else{
d._certTi.setData(ZaOverviewPanelController._TID,ZaZimbraAdmin._CERTS);
d._certTi.setData(ZaOverviewPanelController._OBJ_ID,l[0].id);
ZaCert.TARGET_SERVER_CHOICES.push({
label:l[0].name,value:l[0].id}
)
}
ZaOverviewPanelController.overviewTreeListeners[ZaZimbraAdmin._CERTS]=ZaCert.certsServerNodeTreeListener
}}}
catch(c){
d._handleException(c,"ZaCert.certOvTreeModifier",null,false)
}}};
ZaCert.certsServerListTreeListener=function(e){
if(window.console&&window.console.log){
console.log("Show the server lists ...")
}
if(ZaApp.getInstance().getCurrentController()){
ZaApp.getInstance().getCurrentController().switchToNextView(ZaApp.getInstance().getCertsServerListController(),ZaCertsServerListController.prototype.show,ZaServer.getAll())
}else{
ZaApp.getInstance().getCertsServerListController().show(ZaServer.getAll())
}};
ZaCert.certsServerNodeTreeListener=function(t){
var e=t.item.getData(ZaOverviewPanelController._OBJ_ID);
if(window.console&&window.console.log){
console.log("Click the server node: "+e)
}
if(ZaApp.getInstance().getCurrentController()){
ZaApp.getInstance().getCurrentController().switchToNextView(ZaApp.getInstance().getCertViewController(),ZaCertViewController.prototype.show,[ZaCert.getCerts(ZaApp.getInstance(),e),e])
}else{
ZaApp.getInstance().getCertViewController().show(ZaCert.getCerts(ZaApp.getInstance(),e),e)
}};
if(ZaTabView.XFormModifiers.ZaHomeXFormView){
ZaHomeXFormView.onInstallCertficate=function(n){
var e=ZaApp.getInstance().getCertsServerListController();
var t=ZaServer.getAll();
if(t.size()>0){
var o=t.getVector().getLast();
var e=ZaApp.getInstance().getCertsServerListController();
ZaApp.getInstance().getCertsServerListController().show(t);
ZaCert.launchNewCertWizard.call(e,o.id)
}};
ZaCert.HomeXFormModifier=function(r){
if(ZaSettings.ENABLED_UI_COMPONENTS[ZaSettings.CERTS_VIEW]||ZaSettings.ENABLED_UI_COMPONENTS[ZaSettings.CARTE_BLANCHE_UI]){
var t=ZaHomeXFormView.getHomeSetupItem(r);
var n=t.headerLabels;
var e=t.contentItems;
var o;
for(var o=0;
o<n.length;
o++){
if(n[o]==ZaMsg.LBL_HomeGetStared){
break
}}
if(o!=n.length){
var s=e[o];
s[2]={
value:ZaMsg.LBL_HomeInstallCert,onClick:ZaHomeXFormView.onInstallCertficate}
}}};
ZaTabView.XFormModifiers.ZaHomeXFormView.push(ZaCert.HomeXFormModifier)
}
ZaCert.isCertExpired=function(){
var e=this.getInstanceValue(ZaTask.A2_expiredCertMsg);
return !(e===undefined)
};
ZaCert.isCertExpiring=function(){
var e=this.getInstanceValue(ZaTask.A2_expiringCertMsg);
return !(e===undefined)
};
if(ZaTask&&ZaTask.myXModel){
ZaTask.A2_expiredCertMsg="expiredCertMsg";
ZaTask.A2_expiringCertMsg="expiringCertMsg";
ZaTask.myXModel.items.push({
id:ZaTask.A2_expiredCertMsg,type:_STRING_}
,{
id:ZaTask.A2_expiringCertMsg,type:_STRING_}
);
if(ZaTabView.XFormModifiers.ZaTaskContentView!=null){
ZaCert.taskContentViewXFormModifier=function(t){
if(!(ZaSettings.ENABLED_UI_COMPONENTS[ZaSettings.CERTS_VIEW]||ZaSettings.ENABLED_UI_COMPONENTS[ZaSettings.CARTE_BLANCHE_UI])){
return
}
var e=ZaTaskContentView.getNotificationBoard(t);
e.items.push({
type:_GROUP_,numCols:1,width:"98%",visibilityChecks:[ZaCert.isCertExpired],visibilityChangeEventSources:[ZaTask.A2_expiredCertMsg],items:[{
type:_GROUP_,numCols:2,colSizes:["20px","*"],cssStyle:"padding-left:5px; padding-top:8px;",items:[{
type:_OUTPUT_,value:AjxImg.getImageHtml("Critical"),valign:_TOP_,bmolsnr:true}
,{
type:_OUTPUT_,ref:ZaTask.A2_expiredCertMsg,cssStyle:"padding-left:5px;",bmolsnr:true}
]}
,{
type:_OUTPUT_,align:_RIGHT_,value:com_zimbra_cert_manager.ManageCert,containerCssClass:"ZaLinkedItem",onClick:ZaCert.onManageCert}
,{
type:_SPACER_,height:5}
]}
,{
type:_GROUP_,numCols:1,width:"98%",visibilityChecks:[ZaCert.isCertExpiring],visibilityChangeEventSources:[ZaTask.A2_expiringCertMsg],items:[{
type:_GROUP_,numCols:2,colSizes:["20px","*"],cssStyle:"padding-left:5px; padding-top:8px;",items:[{
type:_OUTPUT_,value:AjxImg.getImageHtml("Warning"),valign:_TOP_,bmolsnr:true}
,{
type:_OUTPUT_,ref:ZaTask.A2_expiringCertMsg,cssStyle:"padding-left:5px;",bmolsnr:true}
]}
,{
type:_OUTPUT_,align:_RIGHT_,value:com_zimbra_cert_manager.ManageCert,containerCssClass:"ZaLinkedItem",onClick:ZaCert.onManageCert}
,{
type:_SPACER_,height:5}
]}
)
};
ZaTabView.XFormModifiers.ZaTaskContentView.push(ZaCert.taskContentViewXFormModifier);
ZaCert.onManageCert=function(t){
var e=ZaZimbraAdmin.getInstance().getOverviewPanelController().getOverviewPanel().getFolderTree();
var o=ZaTree.getPathByArray([ZaMsg.OVP_home,ZaMsg.OVP_configure,com_zimbra_cert_manager.OVP_certs]);
e.setSelectionByPath(o,false)
}
}}
ZaCert.postLoadCertExpireStatus=function(){
if(!(ZaSettings.ENABLED_UI_COMPONENTS[ZaSettings.CERTS_VIEW]||ZaSettings.ENABLED_UI_COMPONENTS[ZaSettings.CARTE_BLANCHE_UI])){
return
}
var e=new AjxCallback(this,ZaCert.doLoadCertExpireStatus);
ZaCert.getCerts(ZaApp.getInstance(),ZaCert.ALL_SERVERS,true,e)
};
ZaHome.postLoadDataFunction.push(ZaCert.postLoadCertExpireStatus);
ZaCert.doLoadCertExpireStatus=function(t){
if(t&&t.getException&&t.getException()){
return
}
var s=t._data.Body.GetCertResponse;
var e=new Date();
var m=30*24*60*60*1000;
var u=new Array();
var g=new Array();
var n=new Date(9999,12,31);
var o=new Date(9999,12,31);
for(var l in s.cert){
var r=s.cert[l];
var c=r.notAfter?new Date(Date.parse(r.notAfter[0]._content)):null;
if(!c){
continue
}
if(e>c){
u.push(r);
if(c<n){
n=c
}}else{
if(new Date(e.getTime()+m)>c){
g.push(r);
if(c<o){
o=c
}}}}
var p=AjxDateFormat.getDateInstance(AjxDateFormat.LONG);
var f=ZaZimbraAdmin.getInstance().getTaskController();
if(u.length>0){
var y=AjxMessageFormat.format(com_zimbra_cert_manager.ExpiredCertMsg,[u.length]);
var d=(u.length>1)?AjxMessageFormat.format(com_zimbra_cert_manager.MultiExpDate,p.format(n)):AjxMessageFormat.format(com_zimbra_cert_manager.SingleExpDate,p.format(n));
f.setInstanceValue(y+" "+d,ZaTask.A2_expiredCertMsg);
f.increaseNotificationCount(ZaTask.A2_expiredCertMsg)
}else{
f.setInstanceValue(undefined,ZaTask.A2_expiredCertMsg);
f.decreaseNotificationCount(ZaTask.A2_expiredCertMsg)
}
if(g.length>0){
var y=AjxMessageFormat.format(com_zimbra_cert_manager.ExpiringCertMsg,[g.length]);
var d=(g.length>1)?AjxMessageFormat.format(com_zimbra_cert_manager.MultiExpDate,p.format(o)):AjxMessageFormat.format(com_zimbra_cert_manager.SingleExpDate,p.format(o));
f.setInstanceValue(y+" "+d,ZaTask.A2_expiringCertMsg);
f.increaseNotificationCount(ZaTask.A2_expiringCertMsg)
}else{
f.setInstanceValue(undefined,ZaTask.A2_expiringCertMsg);
f.decreaseNotificationCount(ZaTask.A2_expiringCertMsg)
}};
ZaCert.getCerts=function(l,t,r,c){
if(window.console&&window.console.log){
console.log("Getting certificates for server "+t)
}
var s=AjxSoapDoc.create("GetCertRequest","urn:zimbraAdmin",null);
s.getMethod().setAttribute("type","all");
var e=new Object();
e.soapDoc=s;
if(r){
e.asyncMode=true;
e.callback=c
}
if(t!=null){
s.getMethod().setAttribute("server",t)
}else{
if(window.console&&window.console.log){
console.log("Warning: serverId is missing for ZaCert.getCerts.")
}}
try{
var n={};
n.controller=l.getCurrentController();
n.busyMsg=com_zimbra_cert_manager.BUSY_RETRIEVE_CERT;
if(!r){
resp=ZaRequestMgr.invoke(e,n).Body.GetCertResponse;
return resp
}else{
ZaRequestMgr.invoke(e,n)
}}
catch(o){
l.getCurrentController()._handleException(o,"ZaCert.getCerts",null,false)
}};
ZaCert.getCSR=function(l,t,r){
if(window.console&&window.console.log){
console.log("ZaCert.getCSR: Getting CSR for server: "+t)
}
var s=AjxSoapDoc.create("GetCSRRequest","urn:zimbraAdmin",null);
s.getMethod().setAttribute("type",r);
var e=new Object();
e.soapDoc=s;
if(t!=null){
s.getMethod().setAttribute("server",t)
}else{
if(window.console&&window.console.log){
console.log("Warning: serverId is missing for ZaCert.getCSR.")
}}
try{
var n={};
n.controller=l.getCurrentController();
n.busyMsg=com_zimbra_cert_manager.BUSY_GET_CSR;
resp=ZaRequestMgr.invoke(e,n).Body.GetCSRResponse;
return resp
}
catch(o){
l.getCurrentController()._handleException(o,"ZaCert.getCSR",null,false)
}};
ZaCert.genCSR=function(s,r,g,e,m,d,f){
if(window.console&&window.console.log){
console.log("Generating certificates")
}
var y=AjxSoapDoc.create("GenCSRRequest","urn:zimbraAdmin",null);
y.getMethod().setAttribute("type",g);
y.getMethod().setAttribute("digest",f);
y.getMethod().setAttribute("keysize",d);
if(e){
y.getMethod().setAttribute("new","1")
}else{
y.getMethod().setAttribute("new","0")
}
if(m!=null){
y.getMethod().setAttribute("server",m)
}else{
if(window.console&&window.console.log){
console.log("Warning: serverId is missing for ZaCert.genCSR.")
}}
for(var o in r){
if(o==ZaCert.A_subject_alt){
var u=r[o];
if((u instanceof Array)&&(u.length>0)){
for(var c=0;
c<u.length;
c++){
y.set(o,r[o][c])
}}}else{
y.set(o,r[o])
}}
var l=new Object();
l.soapDoc=y;
try{
var t={};
t.controller=s.getCurrentController();
t.busyMsg=com_zimbra_cert_manager.BUSY_GENERATE_CSR;
resp=ZaRequestMgr.invoke(l,t).Body.GenCSRResponse;
return resp
}
catch(p){
s.getCurrentController()._handleException(p,"ZaCert.genCSR",null,false)
}};
ZaCert.installCert=function(c,k,u){
if(window.console&&window.console.log){
console.log("Installing certificates")
}
var o=k.type;
var x=k.comm_cert;
var s=k.validation_days;
var r=k.callback;
var l=k.subject;
var v=k.digest;
var g=k.keysize;
var f=c.getCurrentController();
var y=f._contentView;
y._certInstallStatus.setStyle(DwtAlert.INFORMATION);
y._certInstallStatus.setContent(com_zimbra_cert_manager.CERT_INSTALLING);
y._certInstallStatus.setDisplay(Dwt.DISPLAY_BLOCK);
var q=AjxSoapDoc.create("InstallCertRequest","urn:zimbraAdmin",null);
q.getMethod().setAttribute("type",o);
if(u!=null){
q.getMethod().setAttribute("server",u)
}else{
if(window.console&&window.console.log){
console.log("Warning: serverId is missing for ZaCert.installCert.")
}}
if(o==ZaCert.A_type_self||o==ZaCert.A_type_comm){
q.set(ZaCert.A_validation_days,s);
q.set(ZaCert.A_digest,v);
if(o==ZaCert.A_type_comm){
q.set("comm_cert",x)
}else{
if(o==ZaCert.A_type_self){
q.set(ZaCert.A_keysize,g)
}}
if(l!=null){
var d={};
for(var p in l){
if(p==ZaCert.A_subject_alt){
var e=l[p];
if((e instanceof Array)&&(e.length>0)){
for(var b=0;
b<e.length;
b++){
q.set(p,e[b])
}}}else{
d[p]=l[p]
}}
q.set("subject",d)
}}else{
throw new AjxException(com_zimbra_cert_manager.UNKNOW_INSTALL_TYPE_ERROR,"ZaCert.installCert")
}
var m=new Object();
m.soapDoc=q;
var t={};
t.controller=c.getCurrentController();
t.busyMsg=com_zimbra_cert_manager.BUSY_INSTALL_CERT;
if(r){
m.callback=r;
m.asyncMode=true
}
ZaRequestMgr.invoke(m,t)
};
ZaCert.verifyCertKey=function(t,n){
var s=n.cert;
var l=n.prvkey;
var r=t.getCurrentController();
var m=n.callback;
var d=n.type;
var u=AjxSoapDoc.create("VerifyCertKeyRequest","urn:zimbraAdmin",null);
u.getMethod().setAttribute("type",d);
u.getMethod().setAttribute("cert",s);
u.getMethod().setAttribute("privkey",l);
var o=new Object();
o.soapDoc=u;
try{
var e={};
e.controller=r;
e.busyMsg=com_zimbra_cert_manager.BUSY_VERIFY_CERTKEY;
resp=ZaRequestMgr.invoke(o,e).Body.VerifyCertKeyResponse;
return resp
}
catch(c){
t.getCurrentController()._handleException(c,"ZaCert.verifyCertKey",null,false)
}};
ZaCert.prototype.setTargetServer=function(e){
this[ZaCert.A_target_server]=e
};
ZaCert.launchNewCertWizard=function(e){
try{
ZaApp.getInstance().dialogs.certInstallWizard=new ZaCertWizard(this._container);
this._cert=new ZaCert(ZaApp.getInstance());
this._cert.setTargetServer(e);
this._cert.init();
ZaApp.getInstance().dialogs.certInstallWizard.setObject(this._cert);
ZaApp.getInstance().dialogs.certInstallWizard.popup()
}
catch(t){
this._handleException(t,"ZaCert.launchNewCertWizard",null,false)
}};
ZaCert.myXModel={
items:[{
id:ZaCert.A_installStatus,type:_STRING_,ref:ZaCert.A_installStatus}
,{
id:ZaCert.A_subject_alt,type:_LIST_,ref:"attrs/"+ZaCert.A_subject_alt,listItem:{
type:_STRING_}}
,{
id:ZaCert.A_target_server,type:_STRING_,ref:ZaCert.A_target_server}
,{
id:ZaCert.A_countryName,type:_STRING_,ref:"attrs/"+ZaCert.A_countryName,length:2,pattern:/^\s*[a-zA-Z0-9\/\.\-\\_:\@\=\'\*]*$/}
,{
id:ZaCert.A_digest,type:_STRING_,ref:ZaCert.A_digest}
,{
id:ZaCert.A_keysize,type:_STRING_,ref:ZaCert.A_keysize}
,{
id:ZaCert.A_commonName,type:_STRING_,ref:"attrs/"+ZaCert.A_commonName}
,{
id:ZaCert.A_state,type:_STRING_,ref:"attrs/"+ZaCert.A_state,pattern:/^\s*[a-zA-Z0-9\/\.\-\\_:\@\=\'\*]*$/}
,{
id:ZaCert.A_city,type:_STRING_,ref:"attrs/"+ZaCert.A_city,pattern:/^\s*[a-zA-Z0-9\/\.\-\\_:\@\=\'\*\s]*$/}
,{
id:ZaCert.A_organization,type:_STRING_,ref:"attrs/"+ZaCert.A_organization,pattern:/^\s*[a-zA-Z0-9\/\.\-\\_:\@\=\,\'\*\s]*$/}
,{
id:ZaCert.A_organizationUnit,type:_STRING_,ref:"attrs/"+ZaCert.A_organizationUnit,pattern:/^\s*[a-zA-Z0-9\/\.\-\\_:\@\=\,\'\*\s]*$/}
,{
id:ZaCert.A_validation_days,type:_NUMBER_,ref:ZaCert.A_validation_days,required:true}
,{
id:ZaCert.A_type_comm,type:_ENUM_,ref:ZaCert.A_type_comm,choices:ZaModel.BOOLEAN_CHOICES1}
,{
id:ZaCert.A_type_self,type:_ENUM_,ref:ZaCert.A_type_self,choices:ZaModel.BOOLEAN_CHOICES1}
,{
id:ZaCert.A_type_csr,type:_ENUM_,ref:ZaCert.A_type_csr,choices:ZaModel.BOOLEAN_CHOICES1}
,{
id:ZaCert.A_csr_exists,type:_ENUM_,ref:ZaCert.A_csr_exists,choices:ZaModel.BOOLEAN_CHOICES1}
,{
id:ZaCert.A_force_new_csr,type:_ENUM_,ref:ZaCert.A_force_new_csr,choices:ZaModel.BOOLEAN_CHOICES}
]};
ZaCert.getWildCardServerName=function(o){
var t=/^.*(\.[^\.]+\.[^\.]+)$/;
if(o){
var e=o.match(t);
if(e!=null){
return"*"+e[1]
}}
return o
}
}
if(window.console&&window.console.log){
console.log("Loaded ZaCertView.js")
}
function ZaCertView(o,t){
if(arguments.length==0){
return
}
t=t||"ZaCertView";
var e=DwtControl.ABSOLUTE_STYLE;
DwtComposite.call(this,o,t,e);
this._certInstallStatus=new DwtAlert(this);
this._certInstallStatus.setIconVisible(false);
this.setScrollStyle(Dwt.SCROLL);
this._app=ZaApp.getInstance()
}
ZaCertView.prototype=new DwtComposite;
ZaCertView.prototype.constructor=ZaCertView;
ZaCertView.prototype.toString=function(){
return"ZaCertView"
};
ZaCertView.prototype.getTitle=function(){
return com_zimbra_cert_manager.Cert_view_title
};
ZaCertView.prototype.getTabIcon=function(){
return"ViewCertificate"
};
ZaCertView.prototype.getTabTitle=function(){
return com_zimbra_cert_manager.Cert_view_title+": "+this.getTargetServerName()
};
ZaCertView.prototype.getTabToolTip=function(){
return this.getTitle()
};
ZaCertView.prototype._setUI=function(s){
if(!this._certContent){
this._certContent=new DwtComposite(this,null,DwtControl.ABSOLUTE_STYLE)
}
if(ZaCertWizard.INSTALL_STATUS<0){
this._certInstallStatus.setDisplay(Dwt.DISPLAY_NONE)
}else{
this._certInstallStatus.setDisplay(Dwt.DISPLAY_BLOCK)
}
var n=[];
n.push("<div style='padding-left:10px;'>");
n.push("<h2>"+com_zimbra_cert_manager.CERT_server_name+" "+this.getTargetServerName()+"</h2>");
if(s&&s.cert){
for(var o=0;
o<s.cert.length;
o++){
var t=s.cert[o];
var l=t.type;
var e=this.getCertTable(t);
var r=AjxMessageFormat.format(com_zimbra_cert_manager.Cert_Service_title,l);
n.push("<h3>"+r+"</h3>");
n.push(e)
}}else{
n.push(com_zimbra_cert_manager.Cert_Info_Unavailable)
}
n.push("</div>");
this._certContent.getHtmlElement().innerHTML=n.join("")
};
ZaCertView.prototype.getCertTable=function(t){
var e=[];
if(t){
e.push("<table><colgroup><col width=160 /><col width='*' /></colgroup>");
if(t[ZaCert.A_subject]&&t[ZaCert.A_subject][0]){
e.push("<tr><td><strong>"+com_zimbra_cert_manager.CERT_INFO_SUBJECT+"</strong> </td><td>"+t[ZaCert.A_subject][0]._content+"</td></tr>")
}
if(t.issuer&&t.issuer[0]){
e.push("<tr><td><strong>"+com_zimbra_cert_manager.CERT_INFO_ISSUER+"</strong></td><td>"+t.issuer[0]._content+"</td></tr>")
}
if(t.notBefore&&t.notBefore[0]&&t.notAfter&&t.notAfter[0]){
e.push("<tr><td><strong>"+com_zimbra_cert_manager.CERT_INFO_VALIDATION_DAYS+"</strong></td><td> "+t.notBefore[0]._content+" - "+t.notAfter[0]._content+"</td></tr>")
}
if(t[ZaCert.A_subject_alt]&&t[ZaCert.A_subject_alt][0]){
e.push("<tr><td><strong>"+com_zimbra_cert_manager.CERT_INFO_SubjectAltName+" </strong></td><td> "+t[ZaCert.A_subject_alt][0]._content+"</td></tr>")
}
e.push("</table>")
}else{
e.push(com_zimbra_cert_manager.Cert_Service_Unavailable)
}
return e.join("")
};
ZaCertView.prototype.set=function(e,t){
if(window.console&&window.console.log){
console.log("Set the certs")
}
if(!this._containedObject){
this._containedObject={}
}
this._containedObject.certs=e;
this._containedObject.id=t;
this.setTargetServerId(t);
this._setUI(e)
};
ZaCertView.prototype.setTargetServerId=function(e){
if(!e){
throw new AjxException(com_zimbra_cert_manager.NO_TARGET_SERVER_ERROR,"ZaCertView.prototype.setTargetServerId")
}
this._targetServerId=e
};
ZaCertView.prototype.getTargetServerId=function(){
return this._targetServerId
};
ZaCertView.prototype.getTargetServerName=function(){
for(var e=0;
e<ZaCert.TARGET_SERVER_CHOICES.length;
e++){
if(this.getTargetServerId()==ZaCert.TARGET_SERVER_CHOICES[e].value){
return ZaCert.TARGET_SERVER_CHOICES[e].label
}}
return this.getTargetServerId()
};
ZaCertView.prototype.getTabChoices=function(){
this.tabChoices=new Array();
this.tabChoices.push({
value:1,label:ZaMsg.TABT_GeneralPage}
);
return this.tabChoices
};
function ZaCertWizard(t){
var e="500px";
if(AjxEnv.isIE){
e="550px"
}
ZaXWizardDialog.call(this,t,null,com_zimbra_cert_manager.CERT_WIZARD_title,e,"300px","ZaCertWizard");
this.stepChoices=[{
label:com_zimbra_cert_manager.CERT_WIZARD_TABT_selectServer,value:ZaCertWizard.STEP_SELECT_SERVER}
,{
label:com_zimbra_cert_manager.CERT_WIZARD_TABT_useroption,value:ZaCertWizard.STEP_USER_OPTION}
,{
label:com_zimbra_cert_manager.CERT_WIZARD_TABT_gencsr,value:ZaCertWizard.STEP_GEN_CSR}
,{
label:com_zimbra_cert_manager.CERT_WIZARD_TABT_uploadCert,value:ZaCertWizard.STEP_UPLOAD_CERT}
,{
label:com_zimbra_cert_manager.CERT_WIZARD_TABT_installCert,value:ZaCertWizard.STEP_INSTALL_CERT}
,{
label:com_zimbra_cert_manager.CERT_WIZARD_TABT_downloadCSR,value:ZaCertWizard.STEP_DOWNLOAD_CSR}
,{
label:com_zimbra_cert_manager.CERT_WIZARD_TABT_reviewCSR,value:ZaCertWizard.STEP_CSR_CONFIRM}
];
this.uploadInputs={};
this.uploadResults=null;
this.initForm(ZaCert.myXModel,this.getMyXForm());
this._localXForm.setController(ZaApp.getInstance());
this._localXForm.addListener(DwtEvent.XFORMS_FORM_DIRTY_CHANGE,new AjxListener(this,ZaCertWizard.prototype.handleXFormChange));
this._localXForm.addListener(DwtEvent.XFORMS_VALUE_ERROR,new AjxListener(this,ZaCertWizard.prototype.handleXFormChange));
this._helpURL=ZaCertWizard.helpURL
}
ZaCertWizard.INSTALL_STATUS=-1;
ZaCertWizard.STEP_INDEX=1;
ZaCertWizard.STEP_SELECT_SERVER=ZaCertWizard.STEP_INDEX++;
ZaCertWizard.STEP_USER_OPTION=ZaCertWizard.STEP_INDEX++;
ZaCertWizard.STEP_GEN_CSR=ZaCertWizard.STEP_INDEX++;
ZaCertWizard.STEP_UPLOAD_CERT=ZaCertWizard.STEP_INDEX++;
ZaCertWizard.STEP_INSTALL_CERT=ZaCertWizard.STEP_INDEX++;
ZaCertWizard.STEP_DOWNLOAD_CSR=ZaCertWizard.STEP_INDEX++;
ZaCertWizard.STEP_CSR_CONFIRM=ZaCertWizard.STEP_INDEX++;
ZaCertWizard.prototype=new ZaXWizardDialog;
ZaCertWizard.prototype.constructor=ZaCertWizard;
ZaCertWizard.prototype.miniType=2;
ZaXDialog.XFormModifiers.ZaCertWizard=new Array();
ZaCertWizard.helpURL=location.pathname+"help/admin/html/tools/installing_certificates.htm?locid="+AjxEnv.DEFAULT_LOCALE;
ZaCertWizard.prototype.handleXFormChange=function(){
var e=this._containedObject[ZaModel.currentStep];
if(this._localXForm.hasErrors()){
this._button[DwtWizardDialog.FINISH_BUTTON].setEnabled(false)
}else{
this._button[DwtWizardDialog.PREV_BUTTON].setEnabled(true);
if(e==ZaCertWizard.STEP_SELECT_SERVER){
if(this._containedObject[ZaCert.A_target_server]){
this._button[DwtWizardDialog.NEXT_BUTTON].setEnabled(true)
}
this._button[DwtWizardDialog.PREV_BUTTON].setEnabled(false)
}
if(e==ZaCertWizard.STEP_INSTALL_CERT){
this._button[DwtWizardDialog.FINISH_BUTTON].setEnabled(true);
this._button[DwtWizardDialog.NEXT_BUTTON].setEnabled(false)
}
if(e==ZaCertWizard.STEP_DOWNLOAD_CSR){
this._button[DwtWizardDialog.FINISH_BUTTON].setEnabled(true);
this._button[DwtWizardDialog.NEXT_BUTTON].setEnabled(false);
this._button[DwtWizardDialog.FINISH_BUTTON].setText(AjxMsg._finish)
}
if(this._containedObject[ZaCert.A_type_csr]){
this._button[DwtWizardDialog.FINISH_BUTTON].setText(AjxMsg._finish)
}else{
this._button[DwtWizardDialog.FINISH_BUTTON].setText(com_zimbra_cert_manager.CERT_INSTALL_BUTTON_text)
}}};
ZaCertWizard.getInstallMsg=function(){
if(ZaCertWizard.INSTALL_STATUS==0){
return com_zimbra_cert_manager.CERT_INSTALL_STATUS_0
}else{
if(ZaCertWizard.INSTALL_STATUS==1){
return com_zimbra_cert_manager.CERT_INSTALL_STATUS_1
}else{
return""
}}};
ZaCertWizard.prototype.popup=function(e){
ZaXWizardDialog.prototype.popup.call(this,e);
if(this._containedObject[ZaCert.A_target_server]){
this._button[DwtWizardDialog.NEXT_BUTTON].setEnabled(true)
}else{
this._button[DwtWizardDialog.NEXT_BUTTON].setEnabled(false)
}
this._button[DwtWizardDialog.FINISH_BUTTON].setEnabled(false);
this._button[DwtWizardDialog.PREV_BUTTON].setEnabled(false)
};
ZaCertWizard.prototype.finishWizard=function(){
try{
var l=this._localXForm.getInstance();
var d=l[ZaCert.A_validation_days];
var n=l[ZaCert.A_type_self];
var o=l[ZaCert.A_type_comm];
var e=l[ZaCert.A_type_csr];
var r=null;
if(n){
type=ZaCert.A_type_self
}else{
if(o){
type=ZaCert.A_type_comm
}else{
if(e){
this.popdown();
return
}else{
throw new Exeption("Unknow installation type")
}}}
var c=new AjxCallback(this,this.installCallback);
var t={
type:type,validation_days:d,comm_cert:this.uploadResults,subject:this._containedObject.attrs,digest:this._containedObject.digest,keysize:this._containedObject.keysize,callback:c};
ZaCert.installCert(ZaApp.getInstance(),t,this._containedObject[ZaCert.A_target_server]);
this.popdown()
}
catch(s){
ZaApp.getInstance().getCurrentController()._handleException(s,"ZaCertWizard.prototype.finishWizard",null,false)
}};
ZaCertWizard.getCause=function(o){
var t=/Caused by:\s*com.zimbra.cs.license.LicenseException:\s*(.*)/;
var e=o.match(t);
if(e!=null){
return e[1]
}else{
return o
}};
ZaCertWizard.prototype.installCallback=function(r){
var e=ZaApp.getInstance().getCurrentController();
var n=e._contentView._certInstallStatus;
try{
if(r._isException){
var s=r._data.msg;
throw new AjxException(com_zimbra_cert_manager.CERT_INSTALL_STATUS_1+": "+ZaCertWizard.getCause(s),"ZaCertWizard.prototype.installCallback",AjxException.UNKNOWN_ERROR,s)
}else{
var o=r._data.Body.InstallCertResponse;
if(o){
ZaCertWizard.INSTALL_STATUS=0;
n.setStyle(DwtAlert.INFORMATION);
n.setContent(com_zimbra_cert_manager.CERT_INSTALL_STATUS_0);
if(e instanceof ZaCertViewController){
e.show(ZaCert.getCerts(ZaApp.getInstance(),this._containedObject[ZaCert.A_target_server]),this._containedObject[ZaCert.A_target_server])
}
ZaCertWizard.INSTALL_STATUS=-1
}else{
throw new AjxException(com_zimbra_cert_manager.CERT_INSTALL_STATUS_1,"installCallback",AjxException.UNKNOWN_ERROR)
}}}
catch(t){
ZaCertWizard.INSTALL_STATUS=1;
n.setContent(t.msg);
n.setStyle(DwtAlert.CRITICAL);
if(e instanceof ZaCertViewController){
e.show(ZaCert.getCerts(ZaApp.getInstance()))
}
ZaCertWizard.INSTALL_STATUS=-1;
e.popupErrorDialog(t.msg,t,true)
}};
ZaCertWizard.prototype._uploadCallback=function(e,o){
var n=this._containedObject[ZaModel.currentStep];
if(window.console&&window.console.log){
console.log("Cert File Upload: status = "+e)
}
if((e==AjxPost.SC_OK)&&(o!=null)&&(o.length>0)){
this.uploadResults={
cert:{}
,rootCA:{}
,intermediateCA:[]};
for(var s=0;
s<o.length;
s++){
var t=o[s];
var l=this.getCertTypeFromUploadInputs(t.filename);
if(l=="certFile"){
this.uploadResults.cert={
aid:t.aid,filename:t.filename}
}else{
if(l=="rootCA"){
this.uploadResults.rootCA={
aid:t.aid,filename:t.filename}
}else{
if(l=="intermediateCA"){
this.uploadResults.intermediateCA.push({
aid:t.aid,filename:t.filename}
)
}}}}
this.goPage(ZaCertWizard.STEP_INSTALL_CERT);
this._button[DwtWizardDialog.PREV_BUTTON].setEnabled(true);
this._button[DwtWizardDialog.NEXT_BUTTON].setEnabled(false);
this._button[DwtWizardDialog.FINISH_BUTTON].setEnabled(true)
}else{
var r=AjxMessageFormat.format(com_zimbra_cert_manager.UploadCertErrorMsg,e);
ZaApp.getInstance().getCurrentController().popupErrorDialog(r+com_zimbra_cert_manager.ErrorTryAgain,null,null,true)
}};
ZaCertWizard.prototype.getCertTypeFromUploadInputs=function(t){
for(var s in this.uploadInputs){
var e=this.uploadInputs[s];
if(s=="intermediateCA"&&e!=null){
for(var o=0;
o<e.length;
o++){
if(t==e[o]){
return s
}}}else{
if(t==e){
return s
}}}};
ZaCertWizard.prototype.getUploadFrameId=function(){
if(!this._uploadManagerIframeId){
var o=Dwt.getNextId();
var e=["<iframe name='",o,"' id='",o,"' src='",(AjxEnv.isIE&&location.protocol=="https:")?appContextPath+"/public/blank.html":'javascript:""',"' style='position: absolute; top: 0; left: 0; visibility: hidden'></iframe>"];
var t=document.createElement("div");
t.innerHTML=e.join("");
document.body.appendChild(t.firstChild);
this._uploadManagerIframeId=o
}
return this._uploadManagerIframeId
};
ZaCertWizard.prototype.getUploadManager=function(){
return this._uploadManager
};
ZaCertWizard.prototype.setUploadManager=function(e){
this._uploadManager=e
};
ZaCertWizard.prototype.goNext=function(){
var b=this._containedObject[ZaModel.currentStep];
if(window.console&&window.console.log){
console.log("Current Step: "+b+", Now Go Next ...")
}
var m;
if(this._containedObject[ZaCert.A_type_csr]||this._containedObject[ZaCert.A_type_comm]){
m="comm"
}else{
if(this._containedObject[ZaCert.A_type_self]){
m="self"
}}
var l;
if(b==ZaCertWizard.STEP_SELECT_SERVER){
this._localXForm.setInstanceValue(this._containedObject[ZaCert.A_target_server],ZaCert.A_target_server);
l=ZaCertWizard.STEP_USER_OPTION;
this.goPage(l)
}else{
if(b==ZaCertWizard.STEP_USER_OPTION){
this._containedObject.initCSR(ZaCert.getCSR(ZaApp.getInstance(),this._containedObject[ZaCert.A_target_server],m));
if(this._containedObject[ZaCert.A_type_csr]||this._containedObject[ZaCert.A_type_self]){
l=ZaCertWizard.STEP_GEN_CSR
}else{
if(this._containedObject[ZaCert.A_type_comm]){
l=ZaCertWizard.STEP_CSR_CONFIRM;
if(!this._containedObject[ZaCert.A_csr_exists]){
this._button[DwtWizardDialog.NEXT_BUTTON].setEnabled(false)
}}}
this.goPage(l)
}else{
if(b==ZaCertWizard.STEP_GEN_CSR){
var f=this._containedObject.attrs[ZaCert.A_commonName];
var t=/^[A-Za-z0-9\-\_\*]{1,}(\.[A-Za-z0-9\-\_]{1,}){0,}(\.[A-Za-z0-9\-\_]{2,}){1,}$/;
var k=t;
if(f==null||f.match(t)==null){
ZaApp.getInstance().getCurrentController().popupErrorDialog(AjxMessageFormat.format(com_zimbra_cert_manager.CERT_CN_INVALID,f||"Current CN "));
return false
}
var s=this._containedObject.attrs[ZaCert.A_subject_alt];
for(var d=0;
d<s.length;
d++){
if(s[d].match(k)==null){
ZaApp.getInstance().getCurrentController().popupErrorDialog(AjxMessageFormat.format(com_zimbra_cert_manager.CERT_SUBJ_ALT_NAME_INVALID,s[d]||"SubjectAltName "+d));
return false
}}
if(this._containedObject[ZaCert.A_type_csr]){
l=ZaCertWizard.STEP_DOWNLOAD_CSR
}else{
if(this._containedObject[ZaCert.A_type_self]){
l=ZaCertWizard.STEP_INSTALL_CERT
}}
try{
if((!this._containedObject[ZaCert.A_csr_exists])||(this._containedObject[ZaCert.A_force_new_csr]=="TRUE")){
if(!this._containedObject[ZaCert.A_type_self]){
ZaCert.genCSR(ZaApp.getInstance(),this._containedObject.attrs,m,true,this._containedObject[ZaCert.A_target_server],this._containedObject[ZaCert.A_keysize],this._containedObject[ZaCert.A_digest])
}else{
if(window.console&&window.console.log){
console.log("Self-Signed certificate, skip the CSR generation.")
}}}else{
if(window.console&&window.console.log){
console.log("Previous CSR exists, skip the CSR generation.")
}}}
catch(u){
ZaApp.getInstance().getCurrentController().popupErrorDialog(com_zimbra_cert_manager.genCSRError,u,true)
}
this.goPage(l)
}else{
if(b==ZaCertWizard.STEP_UPLOAD_CERT){
l=ZaCertWizard.STEP_INSTALL_CERT;
if(this._containedObject[ZaCert.A_type_comm]){
var y=document.getElementById(ZaCertWizard.CertUploadFormId);
var r=y.getElementsByTagName("input");
this.uploadInputs={
certFile:null,rootCA:null,intermediateCA:[]};
var e=[];
for(var d=0;
d<r.length;
d++){
if(r[d].type=="file"){
var o=r[d].name;
var p=ZaCertWizard.getFileName(r[d].value);
if(p!=null&&p.length!=0){
if(ZaUtil.findValueInArray(e,p)!=-1){
ZaApp.getInstance().getCurrentController().popupErrorDialog(com_zimbra_cert_manager.dupFileNameError+p);
return
}
e.push(p)
}
if(o=="certFile"){
if(p==null||p.length==0){
ZaApp.getInstance().getCurrentController().popupErrorDialog(com_zimbra_cert_manager.noCertFileError);
return
}else{
this.uploadInputs.certFile=p
}}else{
if(o=="rootCA"){
if(p==null||p.length==0){
ZaApp.getInstance().getCurrentController().popupErrorDialog(com_zimbra_cert_manager.noRootCAError);
return
}else{
this.uploadInputs.rootCA=p
}}else{
if(r[d].name=="intermediateCA"){
if(p!=null&&p.length!=0){
this.uploadInputs.intermediateCA.push(p)
}}}}}}
var g=new AjxCallback(this,this._uploadCallback);
try{
ZaUploader.upload.call(this,g,[ZaCertWizard.certAttachmentInputId,ZaCertWizard.rootCAAttachmentInputId,ZaCertWizard.intermediateCAAttachmentInputId],ZaCertWizard.CertUploadFormId)
}
catch(c){
ZaApp.getInstance().getCurrentController().popupErrorDialog((c&&c.msg)?c.msg:com_zimbra_cert_manager.certFileNameError);
return
}}else{
if(this._containedObject[ZaCert.A_type_self]){
this.goPage(l)
}else{
ZaApp.getInstance().getCurrentController().popupErrorDialog(com_zimbra_cert_manager.certTypeError)
}}}else{
if(b==ZaCertWizard.STEP_CSR_CONFIRM){
l=ZaCertWizard.STEP_UPLOAD_CERT;
this.goPage(l)
}}}}}
if(l==ZaCertWizard.STEP_INSTALL_CERT||l==ZaCertWizard.STEP_DOWNLOAD_CSR){
this._button[DwtWizardDialog.NEXT_BUTTON].setEnabled(false);
this._button[DwtWizardDialog.FINISH_BUTTON].setEnabled(true)
}
this._button[DwtWizardDialog.PREV_BUTTON].setEnabled(true)
};
ZaCertWizard.getFileName=function(e){
if(e==null){
return null
}
var t=0;
t=e.lastIndexOf("\\");
return e.substring(t+1)
};
ZaCertWizard.prototype.goPrev=function(){
var t=this._containedObject[ZaModel.currentStep];
if(window.console&&window.console.log){
console.log("Current Step: "+t+", Now Go Previous ...")
}
var e;
if(t==ZaCertWizard.STEP_DOWNLOAD_CSR){
e=ZaCertWizard.STEP_GEN_CSR
}else{
if(t==ZaCertWizard.STEP_GEN_CSR||t==ZaCertWizard.STEP_CSR_CONFIRM){
e=ZaCertWizard.STEP_USER_OPTION
}else{
if(t==ZaCertWizard.STEP_UPLOAD_CERT){
e=ZaCertWizard.STEP_CSR_CONFIRM
}else{
if(t==ZaCertWizard.STEP_INSTALL_CERT){
if(this._containedObject[ZaCert.A_type_comm]){
e=ZaCertWizard.STEP_UPLOAD_CERT
}else{
if(this._containedObject[ZaCert.A_type_self]){
e=ZaCertWizard.STEP_GEN_CSR
}}}else{
if(t==ZaCertWizard.STEP_USER_OPTION){
e=ZaCertWizard.STEP_SELECT_SERVER
}}}}}
if(e==ZaCertWizard.STEP_SELECT_SERVER){
this._button[DwtWizardDialog.PREV_BUTTON].setEnabled(false)
}
this._button[DwtWizardDialog.NEXT_BUTTON].setEnabled(true);
this._button[DwtWizardDialog.FINISH_BUTTON].setEnabled(false);
this.goPage(e)
};
ZaCertWizard.prototype.setObject=function(e){
this._containedObject=new Object();
this._containedObject=e;
this._containedObject[ZaModel.currentStep]=e[ZaModel.currentStep]||ZaCertWizard.STEP_SELECT_SERVER;
if(this._containedObject[ZaCert.A_digest]==null){
this._containedObject[ZaCert.A_digest]="sha256"
}
if(this._containedObject[ZaCert.A_keysize]==null){
this._containedObject[ZaCert.A_keysize]="2048"
}
this._localXForm.setInstance(this._containedObject)
};
ZaCertWizard.getUploadFormHtml=function(){
ZaCertWizard.addIntermediateCADivId=Dwt.getNextId();
ZaCertWizard.CertUploadFormId=Dwt.getNextId();
ZaCertWizard.certAttachmentInputId=Dwt.getNextId();
ZaCertWizard.rootCAAttachmentInputId=Dwt.getNextId();
ZaCertWizard.intermediateCAAttachmentInputId=Dwt.getNextId();
var o=appContextPath+"/../service/upload?fmt=extended";
var t=[];
var e=0;
t[e++]="<div style='overflow:auto'><form method='POST' action='";
t[e++]=o;
t[e++]="' id='";
t[e++]=ZaCertWizard.CertUploadFormId;
t[e++]="' enctype='multipart/form-data'>";
t[e++]="<div><table border=0 cellspacing=0 cellpadding=2 style='table-layout: fixed;'> ";
t[e++]="<colgroup><col width=100/><col width='*' /><col width=50 /></colgroup>";
t[e++]="<tbody><tr><td>"+com_zimbra_cert_manager.CERT_upload_comm_cert+"</td>";
t[e++]="<td><input type=file id='";
t[e++]=ZaCertWizard.certAttachmentInputId;
t[e++]="' name='certFile' size='40' /></td><td></td></tr>";
t[e++]="<tr><td>"+com_zimbra_cert_manager.CERT_upload_root_CA+"</td>";
t[e++]="<td><input type=file id='";
t[e++]=ZaCertWizard.rootCAAttachmentInputId;
t[e++]="' name='rootCA' size='40' /></td><td></td></tr>";
t[e++]="</tbody></table></div>";
t[e++]="<div>"+ZaCertWizard.getIntermediaCAUploadInput()+"</div>";
t[e++]="<div id='"+ZaCertWizard.addIntermediateCADivId+"' width='100%' align='center'>";
t[e++]="<span style='color: blue; text-decoration: underline; cursor: default;padding-left: 3px;'  onmouseout='this.style.cursor=\"default\"'  onmouseover='this.style.cursor=\"pointer\"' onclick='ZaCertWizard.addIntermediateCAInput(this);' >"+com_zimbra_cert_manager.ADD_IntermediateCA_Label+"</span>";
t[e++]="</div>";
t[e++]="</form></div>";
return t.join("")
};
ZaCertWizard.getIntermediaCAUploadInput=function(){
var t=[];
var e=0;
t[e++]="<table border=0 cellspacing=0 cellpadding=2 style='table-layout: fixed;'> ";
t[e++]="<colgroup><col width=100/><col width='*' /><col width=50 /></colgroup>";
t[e++]="<tbody><tr>";
t[e++]="<td>"+com_zimbra_cert_manager.CERT_upload_intermediate_ca+"</td>";
t[e++]="<td><input type=file  id='";
ZaCertWizard.intermediateCAAttachmentInputId;
t[e++]="' name='intermediateCA' size='40' /></td>";
t[e++]="<td><span style='padding-left:5px; color: blue; text-decoration: underline; cursor: default;'  onmouseout='this.style.cursor=\"default\"'  onmouseover='this.style.cursor=\"pointer\"' onclick='ZaCertWizard.removeIntermediaCAInput(this);' >"+com_zimbra_cert_manager.Remove_IntermediateCA_Label+"</span></td>";
t[e++]="</tr></tbody></table>";
return t.join("")
};
ZaCertWizard.addIntermediateCAInput=function(e){
var o=document.getElementById(ZaCertWizard.CertUploadFormId);
var t=document.createElement("div");
t.innerHTML=ZaCertWizard.getIntermediaCAUploadInput();
o.insertBefore(t,document.getElementById(ZaCertWizard.addIntermediateCADivId))
};
ZaCertWizard.removeIntermediaCAInput=function(e){
var o=document.getElementById(ZaCertWizard.CertUploadFormId);
var t=e.parentNode.parentNode;
var n=t.parentNode.parentNode.parentNode;
o.removeChild(n)
};
ZaCertWizard.onRepeatRemove=function(e,t){
var o=this.getInstanceValue();
if(o==null||typeof(o)=="string"||e>=o.length||e<0){
return
}
o.splice(e,1)
};
ZaCertWizard.myXFormModifier=function(r){
var g=new Array();
var l={
type:_CASE_,numCols:2,colSizes:["100px","*"],tabGroupKey:ZaCertWizard.STEP_SELECT_SERVER,caseKey:ZaCertWizard.STEP_SELECT_SERVER,align:_LEFT_,valign:_TOP_,width:"80%",cssStyle:"padding-left:50px;"};
var o=[{
type:_SPACER_,height:10}
,{
type:_OUTPUT_,colSpan:2,value:com_zimbra_cert_manager.CERT_select_server}
,{
type:_SPACER_,height:10}
,{
ref:ZaCert.A_target_server,type:_OSELECT1_,label:com_zimbra_cert_manager.CERT_server_name,labelLocation:_LEFT_,choices:ZaCert.TARGET_SERVER_CHOICES,visibilityChecks:[],enableDisableChecks:[],editable:true}
];
l.items=o;
g.push(l);
var m={
type:_CASE_,numCols:2,colSizes:["25px","*"],tabGroupKey:ZaCertWizard.STEP_USER_OPTION,caseKey:ZaCertWizard.STEP_USER_OPTION,align:_LEFT_,valign:_TOP_,width:"80%",cssStyle:"padding-left:50px;"};
var t=[{
type:_GROUP_,numCols:2,colSpan:"*",colSizes:["75px","*"],items:[{
type:_SPACER_,height:10}
,{
type:_OUTPUT_,ref:ZaCert.A_target_server,labelLocation:_LEFT_,labelCssStyle:"text-align: left",bmolsnr:true,getDisplayValue:function(){
for(var y=0;
y<ZaCert.TARGET_SERVER_CHOICES.length;
y++){
if(ZaCert.TARGET_SERVER_CHOICES[y].value==this.getInstanceValue()){
return ZaCert.TARGET_SERVER_CHOICES[y].label
}}}
,label:com_zimbra_cert_manager.lb_target_server,choices:ZaCert.TARGET_SERVER_CHOICES}
]}
,{
type:_SPACER_,height:10}
,{
type:_OUTPUT_,colSpan:2,value:com_zimbra_cert_manager.CERT_select_option}
,{
type:_SPACER_,height:10}
,{
type:_RADIO_,groupname:"install_type",ref:ZaCert.A_type_self,label:com_zimbra_cert_manager.CERT_self_signed,enableLabelFor:true,visibilityChecks:[],enableDisableChecks:[],labelLocation:_RIGHT_,align:_LEFT_,onChange:function(v,b,y){
v=true;
if(window.console&&window.console.log){
console.log("Self Install - onChange value = "+v)
}
this.setInstanceValue(v);
this.setInstanceValue(!v,ZaCert.A_type_comm);
this.setInstanceValue(!v,ZaCert.A_type_csr)
}
,updateElement:function(y){
if(window.console&&window.console.log){
console.log("Self Install - UpdateElement newValue = "+y)
}
this.getElement().checked=(y==true)
}}
,{
type:_RADIO_,groupname:"install_type",ref:ZaCert.A_type_csr,label:com_zimbra_cert_manager.CERT_gen_csr,enableLabelFor:true,visibilityChecks:[],enableDisableChecks:[],labelLocation:_RIGHT_,align:_LEFT_,onChange:function(v,b,y){
v=true;
if(window.console&&window.console.log){
console.log("Gen CSR - onChange value = "+v)
}
this.setInstanceValue(v);
this.setInstanceValue(!v,ZaCert.A_type_self);
this.setInstanceValue(!v,ZaCert.A_type_comm)
}
,updateElement:function(y){
if(window.console&&window.console.log){
console.log("Gen CSR Install - UpdateElement newValue = "+y)
}
this.getElement().checked=(y==true)
}}
,{
type:_RADIO_,groupname:"install_type",ref:ZaCert.A_type_comm,visibilityChecks:[],enableDisableChecks:[],updateElement:function(y){
if(window.console&&window.console.log){
console.log("Comm Install - UpdateElement newValue = "+y)
}
this.getElement().checked=(y==true)
}
,onChange:function(v,b,y){
v=true;
if(window.console&&window.console.log){
console.log("Comm Install - onChange value = "+v)
}
this.setInstanceValue(v);
this.setInstanceValue(!v,ZaCert.A_type_self);
this.setInstanceValue(!v,ZaCert.A_type_csr)
}
,label:com_zimbra_cert_manager.CERT_comm_signed,enableLabelFor:true,labelLocation:_RIGHT_,align:_LEFT_}
,{
type:_SPACER_,height:10}
];
m.items=t;
g.push(m);
var n={
type:_CASE_,numCols:2,colSizes:["200px","*"],tabGroupKey:ZaCertWizard.STEP_GEN_CSR,caseKey:ZaCertWizard.STEP_GEN_CSR,align:_LEFT_,valign:_TOP_};
var s=[{
type:_DWT_ALERT_,colSpan:2,visibilityChecks:["instance[ZaCert.A_csr_exists] == true "],containerCssStyle:"width:400px;",style:DwtAlert.WARNING,iconVisible:false,content:com_zimbra_cert_manager.CSR_EXISTS_WARNING}
,{
type:_GROUP_,colSpan:2,numCols:2,colSizes:["150px","*"],width:"100%",items:[{
type:_GROUP_,numCols:2,colSpan:"*",colSizes:["150px","*"],items:[{
type:_SPACER_,height:10}
,{
type:_OUTPUT_,ref:ZaCert.A_target_server,labelLocation:_LEFT_,bmolsnr:true,getDisplayValue:function(){
for(var y=0;
y<ZaCert.TARGET_SERVER_CHOICES.length;
y++){
if(ZaCert.TARGET_SERVER_CHOICES[y].value==this.getInstanceValue()){
return ZaCert.TARGET_SERVER_CHOICES[y].label
}}}
,label:com_zimbra_cert_manager.CERT_target_server,choices:ZaCert.TARGET_SERVER_CHOICES}
]}
,{
ref:ZaCert.A_force_new_csr,type:_CHECKBOX_,label:com_zimbra_cert_manager.FORCE_NEW_CSR,visibilityChecks:[" instance[ZaCert.A_csr_exists] == true "],enableDisableChecks:[" instance[ZaCert.A_csr_exists] == true "],enableDisableChangeEventSources:[ZaCert.A_csr_exists],onChange:function(v,b,y){
this.setInstanceValue(v);
y.parent._containedObject.modifySubjectAltNames();
y.refresh()
}
,trueValue:"TRUE",falseValue:"FALSE",msgName:com_zimbra_cert_manager.FORCE_NEW_CSR}
,{
ref:ZaCert.A_digest,type:_OSELECT1_,label:com_zimbra_cert_manager.CERT_digest,labelLocation:_LEFT_,choices:ZaCert.DIGEST_CHOICES,visibilityChecks:[ZaCertWizard.isCSRFieldsEnabled],enableDisableChecks:[ZaCertWizard.isCSRFieldsEnabled],enableDisableChangeEventSources:[ZaCert.A_csr_exists,ZaCert.A_force_new_csr]}
,{
ref:ZaCert.A_keysize,type:_OSELECT1_,label:com_zimbra_cert_manager.CERT_keysize,labelLocation:_LEFT_,choices:ZaCert.KEY_SIZE_CHOICES,visibilityChecks:[ZaCertWizard.isCSRFieldsEnabled],enableDisableChecks:[ZaCertWizard.isCSRFieldsEnabled],enableDisableChangeEventSources:[ZaCert.A_csr_exists,ZaCert.A_force_new_csr]}
,{
ref:ZaCert.A_commonName,type:_TEXTFIELD_,width:150,visibilityChecks:[],bmolsnr:true,enableDisableChecks:[ZaCertWizard.isCSRFieldsEnabled],enableDisableChangeEventSources:[ZaCert.A_csr_exists,ZaCert.A_force_new_csr],label:com_zimbra_cert_manager.CERT_INFO_CN}
,{
ref:ZaCert.A_use_wildcard_server_name,type:_WIZ_CHECKBOX_,visibilityChecks:[],enableDisableChecks:[ZaCertWizard.isCSRFieldsEnabled],enableDisableChangeEventSources:[ZaCert.A_csr_exists,ZaCert.A_force_new_csr],label:com_zimbra_cert_manager.Use_Wildcard_Server_Name,onChange:function(k,b,y){
if(window.console&&window.console.log){
console.log("use wildcard: "+k)
}
this.setInstanceValue(k);
if(k){
if(window.console&&window.console.log){
console.log("Set the wildcard server name")
}
var v=ZaCert.getWildCardServerName(this.getInstanceValue(ZaCert.A_commonName));
this.setInstanceValue(v,ZaCert.A_commonName)
}}}
,{
ref:ZaCert.A_countryName,type:_TEXTFIELD_,width:150,visibilityChecks:[],enableDisableChecks:[ZaCertWizard.isCSRFieldsEnabled],enableDisableChangeEventSources:[ZaCert.A_csr_exists,ZaCert.A_force_new_csr],label:com_zimbra_cert_manager.CERT_INFO_C}
,{
ref:ZaCert.A_state,type:_TEXTFIELD_,width:150,visibilityChecks:[],enableDisableChecks:[ZaCertWizard.isCSRFieldsEnabled],enableDisableChangeEventSources:[ZaCert.A_csr_exists,ZaCert.A_force_new_csr],label:com_zimbra_cert_manager.CERT_INFO_ST}
,{
ref:ZaCert.A_city,type:_TEXTFIELD_,width:150,visibilityChecks:[],enableDisableChecks:[ZaCertWizard.isCSRFieldsEnabled],enableDisableChangeEventSources:[ZaCert.A_csr_exists,ZaCert.A_force_new_csr],label:com_zimbra_cert_manager.CERT_INFO_L}
,{
ref:ZaCert.A_organization,type:_TEXTFIELD_,width:150,visibilityChecks:[],enableDisableChecks:[ZaCertWizard.isCSRFieldsEnabled],enableDisableChangeEventSources:[ZaCert.A_csr_exists,ZaCert.A_force_new_csr],label:com_zimbra_cert_manager.CERT_INFO_O}
,{
ref:ZaCert.A_organizationUnit,type:_TEXTFIELD_,width:150,visibilityChecks:[],enableDisableChecks:[ZaCertWizard.isCSRFieldsEnabled],enableDisableChangeEventSources:[ZaCert.A_csr_exists,ZaCert.A_force_new_csr],label:com_zimbra_cert_manager.CERT_INFO_OU}
,{
ref:ZaCert.A_subject_alt,visibilityChecks:[],enableDisableChecks:[ZaCertWizard.isCSRFieldsEnabled],enableDisableChangeEventSources:[ZaCert.A_csr_exists,ZaCert.A_force_new_csr],type:_REPEAT_,label:com_zimbra_cert_manager.CERT_INFO_SubjectAltName,labelLocation:_LEFT_,labelCssStyle:"vertical-align: top; padding-top: 3px;",addButtonLabel:com_zimbra_cert_manager.NAD_Add,align:_LEFT_,repeatInstance:"",showAddButton:true,showRemoveButton:true,removeButtonCSSStyle:"margin-left:10px;",addButtonCSSStyle:"margin-left:10px;",alwaysShowAddButton:true,removeButtonLabel:com_zimbra_cert_manager.NAD_Remove,items:[{
ref:".",type:_TEXTFIELD_,visibilityChecks:[],enableDisableChecks:[ZaCertWizard.isCSRFieldsEnabled],enableDisableChangeEventSources:[ZaCert.A_csr_exists,ZaCert.A_force_new_csr],onChange:function(v,b,y){
this.setInstanceValue(v)
}
,width:"150px"}
]}
]}
,{
type:_SPACER_,height:10}
,{
type:_GROUP_,colSpan:"*",items:[{
type:_OUTPUT_,value:com_zimbra_cert_manager.CERT_SubjectAlt_Note}
]}
];
n.items=s;
g.push(n);
var d={
type:_CASE_,numCols:1,colSizes:["450px"],tabGroupKey:ZaCertWizard.STEP_UPLOAD_CERT,caseKey:ZaCertWizard.STEP_UPLOAD_CERT,items:[{
type:_GROUP_,numCols:2,colSpan:"*",colSizes:["200px","*"],items:[{
type:_SPACER_,height:10}
,{
type:_OUTPUT_,ref:ZaCert.A_target_server,labelLocation:_LEFT_,bmolsnr:true,getDisplayValue:function(){
for(var y=0;
y<ZaCert.TARGET_SERVER_CHOICES.length;
y++){
if(ZaCert.TARGET_SERVER_CHOICES[y].value==this.getInstanceValue()){
return ZaCert.TARGET_SERVER_CHOICES[y].label
}}}
,label:com_zimbra_cert_manager.lb_target_server,choices:ZaCert.TARGET_SERVER_CHOICES}
]}
,{
type:_SPACER_,height:10}
,{
type:_GROUP_,id:"CertUpload",visibilityChecks:["instance[ZaCert.A_type_comm] == true"],colSpan:2,numCols:1,colSizes:"*",items:[{
type:_OUTPUT_,value:com_zimbra_cert_manager.CERT_uploadTitle,align:_LEFT_}
,{
type:_OUTPUT_,value:ZaCertWizard.getUploadFormHtml()}
,{
type:_SPACER_,height:10}
]}
,{
type:_SPACER_,height:10}
]};
g.push(d);
var c={
type:_CASE_,numCols:2,colSizes:["150px","300px"],tabGroupKey:ZaCertWizard.STEP_INSTALL_CERT,caseKey:ZaCertWizard.STEP_INSTALL_CERT,align:_LEFT_,valign:_TOP_};
var p=[{
type:_OUTPUT_,ref:ZaCert.A_target_server,labelLocation:_LEFT_,bmolsnr:true,getDisplayValue:function(){
for(var y=0;
y<ZaCert.TARGET_SERVER_CHOICES.length;
y++){
if(ZaCert.TARGET_SERVER_CHOICES[y].value==this.getInstanceValue()){
return ZaCert.TARGET_SERVER_CHOICES[y].label
}}}
,label:com_zimbra_cert_manager.lb_target_server,choices:ZaCert.TARGET_SERVER_CHOICES}
,{
type:_SPACER_,height:10}
,{
type:_OUTPUT_,colSpan:2,visibilityChecks:["instance[ZaCert.A_type_self] == true"],value:com_zimbra_cert_manager.CERT_installTitle}
,{
type:_SPACER_,height:10}
,{
type:_TEXTFIELD_,ref:ZaCert.A_validation_days,visibilityChecks:["instance[ZaCert.A_type_self] == true"],label:com_zimbra_cert_manager.CERT_validate_days}
];
c.items=p;
g.push(c);
var e={
type:_CASE_,numCols:1,colSizes:["*"],tabGroupKey:ZaCertWizard.STEP_DOWNLOAD_CSR,caseKey:ZaCertWizard.STEP_DOWNLOAD_CSR,align:_LEFT_,valign:_TOP_,items:[{
type:_GROUP_,numCols:2,colSpan:"*",colSizes:["75px","*"],items:[{
type:_SPACER_,height:10}
,{
type:_OUTPUT_,ref:ZaCert.A_target_server,labelLocation:_LEFT_,labelCssStyle:"text-align: left",bmolsnr:true,getDisplayValue:function(){
for(var y=0;
y<ZaCert.TARGET_SERVER_CHOICES.length;
y++){
if(ZaCert.TARGET_SERVER_CHOICES[y].value==this.getInstanceValue()){
return ZaCert.TARGET_SERVER_CHOICES[y].label
}}}
,label:com_zimbra_cert_manager.lb_target_server,choices:ZaCert.TARGET_SERVER_CHOICES}
]}
,{
type:_OUTPUT_,value:com_zimbra_cert_manager.CSR_download_msg_1}
,{
type:_SPACER_,height:10}
,{
type:_OUTPUT_,ref:ZaCert.A_target_server,getDisplayValue:function(){
for(var y=0;
y<ZaCert.TARGET_SERVER_CHOICES.length;
y++){
if(ZaCert.TARGET_SERVER_CHOICES[y].value==this.getInstanceValue()){
return"<a href='/service/extension/com_zimbra_cert_manager/downloadcsr?server="+ZaCert.TARGET_SERVER_CHOICES[y].value+"' onclick='ZaZimbraAdmin.unloadHackCallback();'> "+com_zimbra_cert_manager.CSR_download_msg_2+"</a>"
}}}}
,{
type:_SPACER_,height:10}
]};
g.push(e);
var u={
type:_CASE_,numCols:1,colSizes:["*"],tabGroupKey:ZaCertWizard.STEP_CSR_CONFIRM,caseKey:ZaCertWizard.STEP_CSR_CONFIRM,align:_LEFT_,valign:_TOP_,items:[{
type:_GROUP_,colSpan:2,numCols:2,colSizes:["200px","350px"],visibilityChecks:["instance[ZaCert.A_csr_exists] == true"],items:[{
type:_GROUP_,numCols:2,colSpan:"*",colSizes:["200px","*"],items:[{
type:_SPACER_,height:10}
,{
type:_OUTPUT_,ref:ZaCert.A_target_server,labelLocation:_LEFT_,labelCssStyle:"text-align: left",bmolsnr:true,getDisplayValue:function(){
for(var y=0;
y<ZaCert.TARGET_SERVER_CHOICES.length;
y++){
if(ZaCert.TARGET_SERVER_CHOICES[y].value==this.getInstanceValue()){
return ZaCert.TARGET_SERVER_CHOICES[y].label
}}}
,label:com_zimbra_cert_manager.lb_target_server,choices:ZaCert.TARGET_SERVER_CHOICES}
]}
,{
type:_OUTPUT_,value:com_zimbra_cert_manager.CSR_REVIEW,colSpan:2}
,{
type:_SPACER_,height:10}
,{
ref:ZaCert.A_commonName,type:_OUTPUT_,width:150,label:com_zimbra_cert_manager.CERT_INFO_CN}
,{
ref:ZaCert.A_countryName,type:_OUTPUT_,width:150,label:com_zimbra_cert_manager.CERT_INFO_C}
,{
ref:ZaCert.A_state,type:_OUTPUT_,width:150,label:com_zimbra_cert_manager.CERT_INFO_ST}
,{
ref:ZaCert.A_city,type:_OUTPUT_,width:150,label:com_zimbra_cert_manager.CERT_INFO_L}
,{
ref:ZaCert.A_organization,type:_OUTPUT_,width:150,label:com_zimbra_cert_manager.CERT_INFO_O}
,{
ref:ZaCert.A_organizationUnit,type:_OUTPUT_,width:150,label:com_zimbra_cert_manager.CERT_INFO_OU}
,{
ref:ZaCert.A_subject_alt,type:_REPEAT_,label:com_zimbra_cert_manager.CERT_INFO_SubjectAltName,labelLocation:_LEFT_,labelCssStyle:"vertical-align: top;",align:_LEFT_,repeatInstance:"",showAddButton:false,showRemoveButton:false,items:[{
ref:".",type:_OUTPUT_,width:"150px"}
]}
]}
,{
type:_GROUP_,colSpan:2,numCols:1,colSizes:["400px"],visibilityChecks:["!instance[ZaCert.A_csr_exists] "],cssStyle:"padding-left:50px;",items:[{
type:_DWT_ALERT_,colSpan:2,visibilityChecks:["!instance[ZaCert.A_csr_exists] "],containerCssStyle:"width:400px;",style:DwtAlert.WARNING,iconVisible:false,content:com_zimbra_cert_manager.CSR_NON_EXISTS_WARNING}
,{
type:_SPACER_,height:10}
,{
type:_OUTPUT_,value:com_zimbra_cert_manager.CSR_NON_EXISTS_MSG}
]}
]};
g.push(u);
var f="470px";
if(AjxEnv.isIE){
f="520px"
}
r.items=[{
type:_OUTPUT_,colSpan:2,valign:_TOP_,cssStyle:"white-space: normal",ref:ZaModel.currentStep,choices:this.stepChoices,valueChangeEventSources:[ZaModel.currentStep]}
,{
type:_SEPARATOR_,align:_CENTER_,valign:_TOP_}
,{
type:_SPACER_,align:_CENTER_,valign:_TOP_}
,{
type:_SWITCH_,width:f,align:_LEFT_,valign:_TOP_,cssStyle:"white-space: normal",items:g}
]
};
ZaXDialog.XFormModifiers.ZaCertWizard.push(ZaCertWizard.myXFormModifier);
ZaCertWizard.isCSRFieldsEnabled=function(){
var t=this.getInstanceValue(ZaCert.A_csr_exists);
var e=this.getInstanceValue(ZaCert.A_force_new_csr);
return((!t)||(e=="TRUE"))
};
ZaCertsServerListView=function(t){
ZaServerListView.call(this,t);
this._certInstallStatus=new DwtAlert(this);
this._certInstallStatus.setIconVisible(false);
var o=this.getHtmlElement();
var e=this._certInstallStatus.getHtmlElement();
o.insertBefore(e,o.firstChild)
};
ZaCertsServerListView.prototype=new ZaServerListView;
ZaCertsServerListView.prototype.constructor=ZaCertsServerListView;
ZaCertsServerListView.prototype.toString=function(){
return"ZaCertsServerListView"
};
ZaCertsServerListView.prototype.getTitle=function(){
return com_zimbra_cert_manager.manage_certs_title
};
ZaCertsServerListView.prototype.getTabIcon=function(){
return"Server"
};
ZaCertsServerListView.prototype.set=function(t,e){
DwtListView.prototype.set.call(this,t,e);
if(ZaCertWizard.INSTALL_STATUS<0){
this._certInstallStatus.setDisplay(Dwt.DISPLAY_NONE)
}else{
this._certInstallStatus.setDisplay(Dwt.DISPLAY_BLOCK)
}};
if(window.console&&window.console.log){
console.log("Loaded ZaCertViewController.js")
}
function ZaCertViewController(t,e){
ZaController.call(this,t,e,"ZaCertViewController");
this._UICreated=false;
this._toolbarOperations=new Array();
this._popupOperations=new Array();
this._helpURL=location.pathname+"help/admin/html/tools/creating_certificates.htm?locid="+AjxEnv.DEFAULT_LOCALE;
this._app=ZaApp.getInstance()
}
ZaCertViewController.prototype=new ZaController();
ZaCertViewController.prototype.constructor=ZaCertViewController;
ZaController.initToolbarMethods.ZaCertViewController=new Array();
ZaController.initPopupMenuMethods.ZaCertViewController=new Array();
ZaCertViewController.prototype.show=function(t,o){
var e=ZaCertView;
if(!this.selectExistingTabByItemId(o,e)){
if(!this._UICreated){
this._createUI()
}
this._contentView.set(t,o);
this._app.pushView(this.getContentViewId())
}};
ZaCertViewController.initToolbarMethod=function(){
this._toolbarOperations.push(new ZaOperation(ZaOperation.REFRESH,com_zimbra_cert_manager.TBB_Refresh,com_zimbra_cert_manager.TBB_Refresh_tt,"Refresh","Refresh",new AjxListener(this,ZaCertViewController.prototype.refreshListener)));
this._toolbarOperations.push(new ZaOperation(ZaOperation.NEW,com_zimbra_cert_manager.TBB_launch_cert_wizard,com_zimbra_cert_manager.TBB_launch_cert_wizard_tt,"InstallCertificate","InstallCertificate",new AjxListener(this,ZaCertViewController.prototype._newCertListener)));
this._toolbarOperations.push(new ZaOperation(ZaOperation.NONE));
this._toolbarOperations.push(new ZaOperation(ZaOperation.HELP,com_zimbra_cert_manager.TBB_Help,com_zimbra_cert_manager.TBB_Help_tt,"Help","Help",new AjxListener(this,this._helpButtonListener)))
};
ZaController.initToolbarMethods.ZaCertViewController.push(ZaCertViewController.initToolbarMethod);
ZaCertViewController.initPopupMenuMethod=function(){
this._popupOperations.push(new ZaOperation(ZaOperation.VIEW,com_zimbra_cert_manager.TBB_View,com_zimbra_cert_manager.PQTBB_View_tt,"Properties","PropertiesDis",new AjxListener(this,ZaCertViewController.prototype._viewButtonListener)))
};
ZaController.initPopupMenuMethods.ZaCertViewController.push(ZaCertViewController.initPopupMenuMethod);
ZaCertViewController.prototype._createUI=function(){
try{
var o=new Object();
this._contentView=new ZaCertView(this._container,this._app);
this._initToolbar();
if(this._toolbarOperations&&this._toolbarOperations.length){
this._toolbar=new ZaToolBar(this._container,this._toolbarOperations)
}
o[ZaAppViewMgr.C_APP_CONTENT]=this._contentView;
if(!appNewUI){
if(this._toolbar){
o[ZaAppViewMgr.C_TOOLBAR_TOP]=this._toolbar
}
var e={
openInNewTab:true,tabId:this.getContentViewId(),tab:this.getMainTab()};
this._app.createView(this.getContentViewId(),o,e)
}else{
ZaApp.getInstance().getAppViewMgr().createView(this.getContentViewId(),o)
}
this._UICreated=true;
this._app._controllers[this.getContentViewId()]=this
}
catch(t){
this._handleException(t,"ZaCertViewController.prototype._createUI",null,false);
return
}};
ZaCertViewController.prototype._newCertListener=function(e){
if(window.console&&window.console.log){
console.log("ZaCertViewController.prototype._newCertListener: Launch the new certificates wizard ... ")
}
ZaCert.launchNewCertWizard.call(this,this._contentView.getTargetServerId())
};
ZaCertViewController.prototype._editCertListener=function(e){
if(window.console&&window.console.log){
console.log("Launch the certificate modifications wizard ... ")
}};
ZaCertViewController.prototype.refreshListener=function(e){
if(window.console&&window.console.log){
console.log("Refresh the certificates ... ")
}
this.show(ZaCert.getCerts(this._app,this._contentView.getTargetServerId()),this._contentView.getTargetServerId())
};
ZaCertsServerListController=function(t,e){
ZaListViewController.call(this,t,e,"ZaCertsServerListController");
this._popupOperations=new Array();
this._helpURL=location.pathname+"help/admin/html/tools/creating_certificates.htm?locid="+AjxEnv.DEFAULT_LOCALE
};
ZaCertsServerListController.prototype=new ZaListViewController();
ZaCertsServerListController.prototype.constructor=ZaCertsServerListController;
ZaController.changeActionsStateMethods.ZaCertsServerListController=new Array();
ZaController.initPopupMenuMethods.ZaCertsServerListController=new Array();
ZaCertsServerListController.prototype.show=function(t,e){
if(!this._UICreated){
this._createUI()
}
if(t!=null){
this._contentView.set(t.getVector())
}
ZaApp.getInstance().pushView(this.getContentViewId());
if(t!=null){
this._list=t
}
this.changeActionsState()
};
ZaCertsServerListController.initPopupMenuMethod=function(){
this._popupOperations[ZaOperation.VIEW]=new ZaOperation(ZaOperation.VIEW,com_zimbra_cert_manager.TBB_view_cert,com_zimbra_cert_manager.TBB_view_cert_tt,"ViewCertificate","ViewCertificate",new AjxListener(this,ZaCertsServerListController.prototype.viewCertListener));
this._popupOperations[ZaOperation.NEW]=new ZaOperation(ZaOperation.NEW,com_zimbra_cert_manager.TBB_launch_cert_wizard,com_zimbra_cert_manager.TBB_launch_cert_wizard_tt,"InstallCertificate","InstallCertificate",new AjxListener(this,ZaCertsServerListController.prototype._newCertListener))
};
ZaController.initPopupMenuMethods.ZaCertsServerListController.push(ZaCertsServerListController.initPopupMenuMethod);
ZaCertsServerListController.prototype._createUI=function(){
try{
var t=new Object();
this._contentView=new ZaCertsServerListView(this._container);
this._initPopupMenu();
if(this._popupOperations&&this._popupOperations.length){
this._actionMenu=new ZaPopupMenu(this._contentView,"ActionMenu",null,this._popupOperations)
}
t[ZaAppViewMgr.C_APP_CONTENT]=this._contentView;
ZaApp.getInstance().getAppViewMgr().createView(this.getContentViewId(),t);
this._contentView.addSelectionListener(new AjxListener(this,this._listSelectionListener));
this._contentView.addActionListener(new AjxListener(this,this._listActionListener));
this._removeConfirmMessageDialog=new ZaMsgDialog(ZaApp.getInstance().getAppCtxt().getShell(),null,[DwtDialog.YES_BUTTON,DwtDialog.NO_BUTTON],ZaApp.getInstance());
this._UICreated=true;
ZaApp.getInstance()._controllers[this.getContentViewId()]=this
}
catch(e){
this._handleException(e,"ZaCertsServerListController.prototype._createUI",null,false);
return
}};
ZaCertsServerListController.prototype.set=function(e){
this.show(e)
};
ZaCertsServerListController.prototype._newCertListener=function(t){
var e=null;
if(this._contentView&&this._contentView.getSelectionCount()==1&&this._contentView.getSelection()[0]){
e=this._contentView.getSelection()[0].id
}
ZaCert.launchNewCertWizard.call(this,e)
};
ZaCertsServerListController.prototype.viewCertListener=function(o){
if(this._contentView&&this._contentView.getSelectionCount()==1){
var t=this._contentView.getSelection()[0];
ZaApp.getInstance().getCertViewController().show(ZaCert.getCerts(ZaApp.getInstance(),t.id),t.id);
var e=ZaTree.getPathByArray([ZaMsg.OVP_home,ZaMsg.OVP_configure,com_zimbra_cert_manager.OVP_certs]);
ZaZimbraAdmin.getInstance().getOverviewPanelController().addObjectItem(e,t.name,null,false,false,t)
}};
ZaCertsServerListController.prototype._listSelectionListener=function(t){
if(t.item){
this._selectedItem=t.item
}
if(t.detail==DwtListView.ITEM_DBL_CLICKED&&t.item){
ZaApp.getInstance().getCertViewController().show(ZaCert.getCerts(ZaApp.getInstance(),t.item.id),t.item.id);
var e=ZaTree.getPathByArray([ZaMsg.OVP_home,ZaMsg.OVP_configure,com_zimbra_cert_manager.OVP_certs]);
ZaZimbraAdmin.getInstance().getOverviewPanelController().addObjectItem(e,t.item.name,null,false,false,t.item)
}else{
this.changeActionsState()
}};
ZaCertsServerListController.prototype._listActionListener=function(e){
if(e.item){
this._selectedItem=e.item
}
this.changeActionsState();
this._actionMenu.popup(0,e.docX,e.docY)
};
ZaCertsServerListController.changeActionsStateMethod=function(){
if(this._contentView){
if(this._popupOperations[ZaOperation.NEW]){
this._popupOperations[ZaOperation.NEW].enabled=true
}
var e=this._contentView.getSelectionCount();
if(this._popupOperations[ZaOperation.VIEW]){
this._popupOperations[ZaOperation.VIEW].enabled=(e==1)
}}};
if(ZaController.changeActionsStateMethods.ZaCertsServerListController){
ZaController.changeActionsStateMethods.ZaCertsServerListController.push(ZaCertsServerListController.changeActionsStateMethod)
}
ZaDomainCertUpload=function(){};
ZaDomainCertUpload.myXFormModifier=function(r){
var n={
type:_GROUP_,colSpan:"*",numCols:2,colSizes:AjxEnv.isIE?["60%","40%"]:["75%","25%"],cssStyle:"margin-top: 10px; margin-left: 12px",items:[{
type:_OUTPUT_,value:ZaDomainCertUpload.getUploadFormHtml()}
,{
type:_DWT_BUTTON_,colSpan:"*",label:com_zimbra_cert_manager.CERT_UploadButton,width:"10em",onActivate:ZaDomainCertUpload.uploadCertKeyFile}
]};
var o={
type:_SPACER_,height:"10"};
var e;
if(ZaServerVersionInfo.version.split(".")[0]=="8"){
var c=this.getTabChoices();
for(var t=0;
t<c.length;
t++){
if(c[t].label==ZaMsg.TABT_Certificate&&r.items[2].items[t].id=="domain_form_cert_tab"){
e=r.items[2].items[t].items;
e.splice(3,0,n,o);
break
}}}else{
var s=r.items[2].items.length;
e=r.items[2].items[s>0?(s-1):0].items;
var l=e.length;
e.splice(l,0,n,o)
}};
ZaTabView.XFormModifiers.ZaDomainXFormView.push(ZaDomainCertUpload.myXFormModifier);
ZaDomainCertUpload.getUploadFormHtml=function(){
ZaDomainCertUpload.uploadCertFormId=Dwt.getNextId();
ZaDomainCertUpload.uploadiFrameId=Dwt.getNextId();
ZaDomainCertUpload.certFileAttachmentInputId=Dwt.getNextId();
ZaDomainCertUpload.keyFileAttachmentInputId=Dwt.getNextId();
var n=appContextPath+"/../service/upload?fmt=extended";
var t=[];
var e=0;
var o="'40%'";
if(AjxEnv.isIE){
o="'25%'"
}
t[e++]="<div><form method='POST' action='";
t[e++]=n;
t[e++]="' id='";
t[e++]=ZaDomainCertUpload.uploadCertFormId;
t[e++]="' enctype='multipart/form-data'>";
t[e++]="<div><table border=0 cellspacing=0 cellpadding=2 style='table-layout: fixed;'> ";
t[e++]="<colgroup><col width="+o+"/><col width='*' /><col width=20 /></colgroup>";
t[e++]="<tbody><tr><td>"+ZaMsg.NAD_DomainSSLCertificate+":</td>";
t[e++]="<td><input type=file id='";
t[e++]=ZaDomainCertUpload.certFileAttachmentInputId;
t[e++]="' name='certFile' size='40' /></td><td>&nbsp</td></tr>";
t[e++]="<tr><td>"+ZaMsg.NAD_DomainSSLPrivateKey+":</td>";
t[e++]="<td><input type=file id='";
t[e++]=ZaDomainCertUpload.keyFileAttachmentInputId;
t[e++]="' name='keyFile' size='40' /></td><td>&nbsp</td></tr>";
t[e++]="</tbody></table></div>";
t[e++]="</form></div>";
return t.join("")
};
ZaDomainCertUpload.uploadCertKeyFile=function(){
var s=document.getElementById(ZaDomainCertUpload.uploadCertFormId);
var d=s.getElementsByTagName("input");
ZaDomainCertUpload.uploadInputs={
certFile:null,keyFile:null};
var l=[];
for(var o=0;
o<d.length;
o++){
if(d[o].type=="file"){
var c=d[o].name;
var e=ZaCertWizard.getFileName(d[o].value);
if(e!=null&&e.length!=0){
if(ZaUtil.findValueInArray(l,e)!=-1){
ZaApp.getInstance().getCurrentController().popupErrorDialog(com_zimbra_cert_manager.dupFileNameError+e);
return
}
l.push(e)
}
if(c=="certFile"){
if(e==null||e.length==0){
ZaApp.getInstance().getCurrentController().popupErrorDialog(com_zimbra_cert_manager.noCertFileError);
return
}else{
ZaDomainCertUpload.uploadInputs.certFile=e
}}else{
if(c=="keyFile"){
if(e==null||e.length==0){
ZaApp.getInstance().getCurrentController().popupErrorDialog(com_zimbra_cert_manager.noKeyFileError);
return
}else{
ZaDomainCertUpload.uploadInputs.keyFile=e
}}}}}
var r=new AjxCallback(this,ZaDomainCertUpload._uploadCallback);
try{
ZaUploader.upload.call(this,r,[ZaDomainCertUpload.certFileAttachmentInputId,ZaDomainCertUpload.keyFileAttachmentInputId],ZaDomainCertUpload.uploadCertFormId)
}
catch(t){
ZaApp.getInstance().getCurrentController().popupErrorDialog((t&&t.msg)?t.msg:com_zimbra_cert_manager.certFileNameError);
return
}};
ZaDomainCertUpload.prototype.getUploadFrameId=function(){
if(!document.getElementById(ZaDomainCertUpload.uploadiFrameId)){
var o=ZaDomainCertUpload.uploadiFrameId;
var e=["<iframe name='",o,"' id='",o,"' src='",(AjxEnv.isIE&&location.protocol=="https:")?appContextPath+"/public/blank.html":'javascript:""',"' style='position: absolute; top: 0; left: 0; visibility: hidden'></iframe>"];
var t=document.createElement("div");
t.innerHTML=e.join("");
document.body.appendChild(t.firstChild)
}
return ZaDomainCertUpload.uploadiFrameId
};
ZaDomainCertUpload._uploadCallback=function(r,c){
if(window.console&&window.console.log){
console.log("Cert File Upload: status = "+r)
}
var e=this.getForm();
var f=e.getInstance();
if((r==AjxPost.SC_OK)&&(c!=null)&&(c.length>0)){
var s={
cert:{}
,key:{}};
for(var l=0;
l<c.length;
l++){
var m=c[l];
var p=ZaDomainCertUpload.getFiletypeFromUploadInputs(m.filename);
if(p=="certFile"){
s.cert={
aid:m.aid,filename:m.filename}
}else{
if(p=="keyFile"){
s.key={
aid:m.aid,filename:m.filename}
}}}
var u=AjxSoapDoc.create("UploadDomCertRequest","urn:zimbraAdmin",null);
if(s.cert.aid){
u.set("cert.aid",s.cert.aid)
}
if(s.cert.filename){
u.set("cert.filename",s.cert.filename)
}
if(s.key.aid){
u.set("key.aid",s.key.aid)
}
if(s.key.filename){
u.set("key.filename",s.key.filename)
}
var n=new Object();
n.soapDoc=u;
try{
var t={};
t.controller=ZaApp.getInstance().getCurrentController();
t.busyMsg=com_zimbra_cert_manager.BUSY_UPLOAD_CERTKEY;
var o=ZaRequestMgr.invoke(n,t).Body.UploadDomCertResponse;
if(o&&o.cert_content){
e.getModel().setInstanceValue(f,ZaDomain.A_zimbraSSLCertificate,o.cert_content);
e.parent.setDirty(true);
e.refresh()
}
if(o&&o.key_content){
e.setInstanceValue(o.key_content,ZaDomain.A_zimbraSSLPrivateKey);
e.parent.setDirty(true);
e.refresh()
}}
catch(d){
ZaApp.getInstance().getCurrentController()._handleException(d,"ZaDomainCertUpload._uploadCallback",null,false)
}}};
ZaDomainCertUpload.getFiletypeFromUploadInputs=function(e){
for(var t in ZaDomainCertUpload.uploadInputs){
if(e==ZaDomainCertUpload.uploadInputs[t]){
return t
}}};
ZaDomainCertUpload.postDomainChange=function(t){
if(t){
var e=t.getDetails()["mods"];
if(e.zimbraSSLCertificate||e.zimbraSSLPrivateKey){
ZaApp.getInstance().getCurrentController().popupMsgDialog(com_zimbra_cert_manager.Cert_Uploaded_Info)
}}};
ZaController.postChangeMethods.ZaDomainController.push(ZaDomainCertUpload.postDomainChange);
ZaProxyCAUpload=function(){};
ZaProxyCAUpload.myXFormModifier=function(l){
var r={
type:_GROUP_,numCols:3,colSizes:["275px","250px","100px"],colSpan:"*",items:[{
type:_OUTPUT_,value:com_zimbra_cert_manager.certFile,containerCssClass:(appNewUI?"gridGroupBodyLabel":"xform_label"),containerCssStyle:(appNewUI?"text-align:left;border-right: 1px solid":_UNDEFINED_)}
,{
type:_OUTPUT_,value:ZaProxyCAUpload.getUploadFormHtml(this)}
,{
type:_DWT_BUTTON_,label:com_zimbra_cert_manager.CERT_UploadButton,width:"9em",onActivate:ZaProxyCAUpload.uploadCertKeyFile}
]};
var e;
var s=0;
for(;
s<l.items[1].choices.length;
s++){
var n=l.items[1].choices[s].label;
if(n==ZaMsg.NAD_Tab_AUTH){
break
}}
if(l.items[2].items.length>=s&&l.items[2].items[s]){
e=l.items[2].items[s].items;
for(var o=0;
o<e.length;
o++){
if(e[o].label==ZaMsg.NAD_AUTH_ClientConfigure){
for(var t=0;
t<e[o].items.length;
t++){
if(e[o].items[t].label==ZaMsg.NAD_zimbraReverseProxyClientCertCA){
e[o].items.splice(t+1,0,r);
break
}}}}}};
ZaTabView.XFormModifiers.GlobalConfigXFormView.push(ZaProxyCAUpload.myXFormModifier);
ZaTabView.XFormModifiers.ZaServerXFormView.push(ZaProxyCAUpload.myXFormModifier);
ZaTabView.XFormModifiers.ZaDomainXFormView.push(ZaProxyCAUpload.myXFormModifier);
ZaProxyCAUpload.myDlgXFormModifier=function(o){
var t={
type:_GROUP_,numCols:2,colSizes:["250px","100px"],colSpan:"*",cssStyle:"margin-bottom: 10px;margin-left: 195px",items:[{
type:_OUTPUT_,value:ZaProxyCAUpload.getUploadFormHtml(this)}
,{
type:_DWT_BUTTON_,label:com_zimbra_cert_manager.CERT_UploadButton,width:"9em",onActivate:ZaProxyCAUpload.uploadCertKeyFile}
]};
var e;
if(o.items[3].items.length>=9&&o.items[3].items[9]){
e=o.items[3].items[9].items;
e[2].items.splice(4,0,t)
}};
ZaXDialog.XFormModifiers.ZaNewDomainXWizard.push(ZaProxyCAUpload.myDlgXFormModifier);
ZaProxyCAUpload.uploadCertFormIdForConfig=Dwt.getNextId();
ZaProxyCAUpload.uploadiFrameIdForConfig=Dwt.getNextId();
ZaProxyCAUpload.uploadAttachmentIdForConfig=Dwt.getNextId();
ZaProxyCAUpload.uploadCertFormIdForServer=Dwt.getNextId();
ZaProxyCAUpload.uploadiFrameIdForServer=Dwt.getNextId();
ZaProxyCAUpload.uploadAttachmentIdForServer=Dwt.getNextId();
ZaProxyCAUpload.uploadCertFormIdForDomain=Dwt.getNextId();
ZaProxyCAUpload.uploadiFrameIdForDomain=Dwt.getNextId();
ZaProxyCAUpload.uploadAttachmentIdForDomain=Dwt.getNextId();
ZaProxyCAUpload.uploadCertFormIdForDlg=Dwt.getNextId();
ZaProxyCAUpload.uploadiFrameIdForDlg=Dwt.getNextId();
ZaProxyCAUpload.uploadAttachmentIdForDlg=Dwt.getNextId();
ZaProxyCAUpload.uploadCertFormId=Dwt.getNextId();
ZaProxyCAUpload.uploadiFrameId=Dwt.getNextId();
ZaProxyCAUpload.uploadAttachmentId=Dwt.getNextId();
ZaProxyCAUpload.getUploadCertFormId=function(e){
if(e instanceof GlobalConfigXFormView){
return ZaProxyCAUpload.uploadCertFormIdForConfig
}else{
if(e instanceof ZaServerXFormView){
return ZaProxyCAUpload.uploadCertFormIdForServer
}else{
if(e instanceof ZaDomainXFormView){
return ZaProxyCAUpload.uploadCertFormIdForDomain
}else{
if(e instanceof ZaNewDomainXWizard){
return ZaProxyCAUpload.uploadCertFormIdForDlg
}else{
return ZaProxyCAUpload.uploadCertFormId
}}}}};
ZaProxyCAUpload.getUploadCertAttachmentId=function(e){
if(e instanceof GlobalConfigXFormView){
return ZaProxyCAUpload.uploadAttachmentIdForConfig
}else{
if(e instanceof ZaServerXFormView){
return ZaProxyCAUpload.uploadAttachmentIdForServer
}else{
if(e instanceof ZaDomainXFormView){
return ZaProxyCAUpload.uploadAttachmentIdForDomain
}else{
if(e instanceof ZaNewDomainXWizard){
return ZaProxyCAUpload.uploadAttachmentIdForDlg
}else{
return ZaProxyCAUpload.uploadAttachmentId
}}}}};
ZaProxyCAUpload.getUploadiFrameId=function(e){
if(e instanceof GlobalConfigXFormView){
return ZaProxyCAUpload.uploadiFrameIdForConfig
}else{
if(e instanceof ZaServerXFormView){
return ZaProxyCAUpload.uploadiFrameIdForServer
}else{
if(e instanceof ZaDomainXFormView){
return ZaProxyCAUpload.uploadiFrameIdForDomain
}else{
if(e instanceof ZaNewDomainXWizard){
return ZaProxyCAUpload.uploadiFrameIdForDlg
}else{
return ZaProxyCAUpload.uploadiFrameId
}}}}};
ZaProxyCAUpload.getUploadFormHtml=function(t){
var n=appContextPath+"/../service/upload?fmt=extended";
var o=[];
var e=0;
o[e++]="<div><form method='POST' action='";
o[e++]=n;
o[e++]="' id='";
o[e++]=ZaProxyCAUpload.getUploadCertFormId(t);
o[e++]="' enctype='multipart/form-data'>";
o[e++]="<div><table border=0 cellspacing=0 cellpadding=2 style='table-layout: fixed;'> ";
o[e++]="<colgroup><col width='250' /><col width=50 /></colgroup>";
o[e++]="<tbody><td><input type='file' id='";
o[e++]=ZaProxyCAUpload.getUploadCertAttachmentId(t);
o[e++]="' name='certFile' width='200'></input></td><td></td></tr>";
o[e++]="</tbody></table></div>";
o[e++]="</form></div>";
return o.join("")
};
ZaProxyCAUpload.uploadCertKeyFile=function(){
var c=ZaProxyCAUpload.getUploadCertFormId(this.getForm().parent);
var m=document.getElementById(c);
var s=m.getElementsByTagName("input");
ZaProxyCAUpload.uploadInputs={
certFile:null};
var e=[];
for(var l=0;
l<s.length;
l++){
if(s[l].type=="file"){
var o=s[l].name;
var d=ZaCertWizard.getFileName(s[l].value);
if(d!=null&&d.length!=0){
if(ZaUtil.findValueInArray(e,d)!=-1){
ZaApp.getInstance().getCurrentController().popupErrorDialog(com_zimbra_cert_manager.dupFileNameError+d);
return
}
e.push(d)
}
if(o=="certFile"){
if(d==null||d.length==0){
ZaApp.getInstance().getCurrentController().popupErrorDialog(com_zimbra_cert_manager.noCertFileError);
return
}else{
ZaProxyCAUpload.uploadInputs.certFile=d
}}}}
var t=this.getForm().parent;
var u=new AjxCallback(this,ZaProxyCAUpload._uploadCallback);
try{
ZaUploader.upload.call(this,u,ZaProxyCAUpload.getUploadCertAttachmentId(t),c)
}
catch(r){
ZaApp.getInstance().getCurrentController().popupErrorDialog((r&&r.msg)?r.msg:com_zimbra_cert_manager.certFileNameError);
return
}};
ZaProxyCAUpload.prototype.getUploadFrameId=function(){
var e=this.getForm().parent;
var n=ZaProxyCAUpload.getUploadiFrameId(e);
if(!document.getElementById(n)){
var t=["<iframe name='",n,"' id='",n,"' src='",(AjxEnv.isIE&&location.protocol=="https:")?appContextPath+"/public/blank.html":'javascript:""',"' style='position: absolute; top: 0; left: 0; visibility: hidden'></iframe>"];
var o=document.createElement("div");
o.innerHTML=t.join("");
document.body.appendChild(o.firstChild)
}
return n
};
ZaProxyCAUpload._uploadCallback=function(l,d){
if(window.console&&window.console.log){
console.log("Proxy CA File Upload: status = "+l)
}
var e=this.getForm();
var p=e.getInstance();
if((l==AjxPost.SC_OK)&&(d!=null)&&(d.length>0)){
var r={};
for(var c=0;
c<d.length;
c++){
var f=d[c];
var g=ZaProxyCAUpload.getFiletypeFromUploadInputs(f.filename);
if(g=="certFile"){
r={
aid:f.aid,filename:f.filename}
}}
var m=AjxSoapDoc.create("UploadProxyCARequest","urn:zimbraAdmin",null);
if(r.aid){
m.set("cert.aid",r.aid)
}
if(r.filename){
m.set("cert.filename",r.filename)
}
var s=new Object();
s.soapDoc=m;
try{
var o={};
o.controller=ZaApp.getInstance().getCurrentController();
o.busyMsg=com_zimbra_cert_manager.BUSY_UPLOAD_CERTKEY;
var n=ZaRequestMgr.invoke(s,o).Body.UploadProxyCAResponse;
if(n&&n.cert_content){
var t=ZaGlobalConfig.A_zimbraReverseProxyClientCertCA;
if(this.getForm().parent instanceof ZaServerXFormView){
t=ZaServer.A_zimbraReverseProxyClientCertCA
}else{
if(this.getForm().parent instanceof ZaDomainXFormView||this.getForm().parent instanceof ZaNewDomainXWizard){
t=ZaDomain.A_zimbraReverseProxyClientCertCA
}}
e.getModel().setInstanceValue(p,t,n.cert_content);
e.parent.setDirty(true);
e.refresh()
}}
catch(u){
ZaApp.getInstance().getCurrentController()._handleException(u,"ZaProxyCAUpload._uploadCallback",null,false)
}}};
ZaProxyCAUpload.getFiletypeFromUploadInputs=function(e){
for(var t in ZaProxyCAUpload.uploadInputs){
if(e==ZaProxyCAUpload.uploadInputs[t]){
return t
}}};
if(window.console&&window.console.log){
console.log("Loaded zimbra_cert.js")
}
if(ZaSettings&&ZaSettings.EnabledZimlet.com_zimbra_cert_manager){
if(ZaOperation){
ZaOperation.INSTALLCERT=++ZA_OP_INDEX
}
ZaItem.CERT="cert";
if(ZaOverviewPanelController.treeModifiers){
ZaOverviewPanelController.treeModifiers.push(ZaCert.certOvTreeModifier)
}
ZaZimbraAdmin._CERTS=ZaZimbraAdmin.VIEW_INDEX++;
ZaZimbraAdmin._CERTS_SERVER_LIST_VIEW=ZaZimbraAdmin.VIEW_INDEX++;
ZaApp.prototype.getCertViewController=function(e){
if(e&&this._controllers[e]!=null){
return this._controllers[e]
}else{
var t=this._controllers[e]=new ZaCertViewController(this._appCtxt,this._container,this);
return t
}};
ZaApp.prototype.getCertsServerListController=function(){
if(this._controllers[ZaZimbraAdmin._CERTS_SERVER_LIST_VIEW]==null){
this._controllers[ZaZimbraAdmin._CERTS_SERVER_LIST_VIEW]=new ZaCertsServerListController(this._appCtxt,this._container,this)
}
return this._controllers[ZaZimbraAdmin._CERTS_SERVER_LIST_VIEW]
}
}
if(ZaSettings&&ZaSettings.EnabledZimlet.com_zimbra_bulkprovision){
function bulkprovision(){}
if(ZaSettings){
ZaSettings.BULK_PROVISION_TASKS_VIEW="bulkProvisionTasksView";
ZaSettings.ALL_UI_COMPONENTS.push({
value:ZaSettings.BULK_PROVISION_TASKS_VIEW,label:com_zimbra_bulkprovision.UI_Comp_bulkProvisioning}
);
ZaSettings.OVERVIEW_TOOLS_ITEMS.push(ZaSettings.BULK_PROVISION_TASKS_VIEW);
ZaSettings.VIEW_RIGHTS[ZaSettings.BULK_PROVISION_TASKS_VIEW]="adminConsoleMigrationRights"
}
ZaEvent.S_BULK_PROVISION_TASK=ZaEvent.EVENT_SOURCE_INDEX++;
ZaZimbraAdmin._BULK_PROVISION_TASKS_LIST=ZaZimbraAdmin.VIEW_INDEX++;
ZaApp.prototype.getBulkProvisionTasksController=function(e){
if(e&&this._controllers[e]!=null){
return this._controllers[e]
}else{
return new ZaBulkProvisionTasksController(this._appCtxt,this._container)
}};
bulkprovision.bulkprovOvTreeListener=function(t){
var e=ZaBulkProvision.getBulkDataImportTasks();
if(ZaApp.getInstance().getCurrentController()){
ZaApp.getInstance().getCurrentController().switchToNextView(ZaApp.getInstance().getBulkProvisionTasksController(),ZaBulkProvisionTasksController.prototype.show,[e])
}else{
ZaApp.getInstance().getBulkProvisionTasksController().show(e)
}};
bulkprovision.bulkprovOvTreeModifier=function(e){
if(ZaSettings.ENABLED_UI_COMPONENTS[ZaSettings.BULK_PROVISION_TASKS_VIEW]||ZaSettings.ENABLED_UI_COMPONENTS[ZaSettings.CARTE_BLANCHE_UI]){
if(!appNewUI){
if(!this._toolsTi){
this._toolsTi=new DwtTreeItem(e,null,null,null,null,"overviewHeader");
this._toolsTi.enableSelection(false);
this._toolsTi.setText(ZaMsg.OVP_tools);
this._toolsTi.setData(ZaOverviewPanelController._TID,ZaZimbraAdmin._TOOLS)
}
this._bulkprovTi=new DwtTreeItem({
parent:this._toolsTi,className:"AdminTreeItem"}
);
this._bulkprovTi.setText(com_zimbra_bulkprovision.OVP_bulkProvisioning);
this._bulkprovTi.setImage("BulkProvision");
this._bulkprovTi.setData(ZaOverviewPanelController._TID,ZaZimbraAdmin._BULK_PROVISION_TASKS_LIST)
}else{
var t=ZaTree.getPathByArray([ZaMsg.OVP_home,ZaMsg.OVP_toolMig]);
var o=new ZaTreeItemData({
parent:t,id:ZaId.getTreeItemId(ZaId.PANEL_APP,"magHV",null,"bpHV"),text:com_zimbra_bulkprovision.OVP_bulkProvisioning,mappingId:ZaZimbraAdmin._BULK_PROVISION_TASKS_LIST}
);
e.addTreeItemData(o)
}
if(ZaOverviewPanelController.overviewTreeListeners){
ZaOverviewPanelController.overviewTreeListeners[ZaZimbraAdmin._BULK_PROVISION_TASKS_LIST]=bulkprovision.bulkprovOvTreeListener
}}};
if(ZaOverviewPanelController.treeModifiers){
ZaOverviewPanelController.treeModifiers.push(bulkprovision.bulkprovOvTreeModifier)
}
if(ZaTabView.XFormModifiers.ZaHomeXFormView){
ZaHomeXFormView.onDoMigration=function(e){
ZaBulkProvisionTasksController.prototype.bulkDataImportListener.call(ZaApp.getInstance().getCurrentController(),e)
};
bulkprovision.HomeXFormModifier=function(r){
if(ZaSettings.ENABLED_UI_COMPONENTS[ZaSettings.BULK_PROVISION_TASKS_VIEW]||ZaSettings.ENABLED_UI_COMPONENTS[ZaSettings.CARTE_BLANCHE_UI]){
var t=ZaHomeXFormView.getHomeSetupItem(r);
var n=t.headerLabels;
var e=t.contentItems;
var o;
for(var o=0;
o<n.length;
o++){
if(n[o]==ZaMsg.LBL_HomeAddAccounts){
break
}}
if(o!=n.length){
var s=e[o];
s.push({
value:ZaMsg.LBL_HomeMigration,onClick:ZaHomeXFormView.onDoMigration}
)
}}};
ZaTabView.XFormModifiers.ZaHomeXFormView.push(bulkprovision.HomeXFormModifier)
}
ZaAccountListController.prototype._bulkProvisionListener=function(t){
try{
if(!ZaApp.getInstance().dialogs.bulkProvisionWizard){
ZaApp.getInstance().dialogs.bulkProvisionWizard=new ZaBulkProvisionWizard(this._container)
}
ZaApp.getInstance().dialogs.bulkProvisionWizard.setObject(new ZaBulkProvision());
ZaApp.getInstance().dialogs.bulkProvisionWizard.popup()
}
catch(e){
this._handleException(e,"ZaAccountListController.prototype._bulkProvisionListener",null,false)
}};
if(ZaController.initToolbarMethods.ZaSearchListController){
if(AjxUtil.isEmpty(ZaOperation.DOWNLOAD_ACCOUNTS)){
ZaOperation.DOWNLOAD_ACCOUNTS=++ZA_OP_INDEX
}
ZaSearchListController.initExtraToolbarMethod=function(){
this._toolbarOperations[ZaOperation.DOWNLOAD_ACCOUNTS]=new ZaOperation(ZaOperation.DOWNLOAD_ACCOUNTS,com_zimbra_bulkprovision.ACTBB_DownloadAccounts,com_zimbra_bulkprovision.ACTBB_DownloadAccounts_tt,"DownloadGlobalConfig","DownloadGlobalConfigDis",new AjxListener(this,ZaSearchListController.prototype._downloadAccountsListener));
for(var e=0;
e<this._toolbarOrder.length;
e++){
if(this._toolbarOrder[e]==ZaOperation.NONE){
this._toolbarOrder.splice(e,0,ZaOperation.DOWNLOAD_ACCOUNTS);
break
}}};
ZaController.initToolbarMethods.ZaSearchListController.push(ZaSearchListController.initExtraToolbarMethod)
}
if(appNewUI&&ZaController.initPopupMenuMethods.ZaSearchListController){
if(AjxUtil.isEmpty(ZaOperation.DOWNLOAD_ACCOUNTS)){
ZaOperation.DOWNLOAD_ACCOUNTS=++ZA_OP_INDEX
}
ZaSearchListController.initExtraAppBarMenuMethod=function(){
this._popupOperationsOnAppBar[ZaOperation.DOWNLOAD_ACCOUNTS]=new ZaOperation(ZaOperation.DOWNLOAD_ACCOUNTS,com_zimbra_bulkprovision.ACTBB_DownloadAccounts,com_zimbra_bulkprovision.ACTBB_DownloadAccounts_tt,"DownloadGlobalConfig","DownloadGlobalConfigDis",new AjxListener(this,ZaSearchListController.prototype._downloadAccountsListener))
};
ZaController.initPopupMenuMethods.ZaSearchListController.push(ZaSearchListController.initExtraAppBarMenuMethod)
}
ZaSearchListController.prototype._downloadAccountsListener=function(e){
if(window.console&&window.console.log){
window.console.log("Download all the search result accounts ...")
}
var t="";
if(this._currentQuery){
t+="&q="+AjxStringUtil.urlComponentEncode(this._currentQuery)
}
if(ZaSearch._domain&&AjxUtil.isDomainName(ZaSearch._domain)){
t+="&domain="+AjxStringUtil.urlComponentEncode(ZaSearch._domain)
}
if(this.searchTypes){
t+="&types="+AjxStringUtil.urlComponentEncode(this.searchTypes.join(","))
}
t=t.replace(/^&/,"?");
window.open("/service/extension/com_zimbra_bulkprovision/search_results_download"+t)
}
}
function ZaBulkImportXWizard(t,o){
var e="650px";
ZaXWizardDialog.call(this,t,null,com_zimbra_bulkprovision.BP_Wizard_title_new,e,(AjxEnv.isIE?"330px":"320px"),"ZaBulkImportXWizard");
ZaBulkImportXWizard.xmlUploadFormId=Dwt.getNextId();
ZaBulkImportXWizard.attachmentInputId=Dwt.getNextId();
this.stepChoices=[{
label:com_zimbra_bulkprovision.BP_Wizard_overview,value:ZaBulkImportXWizard.STEP_CHOOSE_ACTION}
,{
label:com_zimbra_bulkprovision.BP_Wizard_bulkProvOptions,value:ZaBulkImportXWizard.STEP_PROV_OPTIONS}
,{
label:com_zimbra_bulkprovision.BP_Wizard_ldapOptions,value:ZaBulkImportXWizard.STEP_LDAP_INFO}
,{
label:com_zimbra_bulkprovision.BP_Wizard_File_Upload,value:ZaBulkImportXWizard.STEP_FILE_UPLOAD}
,{
label:com_zimbra_bulkprovision.BP_Wizard_review,value:ZaBulkImportXWizard.STEP_REVIEW}
,{
label:com_zimbra_bulkprovision.BP_Wizard_provision,value:ZaBulkImportXWizard.STEP_PROVISION}
];
ZaBulkImportXWizard.STATUS_LABELS={};
ZaBulkImportXWizard.STATUS_LABELS[ZaBulkProvision.iSTATUS_IDLE]=com_zimbra_bulkprovision.ProvisioningStatusIdle;
ZaBulkImportXWizard.STATUS_LABELS[ZaBulkProvision.iSTATUS_STARTED]=com_zimbra_bulkprovision.ProvisioningStatusStarted;
ZaBulkImportXWizard.STATUS_LABELS[ZaBulkProvision.iSTATUS_STARTING]=com_zimbra_bulkprovision.ProvisioningStatusStarting;
ZaBulkImportXWizard.STATUS_LABELS[ZaBulkProvision.iSTATUS_CREATING_ACCOUNTS]=com_zimbra_bulkprovision.ProvisioningStatusCreatingAccounts;
ZaBulkImportXWizard.STATUS_LABELS[ZaBulkProvision.iSTATUS_FINISHED]=com_zimbra_bulkprovision.ProvisioningStatusFinished;
ZaBulkImportXWizard.STATUS_LABELS[ZaBulkProvision.iSTATUS_ABORT]=com_zimbra_bulkprovision.ProvisioningStatusAborting;
ZaBulkImportXWizard.STATUS_LABELS[ZaBulkProvision.iSTATUS_ABORTED]=com_zimbra_bulkprovision.ProvisioningStatusAborted;
ZaBulkImportXWizard.STATUS_LABELS[ZaBulkProvision.iSTATUS_ERROR]=com_zimbra_bulkprovision.ProvisioningStatusError;
ZaBulkImportXWizard.STATUS_LABELS[ZaBulkProvision.iSTATUS_NOT_RUNNING]=com_zimbra_bulkprovision.ProvisioningStatusNotRunning;
this.pollAction=new AjxTimedAction(this,this.getImportStatus);
this._pollHandler=null;
this.initForm(ZaBulkProvision.getMyXModel(),this.getMyXForm(o),null);
this._helpURL=[location.pathname,ZaUtil.HELP_URL,ZaBulkImportXWizard.helpURL,"?locid=",AjxEnv.DEFAULT_LOCALE].join("")
}
ZaBulkImportXWizard.POLL_INTERVAL=500;
ZaBulkImportXWizard.INSTALL_STATUS=-1;
ZaBulkImportXWizard.STEP_INDEX=1;
ZaBulkImportXWizard.STEP_CHOOSE_ACTION=ZaBulkImportXWizard.STEP_INDEX++;
ZaBulkImportXWizard.STEP_PROV_OPTIONS=ZaBulkImportXWizard.STEP_INDEX++;
ZaBulkImportXWizard.STEP_LDAP_INFO=ZaBulkImportXWizard.STEP_INDEX++;
ZaBulkImportXWizard.STEP_FILE_UPLOAD=ZaBulkImportXWizard.STEP_INDEX++;
ZaBulkImportXWizard.STEP_REVIEW=ZaBulkImportXWizard.STEP_INDEX++;
ZaBulkImportXWizard.STEP_PROVISION=ZaBulkImportXWizard.STEP_INDEX++;
ZaBulkImportXWizard.prototype=new ZaXWizardDialog;
ZaBulkImportXWizard.prototype.constructor=ZaBulkImportXWizard;
ZaBulkImportXWizard.prototype.cacheDialog=false;
ZaBulkImportXWizard.prototype.miniType=2;
ZaXDialog.XFormModifiers.ZaBulkImportXWizard=new Array();
ZaBulkImportXWizard.helpURL="account_migration/migrating_accounts.htm";
ZaBulkImportXWizard.prototype.getCacheName=function(){
return"importAccountsWizard"
};
ZaBulkImportXWizard.prototype.popdown=function(){
if(this._pollHandler){
AjxTimedAction.cancelAction(this._pollHandler)
}
DwtDialog.prototype.popdown.call(this)
};
ZaBulkImportXWizard.prototype.popup=function(s){
ZaXWizardDialog.prototype.popup.call(this,s);
try{
var e=ZaBulkProvision.iSTATUS_NOT_RUNNING;
var n=ZaBulkProvision.getImportStatus();
if(n.Body&&n.Body.BulkImportAccountsResponse){
var t=n.Body.BulkImportAccountsResponse;
if(t&&t[ZaBulkProvision.A2_status]&&t[ZaBulkProvision.A2_status][0]&&t[ZaBulkProvision.A2_status][0]._content){
e=parseInt(t[ZaBulkProvision.A2_status][0]._content);
this.processBulkImportResponse(t)
}}}
catch(o){
ZaApp.getInstance().getCurrentController()._handleException(o)
}
if(e==ZaBulkProvision.iSTATUS_NOT_RUNNING){
this._button[DwtWizardDialog.FINISH_BUTTON].setEnabled(false);
this._button[DwtWizardDialog.NEXT_BUTTON].setEnabled(true);
this._button[DwtDialog.CANCEL_BUTTON].setEnabled(true)
}else{
this.goPage(ZaBulkImportXWizard.STEP_PROVISION);
this._button[DwtWizardDialog.FINISH_BUTTON].setEnabled(true);
this._button[DwtWizardDialog.NEXT_BUTTON].setEnabled(false);
this._button[DwtDialog.CANCEL_BUTTON].setEnabled(false)
}
if(this.prevCallback){
this._button[DwtWizardDialog.PREV_BUTTON].setEnabled(true)
}else{
this._button[DwtWizardDialog.PREV_BUTTON].setEnabled(false)
}};
ZaBulkImportXWizard.prototype.handleXFormChange=function(){
var e=this._containedObject[ZaModel.currentStep];
if(e!=ZaBulkImportXWizard.STEP_CHOOSE_ACTION){
this._button[DwtWizardDialog.FINISH_BUTTON].setEnabled(false);
this._button[DwtWizardDialog.NEXT_BUTTON].setEnabled(true);
this._button[DwtWizardDialog.PREV_BUTTON].setEnabled(true);
this._button[DwtDialog.CANCEL_BUTTON].setEnabled(true)
}
if(e==ZaBulkImportXWizard.STEP_PROVISION){
if(this._containedObject[ZaBulkProvision.A2_importEmail]=="FALSE"){
this._button[DwtWizardDialog.NEXT_BUTTON].setEnabled(false);
this._button[DwtWizardDialog.FINISH_BUTTON].setEnabled(true)
}else{
this._button[DwtWizardDialog.NEXT_BUTTON].setEnabled(true);
this._button[DwtWizardDialog.FINISH_BUTTON].setEnabled(false)
}}};
ZaBulkImportXWizard.prototype.goNext=function(){
var m=this._containedObject[ZaModel.currentStep];
if(m==ZaBulkImportXWizard.STEP_CHOOSE_ACTION){
this._button[DwtWizardDialog.PREV_BUTTON].setEnabled(true);
this._button[DwtWizardDialog.FINISH_BUTTON].setEnabled(false);
this._button[DwtDialog.CANCEL_BUTTON].setEnabled(true);
if(this._containedObject[ZaBulkProvision.A2_provAction]==ZaBulkProvision.ACTION_IMPORT_XML){
this.goPage(ZaBulkImportXWizard.STEP_FILE_UPLOAD)
}else{
if(this._containedObject[ZaBulkProvision.A2_provAction]==ZaBulkProvision.ACTION_IMPORT_AD||this._containedObject[ZaBulkProvision.A2_provAction]==ZaBulkProvision.ACTION_IMPORT_LDAP){
this.goPage(ZaBulkImportXWizard.STEP_PROV_OPTIONS)
}else{
if(this._containedObject[ZaBulkProvision.A2_provAction]==ZaBulkProvision.ACTION_IMPORT_ZIMBRA){
this._containedObject[ZaBulkProvision.A2_GalLdapBindDn]="uid=zimbra,cn=admins,cn=zimbra";
this._containedObject[ZaBulkProvision.A2_GalLdapFilter]="(objectclass=zimbraAccount)";
this.goPage(ZaBulkImportXWizard.STEP_PROV_OPTIONS)
}}}}else{
if(m==ZaBulkImportXWizard.STEP_PROV_OPTIONS){
this._button[DwtWizardDialog.PREV_BUTTON].setEnabled(true);
if(this._containedObject[ZaBulkProvision.A2_generatePassword]=="FALSE"){
if(this._containedObject[ZaBulkProvision.A2_confirmPassword]!=this._containedObject[ZaBulkProvision.A2_password]){
ZaApp.getInstance().getCurrentController().popupErrorDialog(com_zimbra_bulkprovision.ERROR_PASSWORDS_DONT_MATCH);
return
}}
this.goPage(ZaBulkImportXWizard.STEP_LDAP_INFO);
this._button[DwtWizardDialog.FINISH_BUTTON].setEnabled(false);
this._button[DwtWizardDialog.NEXT_BUTTON].setEnabled(true);
this._button[DwtWizardDialog.PREV_BUTTON].setEnabled(true);
this._button[DwtDialog.CANCEL_BUTTON].setEnabled(true)
}else{
if(m==ZaBulkImportXWizard.STEP_LDAP_INFO){
this._button[DwtWizardDialog.PREV_BUTTON].setEnabled(true);
if(AjxUtil.isEmpty(this._containedObject[ZaBulkProvision.A2_GalLdapURL])){
ZaApp.getInstance().getCurrentController().popupErrorDialog(com_zimbra_bulkprovision.ERROR_LDAP_URL_REQUIRED);
return
}
if(AjxUtil.isEmpty(this._containedObject[ZaBulkProvision.A2_GalLdapBindDn])){
ZaApp.getInstance().getCurrentController().popupErrorDialog(com_zimbra_bulkprovision.ERROR_BIND_DN_REQUIRED);
return
}
if(AjxUtil.isEmpty(this._containedObject[ZaBulkProvision.A2_GalLdapFilter])){
ZaApp.getInstance().getCurrentController().popupErrorDialog(com_zimbra_bulkprovision.ERROR_LDAP_FILTER_REQUIRED);
return
}
if(AjxUtil.isEmpty(this._containedObject[ZaBulkProvision.A2_GalLdapSearchBase])){
ZaApp.getInstance().getCurrentController().popupErrorDialog(com_zimbra_bulkprovision.ERROR_LDAP_BASE_REQUIRED);
return
}
this._button[DwtWizardDialog.FINISH_BUTTON].setEnabled(false);
this._button[DwtWizardDialog.NEXT_BUTTON].setEnabled(false);
this._button[DwtWizardDialog.PREV_BUTTON].setEnabled(false);
this._button[DwtDialog.CANCEL_BUTTON].setEnabled(true);
var d=new AjxCallback(this,ZaBulkImportXWizard.prototype.previewCallback,{}
);
ZaBulkProvision.generateBulkProvisionPreview(this._containedObject,d)
}else{
if(m==ZaBulkImportXWizard.STEP_FILE_UPLOAD){
var u=document.getElementById(ZaBulkImportXWizard.xmlUploadFormId);
var o=u.getElementsByTagName("input");
var e=[];
for(var r=0;
r<o.length;
r++){
if(o[r].type=="file"){
var t=o[r].name;
var c=ZaBulkImportXWizard.getFileName(o[r].value);
if(t=="xmlFile"){
if(c==null||c.length<=0){
ZaApp.getInstance().getCurrentController().popupErrorDialog(com_zimbra_bulkprovision.error_no_bulk_file_specified);
return
}
break
}}}
try{
this._button[DwtWizardDialog.FINISH_BUTTON].setEnabled(false);
this._button[DwtWizardDialog.NEXT_BUTTON].setEnabled(false);
this._button[DwtWizardDialog.PREV_BUTTON].setEnabled(false);
this._button[DwtDialog.CANCEL_BUTTON].setEnabled(true);
var l=new AjxCallback(this,this._uploadCallback);
ZaUploader.upload.call(this,l,[ZaBulkImportXWizard.attachmentInputId],ZaBulkImportXWizard.xmlUploadFormId)
}
catch(s){
this._button[DwtWizardDialog.FINISH_BUTTON].setEnabled(false);
this._button[DwtWizardDialog.NEXT_BUTTON].setEnabled(true);
this._button[DwtWizardDialog.PREV_BUTTON].setEnabled(true);
this._button[DwtDialog.CANCEL_BUTTON].setEnabled(true);
ZaApp.getInstance().getCurrentController().popupErrorDialog((s&&s.msg)?s.msg:com_zimbra_bulkprovision.error_no_bulk_file_specified)
}}else{
if(m==ZaBulkImportXWizard.STEP_REVIEW){
this._button[DwtWizardDialog.PREV_BUTTON].setEnabled(false);
this._button[DwtWizardDialog.NEXT_BUTTON].setEnabled(false);
this._button[DwtWizardDialog.FINISH_BUTTON].setEnabled(false);
this._button[DwtDialog.CANCEL_BUTTON].setEnabled(true);
this._localXForm.setInstanceValue(ZaBulkProvision.iSTATUS_STARTING,ZaBulkProvision.A2_status);
this.goPage(ZaBulkImportXWizard.STEP_PROVISION);
if(this._containedObject[ZaBulkProvision.A2_provAction]==ZaBulkProvision.ACTION_IMPORT_XML){
this._containedObject[ZaBulkProvision.A2_op]=ZaBulkProvision.OP_START_IMPORT;
this._containedObject[ZaBulkProvision.A2_sourceType]=ZaBulkProvision.SOURCE_TYPE_XML;
var d=new AjxCallback(this,ZaBulkImportXWizard.prototype.importFromFileCallback,{}
);
ZaBulkProvision.importAccountsFromFile(this._containedObject,d)
}else{
if(this._containedObject[ZaBulkProvision.A2_provAction]==ZaBulkProvision.ACTION_IMPORT_AD||this._containedObject[ZaBulkProvision.A2_provAction]==ZaBulkProvision.ACTION_IMPORT_LDAP||this._containedObject[ZaBulkProvision.A2_provAction]==ZaBulkProvision.ACTION_IMPORT_ZIMBRA){
this.goPage(ZaBulkImportXWizard.STEP_PROVISION);
var d=new AjxCallback(this,ZaBulkImportXWizard.prototype.importCallback,{
action:this._containedObject[ZaBulkProvision.A2_provAction]}
);
ZaBulkProvision.importAccountsFromLDAP(this._containedObject,d)
}}}else{
if(m==ZaBulkImportXWizard.STEP_PROVISION){
if(this.finishCallback){
this.finishCallback.run(this._containedObject)
}}}}}}}};
ZaBulkImportXWizard.prototype.goPrev=function(){
var t=this._containedObject[ZaModel.currentStep];
var e;
if(t==ZaBulkImportXWizard.STEP_PROV_OPTIONS){
this._button[DwtWizardDialog.NEXT_BUTTON].setEnabled(true);
if(!this.prevCallback){
this._button[DwtWizardDialog.PREV_BUTTON].setEnabled(false)
}
e=ZaBulkImportXWizard.STEP_CHOOSE_ACTION
}else{
if(t==ZaBulkImportXWizard.STEP_LDAP_INFO){
e=ZaBulkImportXWizard.STEP_PROV_OPTIONS;
this._button[DwtWizardDialog.NEXT_BUTTON].setEnabled(true)
}else{
if(t==ZaBulkImportXWizard.STEP_REVIEW){
if(this._containedObject[ZaBulkProvision.A2_provAction]==ZaBulkProvision.ACTION_IMPORT_XML){
e=ZaBulkImportXWizard.STEP_FILE_UPLOAD
}else{
e=ZaBulkImportXWizard.STEP_LDAP_INFO
}
this._button[DwtWizardDialog.NEXT_BUTTON].setEnabled(true)
}else{
if(t==ZaBulkImportXWizard.STEP_PROVISION){
e=ZaBulkImportXWizard.STEP_REVIEW;
this._button[DwtWizardDialog.NEXT_BUTTON].setEnabled(true)
}else{
if(this.prevCallback&&t==ZaBulkImportXWizard.STEP_CHOOSE_ACTION){
this.prevCallback.run(this._containedObject);
return
}else{
if(t==ZaBulkImportXWizard.STEP_FILE_UPLOAD){
e=ZaBulkImportXWizard.STEP_CHOOSE_ACTION
}}}}}}
this._button[DwtWizardDialog.FINISH_BUTTON].setEnabled(false);
this._button[DwtDialog.CANCEL_BUTTON].setEnabled(true);
this.goPage(e)
};
ZaBulkImportXWizard.prototype.previewCallback=function(o,n){
try{
if(n&&n.isException()){
throw (n.getException())
}else{
var r=n.getResponse().Body.BulkImportAccountsResponse;
if(!r){
r=n.getResponse().Body.GenerateBulkProvisionFileFromLDAPResponse
}
var t="0";
var s="0";
var u="0";
var e="0";
var l="";
var d="";
if(r[ZaBulkProvision.A2_domainCount]&&r[ZaBulkProvision.A2_domainCount][0]&&r[ZaBulkProvision.A2_domainCount][0]._content){
s=parseInt(r[ZaBulkProvision.A2_domainCount][0]._content)
}
if(r[ZaBulkProvision.A2_skippedDomainCount]&&r[ZaBulkProvision.A2_skippedDomainCount][0]&&r[ZaBulkProvision.A2_skippedDomainCount][0]._content){
u=parseInt(r[ZaBulkProvision.A2_skippedDomainCount][0]._content)
}
if(r[ZaBulkProvision.A2_totalCount]&&r[ZaBulkProvision.A2_totalCount][0]&&r[ZaBulkProvision.A2_totalCount][0]._content){
totalCount=parseInt(r[ZaBulkProvision.A2_totalCount][0]._content)
}
if(r[ZaBulkProvision.A2_skippedAccountCount]&&r[ZaBulkProvision.A2_skippedAccountCount][0]&&r[ZaBulkProvision.A2_skippedAccountCount][0]._content){
e=parseInt(r[ZaBulkProvision.A2_skippedAccountCount][0]._content)
}
if(r[ZaBulkProvision.A2_SMTPHost]&&r[ZaBulkProvision.A2_SMTPHost][0]&&r[ZaBulkProvision.A2_SMTPHost][0]._content){
l=r[ZaBulkProvision.A2_SMTPHost][0]._content
}
if(r[ZaBulkProvision.A2_SMTPPort]&&r[ZaBulkProvision.A2_SMTPPort][0]&&r[ZaBulkProvision.A2_SMTPPort][0]._content){
d=parseInt(r[ZaBulkProvision.A2_SMTPPort][0]._content)
}
this.goPage(ZaBulkImportXWizard.STEP_REVIEW);
this._button[DwtWizardDialog.FINISH_BUTTON].setEnabled(false);
this._button[DwtWizardDialog.NEXT_BUTTON].setEnabled(true);
this._button[DwtWizardDialog.PREV_BUTTON].setEnabled(true);
this._button[DwtDialog.CANCEL_BUTTON].setEnabled(true);
this._localXForm.setInstanceValue(s,ZaBulkProvision.A2_domainCount);
this._localXForm.setInstanceValue(u,ZaBulkProvision.A2_skippedDomainCount);
this._localXForm.setInstanceValue(totalCount,ZaBulkProvision.A2_totalCount);
this._localXForm.setInstanceValue(e,ZaBulkProvision.A2_skippedAccountCount);
this._localXForm.setInstanceValue(l,ZaBulkProvision.A2_SMTPHost);
this._localXForm.setInstanceValue(d,ZaBulkProvision.A2_SMTPPort)
}}
catch(c){
if(c.code==ZaBulkProvision.BP_INVALID_SEARCH_FILTER){
ZaApp.getInstance().getCurrentController().popupErrorDialog(AjxMessageFormat.format(com_zimbra_bulkprovision.ERROR_INVALID_SEARCH_FILTER,[c.msg]),c)
}else{
if(c.code==ZaBulkProvision.BP_NAMING_EXCEPTION){
ZaApp.getInstance().getCurrentController().popupErrorDialog(AjxMessageFormat.format(com_zimbra_bulkprovision.BP_NAMING_EXCEPTION,[c.msg]),c)
}else{
ZaApp.getInstance().getCurrentController()._handleException(c,"ZaBulkImportXWizard.prototype.previewCallback")
}}
this._button[DwtWizardDialog.FINISH_BUTTON].setEnabled(false);
this._button[DwtWizardDialog.NEXT_BUTTON].setEnabled(true);
this._button[DwtWizardDialog.PREV_BUTTON].setEnabled(true);
this._button[DwtDialog.CANCEL_BUTTON].setEnabled(true)
}};
ZaBulkImportXWizard.prototype._uploadCallback=function(e,t){
var o=this._containedObject[ZaModel.currentStep];
if(t&&t[0]&&e==AjxPost.SC_OK){
if(t[0].aid!=null&&t[0].aid.length>0){
this._containedObject[ZaBulkProvision.A_aid]=t[0].aid
}else{
ZaApp.getInstance().getCurrentController().popupErrorDialog(com_zimbra_bulkprovision.error_upload_bulk_no_aid);
return
}
try{
this._containedObject[ZaBulkProvision.A2_op]=ZaBulkProvision.OP_PREVIEW;
this._containedObject[ZaBulkProvision.A2_sourceType]=ZaBulkProvision.SOURCE_TYPE_XML;
this._containedObject[ZaBulkProvision.A2_SMTPHost]="";
this._containedObject[ZaBulkProvision.A2_SMTPPort]="";
var r=new AjxCallback(this,ZaBulkImportXWizard.prototype.previewCallback,{}
);
ZaBulkProvision.importAccountsFromFile(this._containedObject,r)
}
catch(n){
if(n.code==ZaBulkProvision.BP_NO_ACCOUNTS_TO_IMPORT){
this.popupErrorDialog(com_zimbra_bulkprovision.ERROR_NO_ACCOUNTS_TO_IMPORT,n)
}else{
ZaApp.getInstance().getCurrentController()._handleException(n)
}
this._button[DwtWizardDialog.FINISH_BUTTON].setEnabled(false);
this._button[DwtWizardDialog.NEXT_BUTTON].setEnabled(true);
this._button[DwtWizardDialog.PREV_BUTTON].setEnabled(true);
this._button[DwtDialog.CANCEL_BUTTON].setEnabled(true);
return
}}else{
var s=AjxMessageFormat.format(com_zimbra_bulkprovision.error_upload_bulk,[e]);
ZaApp.getInstance().getCurrentController().popupErrorDialog(s);
this._button[DwtWizardDialog.FINISH_BUTTON].setEnabled(false);
this._button[DwtWizardDialog.NEXT_BUTTON].setEnabled(true);
this._button[DwtWizardDialog.PREV_BUTTON].setEnabled(true);
this._button[DwtDialog.CANCEL_BUTTON].setEnabled(true)
}};
ZaBulkImportXWizard.prototype.getImportStatus=function(){
var e=new AjxCallback(this,ZaBulkImportXWizard.prototype.importCallback,{
action:this._containedObject[ZaBulkProvision.A2_provAction]}
);
ZaBulkProvision.getImportStatus(e)
};
ZaBulkImportXWizard.prototype.generateBulkFileCallback=function(s,n){
try{
if(n&&n.isException()){
this._button[DwtWizardDialog.NEXT_BUTTON].setEnabled(true);
ZaApp.getInstance().getCurrentController()._handleException(n.getException(),"ZaBulkImportXWizard.prototype.generateBulkFileCallback")
}else{
var e=n.getResponse().Body.GenerateBulkProvisionFileFromLDAPResponse;
if(e.fileToken&&e.fileToken[0]&&e.fileToken[0]._content){
var o="";
if(this._containedObject[ZaBulkProvision.A2_provAction]==ZaBulkProvision.ACTION_GENERATE_MIG_XML){
o=ZaBulkProvision.FILE_FORMAT_MIGRATION_XML
}else{
if(this._containedObject[ZaBulkProvision.A2_provAction]==ZaBulkProvision.ACTION_GENERATE_BULK_XML){
o=ZaBulkProvision.FILE_FORMAT_BULK_XML
}else{
if(this._containedObject[ZaBulkProvision.A2_provAction]==ZaBulkProvision.ACTION_GENERATE_BULK_CSV){
o=ZaBulkProvision.FILE_FORMAT_BULK_CSV
}}}
this._localXForm.setInstanceValue(AjxMessageFormat.format("{0}//{1}:{2}/service/extension/com_zimbra_bulkprovision/bulkdownload?fileID={3}&fileFormat={4}",[location.protocol,location.hostname,location.port,e.fileToken[0]._content,o]),ZaBulkProvision.A2_generatedFileLink);
this.goPage(ZaBulkImportXWizard.STEP_DOWNLOAD_FILE);
this._button[DwtWizardDialog.FINISH_BUTTON].setEnabled(true);
this._button[DwtWizardDialog.NEXT_BUTTON].setEnabled(false);
this._button[DwtDialog.CANCEL_BUTTON].setEnabled(false)
}}}
catch(t){
ZaApp.getInstance().getCurrentController()._handleException(t,"ZaBulkImportXWizard.prototype.generateBulkFileCallback")
}
this._button[DwtWizardDialog.PREV_BUTTON].setEnabled(true)
};
ZaBulkImportXWizard.prototype.importFromFileCallback=function(n,o){
try{
if(o&&o.isException()){
this._button[DwtWizardDialog.PREV_BUTTON].setEnabled(true);
this._button[DwtDialog.CANCEL_BUTTON].setEnabled(true);
if(o.getException().code==ZaBulkProvision.BP_NO_ACCOUNTS_TO_IMPORT){
ZaApp.getInstance().getCurrentController().popupErrorDialog(com_zimbra_bulkprovision.ERROR_NO_ACCOUNTS_TO_IMPORT,o.getException())
}else{
ZaApp.getInstance().getCurrentController()._handleException(o.getException(),"ZaBulkImportXWizard.prototype.importFromFileCallback")
}}else{
var e=o.getResponse().Body.BulkImportAccountsResponse;
this.processBulkImportResponse(e)
}}
catch(t){
ZaApp.getInstance().getCurrentController()._handleException(t,"ZaBulkImportXWizard.prototype.importFromFileCallback")
}};
ZaBulkImportXWizard.prototype.importCallback=function(n,o){
try{
if(o&&o.isException()){
this._button[DwtWizardDialog.PREV_BUTTON].setEnabled(true);
this._button[DwtDialog.CANCEL_BUTTON].setEnabled(true);
if(o.getException().code==ZaBulkProvision.BP_NO_ACCOUNTS_TO_IMPORT){
ZaApp.getInstance().getCurrentController().popupErrorDialog(com_zimbra_bulkprovision.ERROR_NO_ACCOUNTS_TO_IMPORT,o.getException());
if(this._containedObject[ZaBulkProvision.A2_importEmail]=="FALSE"){
this._button[DwtWizardDialog.FINISH_BUTTON].setEnabled(true)
}else{
this._button[DwtWizardDialog.NEXT_BUTTON].setEnabled(true)
}}else{
ZaApp.getInstance().getCurrentController()._handleException(o.getException(),"ZaBulkImportXWizard.prototype.importCallback")
}}else{
var e=o.getResponse().Body.BulkImportAccountsResponse;
this.processBulkImportResponse(e)
}}
catch(t){
ZaApp.getInstance().getCurrentController()._handleException(t,"ZaBulkImportXWizard.prototype.importCallback")
}};
ZaBulkImportXWizard.prototype.processBulkImportResponse=function(t){
var o=0;
if(t[ZaBulkProvision.A2_status]&&t[ZaBulkProvision.A2_status][0]&&t[ZaBulkProvision.A2_status][0]._content){
o=parseInt(t[ZaBulkProvision.A2_status][0]._content);
if(o==ZaBulkProvision.iSTATUS_STARTED||o==ZaBulkProvision.iSTATUS_CREATING_ACCOUNTS||o==ZaBulkProvision.iSTATUS_ABORT){
this._button[DwtWizardDialog.PREV_BUTTON].setEnabled(false)
}
this._localXForm.setInstanceValue(o,ZaBulkProvision.A2_status)
}
var c=0;
var l=0;
var s=0;
var e=0;
var d=null;
if(t[ZaBulkProvision.A2_totalCount]&&t[ZaBulkProvision.A2_totalCount][0]&&t[ZaBulkProvision.A2_totalCount][0]._content){
c=parseInt(t[ZaBulkProvision.A2_totalCount][0]._content)
}
if(t[ZaBulkProvision.A2_errorCount]&&t[ZaBulkProvision.A2_errorCount][0]&&t[ZaBulkProvision.A2_errorCount][0]._content){
l=parseInt(t[ZaBulkProvision.A2_errorCount][0]._content)
}
if(t[ZaBulkProvision.A2_provisionedCount]&&t[ZaBulkProvision.A2_provisionedCount][0]&&t[ZaBulkProvision.A2_provisionedCount][0]._content){
s=parseInt(t[ZaBulkProvision.A2_provisionedCount][0]._content)
}
if(t[ZaBulkProvision.A2_skippedCount]&&t[ZaBulkProvision.A2_skippedCount][0]&&t[ZaBulkProvision.A2_skippedCount][0]._content){
e=parseInt(t[ZaBulkProvision.A2_skippedCount][0]._content)
}
if(t[ZaBulkProvision.A2_fileToken]&&t[ZaBulkProvision.A2_fileToken][0]&&t[ZaBulkProvision.A2_fileToken][0]._content){
d=t[ZaBulkProvision.A2_fileToken][0]._content;
this._localXForm.setInstanceValue(d,ZaBulkProvision.A2_fileToken)
}
this._localXForm.setInstanceValue(c,ZaBulkProvision.A2_totalCount);
this._localXForm.setInstanceValue(l,ZaBulkProvision.A2_errorCount);
this._localXForm.setInstanceValue(s,ZaBulkProvision.A2_provisionedCount);
this._localXForm.setInstanceValue(e,ZaBulkProvision.A2_skippedCount);
if(c>0&&(s>0||e>0||l>0)){
this._localXForm.setInstanceValue(Math.round(100*(s+e+l)/c)+"%",ZaBulkProvision.A2_progress)
}else{
this._localXForm.setInstanceValue("0%",ZaBulkProvision.A2_progress)
}
if(o==ZaBulkProvision.iSTATUS_ABORT){
this._button[DwtWizardDialog.FINISH_BUTTON].setEnabled(false);
this._button[DwtDialog.CANCEL_BUTTON].setEnabled(false)
}
if(o==ZaBulkProvision.iSTATUS_STARTING||o==ZaBulkProvision.iSTATUS_CREATING_ACCOUNTS){
this._button[DwtWizardDialog.FINISH_BUTTON].setEnabled(false);
this._button[DwtDialog.CANCEL_BUTTON].setEnabled(false)
}
if(o==ZaBulkProvision.iSTATUS_FINISHED||o==ZaBulkProvision.iSTATUS_ABORTED||o==ZaBulkProvision.iSTATUS_ERROR){
this._button[DwtDialog.CANCEL_BUTTON].setEnabled(true);
this._button[DwtWizardDialog.PREV_BUTTON].setEnabled(true);
if(this._containedObject[ZaBulkProvision.A2_importEmail]=="FALSE"){
this._button[DwtWizardDialog.FINISH_BUTTON].setEnabled(true)
}else{
this._button[DwtWizardDialog.NEXT_BUTTON].setEnabled(true)
}}
var r=null;
var n=null;
if(o==ZaBulkProvision.iSTATUS_FINISHED||o==ZaBulkProvision.iSTATUS_ABORTED||o==ZaBulkProvision.iSTATUS_ERROR){
n=AjxMessageFormat.format("{0}//{1}:{2}/service/extension/com_zimbra_bulkprovision/bulkdownload?fileID={3}&fileFormat=reportcsv",[location.protocol,location.hostname,location.port,d]);
if(l>0){
r=AjxMessageFormat.format("{0}//{1}:{2}/service/extension/com_zimbra_bulkprovision/bulkdownload?fileID={3}&fileFormat=errorscsv",[location.protocol,location.hostname,location.port,d])
}}
this._localXForm.setInstanceValue(n,ZaBulkProvision.A2_completedAccountsFileLink);
this._localXForm.setInstanceValue(r,ZaBulkProvision.A2_failedAccountsFileLink);
if(o==ZaBulkProvision.iSTATUS_IDLE||o==ZaBulkProvision.iSTATUS_STARTING||o==ZaBulkProvision.iSTATUS_STARTED||o==ZaBulkProvision.iSTATUS_CREATING_ACCOUNTS||o==ZaBulkProvision.iSTATUS_ABORT){
this._pollHandler=AjxTimedAction.scheduleAction(this.pollAction,ZaBulkImportXWizard.POLL_INTERVAL)
}else{
if(this._pollHandler){
AjxTimedAction.cancelAction(this._pollHandler);
this._pollHandler=null
}}};
ZaBulkImportXWizard.prototype.getUploadFrameId=function(){
if(!this._uploadManagerIframeId){
var o=Dwt.getNextId();
var e=["<iframe name='",o,"' id='",o,"' src='",(AjxEnv.isIE&&location.protocol=="https:")?appContextPath+"/public/blank.html":'javascript:""',"' style='position: absolute; top: 0; left: 0; visibility: hidden'></iframe>"];
var t=document.createElement("div");
t.innerHTML=e.join("");
document.body.appendChild(t.firstChild);
this._uploadManagerIframeId=o
}
return this._uploadManagerIframeId
};
ZaBulkImportXWizard.prototype.getUploadManager=function(){
return this._uploadManager
};
ZaBulkImportXWizard.prototype.setUploadManager=function(e){
this._uploadManager=e
};
ZaBulkImportXWizard.getFileName=function(e){
if(e==null){
return null
}
var t=0;
if(AjxEnv.isWindows){
t=e.lastIndexOf("\\")
}else{
t=e.lastIndexOf("/")
}
return e.substring(t+1)
};
ZaBulkImportXWizard.csvUploadFormId=Dwt.getNextId();
ZaBulkImportXWizard.getUploadFormHtml=function(t){
var n=appContextPath+"/../service/upload";
var o=[];
var e=0;
o[e++]="<div style='height:50px;width: 500px; overflow:auto;'>";
o[e++]="<table border=0 cellspacing=0 cellpadding=2 style='table-layout: fixed;'> ";
o[e++]="<tbody><tr><td width=65>"+com_zimbra_bulkprovision.XML_Upload_file+"</td>";
o[e++]="<td>";
o[e++]="<form method='POST' action='";
o[e++]=n;
o[e++]="' id='";
o[e++]=ZaBulkImportXWizard.xmlUploadFormId;
o[e++]="' enctype='multipart/form-data'>";
o[e++]="<input type=file  name='bulkFile' size='45' id='";
o[e++]=ZaBulkImportXWizard.attachmentInputId;
o[e++]="'></input></form></td></tr>";
o[e++]="</tbody></table>";
o[e++]="</div>";
return o.join("")
};
ZaBulkImportXWizard.prototype.setObject=function(e){
this._containedObject=new ZaBulkProvision();
this._containedObject=e;
this._containedObject[ZaModel.currentStep]=e[ZaModel.currentStep]||ZaBulkImportXWizard.STEP_CHOOSE_ACTION;
this._containedObject[ZaBulkProvision.A_mustChangePassword]=e[ZaBulkProvision.A_mustChangePassword]||"TRUE";
this._containedObject._uuid=e._uuid||ZaUtil.getItemUUid();
this.prevCallback=e.prevCallback;
this.finishCallback=e.finishCallback;
this._localXForm.setInstance(this._containedObject)
};
ZaBulkImportXWizard.isActionSubGroupVisible=function(){
var e=this.getInstanceValue(ZaBulkProvision.A2_provAction);
return(e==ZaBulkProvision.ACTION_IMPORT_LDAP||e==ZaBulkProvision.ACTION_IMPORT_XML||e==ZaBulkProvision.ACTION_IMPORT_CSV||e==ZaBulkProvision.ACTION_GENERATE_BULK_XML||e==ZaBulkProvision.ACTION_GENERATE_BULK_CSV)
};
ZaBulkImportXWizard.isProvisioningNoteVisible=function(){
var e=this.getInstanceValue(ZaBulkProvision.A2_status);
return(e==ZaBulkProvision.iSTATUS_STARTED||e==ZaBulkProvision.iSTATUS_CREATING_ACCOUNTS)
};
ZaBulkImportXWizard.myXFormModifier=function(r,d){
var u=new Array();
var e={
type:_CASE_,numCols:2,colSizes:["100px","*"],tabGroupKey:ZaBulkImportXWizard.STEP_CHOOSE_ACTION,caseKey:ZaBulkImportXWizard.STEP_CHOOSE_ACTION,items:[{
type:_DWT_ALERT_,colSpan:2,style:DwtAlert.INFO,iconVisible:false,content:com_zimbra_bulkprovision.AccountImportWizardOverview,visibilityChecks:[]}
,{
type:_RADIO_,groupname:"action_selection_subgroup",ref:ZaBulkProvision.A2_provAction,bmolsnr:true,labelLocation:_RIGHT_,label:com_zimbra_bulkprovision.ActionImportFromLDAP,updateElement:function(m){
this.getElement().checked=(m==ZaBulkProvision.ACTION_IMPORT_LDAP)
}
,elementChanged:function(p,f,m){
this.setInstanceValue(ZaBulkProvision.ACTION_IMPORT_LDAP,ZaBulkProvision.A2_provAction)
}
,visibilityChecks:[],enableDisableChecks:[]}
,{
type:_RADIO_,groupname:"action_selection_group",ref:ZaBulkProvision.A2_provAction,bmolsnr:true,labelLocation:_RIGHT_,label:com_zimbra_bulkprovision.ActionImportFromZimbra,updateElement:function(m){
this.getElement().checked=(m==ZaBulkProvision.ACTION_IMPORT_ZIMBRA)
}
,elementChanged:function(p,f,m){
this.setInstanceValue(ZaBulkProvision.ACTION_IMPORT_ZIMBRA,ZaBulkProvision.A2_provAction)
}
,visibilityChecks:[],enableDisableChecks:[]}
,{
type:_RADIO_,groupname:"action_selection_group",ref:ZaBulkProvision.A2_provAction,bmolsnr:true,labelLocation:_RIGHT_,label:com_zimbra_bulkprovision.ActionImportFromXML,updateElement:function(m){
this.getElement().checked=(m==ZaBulkProvision.ACTION_IMPORT_XML)
}
,elementChanged:function(p,f,m){
this.setInstanceValue(ZaBulkProvision.ACTION_IMPORT_XML,ZaBulkProvision.A2_provAction)
}
,visibilityChecks:[],enableDisableChecks:[]}
]};
u.push(e);
var n={
type:_CASE_,numCols:2,colSizes:["250px","*"],tabGroupKey:ZaBulkImportXWizard.STEP_PROV_OPTIONS,caseKey:ZaBulkImportXWizard.STEP_PROV_OPTIONS,items:[{
type:_DWT_ALERT_,style:DwtAlert.INFO,iconVisible:false,content:com_zimbra_bulkprovision.ProvOptionsNote,visibilityChecks:[],enableDisableChecks:[]}
,{
type:_RADIO_,groupname:"account_password_option",ref:ZaBulkProvision.A2_generatePassword,labelLocation:_RIGHT_,label:com_zimbra_bulkprovision.GenerateRandomPassword,bmolsnr:true,updateElement:function(m){
this.getElement().checked=(m=="TRUE")
}
,elementChanged:function(p,f,m){
this.setInstanceValue("TRUE",ZaBulkProvision.A2_generatePassword)
}
,visibilityChecks:[],enableDisableChecks:[]}
,{
type:_TEXTFIELD_,ref:ZaBulkProvision.A2_genPasswordLength,label:com_zimbra_bulkprovision.GeneratedPasswordLength,visibilityChecks:[],enableDisableChangeEventSources:[ZaBulkProvision.A2_generatePassword],enableDisableChecks:[[XForm.checkInstanceValue,ZaBulkProvision.A2_generatePassword,"TRUE"]],cssClass:"admin_xform_number_input"}
,{
type:_DWT_ALERT_,style:DwtAlert.WARNING,iconVisible:false,content:com_zimbra_bulkprovision.GeneratePasswordsNote,visibilityChecks:[],enableDisableChecks:[],visibilityChangeEventSources:[]}
,{
type:_RADIO_,groupname:"account_password_option",ref:ZaBulkProvision.A2_generatePassword,bmolsnr:true,labelLocation:_RIGHT_,label:com_zimbra_bulkprovision.UseSamePassword,updateElement:function(m){
this.getElement().checked=(m=="FALSE")
}
,elementChanged:function(p,f,m){
this.setInstanceValue("FALSE",ZaBulkProvision.A2_generatePassword)
}
,visibilityChecks:[],enableDisableChecks:[]}
,{
ref:ZaBulkProvision.A2_password,type:_SECRET_,label:com_zimbra_bulkprovision.PasswordToUse,labelLocation:_LEFT_,cssClass:"admin_xform_name_input",visibilityChecks:[],enableDisableChangeEventSources:[ZaBulkProvision.A2_generatePassword],enableDisableChecks:[[XForm.checkInstanceValue,ZaBulkProvision.A2_generatePassword,"FALSE"]]}
,{
ref:ZaBulkProvision.A2_confirmPassword,type:_SECRET_,label:com_zimbra_bulkprovision.PasswordToUseConfirm,labelLocation:_LEFT_,cssClass:"admin_xform_name_input",visibilityChecks:[],enableDisableChangeEventSources:[ZaBulkProvision.A2_generatePassword],enableDisableChecks:[[XForm.checkInstanceValue,ZaBulkProvision.A2_generatePassword,"FALSE"]]}
,{
ref:ZaBulkProvision.A_mustChangePassword,type:_CHECKBOX_,label:com_zimbra_bulkprovision.RequireChangePassword,trueValue:"TRUE",falseValue:"FALSE",visibilityChecks:[],enableDisableChecks:[]}
,{
type:_DWT_ALERT_,style:DwtAlert.WARNING,iconVisible:false,content:com_zimbra_bulkprovision.SplitDomainOptionsNote,visibilityChecks:[],enableDisableChecks:[],visibilityChangeEventSources:[]}
,{
ref:ZaBulkProvision.A2_SMTPHost,type:_TEXTFIELD_,label:com_zimbra_bulkprovision.SMTPHost,visibilityChecks:[],enableDisableChecks:[],cssClass:"admin_xform_name_input"}
,{
ref:ZaBulkProvision.A2_SMTPPort,type:_TEXTFIELD_,label:com_zimbra_bulkprovision.SMTPPort,visibilityChecks:[],enableDisableChecks:[],cssClass:"admin_xform_number_input"}
]};
u.push(n);
var l={
type:_CASE_,numCols:2,colSizes:["250px","380px"],tabGroupKey:ZaBulkImportXWizard.STEP_LDAP_INFO,caseKey:ZaBulkImportXWizard.STEP_LDAP_INFO,items:[{
type:_DWT_ALERT_,style:DwtAlert.INFO,iconVisible:false,content:com_zimbra_bulkprovision.LdapInfoStepNote}
,{
ref:ZaBulkProvision.A2_createDomains,type:_CHECKBOX_,label:com_zimbra_bulkprovision.A2_createDomains,trueValue:"TRUE",falseValue:"FALSE",visibilityChecks:[],enableDisableChecks:[]}
,{
ref:ZaBulkProvision.A2_maxResults,type:_TEXTFIELD_,cssClass:"admin_xform_number_input",label:com_zimbra_bulkprovision.LDAPMaxResults,labelLocation:_LEFT_,labelWrap:true,visibilityChecks:[],enableDisableChecks:[]}
,{
type:_GROUP_,numCols:6,colSpan:2,label:"   ",labelLocation:_LEFT_,visibilityChecks:[],items:[{
type:_OUTPUT_,label:null,labelLocation:_NONE_,value:" ",width:"35px"}
,{
type:_OUTPUT_,label:null,labelLocation:_NONE_,value:com_zimbra_bulkprovision.LDAP_GALServerName,width:"200px"}
,{
type:_OUTPUT_,label:null,labelLocation:_NONE_,value:" ",width:"5px"}
,{
type:_OUTPUT_,label:null,labelLocation:_NONE_,value:com_zimbra_bulkprovision.LDAP_GALServerPort,width:"40px"}
,{
type:_OUTPUT_,label:null,labelLocation:_NONE_,value:com_zimbra_bulkprovision.LDAP_GALUseSSL,width:"*"}
]}
,{
ref:ZaBulkProvision.A2_GalLdapURL,type:_LDAPURL_,label:com_zimbra_bulkprovision.LDAPUrl,ldapSSLPort:"3269",ldapPort:"3268",labelLocation:_LEFT_,visibilityChecks:[[XForm.checkInstanceValue,ZaBulkProvision.A2_provAction,ZaBulkProvision.ACTION_IMPORT_AD]],enableDisableChecks:[],visibilityChangeEventSources:[ZaBulkProvision.A2_provAction]}
,{
ref:ZaBulkProvision.A2_GalLdapURL,type:_LDAPURL_,label:com_zimbra_bulkprovision.LDAPUrl,ldapSSLPort:"636",ldapPort:"389",labelLocation:_LEFT_,visibilityChecks:[[XForm.checkInstanceValue,ZaBulkProvision.A2_provAction,ZaBulkProvision.ACTION_IMPORT_LDAP]],enableDisableChecks:[],visibilityChangeEventSources:[ZaBulkProvision.A2_provAction]}
,{
ref:ZaBulkProvision.A2_GalLdapURL,type:_LDAPURL_,label:com_zimbra_bulkprovision.LDAPUrl,ldapSSLPort:"636",ldapPort:"389",labelLocation:_LEFT_,visibilityChecks:[[XForm.checkInstanceValue,ZaBulkProvision.A2_provAction,ZaBulkProvision.ACTION_IMPORT_ZIMBRA]],enableDisableChecks:[],visibilityChangeEventSources:[ZaBulkProvision.A2_provAction]}
,{
ref:ZaBulkProvision.A2_GalLdapBindDn,type:_TEXTFIELD_,width:"380px",label:ZaMsg.Domain_GalLdapBindDn,labelLocation:_LEFT_,enableDisableChecks:[],visibilityChecks:[],bmolsnr:true}
,{
ref:ZaBulkProvision.A2_GalLdapBindPassword,type:_SECRET_,label:ZaMsg.Domain_GalLdapBindPassword,labelLocation:_LEFT_,enableDisableChecks:[],visibilityChecks:[]}
,{
ref:ZaBulkProvision.A2_GalLdapFilter,type:_TEXTAREA_,width:380,height:40,label:ZaMsg.Domain_GalLdapFilter,labelLocation:_LEFT_,enableDisableChecks:[],visibilityChecks:[]}
,{
ref:ZaBulkProvision.A2_GalLdapSearchBase,type:_TEXTAREA_,width:380,height:40,label:ZaMsg.Domain_GalLdapSearchBase,labelLocation:_LEFT_,enableDisableChecks:[],visibilityChecks:[],bmolsnr:true}
]};
u.push(l);
var c={
type:_CASE_,numCols:2,colSizes:["250px","380px"],tabGroupKey:ZaBulkImportXWizard.STEP_FILE_UPLOAD,caseKey:ZaBulkImportXWizard.STEP_FILE_UPLOAD,items:[{
type:_OUTPUT_,value:ZaBulkImportXWizard.getUploadFormHtml(),colSpan:2}
]};
u.push(c);
var t={
type:_CASE_,numCols:2,colSizes:["200px","*"],caseKey:ZaBulkImportXWizard.STEP_REVIEW,items:[{
type:_DWT_ALERT_,style:DwtAlert.INFO,iconVisible:false,content:com_zimbra_bulkprovision.AccountImportReviewNote,visibilityChecks:[],enableDisableChecks:[]}
,{
type:_OUTPUT_,ref:ZaBulkProvision.A2_domainCount,label:com_zimbra_bulkprovision.ReviewDomainCount,bmolsnr:true}
,{
type:_OUTPUT_,ref:ZaBulkProvision.A2_skippedDomainCount,label:com_zimbra_bulkprovision.ReviewSkippedDomainCount,bmolsnr:true}
,{
type:_OUTPUT_,ref:ZaBulkProvision.A2_totalCount,label:com_zimbra_bulkprovision.ReviewAccountCount,bmolsnr:true}
,{
type:_OUTPUT_,ref:ZaBulkProvision.A2_skippedAccountCount,label:com_zimbra_bulkprovision.ReviewSkippedAccountCount,bmolsnr:true}
,{
ref:ZaBulkProvision.A2_generatePassword,type:_OUTPUT_,label:com_zimbra_bulkprovision.RevGenerateRandomPassword,visibilityChecks:[],enableDisableChecks:[],getDisplayValue:function(m){
return m=="TRUE"?ZaMsg.Yes:ZaMsg.No
}}
,{
type:_OUTPUT_,ref:ZaBulkProvision.A2_genPasswordLength,label:com_zimbra_bulkprovision.GeneratedPasswordLength,visibilityChecks:[],enableDisableChangeEventSources:[ZaBulkProvision.A2_generatePassword],enableDisableChecks:[[XForm.checkInstanceValue,ZaBulkProvision.A2_generatePassword,"TRUE"]]}
,{
ref:ZaBulkProvision.A_mustChangePassword,type:_OUTPUT_,label:com_zimbra_bulkprovision.RevRequireChangePassword,visibilityChecks:[],enableDisableChecks:[],getDisplayValue:function(m){
return m=="TRUE"?ZaMsg.Yes:ZaMsg.No
}}
,{
ref:ZaBulkProvision.A2_SMTPHost,type:_OUTPUT_,label:com_zimbra_bulkprovision.SMTPHost,visibilityChangeEventSources:[ZaBulkProvision.A2_SMTPHost],visibilityChecks:[[XForm.checkInstanceValueNotEmty,ZaBulkProvision.A2_SMTPHost]],bmolsnr:true}
,{
ref:ZaBulkProvision.A2_SMTPPort,type:_OUTPUT_,label:com_zimbra_bulkprovision.SMTPPort,visibilityChangeEventSources:[ZaBulkProvision.A2_SMTPPort],visibilityChecks:[[XForm.checkInstanceValueNotEmty,ZaBulkProvision.A2_SMTPPort]],bmolsnr:true}
]};
u.push(t);
var o={
type:_CASE_,numCols:2,colSizes:["250px","*"],tabGroupKey:ZaBulkImportXWizard.STEP_PROVISION,caseKey:ZaBulkImportXWizard.STEP_PROVISION,items:[{
type:_OUTPUT_,ref:ZaBulkProvision.A2_status,label:com_zimbra_bulkprovision.ProcessStatus,getDisplayValue:function(m){
return ZaBulkImportXWizard.STATUS_LABELS[m]
}
,bmolsnr:true}
,{
type:_OUTPUT_,ref:ZaBulkProvision.A2_totalCount,label:com_zimbra_bulkprovision.TotalAccounts,bmolsnr:true}
,{
type:_OUTPUT_,ref:ZaBulkProvision.A2_provisionedCount,label:com_zimbra_bulkprovision.ProvisionedAccounts,bmolsnr:true}
,{
type:_OUTPUT_,ref:ZaBulkProvision.A2_skippedCount,label:com_zimbra_bulkprovision.Skipped,bmolsnr:true}
,{
type:_OUTPUT_,ref:ZaBulkProvision.A2_errorCount,label:com_zimbra_bulkprovision.FailedAccounts,bmolsnr:true}
,{
type:_OUTPUT_,ref:ZaBulkProvision.A2_progress,label:com_zimbra_bulkprovision.Progress,bmolsnr:true}
,{
type:_DWT_ALERT_,style:DwtAlert.WARNING,iconVisible:false,content:com_zimbra_bulkprovision.ProvisioningStatusNote,visibilityChecks:[ZaBulkImportXWizard.isProvisioningNoteVisible],visibilityChangeEventSources:[ZaBulkProvision.A2_status],enableDisableChecks:[],colSpan:2}
,{
type:_DWT_ALERT_,style:DwtAlert.INFO,iconVisible:false,content:com_zimbra_bulkprovision.ProvisioningSuccessReportsNote,visibilityChangeEventSources:[ZaBulkProvision.A2_status,ZaBulkProvision.A2_provisionedCount],visibilityChecks:[[XForm.checkInstanceValue,ZaBulkProvision.A2_status,ZaBulkProvision.iSTATUS_FINISHED],[XForm.checkInstanceValueNot,ZaBulkProvision.A2_provisionedCount,0]],colSpan:2}
,{
type:_DWT_ALERT_,style:DwtAlert.CRITICAL,iconVisible:false,content:com_zimbra_bulkprovision.ProvisioningFailedReportsNote,visibilityChangeEventSources:[ZaBulkProvision.A2_status],visibilityChecks:[[XForm.checkInstanceValue,ZaBulkProvision.A2_status,ZaBulkProvision.iSTATUS_ERROR]],colSpan:2}
,{
type:_DWT_ALERT_,style:DwtAlert.WARNING,iconVisible:false,content:com_zimbra_bulkprovision.ProvisioningWithErrorsReportsNote,visibilityChangeEventSources:[ZaBulkProvision.A2_status,ZaBulkProvision.A2_errorCount],visibilityChecks:[[XForm.checkInstanceValue,ZaBulkProvision.A2_status,ZaBulkProvision.iSTATUS_FINISHED],[XForm.checkInstanceValueNot,ZaBulkProvision.A2_errorCount,0]],colSpan:2}
,{
type:_DWT_ALERT_,style:DwtAlert.WARNING,iconVisible:false,content:com_zimbra_bulkprovision.ProvisioningAbortedReportsNote,visibilityChangeEventSources:[ZaBulkProvision.A2_status],visibilityChecks:[[XForm.checkInstanceValue,ZaBulkProvision.A2_status,ZaBulkProvision.iSTATUS_ABORTED]],colSpan:2}
,{
type:_DATA_URL_,labelLocation:_NONE_,label:com_zimbra_bulkprovision.DownloadSuccessReportLink,ref:ZaBulkProvision.A2_completedAccountsFileLink,bmolsnr:true,visibilityChangeEventSources:[ZaBulkProvision.A2_completedAccountsFileLink,ZaBulkProvision.A2_provisionedCount],visibilityChecks:[[XForm.checkInstanceValueNotEmty,ZaBulkProvision.A2_completedAccountsFileLink],[XForm.checkInstanceValueNot,ZaBulkProvision.A2_provisionedCount,0]]}
,{
type:_DATA_URL_,labelLocation:_NONE_,label:com_zimbra_bulkprovision.DownloadErrorReportLink,ref:ZaBulkProvision.A2_failedAccountsFileLink,bmolsnr:true,visibilityChangeEventSources:[ZaBulkProvision.A2_failedAccountsFileLink],visibilityChecks:[[XForm.checkInstanceValueNotEmty,ZaBulkProvision.A2_failedAccountsFileLink]]}
]};
u.push(o);
var s=620;
r.items=[{
type:_OUTPUT_,colSpan:2,align:_CENTER_,valign:_TOP_,ref:ZaModel.currentStep,choices:this.stepChoices,valueChangeEventSources:[ZaModel.currentStep]}
,{
type:_SEPARATOR_,align:_CENTER_,valign:_TOP_}
,{
type:_SPACER_,align:_CENTER_,valign:_TOP_}
,{
type:_SWITCH_,width:s,align:_LEFT_,valign:_TOP_,items:u}
]
};
ZaXDialog.XFormModifiers.ZaBulkImportXWizard.push(ZaBulkImportXWizard.myXFormModifier);
ZaBulkImportXWizard.downloadBPStatus=function(){
var t=this.getForm();
var e=t.getInstance();
return
};
function ZaMigrationXWizard(t,o){
var e="650px";
ZaXWizardDialog.call(this,t,null,com_zimbra_bulkprovision.BP_Exch_Mig_Wiz_Title,e,(AjxEnv.isIE?"330px":"320px"),"ZaMigrationXWizard");
this.stepChoices=[{
label:com_zimbra_bulkprovision.MIG_Wizard_overview,value:ZaMigrationXWizard.STEP_INTRODUCTION}
,{
label:com_zimbra_bulkprovision.MIG_Wizard_migrationOptions,value:ZaMigrationXWizard.STEP_PROV_OPTIONS}
,{
label:com_zimbra_bulkprovision.MIG_Wizard_mailServerInfo,value:ZaMigrationXWizard.STEP_EXCHANGE_INFO}
,{
label:com_zimbra_bulkprovision.MIG_Wizard_ADOptions,value:ZaMigrationXWizard.STEP_LDAP_INFO}
,{
label:com_zimbra_bulkprovision.MIG_Wizard_review,value:ZaMigrationXWizard.STEP_REVIEW}
,{
label:com_zimbra_bulkprovision.BP_Wizard_download,value:ZaMigrationXWizard.STEP_DOWNLOAD_FILE}
];
this.initForm(ZaBulkProvision.getMyXModel(),this.getMyXForm(o),null);
this._helpURL=[location.pathname,ZaUtil.HELP_URL,ZaMigrationXWizard.helpURL,"?locid=",AjxEnv.DEFAULT_LOCALE].join("")
}
ZaMigrationXWizard.STEP_INDEX=1;
ZaMigrationXWizard.STEP_INTRODUCTION=ZaMigrationXWizard.STEP_INDEX++;
ZaMigrationXWizard.STEP_PROV_OPTIONS=ZaMigrationXWizard.STEP_INDEX++;
ZaMigrationXWizard.STEP_EXCHANGE_INFO=ZaMigrationXWizard.STEP_INDEX++;
ZaMigrationXWizard.STEP_LDAP_INFO=ZaMigrationXWizard.STEP_INDEX++;
ZaMigrationXWizard.STEP_REVIEW=ZaMigrationXWizard.STEP_INDEX++;
ZaMigrationXWizard.STEP_DOWNLOAD_FILE=ZaMigrationXWizard.STEP_INDEX++;
ZaMigrationXWizard.prototype=new ZaXWizardDialog;
ZaMigrationXWizard.prototype.constructor=ZaMigrationXWizard;
ZaMigrationXWizard.prototype.cacheDialog=false;
ZaMigrationXWizard.prototype.miniType=2;
ZaXDialog.XFormModifiers.ZaMigrationXWizard=new Array();
ZaMigrationXWizard.helpURL="appliance/zap_migrating_multiple_accounts.htm";
ZaMigrationXWizard.prototype.getCacheName=function(){
return"migrationWizard"
};
ZaMigrationXWizard.prototype.generateBulkFileCallback=function(n,o){
try{
if(o&&o.isException()){
this._button[DwtWizardDialog.NEXT_BUTTON].setEnabled(true);
ZaApp.getInstance().getCurrentController()._handleException(o.getException(),"ZaMigrationXWizard.prototype.generateBulkFileCallback")
}else{
var e=o.getResponse().Body.GenerateBulkProvisionFileFromLDAPResponse;
if(e.fileToken&&e.fileToken[0]&&e.fileToken[0]._content){
this._localXForm.setInstanceValue(AjxMessageFormat.format("{0}//{1}:{2}/service/extension/com_zimbra_bulkprovision/bulkdownload?fileID={3}&fileFormat={4}",[location.protocol,location.hostname,location.port,e.fileToken[0]._content,ZaBulkProvision.FILE_FORMAT_MIGRATION_XML]),ZaBulkProvision.A2_generatedFileLink);
this.goPage(ZaMigrationXWizard.STEP_DOWNLOAD_FILE);
this._button[DwtWizardDialog.FINISH_BUTTON].setEnabled(true);
this._button[DwtWizardDialog.NEXT_BUTTON].setEnabled(false);
this._button[DwtDialog.CANCEL_BUTTON].setEnabled(false)
}}}
catch(t){
ZaApp.getInstance().getCurrentController()._handleException(t,"ZaMigrationXWizard.prototype.generateBulkFileCallback")
}
this._button[DwtWizardDialog.PREV_BUTTON].setEnabled(true)
};
ZaMigrationXWizard.prototype.previewCallback=function(c,l){
try{
if(l&&l.isException()){
throw (l.getException())
}else{
var t=l.getResponse().Body.GenerateBulkProvisionFileFromLDAPResponse;
var r="0";
var s="0";
var e="0";
var n="0";
if(t[ZaBulkProvision.A2_domainCount]&&t[ZaBulkProvision.A2_domainCount][0]&&t[ZaBulkProvision.A2_domainCount][0]._content){
s=parseInt(t[ZaBulkProvision.A2_domainCount][0]._content)
}
if(t[ZaBulkProvision.A2_skippedDomainCount]&&t[ZaBulkProvision.A2_skippedDomainCount][0]&&t[ZaBulkProvision.A2_skippedDomainCount][0]._content){
e=parseInt(t[ZaBulkProvision.A2_skippedDomainCount][0]._content)
}
if(t[ZaBulkProvision.A2_totalCount]&&t[ZaBulkProvision.A2_totalCount][0]&&t[ZaBulkProvision.A2_totalCount][0]._content){
totalCount=parseInt(t[ZaBulkProvision.A2_totalCount][0]._content)
}
if(t[ZaBulkProvision.A2_skippedAccountCount]&&t[ZaBulkProvision.A2_skippedAccountCount][0]&&t[ZaBulkProvision.A2_skippedAccountCount][0]._content){
n=parseInt(t[ZaBulkProvision.A2_skippedAccountCount][0]._content)
}
this.goPage(ZaMigrationXWizard.STEP_REVIEW);
this._button[DwtWizardDialog.FINISH_BUTTON].setEnabled(false);
this._button[DwtWizardDialog.NEXT_BUTTON].setEnabled(true);
this._button[DwtWizardDialog.PREV_BUTTON].setEnabled(true);
this._button[DwtDialog.CANCEL_BUTTON].setEnabled(true);
this._localXForm.setInstanceValue(s,ZaBulkProvision.A2_domainCount);
this._localXForm.setInstanceValue(e,ZaBulkProvision.A2_skippedDomainCount);
this._localXForm.setInstanceValue(totalCount,ZaBulkProvision.A2_totalCount);
this._localXForm.setInstanceValue(n,ZaBulkProvision.A2_skippedAccountCount)
}}
catch(o){
if(o.code==ZaBulkProvision.BP_INVALID_SEARCH_FILTER){
ZaApp.getInstance().getCurrentController().popupErrorDialog(AjxMessageFormat.format(com_zimbra_bulkprovision.ERROR_INVALID_SEARCH_FILTER,[o.msg]),o)
}else{
if(o.code==ZaBulkProvision.BP_NAMING_EXCEPTION){
ZaApp.getInstance().getCurrentController().popupErrorDialog(AjxMessageFormat.format(com_zimbra_bulkprovision.BP_NAMING_EXCEPTION,[o.msg]),o)
}else{
ZaApp.getInstance().getCurrentController()._handleException(o,"ZaMigrationXWizard.prototype.previewCallback")
}}
this._button[DwtWizardDialog.FINISH_BUTTON].setEnabled(false);
this._button[DwtWizardDialog.NEXT_BUTTON].setEnabled(true);
this._button[DwtWizardDialog.PREV_BUTTON].setEnabled(true);
this._button[DwtDialog.CANCEL_BUTTON].setEnabled(true)
}};
ZaMigrationXWizard.prototype.popup=function(e){
ZaXWizardDialog.prototype.popup.call(this,e);
if(this.prevCallback){
this._button[DwtWizardDialog.PREV_BUTTON].setEnabled(true)
}else{
this._button[DwtWizardDialog.PREV_BUTTON].setEnabled(false)
}
this._button[DwtWizardDialog.FINISH_BUTTON].setEnabled(false)
};
ZaMigrationXWizard.prototype.handleXFormChange=function(){
var e=this._containedObject[ZaModel.currentStep];
if(e!=ZaMigrationXWizard.STEP_INTRODUCTION){
this._button[DwtWizardDialog.FINISH_BUTTON].setEnabled(false);
this._button[DwtWizardDialog.NEXT_BUTTON].setEnabled(true);
this._button[DwtWizardDialog.PREV_BUTTON].setEnabled(true);
this._button[DwtDialog.CANCEL_BUTTON].setEnabled(true)
}
if(e==ZaMigrationXWizard.STEP_DOWNLOAD_FILE){
this._button[DwtWizardDialog.FINISH_BUTTON].setEnabled(true);
this._button[DwtWizardDialog.NEXT_BUTTON].setEnabled(false);
this._button[DwtDialog.CANCEL_BUTTON].setEnabled(false)
}};
ZaMigrationXWizard.prototype.goNext=function(){
var e=this._containedObject[ZaModel.currentStep];
if(e==ZaMigrationXWizard.STEP_INTRODUCTION){
this._button[DwtWizardDialog.PREV_BUTTON].setEnabled(true);
this._button[DwtWizardDialog.FINISH_BUTTON].setEnabled(false);
this._button[DwtDialog.CANCEL_BUTTON].setEnabled(true);
if(this._containedObject[ZaBulkProvision.A2_provAction]==ZaBulkProvision.ACTION_IMPORT_CSV||this._containedObject[ZaBulkProvision.A2_provAction]==ZaBulkProvision.ACTION_IMPORT_XML){
this.goPage(ZaMigrationXWizard.STEP_UPLOAD_FILE)
}else{
this.goPage(ZaMigrationXWizard.STEP_PROV_OPTIONS)
}}else{
if(e==ZaMigrationXWizard.STEP_PROV_OPTIONS){
this._button[DwtWizardDialog.PREV_BUTTON].setEnabled(true);
if(this._containedObject[ZaBulkProvision.A2_generatePassword]=="FALSE"){
if(this._containedObject[ZaBulkProvision.A2_confirmPassword]!=this._containedObject[ZaBulkProvision.A2_password]){
ZaApp.getInstance().getCurrentController().popupErrorDialog(com_zimbra_bulkprovision.ERROR_PASSWORDS_DONT_MATCH);
return
}}
if(this._containedObject[ZaBulkProvision.A2_provAction]==ZaBulkProvision.ACTION_GENERATE_MIG_XML){
this.goPage(ZaMigrationXWizard.STEP_EXCHANGE_INFO)
}else{
this.goPage(ZaMigrationXWizard.STEP_LDAP_INFO)
}
this._button[DwtWizardDialog.FINISH_BUTTON].setEnabled(false);
this._button[DwtWizardDialog.NEXT_BUTTON].setEnabled(true);
this._button[DwtWizardDialog.PREV_BUTTON].setEnabled(true);
this._button[DwtDialog.CANCEL_BUTTON].setEnabled(true)
}else{
if(e==ZaMigrationXWizard.STEP_EXCHANGE_INFO){
this._button[DwtWizardDialog.PREV_BUTTON].setEnabled(true);
if(this._containedObject[ZaBulkProvision.A2_ZimbraAdminPassword]!=this._containedObject[ZaBulkProvision.A2_ZimbraAdminPasswordConfirm]){
ZaApp.getInstance().getCurrentController().popupErrorDialog(com_zimbra_bulkprovision.ERROR_PASSWORDS_DONT_MATCH);
return
}
if(!this._containedObject[ZaBulkProvision.A2_TargetDomainName]){
ZaApp.getInstance().getCurrentController().popupErrorDialog(com_zimbra_bulkprovision.MUST_SELECT_TARGET_DOMAIN);
return
}
if(!this._containedObject[ZaBulkProvision.A2_GalLdapSearchBase]&&typeof this._containedObject[ZaBulkProvision.A2_TargetDomainName]=="string"){
var o="cn=Users,dc="+this._containedObject[ZaBulkProvision.A2_TargetDomainName].replace(".",",dc=");
this._localXForm.setInstanceValue(o,ZaBulkProvision.A2_GalLdapSearchBase)
}
if(!this._containedObject[ZaBulkProvision.A2_GalLdapBindDn]&&typeof this._containedObject[ZaBulkProvision.A2_TargetDomainName]=="string"){
var t="cn=administrator,cn=Users,dc="+this._containedObject[ZaBulkProvision.A2_TargetDomainName].replace(".",",dc=");
this._localXForm.setInstanceValue(t,ZaBulkProvision.A2_GalLdapBindDn)
}
this.goPage(ZaMigrationXWizard.STEP_LDAP_INFO);
this._button[DwtDialog.CANCEL_BUTTON].setEnabled(true);
this._button[DwtWizardDialog.FINISH_BUTTON].setEnabled(false);
this._button[DwtWizardDialog.NEXT_BUTTON].setEnabled(true)
}else{
if(e==ZaMigrationXWizard.STEP_LDAP_INFO){
if(AjxUtil.isEmpty(this._containedObject[ZaBulkProvision.A2_GalLdapURL])){
ZaApp.getInstance().getCurrentController().popupErrorDialog(com_zimbra_bulkprovision.ERROR_LDAP_URL_REQUIRED);
return
}
if(AjxUtil.isEmpty(this._containedObject[ZaBulkProvision.A2_GalLdapBindDn])){
ZaApp.getInstance().getCurrentController().popupErrorDialog(com_zimbra_bulkprovision.ERROR_BIND_DN_REQUIRED);
return
}
if(AjxUtil.isEmpty(this._containedObject[ZaBulkProvision.A2_GalLdapFilter])){
ZaApp.getInstance().getCurrentController().popupErrorDialog(com_zimbra_bulkprovision.ERROR_LDAP_FILTER_REQUIRED);
return
}
if(AjxUtil.isEmpty(this._containedObject[ZaBulkProvision.A2_GalLdapSearchBase])){
ZaApp.getInstance().getCurrentController().popupErrorDialog(com_zimbra_bulkprovision.ERROR_LDAP_BASE_REQUIRED);
return
}
this._button[DwtWizardDialog.FINISH_BUTTON].setEnabled(false);
this._button[DwtWizardDialog.NEXT_BUTTON].setEnabled(false);
this._button[DwtWizardDialog.PREV_BUTTON].setEnabled(false);
this._button[DwtDialog.CANCEL_BUTTON].setEnabled(true);
var n=new AjxCallback(this,ZaMigrationXWizard.prototype.previewCallback,{}
);
ZaBulkProvision.generateBulkProvisionPreview(this._containedObject,n)
}else{
if(e==ZaMigrationXWizard.STEP_REVIEW){
this._button[DwtWizardDialog.FINISH_BUTTON].setEnabled(false);
this._button[DwtWizardDialog.NEXT_BUTTON].setEnabled(false);
this._button[DwtWizardDialog.PREV_BUTTON].setEnabled(false);
this._button[DwtDialog.CANCEL_BUTTON].setEnabled(true);
var n=new AjxCallback(this,ZaMigrationXWizard.prototype.generateBulkFileCallback,{
action:this._containedObject[ZaBulkProvision.A2_provAction]}
);
ZaBulkProvision.generateBulkProvisionFile(this._containedObject,n)
}}}}}};
ZaMigrationXWizard.prototype.goPrev=function(){
var t=this._containedObject[ZaModel.currentStep];
var e;
if(t==ZaMigrationXWizard.STEP_PROV_OPTIONS){
this._button[DwtWizardDialog.NEXT_BUTTON].setEnabled(true);
if(!this.prevCallback){
this._button[DwtWizardDialog.PREV_BUTTON].setEnabled(false)
}
e=ZaMigrationXWizard.STEP_INTRODUCTION
}else{
if(t==ZaMigrationXWizard.STEP_LDAP_INFO){
e=ZaMigrationXWizard.STEP_EXCHANGE_INFO;
this._button[DwtWizardDialog.NEXT_BUTTON].setEnabled(true)
}else{
if(t==ZaMigrationXWizard.STEP_EXCHANGE_INFO){
e=ZaMigrationXWizard.STEP_PROV_OPTIONS;
this._button[DwtWizardDialog.NEXT_BUTTON].setEnabled(true)
}else{
if(t==ZaMigrationXWizard.STEP_DOWNLOAD_FILE){
e=ZaMigrationXWizard.STEP_REVIEW;
this._button[DwtWizardDialog.NEXT_BUTTON].setEnabled(true)
}else{
if(t==ZaMigrationXWizard.STEP_REVIEW){
e=ZaMigrationXWizard.STEP_LDAP_INFO;
this._button[DwtWizardDialog.NEXT_BUTTON].setEnabled(true)
}else{
if(this.prevCallback&&t==ZaMigrationXWizard.STEP_INTRODUCTION){
this.prevCallback.run(this._containedObject);
return
}}}}}}
this._button[DwtWizardDialog.FINISH_BUTTON].setEnabled(false);
this._button[DwtDialog.CANCEL_BUTTON].setEnabled(true);
this.goPage(e)
};
ZaMigrationXWizard.prototype.setObject=function(e){
this._containedObject=new ZaBulkProvision();
this._containedObject=e;
this._containedObject[ZaModel.currentStep]=e[ZaModel.currentStep]||ZaMigrationXWizard.STEP_INTRODUCTION;
this._containedObject[ZaBulkProvision.A_mustChangePassword]=e[ZaBulkProvision.A_mustChangePassword]||"TRUE";
this._containedObject._uuid=e._uuid||ZaUtil.getItemUUid();
this.prevCallback=e.prevCallback;
this._localXForm.setInstance(this._containedObject)
};
ZaMigrationXWizard.myXFormModifier=function(n,c){
var u=new Array();
var r={
type:_CASE_,numCols:1,tabGroupKey:ZaMigrationXWizard.STEP_INTRODUCTION,caseKey:ZaMigrationXWizard.STEP_INTRODUCTION,items:[{
type:_DWT_ALERT_,style:DwtAlert.INFO,iconVisible:false,content:com_zimbra_bulkprovision.ExchMigrationWizardIntro,visibilityChecks:[],enableDisableChecks:[]}
]};
u.push(r);
var t={
type:_CASE_,numCols:2,colSizes:["250px","*"],tabGroupKey:ZaMigrationXWizard.STEP_PROV_OPTIONS,caseKey:ZaMigrationXWizard.STEP_PROV_OPTIONS,items:[{
type:_DWT_ALERT_,style:DwtAlert.INFO,iconVisible:false,content:com_zimbra_bulkprovision.ProvOptionsNote,visibilityChecks:[],enableDisableChecks:[]}
,{
type:_RADIO_,groupname:"account_password_option",ref:ZaBulkProvision.A2_generatePassword,labelLocation:_RIGHT_,label:com_zimbra_bulkprovision.GenerateRandomPassword,bmolsnr:true,updateElement:function(m){
this.getElement().checked=(m=="TRUE")
}
,elementChanged:function(p,f,m){
this.setInstanceValue("TRUE",ZaBulkProvision.A2_generatePassword)
}
,visibilityChecks:[],enableDisableChecks:[]}
,{
type:_TEXTFIELD_,ref:ZaBulkProvision.A2_genPasswordLength,label:com_zimbra_bulkprovision.GeneratedPasswordLength,visibilityChecks:[],enableDisableChangeEventSources:[ZaBulkProvision.A2_generatePassword],enableDisableChecks:[[XForm.checkInstanceValue,ZaBulkProvision.A2_generatePassword,"TRUE"]],cssClass:"admin_xform_number_input"}
,{
type:_RADIO_,groupname:"account_password_option",ref:ZaBulkProvision.A2_generatePassword,bmolsnr:true,labelLocation:_RIGHT_,label:com_zimbra_bulkprovision.UseSamePassword,updateElement:function(m){
this.getElement().checked=(m=="FALSE")
}
,elementChanged:function(p,f,m){
this.setInstanceValue("FALSE",ZaBulkProvision.A2_generatePassword)
}
,visibilityChecks:[],enableDisableChecks:[]}
,{
ref:ZaBulkProvision.A2_password,type:_SECRET_,label:com_zimbra_bulkprovision.PasswordToUse,labelLocation:_LEFT_,cssClass:"admin_xform_name_input",visibilityChecks:[],enableDisableChangeEventSources:[ZaBulkProvision.A2_generatePassword],enableDisableChecks:[[XForm.checkInstanceValue,ZaBulkProvision.A2_generatePassword,"FALSE"]]}
,{
ref:ZaBulkProvision.A2_confirmPassword,type:_SECRET_,label:com_zimbra_bulkprovision.PasswordToUseConfirm,labelLocation:_LEFT_,cssClass:"admin_xform_name_input",visibilityChecks:[],enableDisableChangeEventSources:[ZaBulkProvision.A2_generatePassword],enableDisableChecks:[[XForm.checkInstanceValue,ZaBulkProvision.A2_generatePassword,"FALSE"]]}
,{
ref:ZaBulkProvision.A_mustChangePassword,type:_WIZ_CHECKBOX_,label:com_zimbra_bulkprovision.RequireChangePassword,trueValue:"TRUE",falseValue:"FALSE",visibilityChecks:[],enableDisableChecks:[]}
,{
ref:ZaBulkProvision.A2_provisionUsers,type:_WIZ_CHECKBOX_,label:com_zimbra_bulkprovision.A2_provisionUsers,trueValue:"TRUE",falseValue:"FALSE",visibilityChecks:[],enableDisableChecks:[]}
,{
ref:ZaBulkProvision.A2_importMails,type:_WIZ_CHECKBOX_,label:com_zimbra_bulkprovision.MigImportMails,trueValue:"TRUE",falseValue:"FALSE",visibilityChecks:[],enableDisableChecks:[]}
,{
ref:ZaBulkProvision.A2_importContacts,type:_WIZ_CHECKBOX_,label:com_zimbra_bulkprovision.MigImportContacts,trueValue:"TRUE",falseValue:"FALSE",visibilityChecks:[],enableDisableChecks:[]}
,{
ref:ZaBulkProvision.A2_importTasks,type:_WIZ_CHECKBOX_,label:com_zimbra_bulkprovision.MigImportTasks,trueValue:"TRUE",falseValue:"FALSE",visibilityChecks:[],enableDisableChecks:[]}
,{
ref:ZaBulkProvision.A2_importCalendar,type:_WIZ_CHECKBOX_,label:com_zimbra_bulkprovision.MigImportCalendar,trueValue:"TRUE",falseValue:"FALSE",visibilityChecks:[],enableDisableChecks:[]}
,{
ref:ZaBulkProvision.A2_importDeletedItems,type:_WIZ_CHECKBOX_,label:com_zimbra_bulkprovision.MigImportDeletedItems,trueValue:"TRUE",falseValue:"FALSE",visibilityChecks:[],enableDisableChecks:[]}
,{
ref:ZaBulkProvision.A2_importJunk,type:_WIZ_CHECKBOX_,label:com_zimbra_bulkprovision.MigImportJunk,trueValue:"TRUE",falseValue:"FALSE",visibilityChecks:[],enableDisableChecks:[]}
,{
ref:ZaBulkProvision.A2_ignorePreviouslyImported,type:_WIZ_CHECKBOX_,label:com_zimbra_bulkprovision.MigIgnorePreviouslyImported,trueValue:"TRUE",falseValue:"FALSE",visibilityChecks:[],enableDisableChecks:[]}
,{
ref:ZaBulkProvision.A2_InvalidSSLOk,type:_WIZ_CHECKBOX_,label:com_zimbra_bulkprovision.MigInvalidSSLOk,trueValue:"TRUE",falseValue:"FALSE",visibilityChecks:[],enableDisableChecks:[]}
]};
u.push(t);
var l={
type:_CASE_,numCols:2,colSizes:["250px","*"],tabGroupKey:ZaMigrationXWizard.STEP_EXCHANGE_INFO,caseKey:ZaMigrationXWizard.STEP_EXCHANGE_INFO,items:[{
ref:ZaBulkProvision.A2_TargetDomainName,type:_TEXTFIELD_,label:com_zimbra_bulkprovision.TargetDomainName,toolTipContent:ZaMsg.tt_StartTypingDomainName,visibilityChecks:[],visibilityChangeEventSources:[],enableDisableChecks:[]}
,{
type:_DWT_ALERT_,style:DwtAlert.INFO,iconVisible:false,content:com_zimbra_bulkprovision.ZimbraAdminPasswordNote,visibilityChecks:[],enableDisableChecks:[],colSpan:2}
,{
ref:ZaBulkProvision.A2_ZimbraAdminLogin,type:_OUTPUT_,label:com_zimbra_bulkprovision.A2_ZimbraAdminLogin,labelLocation:_LEFT_,enableDisableChecks:[],visibilityChecks:[]}
,{
ref:ZaBulkProvision.A2_ZimbraAdminPassword,type:_SECRET_,label:com_zimbra_bulkprovision.A2_ZimbraAdminPassword,labelLocation:_LEFT_,enableDisableChecks:[],visibilityChecks:[]}
,{
ref:ZaBulkProvision.A2_ZimbraAdminPasswordConfirm,type:_SECRET_,label:com_zimbra_bulkprovision.A2_ZimbraAdminPasswordConfirm,labelLocation:_LEFT_,enableDisableChecks:[],visibilityChecks:[]}
,{
type:_DWT_ALERT_,style:DwtAlert.INFO,iconVisible:false,content:com_zimbra_bulkprovision.MAPIINfoNote,visibilityChecks:[],enableDisableChecks:[],colSpan:2}
,{
ref:ZaBulkProvision.A2_MapiProfile,type:_TEXTFIELD_,label:com_zimbra_bulkprovision.A2_MapiProfile,labelLocation:_LEFT_,enableDisableChecks:[],visibilityChecks:[]}
,{
ref:ZaBulkProvision.A2_MapiServer,type:_TEXTFIELD_,label:com_zimbra_bulkprovision.A2_MapiServer,labelLocation:_LEFT_,enableDisableChecks:[],visibilityChecks:[]}
,{
ref:ZaBulkProvision.A2_MapiLogonUserDN,type:_TEXTFIELD_,width:"380px",label:com_zimbra_bulkprovision.A2_MapiLogonUserDN,labelLocation:_LEFT_,enableDisableChecks:[],visibilityChecks:[]}
]};
u.push(l);
var s={
type:_CASE_,numCols:2,colSizes:["250px","380px"],tabGroupKey:ZaMigrationXWizard.STEP_LDAP_INFO,caseKey:ZaMigrationXWizard.STEP_LDAP_INFO,items:[{
type:_DWT_ALERT_,style:DwtAlert.INFO,iconVisible:false,content:com_zimbra_bulkprovision.ADInfoStepNote,colSpan:2}
,{
ref:ZaBulkProvision.A2_maxResults,type:_TEXTFIELD_,cssClass:"admin_xform_number_input",label:com_zimbra_bulkprovision.LDAPMaxResults,labelLocation:_LEFT_,labelWrap:true,visibilityChecks:[],enableDisableChecks:[]}
,{
type:_GROUP_,numCols:6,colSpan:2,label:"   ",labelLocation:_LEFT_,visibilityChecks:[],items:[{
type:_OUTPUT_,label:null,labelLocation:_NONE_,value:" ",width:"35px"}
,{
type:_OUTPUT_,label:null,labelLocation:_NONE_,value:com_zimbra_bulkprovision.ADServerName,width:"200px"}
,{
type:_OUTPUT_,label:null,labelLocation:_NONE_,value:" ",width:"5px"}
,{
type:_OUTPUT_,label:null,labelLocation:_NONE_,value:com_zimbra_bulkprovision.ADServerPort,width:"40px"}
,{
type:_OUTPUT_,label:null,labelLocation:_NONE_,value:com_zimbra_bulkprovision.ADUseSSL,width:"*"}
]}
,{
ref:ZaBulkProvision.A2_GalLdapURL,type:_LDAPURL_,label:com_zimbra_bulkprovision.LDAPUrl,ldapSSLPort:"3269",ldapPort:"3268",labelLocation:_LEFT_,visibilityChecks:[],enableDisableChecks:[]}
,{
ref:ZaBulkProvision.A2_GalLdapBindDn,type:_TEXTFIELD_,width:"380px",label:ZaMsg.Domain_GalLdapBindDn,labelLocation:_LEFT_,enableDisableChecks:[],visibilityChecks:[],bmolsnr:true}
,{
ref:ZaBulkProvision.A2_GalLdapBindPassword,type:_SECRET_,label:ZaMsg.Domain_GalLdapBindPassword,labelLocation:_LEFT_,enableDisableChecks:[],visibilityChecks:[]}
,{
ref:ZaBulkProvision.A2_GalLdapFilter,type:_TEXTAREA_,width:380,height:40,label:ZaMsg.Domain_GalLdapFilter,labelLocation:_LEFT_,enableDisableChecks:[],visibilityChecks:[]}
,{
ref:ZaBulkProvision.A2_GalLdapSearchBase,type:_TEXTAREA_,width:380,height:40,label:ZaMsg.Domain_GalLdapSearchBase,labelLocation:_LEFT_,enableDisableChecks:[],visibilityChecks:[],bmolsnr:true}
]};
u.push(s);
var e={
type:_CASE_,numCols:2,colSizes:["200px","*"],caseKey:ZaMigrationXWizard.STEP_REVIEW,items:[{
type:_DWT_ALERT_,style:DwtAlert.INFO,iconVisible:false,content:com_zimbra_bulkprovision.ReviewStepNote,visibilityChecks:[],enableDisableChecks:[]}
,{
type:_OUTPUT_,ref:ZaBulkProvision.A2_domainCount,label:com_zimbra_bulkprovision.ReviewDomainCount,bmolsnr:true}
,{
type:_OUTPUT_,ref:ZaBulkProvision.A2_skippedDomainCount,label:com_zimbra_bulkprovision.ReviewSkippedDomainCount,bmolsnr:true}
,{
type:_OUTPUT_,ref:ZaBulkProvision.A2_totalCount,label:com_zimbra_bulkprovision.ReviewAccountCount,bmolsnr:true}
,{
type:_OUTPUT_,ref:ZaBulkProvision.A2_skippedAccountCount,label:com_zimbra_bulkprovision.ReviewSkippedAccountCount,bmolsnr:true}
,{
ref:ZaBulkProvision.A2_TargetDomainName,type:_OUTPUT_,label:com_zimbra_bulkprovision.TargetDomainName,visibilityChecks:[]}
,{
ref:ZaBulkProvision.A2_ZimbraAdminLogin,type:_OUTPUT_,label:com_zimbra_bulkprovision.A2_ZimbraAdminLogin,labelLocation:_LEFT_,enableDisableChecks:[],visibilityChecks:[]}
,{
ref:ZaBulkProvision.A2_generatePassword,type:_OUTPUT_,label:com_zimbra_bulkprovision.RevGenerateRandomPassword,visibilityChecks:[],enableDisableChecks:[],getDisplayValue:function(m){
return m=="TRUE"?ZaMsg.Yes:ZaMsg.No
}}
,{
type:_OUTPUT_,ref:ZaBulkProvision.A2_genPasswordLength,label:com_zimbra_bulkprovision.GeneratedPasswordLength,visibilityChecks:[],enableDisableChangeEventSources:[ZaBulkProvision.A2_generatePassword],enableDisableChecks:[[XForm.checkInstanceValue,ZaBulkProvision.A2_generatePassword,"TRUE"]]}
,{
ref:ZaBulkProvision.A_mustChangePassword,type:_OUTPUT_,label:com_zimbra_bulkprovision.RevRequireChangePassword,visibilityChecks:[],enableDisableChecks:[],getDisplayValue:function(m){
return m=="TRUE"?ZaMsg.Yes:ZaMsg.No
}}
,{
ref:ZaBulkProvision.A2_provisionUsers,type:_OUTPUT_,label:com_zimbra_bulkprovision.RevA2_provisionUsers,visibilityChecks:[],enableDisableChecks:[],getDisplayValue:function(m){
return m=="TRUE"?ZaMsg.Yes:ZaMsg.No
}}
,{
ref:ZaBulkProvision.A2_importMails,type:_OUTPUT_,label:com_zimbra_bulkprovision.RevMigImportMails,trueValue:"TRUE",falseValue:"FALSE",visibilityChecks:[],enableDisableChecks:[],getDisplayValue:function(m){
return m=="TRUE"?ZaMsg.Yes:ZaMsg.No
}}
,{
ref:ZaBulkProvision.A2_importContacts,type:_OUTPUT_,label:com_zimbra_bulkprovision.RevMigImportContacts,trueValue:"TRUE",falseValue:"FALSE",visibilityChecks:[],enableDisableChecks:[],getDisplayValue:function(m){
return m=="TRUE"?ZaMsg.Yes:ZaMsg.No
}}
,{
ref:ZaBulkProvision.A2_importTasks,type:_OUTPUT_,label:com_zimbra_bulkprovision.RevMigImportTasks,trueValue:"TRUE",falseValue:"FALSE",visibilityChecks:[],enableDisableChecks:[],getDisplayValue:function(m){
return m=="TRUE"?ZaMsg.Yes:ZaMsg.No
}}
,{
ref:ZaBulkProvision.A2_importCalendar,type:_OUTPUT_,label:com_zimbra_bulkprovision.RevMigImportCalendar,trueValue:"TRUE",falseValue:"FALSE",visibilityChecks:[],enableDisableChecks:[],getDisplayValue:function(m){
return m=="TRUE"?ZaMsg.Yes:ZaMsg.No
}}
,{
ref:ZaBulkProvision.A2_importDeletedItems,type:_OUTPUT_,label:com_zimbra_bulkprovision.RevMigImportDeletedItems,trueValue:"TRUE",falseValue:"FALSE",visibilityChecks:[],enableDisableChecks:[],getDisplayValue:function(m){
return m=="TRUE"?ZaMsg.Yes:ZaMsg.No
}}
,{
ref:ZaBulkProvision.A2_importJunk,type:_OUTPUT_,label:com_zimbra_bulkprovision.RevMigImportJunk,trueValue:"TRUE",falseValue:"FALSE",visibilityChecks:[],enableDisableChecks:[],getDisplayValue:function(m){
return m=="TRUE"?ZaMsg.Yes:ZaMsg.No
}}
,{
ref:ZaBulkProvision.A2_ignorePreviouslyImported,type:_OUTPUT_,label:com_zimbra_bulkprovision.RevMigIgnorePreviouslyImported,trueValue:"TRUE",falseValue:"FALSE",visibilityChecks:[],enableDisableChecks:[],getDisplayValue:function(m){
return m=="TRUE"?ZaMsg.Yes:ZaMsg.No
}}
,{
ref:ZaBulkProvision.A2_InvalidSSLOk,type:_OUTPUT_,label:com_zimbra_bulkprovision.RevMigInvalidSSLOk,trueValue:"TRUE",falseValue:"FALSE",visibilityChecks:[],enableDisableChecks:[],getDisplayValue:function(m){
return m=="TRUE"?ZaMsg.Yes:ZaMsg.No
}}
]};
u.push(e);
var d={
type:_CASE_,numCols:1,colSizes:["*"],tabGroupKey:ZaMigrationXWizard.STEP_DOWNLOAD_FILE,caseKey:ZaMigrationXWizard.STEP_DOWNLOAD_FILE,items:[{
type:_DWT_ALERT_,style:DwtAlert.INFO,iconVisible:false,content:com_zimbra_bulkprovision.ClickToDownloadGeneratedFile}
,{
type:_DATA_URL_,labelLocation:_NONE_,label:com_zimbra_bulkprovision.DownloadMigrationXML,ref:ZaBulkProvision.A2_generatedFileLink}
,{
type:_ANCHOR_,labelLocation:_NONE_,label:com_zimbra_bulkprovision.DownloadMigrationWizard,href:ZaMsg.MIG_WIZ_DOWNLOAD_LINK}
]};
u.push(d);
var o=620;
n.items=[{
type:_OUTPUT_,colSpan:2,align:_CENTER_,valign:_TOP_,ref:ZaModel.currentStep,choices:this.stepChoices,valueChangeEventSources:[ZaModel.currentStep]}
,{
type:_SEPARATOR_,align:_CENTER_,valign:_TOP_}
,{
type:_SPACER_,align:_CENTER_,valign:_TOP_}
,{
type:_SWITCH_,width:o,align:_LEFT_,valign:_TOP_,items:u}
]
};
ZaXDialog.XFormModifiers.ZaMigrationXWizard.push(ZaMigrationXWizard.myXFormModifier);
function ZaBulkProvision(){
if(arguments.length==0){
return
}
ZaItem.call(this,"ZaBulkProvision");
this._init();
this.type=ZaItem.BULK_PROVISION
}
ZaItem.BULK_PROVISION="BulkProvsion";
ZaItem.BULK_PROVISION_TASK="BulkProvsionTask";
ZaBulkProvision.URN="urn:zimbraAdminExt";
ZaBulkProvision.prototype=new ZaItem;
ZaBulkProvision.prototype.constructor=ZaBulkProvision;
ZaBulkProvision.A_aid="aid";
ZaBulkProvision.A_csv_aid="csv_aid";
ZaBulkProvision.A_provision_accounts="provision_accounts";
ZaBulkProvision.A_mustChangePassword="mustChangePassword";
ZaBulkProvision.A_isValidCSV="isValidCSV";
ZaBulkProvision.A2_fileFormat="fileFormat";
ZaBulkProvision.A2_op="op";
ZaBulkProvision.A2_isToProvision="isToProvision";
ZaBulkProvision.A2_accountName="accountName";
ZaBulkProvision.A2_displayName="displayName";
ZaBulkProvision.A2_status="status";
ZaBulkProvision.A2_isValid="isValid";
ZaBulkProvision.A2_password="password";
ZaBulkProvision.A2_confirmPassword="confirmPassword";
ZaBulkProvision.A2_generatePassword="generatePassword";
ZaBulkProvision.A2_genPasswordLength="genPasswordLength";
ZaBulkProvision.A2_accountLimit="accountLimit";
ZaBulkProvision.A2_provAction="provAction";
ZaBulkProvision.A2_generatedFileLink="generatedFileLink";
ZaBulkProvision.A2_TargetDomainName="TargetDomainName";
ZaBulkProvision.A2_completedAccountsFileLink="completedAccountsFileLink";
ZaBulkProvision.A2_failedAccountsFileLink="failedAccountsFileLink";
ZaBulkProvision.A2_errorReportFileLink="errorReportFileLink";
ZaBulkProvision.A2_successReportFileLink="successReportFileLink";
ZaBulkProvision.A2_skippedCount="skippedCount";
ZaBulkProvision.A2_errorCount="errorCount";
ZaBulkProvision.A2_provisionedCount="provisionedCount";
ZaBulkProvision.A2_totalCount="totalCount";
ZaBulkProvision.A2_runningCount="runningCount";
ZaBulkProvision.A2_idleCount="idleCount";
ZaBulkProvision.A2_finishedCount="finishedCount";
ZaBulkProvision.A2_progress="progress";
ZaBulkProvision.A2_fileToken="fileToken";
ZaBulkProvision.A2_createDomains="createDomains";
ZaBulkProvision.A2_domainCount="domainCount";
ZaBulkProvision.A2_skippedAccountCount="skippedAccountCount";
ZaBulkProvision.A2_skippedDomainCount="skippedDomainCount";
ZaBulkProvision.A2_SMTPHost="SMTPHost";
ZaBulkProvision.A2_SMTPPort="SMTPPort";
ZaBulkProvision.A2_sourceType="sourceType";
ZaBulkProvision.A2_account="account";
ZaBulkProvision.A2_accountPool="accountPool";
ZaBulkProvision.A2_activateSearch="activateSearch";
ZaBulkProvision.A2_poolNumPages="poolNumPages";
ZaBulkProvision.A2_poolPagenum="poolPagenum";
ZaBulkProvision.A2_src_acct_selection_pool="src_acct_selection_pool";
ZaBulkProvision.A2_tgt_acct_selection_pool="tgt_acct_selection_pool";
ZaBulkProvision.A2_maxResults="maxResults";
ZaBulkProvision.A2_GalLdapURL="zimbraGalLdapURL";
ZaBulkProvision.A2_GalLdapSearchBase="zimbraGalLdapSearchBase";
ZaBulkProvision.A2_GalLdapBindDn="zimbraGalLdapBindDn";
ZaBulkProvision.A2_GalLdapBindPassword="zimbraGalLdapBindPassword";
ZaBulkProvision.A2_GalLdapFilter="zimbraGalLdapFilter";
ZaBulkProvision.A2_sourceServerType="sourceServerType";
ZaBulkProvision.A2_IMAPHost="IMAPHost";
ZaBulkProvision.A2_IMAPPort="IMAPPort";
ZaBulkProvision.A2_useAdminLogin="UseAdminLogin";
ZaBulkProvision.A2_IMAPAdminLogin="IMAPAdminLogin";
ZaBulkProvision.A2_IMAPAdminPassword="IMAPAdminPassword";
ZaBulkProvision.A2_IMAPAdminPasswordConfirm="IMAPAdminPasswordConfirm";
ZaBulkProvision.A2_connectionType="ConnectionType";
ZaBulkProvision.A2_importMails="importMails";
ZaBulkProvision.A2_importContacts="importContacts";
ZaBulkProvision.A2_importTasks="importTasks";
ZaBulkProvision.A2_importCalendar="importCalendar";
ZaBulkProvision.A2_importDeletedItems="importDeletedItems";
ZaBulkProvision.A2_importJunk="importJunk";
ZaBulkProvision.A2_ignorePreviouslyImported="ignorePreviouslyImported";
ZaBulkProvision.A2_InvalidSSLOk="InvalidSSLOk";
ZaBulkProvision.A2_MapiProfile="MapiProfile";
ZaBulkProvision.A2_MapiServer="MapiServer";
ZaBulkProvision.A2_MapiLogonUserDN="MapiLogonUserDN";
ZaBulkProvision.A2_ZimbraAdminPassword="ZimbraAdminPassword";
ZaBulkProvision.A2_ZimbraAdminLogin="ZimbraAdminLogin";
ZaBulkProvision.A2_ZimbraAdminPasswordConfirm="ZimbraAdminPasswordConfirm";
ZaBulkProvision.A2_provisionUsers="provisionUsers";
ZaBulkProvision.A2_importEmail="importEmail";
ZaBulkProvision.iSTATUS_NOT_RUNNING=-1;
ZaBulkProvision.iSTATUS_IDLE=0;
ZaBulkProvision.iSTATUS_STARTED=1;
ZaBulkProvision.iSTATUS_STARTING=2;
ZaBulkProvision.iSTATUS_CREATING_ACCOUNTS=3;
ZaBulkProvision.iSTATUS_FINISHED=4;
ZaBulkProvision.iSTATUS_ABORT=5;
ZaBulkProvision.iSTATUS_ABORTED=6;
ZaBulkProvision.iSTATUS_ERROR=100;
ZaBulkProvision.ACTION_IMPORT_CSV=1;
ZaBulkProvision.ACTION_IMPORT_XML=2;
ZaBulkProvision.ACTION_IMPORT_LDAP=3;
ZaBulkProvision.ACTION_GENERATE_MIG_XML=4;
ZaBulkProvision.ACTION_GENERATE_BULK_XML=5;
ZaBulkProvision.ACTION_GENERATE_BULK_CSV=6;
ZaBulkProvision.ACTION_IMPORT_AD=7;
ZaBulkProvision.ACTION_IMPORT_ZIMBRA=8;
ZaBulkProvision.FILE_FORMAT_PREVIEW="preview";
ZaBulkProvision.FILE_FORMAT_MIGRATION_XML="migrationxml";
ZaBulkProvision.FILE_FORMAT_BULK_XML="bulkxml";
ZaBulkProvision.FILE_FORMAT_BULK_CSV="csv";
ZaBulkProvision.SOURCE_TYPE_ZIMBRA="zimbra";
ZaBulkProvision.SOURCE_TYPE_LDAP="ldap";
ZaBulkProvision.SOURCE_TYPE_XML="bulkxml";
ZaBulkProvision.SOURCE_TYPE_REUSE_XML="reusebulkxml";
ZaBulkProvision.SOURCE_TYPE_CSV="csv";
ZaBulkProvision.MAIL_SOURCE_TYPE_IMAP="IMAP";
ZaBulkProvision.MAIL_SOURCE_TYPE_EXCHANGE="EXCHANGE";
ZaBulkProvision.MAIL_SOURCE_TYPE_ZIMBRA="ZIMBRA";
ZaBulkProvision.MAIL_SOURCE_TYPE_EXCHANGE_IMAP="EXCHANGE_IMAP";
ZaBulkProvision.OP_PREVIEW="preview";
ZaBulkProvision.OP_GET_STATUS="getStatus";
ZaBulkProvision.OP_PREVIEW_ACTIVE_IMPORTS="previewActiveImports";
ZaBulkProvision.OP_START_IMPORT="startImport";
ZaBulkProvision.OP_ABORT_IMPORT="abortImport";
ZaBulkProvision.OP_DISMISS_IMPORT="dismissImport";
ZaBulkProvision.CONNECTION_SSL="ssl";
ZaBulkProvision.CONNECTION_CLEARTEXT="cleartext";
ZaBulkProvision.CONNECTION_TLS="tls";
ZaBulkProvision.CONNECTION_TLS_IF_AVAILABLE="tls_if_available";
ZaBulkProvision.TOO_MANY_ACCOUNTS="bulkprovision.BP_TOO_MANY_ACCOUNTS";
ZaBulkProvision.BP_INVALID_SEARCH_FILTER="bulkprovision.BP_INVALID_SEARCH_FILTER";
ZaBulkProvision.BP_NAMING_EXCEPTION="bulkprovision.BP_NAMING_EXCEPTION";
ZaBulkProvision.BP_NO_ACCOUNTS_TO_IMPORT="bulkprovision.BP_NO_ACCOUNTS_TO_IMPORT";
ZaBulkProvision.getMyXModel=function(){
ZaBulkProvision.ProvActionChoices=[{
value:ZaBulkProvision.ACTION_IMPORT_LDAP,label:com_zimbra_bulkprovision.ActionImportFromLDAP}
,{
value:ZaBulkProvision.ACTION_IMPORT_CSV,label:com_zimbra_bulkprovision.ActionImportFromSCV}
,{
value:ZaBulkProvision.ACTION_IMPORT_XML,label:com_zimbra_bulkprovision.ActionImportFromXML}
,{
value:ZaBulkProvision.ACTION_GENERATE_MIG_XML,label:com_zimbra_bulkprovision.ActionGenerateMigXML}
,{
value:ZaBulkProvision.ACTION_IMPORT_AD,label:com_zimbra_bulkprovision.ActionImportAccountsFromAD}
,{
value:ZaBulkProvision.ACTION_GENERATE_BULK_XML,label:com_zimbra_bulkprovision.ActionGenerateBulkXML}
,{
value:ZaBulkProvision.ACTION_GENERATE_BULK_CSV,label:com_zimbra_bulkprovision.ActionGenerateBulkCSV}
];
ZaBulkProvision.SourceServerTypeChoices=[{
label:com_zimbra_bulkprovision.SourceServerTypeIMAP,value:ZaBulkProvision.MAIL_SOURCE_TYPE_IMAP}
,{
label:com_zimbra_bulkprovision.SourceServerTypeZimbra,value:ZaBulkProvision.MAIL_SOURCE_TYPE_ZIMBRA}
];
ZaBulkProvision.AccountListSourceTypeChoices=[{
label:com_zimbra_bulkprovision.AccountListTypeLDAP,value:ZaBulkProvision.SOURCE_TYPE_LDAP}
,{
label:com_zimbra_bulkprovision.AccountListTypeXML,value:ZaBulkProvision.SOURCE_TYPE_XML}
];
ZaBulkProvision.IMAPConnectionTypeChoices=[{
label:com_zimbra_bulkprovision.IMAPConnectionCleartext,value:ZaBulkProvision.CONNECTION_CLEARTEXT}
,{
label:com_zimbra_bulkprovision.IMAPConnectionSSL,value:ZaBulkProvision.CONNECTION_SSL}
,{
label:com_zimbra_bulkprovision.IMAPConnectionTLS,value:ZaBulkProvision.CONNECTION_TLS}
,{
label:com_zimbra_bulkprovision.IMAPConnectionTLSIfAvailable,value:ZaBulkProvision.CONNECTION_TLS_IF_AVAILABLE}
];
var e={
items:[{
id:ZaBulkProvision.A2_activateSearch,ref:ZaBulkProvision.A2_activateSearch,type:_NUMBER_,defaultValue:1}
,{
id:ZaBulkProvision.A2_poolNumPages,ref:ZaBulkProvision.A2_poolNumPages,type:_NUMBER_,defaultValue:1}
,{
id:ZaBulkProvision.A2_poolPagenum,ref:ZaBulkProvision.A2_poolPagenum,type:_NUMBER_,defaultValue:1}
,{
id:ZaBulkProvision.A2_src_acct_selection_pool,ref:ZaBulkProvision.A2_src_acct_selection_pool,type:_LIST_}
,{
id:ZaBulkProvision.A2_tgt_acct_selection_pool,ref:ZaBulkProvision.A2_tgt_acct_selection_pool,type:_LIST_}
,{
id:ZaBulkProvision.A_csv_aid,type:_STRING_,ref:ZaBulkProvision.A_csv_aid}
,{
id:ZaBulkProvision.A_aid,type:_STRING_,ref:ZaBulkProvision.A_aid}
,{
id:ZaBulkProvision.A_provision_accounts,ref:ZaBulkProvision.A_provision_accounts,type:_LIST_,dataType:_STRING_,outputType:_LIST_}
,{
id:ZaBulkProvision.A_mustChangePassword,ref:ZaBulkProvision.A_mustChangePassword,type:_ENUM_,choices:ZaModel.BOOLEAN_CHOICES}
,{
id:ZaBulkProvision.A_isValidCSV,ref:ZaBulkProvision.A_isValidCSV,type:_ENUM_,choices:ZaModel.BOOLEAN_CHOICES}
,{
id:ZaBulkProvision.A2_provAction,ref:ZaBulkProvision.A2_provAction,type:_ENUM_,choices:ZaBulkProvision.ProvActionChoices}
,{
id:ZaBulkProvision.A2_generatedFileLink,type:_STRING_,ref:ZaBulkProvision.A2_generatedFileLink}
,{
id:ZaBulkProvision.A2_failedAccountsFileLink,type:_STRING_,ref:ZaBulkProvision.A2_failedAccountsFileLink}
,{
id:ZaBulkProvision.A2_completedAccountsFileLink,type:_STRING_,ref:ZaBulkProvision.A2_completedAccountsFileLink}
,{
id:ZaBulkProvision.A2_maxResults,type:_NUMBER_,ref:ZaBulkProvision.A2_maxResults}
,{
id:ZaBulkProvision.A2_errorCount,type:_NUMBER_,ref:ZaBulkProvision.A2_errorCount}
,{
id:ZaBulkProvision.A2_provisionedCount,type:_NUMBER_,ref:ZaBulkProvision.A2_provisionedCount}
,{
id:ZaBulkProvision.A2_totalCount,type:_NUMBER_,ref:ZaBulkProvision.A2_totalCount}
,{
id:ZaBulkProvision.A2_idleCount,type:_NUMBER_,ref:ZaBulkProvision.A2_idleCount}
,{
id:ZaBulkProvision.A2_finishedCount,type:_NUMBER_,ref:ZaBulkProvision.A2_finishedCount}
,{
id:ZaBulkProvision.A2_runningCount,type:_NUMBER_,ref:ZaBulkProvision.A2_runningCount}
,{
id:ZaBulkProvision.A2_domainCount,type:_NUMBER_,ref:ZaBulkProvision.A2_domainCount}
,{
id:ZaBulkProvision.A2_skippedAccountCount,type:_NUMBER_,ref:ZaBulkProvision.A2_skippedAccountCount}
,{
id:ZaBulkProvision.A2_skippedDomainCount,type:_NUMBER_,ref:ZaBulkProvision.A2_skippedDomainCount}
,{
id:ZaBulkProvision.A2_progress,type:_STRING_,ref:ZaBulkProvision.A2_progress}
,{
id:ZaBulkProvision.A2_fileToken,type:_NUMBER_,ref:ZaBulkProvision.A2_fileToken}
,{
id:ZaBulkProvision.A2_skippedCount,type:_NUMBER_,ref:ZaBulkProvision.A2_skippedCount}
,{
id:ZaBulkProvision.A2_status,type:_NUMBER_,ref:ZaBulkProvision.A2_status}
,{
id:ZaBulkProvision.A2_GalLdapURL,type:_SHORT_URL_,ref:ZaBulkProvision.A2_GalLdapURL}
,{
id:ZaBulkProvision.A2_GalLdapSearchBase,type:_STRING_,ref:ZaBulkProvision.A2_GalLdapSearchBase}
,{
id:ZaBulkProvision.A2_GalLdapBindDn,type:_STRING_,ref:ZaBulkProvision.A2_GalLdapBindDn}
,{
id:ZaBulkProvision.A2_GalLdapBindPassword,type:_STRING_,ref:ZaBulkProvision.A2_GalLdapBindPassword}
,{
id:ZaBulkProvision.A2_GalLdapFilter,type:_STRING_,ref:ZaBulkProvision.A2_GalLdapFilter}
,{
id:ZaBulkProvision.A2_password,type:_STRING_,ref:ZaBulkProvision.A2_password}
,{
id:ZaBulkProvision.A2_confirmPassword,type:_STRING_,ref:ZaBulkProvision.A2_confirmPassword}
,{
id:ZaBulkProvision.A2_generatePassword,type:_ENUM_,choices:ZaModel.BOOLEAN_CHOICES,ref:ZaBulkProvision.A2_generatePassword}
,{
id:ZaBulkProvision.A2_useAdminLogin,type:_ENUM_,choices:ZaModel.getBooleanChoices2(),ref:ZaBulkProvision.A2_useAdminLogin}
,{
id:ZaBulkProvision.A2_IMAPAdminLogin,type:_STRING_,ref:ZaBulkProvision.A2_IMAPAdminLogin}
,{
id:ZaBulkProvision.A2_IMAPAdminPassword,type:_STRING_,ref:ZaBulkProvision.A2_IMAPAdminPassword}
,{
id:ZaBulkProvision.A2_IMAPAdminPasswordConfirm,type:_STRING_,ref:ZaBulkProvision.A2_IMAPAdminPasswordConfirm}
,{
id:ZaBulkProvision.A2_genPasswordLength,type:_NUMBER_,ref:ZaBulkProvision.A2_genPasswordLength,maxInclusive:64}
,{
id:ZaBulkProvision.A2_sourceServerType,type:_ENUM_,ref:ZaBulkProvision.A2_sourceServerType,choices:ZaBulkProvision.SourceServerTypeChoices}
,{
id:ZaBulkProvision.A2_sourceType,type:_ENUM_,ref:ZaBulkProvision.A2_sourceType,choices:ZaBulkProvision.AccountListSourceTypeChoices}
,{
id:ZaBulkProvision.A2_connectionType,type:_ENUM_,ref:ZaBulkProvision.A2_connectionType,choices:ZaBulkProvision.IMAPConnectionTypeChoices}
,{
id:ZaBulkProvision.A2_op,type:_STRING_,ref:ZaBulkProvision.A2_op}
,{
id:ZaBulkProvision.A2_account,type:_LIST_,ref:ZaBulkProvision.A2_account}
,{
id:ZaBulkProvision.A2_accountPool,type:_LIST_,ref:ZaBulkProvision.A2_accountPool}
,{
id:ZaBulkProvision.A2_TargetDomainName,type:_STRING_,ref:ZaBulkProvision.A2_TargetDomainName}
,{
id:ZaBulkProvision.A2_importMails,type:_ENUM_,choices:ZaModel.BOOLEAN_CHOICES,ref:ZaBulkProvision.A2_importMails}
,{
id:ZaBulkProvision.A2_importContacts,type:_ENUM_,choices:ZaModel.BOOLEAN_CHOICES,ref:ZaBulkProvision.A2_importContacts}
,{
id:ZaBulkProvision.A2_importTasks,type:_ENUM_,choices:ZaModel.BOOLEAN_CHOICES,ref:ZaBulkProvision.A2_importTasks}
,{
id:ZaBulkProvision.A2_importCalendar,type:_ENUM_,choices:ZaModel.BOOLEAN_CHOICES,ref:ZaBulkProvision.A2_importCalendar}
,{
id:ZaBulkProvision.A2_importDeletedItems,type:_ENUM_,choices:ZaModel.BOOLEAN_CHOICES,ref:ZaBulkProvision.A2_importDeletedItems}
,{
id:ZaBulkProvision.A2_importJunk,type:_ENUM_,choices:ZaModel.BOOLEAN_CHOICES,ref:ZaBulkProvision.A2_importJunk}
,{
id:ZaBulkProvision.A2_ignorePreviouslyImported,type:_ENUM_,choices:ZaModel.BOOLEAN_CHOICES,ref:ZaBulkProvision.A2_ignorePreviouslyImported}
,{
id:ZaBulkProvision.A2_InvalidSSLOk,type:_ENUM_,choices:ZaModel.BOOLEAN_CHOICES,ref:ZaBulkProvision.A2_InvalidSSLOk}
,{
id:ZaBulkProvision.A2_MapiProfile,type:_STRING_,ref:ZaBulkProvision.A2_MapiProfile}
,{
id:ZaBulkProvision.A2_MapiServer,type:_STRING_,ref:ZaBulkProvision.A2_MapiServer}
,{
id:ZaBulkProvision.A2_MapiLogonUserDN,type:_STRING_,ref:ZaBulkProvision.A2_MapiLogonUserDN}
,{
id:ZaBulkProvision.A2_ZimbraAdminPassword,type:_STRING_,ref:ZaBulkProvision.A2_ZimbraAdminPassword}
,{
id:ZaBulkProvision.A2_ZimbraAdminPasswordConfirm,type:_STRING_,ref:ZaBulkProvision.A2_ZimbraAdminPasswordConfirm}
,{
id:ZaBulkProvision.A2_ZimbraAdminLogin,type:_STRING_,ref:ZaBulkProvision.A2_ZimbraAdminLogin}
,{
id:ZaBulkProvision.A2_provisionUsers,type:_ENUM_,choices:ZaModel.BOOLEAN_CHOICES,ref:ZaBulkProvision.A2_provisionUsers}
,{
id:ZaBulkProvision.A2_importEmail,type:_ENUM_,choices:ZaModel.BOOLEAN_CHOICES,ref:ZaBulkProvision.A2_importEmail}
,{
id:ZaBulkProvision.A2_createDomains,type:_ENUM_,choices:ZaModel.BOOLEAN_CHOICES,ref:ZaBulkProvision.A2_createDomains}
,{
id:ZaBulkProvision.A2_IMAPAdminPassword,type:_STRING_,ref:ZaBulkProvision.A2_IMAPAdminPassword}
,{
id:ZaBulkProvision.A2_IMAPAdminLogin,type:_STRING_,ref:ZaBulkProvision.A2_IMAPAdminLogin}
,{
id:ZaBulkProvision.A2_SMTPHost,type:_STRING_,ref:ZaBulkProvision.A2_SMTPHost}
,{
id:ZaBulkProvision.A2_SMTPPort,type:_NUMBER_,ref:ZaBulkProvision.A2_SMTPPort}
,{
id:ZaBulkProvision.A2_IMAPHost,type:_STRING_,ref:ZaBulkProvision.A2_IMAPHost}
,{
id:ZaBulkProvision.A2_IMAPPort,type:_NUMBER_,ref:ZaBulkProvision.A2_IMAPPort,defaultValue:993}
]};
return e
};
ZaBulkProvision.bulkDataIMport=function(s,u){
var d=AjxSoapDoc.create("BulkIMAPDataImportRequest",ZaBulkProvision.URN,null);
var t=s[ZaBulkProvision.A_csv_aid];
d.set(ZaBulkProvision.A2_op,s[ZaBulkProvision.A2_op]);
var l=ZaApp.getInstance().getCurrentController();
if(s[ZaBulkProvision.A2_sourceType]==ZaBulkProvision.SOURCE_TYPE_XML){
if(s[ZaBulkProvision.A_aid]!=null){
d.set("aid",s[ZaBulkProvision.A_aid])
}else{
l.popupErrorDialog(com_zimbra_bulkprovision.error_no_aid);
return
}}
if(s[ZaBulkProvision.A2_sourceType]==ZaBulkProvision.SOURCE_TYPE_ZIMBRA){
var o=s[ZaBulkProvision.A2_account].length;
for(var r=0;
r<o;
r++){
var c=d.set(ZaBulkProvision.A2_account,"");
c.setAttribute("name",s[ZaBulkProvision.A2_account][r])
}}
attr=d.set(ZaBulkProvision.A2_sourceType,s[ZaBulkProvision.A2_sourceType]);
attr=d.set(ZaBulkProvision.A2_useAdminLogin,s[ZaBulkProvision.A2_useAdminLogin]);
if(s[ZaBulkProvision.A2_IMAPAdminPassword]){
attr=d.set(ZaBulkProvision.A2_IMAPAdminPassword,s[ZaBulkProvision.A2_IMAPAdminPassword])
}
if(s[ZaBulkProvision.A2_IMAPAdminLogin]){
attr=d.set(ZaBulkProvision.A2_IMAPAdminLogin,s[ZaBulkProvision.A2_IMAPAdminLogin])
}
if(s[ZaBulkProvision.A2_IMAPHost]){
attr=d.set(ZaBulkProvision.A2_IMAPHost,s[ZaBulkProvision.A2_IMAPHost])
}
if(s[ZaBulkProvision.A2_IMAPPort]){
attr=d.set(ZaBulkProvision.A2_IMAPPort,s[ZaBulkProvision.A2_IMAPPort])
}
if(s[ZaBulkProvision.A2_connectionType]){
attr=d.set(ZaBulkProvision.A2_connectionType,s[ZaBulkProvision.A2_connectionType])
}
if(s[ZaBulkProvision.A2_sourceServerType]){
attr=d.set(ZaBulkProvision.A2_sourceServerType,s[ZaBulkProvision.A2_sourceServerType])
}
var n=new Object();
n.soapDoc=d;
n.asyncMode=true;
n.callback=u;
var e={};
e.controller=l;
e.busyMsg=com_zimbra_bulkprovision.BUSY_START_PROVISION_ACCOUNTS;
ZaRequestMgr.invoke(n,e)
};
ZaBulkProvision.getBulkProvisionAccounts=function(s,d){
var u=ZaApp.getInstance().getCurrentController();
var m=AjxSoapDoc.create("GetBulkProvisionAccountsRequest",ZaBulkProvision.URN,null);
var o=d[ZaBulkProvision.A_csv_aid];
if(o!=null){
m.set("aid",o)
}else{
u.popupErrorDialog(com_zimbra_bulkprovision.error_no_aid);
return
}
var e=d[ZaBulkProvision.A2_accountLimit];
if(e!=null){
m.setMethodAttribute(ZaBulkProvision.A2_accountLimit,e)
}
var l=new Object();
l.soapDoc=m;
var n={};
n.controller=u;
n.busyMsg=com_zimbra_bulkprovision.BUSY_GET_PROVISION_ACCOUNTS;
var r=ZaRequestMgr.invoke(l,n).Body.GetBulkProvisionAccountsResponse;
var t=[];
var o,f;
if(r&&r.account){
for(var c=0;
c<r.account.length;
c++){
t.push(r.account[c]._attrs)
}}
if(r&&r.aid){
o=r.aid[0]._content
}
if(r&&r[ZaBulkProvision.A_isValidCSV]){
f=r[ZaBulkProvision.A_isValidCSV][0]._content
}
return{
accounts:t,aid:o,isValidCSV:f}
};
ZaBulkProvision.initProvisionAccounts=function(t){
for(var e=0;
e<t.length;
e++){
if(t[e][ZaBulkProvision.A2_isValid]=="TRUE"){
t[e][ZaBulkProvision.A2_isToProvision]=true
}}
return t
};
ZaBulkProvision.abortImportThread=function(n){
var o=AjxSoapDoc.create("BulkImportAccountsRequest",ZaBulkProvision.URN,null);
o.getMethod().setAttribute(ZaBulkProvision.A2_op,ZaBulkProvision.OP_ABORT_IMPORT);
var e=new Object();
e.soapDoc=o;
e.asyncMode=true;
e.callback=n;
var t={};
t.controller=ZaApp.getInstance().getCurrentController();
t.busyMsg=com_zimbra_bulkprovision.BUSY_ABORTING_IMPORT_THREAD;
ZaRequestMgr.invoke(e,t)
};
ZaBulkProvision.getImportStatus=function(n){
var o=AjxSoapDoc.create("BulkImportAccountsRequest",ZaBulkProvision.URN,null);
o.getMethod().setAttribute(ZaBulkProvision.A2_op,ZaBulkProvision.OP_GET_STATUS);
var e=new Object();
e.soapDoc=o;
if(n){
e.asyncMode=true;
e.callback=n
}
var t={};
t.controller=ZaApp.getInstance().getCurrentController();
t.busyMsg=com_zimbra_bulkprovision.BUSY_GETTING_PROVISIONING_STATUS;
return ZaRequestMgr.invoke(e,t)
};
ZaBulkProvision.importAccountsFromFile=function(s,r){
var n=AjxSoapDoc.create("BulkImportAccountsRequest",ZaBulkProvision.URN,null);
n.getMethod().setAttribute(ZaBulkProvision.A2_op,s[ZaBulkProvision.A2_op]);
var e=n.set(ZaBulkProvision.A2_sourceType,s[ZaBulkProvision.A2_sourceType]);
e=n.set(ZaBulkProvision.A2_createDomains,s[ZaBulkProvision.A2_createDomains]);
e=n.set(ZaBulkProvision.A_aid,s[ZaBulkProvision.A_aid]);
if(s[ZaBulkProvision.A2_SMTPHost]){
e=n.set(ZaBulkProvision.A2_SMTPHost,s[ZaBulkProvision.A2_SMTPHost])
}
if(s[ZaBulkProvision.A2_SMTPPort]){
e=n.set(ZaBulkProvision.A2_SMTPPort,s[ZaBulkProvision.A2_SMTPPort])
}
var t=new Object();
t.soapDoc=n;
t.asyncMode=true;
t.callback=r;
var o={};
o.controller=ZaApp.getInstance().getCurrentController();
o.busyMsg=com_zimbra_bulkprovision.BUSY_START_PROVISION_ACCOUNTS;
ZaRequestMgr.invoke(t,o)
};
ZaBulkProvision.importAccountsFromLDAP=function(s,r){
var n=AjxSoapDoc.create("BulkImportAccountsRequest",ZaBulkProvision.URN,null);
n.getMethod().setAttribute(ZaBulkProvision.A2_op,ZaBulkProvision.OP_START_IMPORT);
var e=n.set("a",ZaDomain.GAL_Mode_external);
e.setAttribute("n",ZaDomain.A_zimbraGalMode);
e=n.set("a",s[ZaBulkProvision.A2_GalLdapURL]);
e.setAttribute("n",ZaBulkProvision.A2_GalLdapURL);
e=n.set("a",s[ZaBulkProvision.A2_GalLdapSearchBase]);
e.setAttribute("n",ZaBulkProvision.A2_GalLdapSearchBase);
e=n.set("a",s[ZaBulkProvision.A2_GalLdapFilter]);
e.setAttribute("n",ZaBulkProvision.A2_GalLdapFilter);
e=n.set("a",s[ZaBulkProvision.A2_GalLdapBindDn]);
e.setAttribute("n",ZaBulkProvision.A2_GalLdapBindDn);
e=n.set("a",s[ZaBulkProvision.A2_GalLdapBindPassword]);
e.setAttribute("n",ZaBulkProvision.A2_GalLdapBindPassword);
e=n.set(ZaBulkProvision.A2_sourceType,ZaBulkProvision.SOURCE_TYPE_LDAP);
if(s[ZaBulkProvision.A2_password]){
e=n.set(ZaBulkProvision.A2_password,s[ZaBulkProvision.A2_password])
}
if(s[ZaBulkProvision.A2_SMTPHost]){
e=n.set(ZaBulkProvision.A2_SMTPHost,s[ZaBulkProvision.A2_SMTPHost])
}
if(s[ZaBulkProvision.A2_SMTPPort]){
e=n.set(ZaBulkProvision.A2_SMTPPort,s[ZaBulkProvision.A2_SMTPPort])
}
e=n.set(ZaBulkProvision.A2_generatePassword,s[ZaBulkProvision.A2_generatePassword]);
e=n.set(ZaBulkProvision.A2_genPasswordLength,s[ZaBulkProvision.A2_genPasswordLength]);
e=n.set(ZaBulkProvision.A_mustChangePassword,s[ZaBulkProvision.A_mustChangePassword]);
e=n.set(ZaBulkProvision.A2_maxResults,s[ZaBulkProvision.A2_maxResults]);
e=n.set(ZaBulkProvision.A2_createDomains,s[ZaBulkProvision.A2_createDomains]);
var t=new Object();
t.soapDoc=n;
t.asyncMode=true;
t.callback=r;
var o={};
o.controller=ZaApp.getInstance().getCurrentController();
o.busyMsg=com_zimbra_bulkprovision.BUSY_START_PROVISION_ACCOUNTS;
ZaRequestMgr.invoke(t,o)
};
ZaBulkProvision.generateBulkProvisionPreview=function(s,r){
var n=AjxSoapDoc.create("GenerateBulkProvisionFileFromLDAPRequest",ZaBulkProvision.URN,null);
var e=n.set("a",ZaDomain.GAL_Mode_external);
e.setAttribute("n",ZaDomain.A_zimbraGalMode);
e=n.set("a",s[ZaBulkProvision.A2_GalLdapURL]);
e.setAttribute("n",ZaBulkProvision.A2_GalLdapURL);
e=n.set("a",s[ZaBulkProvision.A2_GalLdapSearchBase]);
e.setAttribute("n",ZaBulkProvision.A2_GalLdapSearchBase);
e=n.set("a",s[ZaBulkProvision.A2_GalLdapFilter]);
e.setAttribute("n",ZaBulkProvision.A2_GalLdapFilter);
e=n.set("a",s[ZaBulkProvision.A2_GalLdapBindDn]);
e.setAttribute("n",ZaBulkProvision.A2_GalLdapBindDn);
e=n.set("a",s[ZaBulkProvision.A2_GalLdapBindPassword]);
e.setAttribute("n",ZaBulkProvision.A2_GalLdapBindPassword);
if(s[ZaBulkProvision.A2_password]){
e=n.set(ZaBulkProvision.A2_password,s[ZaBulkProvision.A2_password])
}
if(s[ZaBulkProvision.A2_SMTPHost]){
e=n.set(ZaBulkProvision.A2_SMTPHost,s[ZaBulkProvision.A2_SMTPHost])
}
if(s[ZaBulkProvision.A2_SMTPPort]){
e=n.set(ZaBulkProvision.A2_SMTPPort,s[ZaBulkProvision.A2_SMTPPort])
}
e=n.set(ZaBulkProvision.A2_maxResults,s[ZaBulkProvision.A2_maxResults]);
e=n.set(ZaBulkProvision.A2_fileFormat,ZaBulkProvision.FILE_FORMAT_PREVIEW);
e=n.set(ZaBulkProvision.A2_generatePassword,s[ZaBulkProvision.A2_generatePassword]);
e=n.set(ZaBulkProvision.A2_genPasswordLength,s[ZaBulkProvision.A2_genPasswordLength]);
e=n.set(ZaBulkProvision.A_mustChangePassword,s[ZaBulkProvision.A_mustChangePassword]);
var t=new Object();
t.soapDoc=n;
t.asyncMode=true;
t.callback=r;
var o={};
o.controller=ZaApp.getInstance().getCurrentController();
o.busyMsg=com_zimbra_bulkprovision.BUSY_GENERATING_BULK_FILE;
ZaRequestMgr.invoke(t,o)
};
ZaBulkProvision.generateBulkProvisionFile=function(s,r){
var n=AjxSoapDoc.create("GenerateBulkProvisionFileFromLDAPRequest",ZaBulkProvision.URN,null);
var e=n.set("a",ZaDomain.GAL_Mode_external);
e.setAttribute("n",ZaDomain.A_zimbraGalMode);
e=n.set("a",s[ZaBulkProvision.A2_GalLdapURL]);
e.setAttribute("n",ZaBulkProvision.A2_GalLdapURL);
e=n.set("a",s[ZaBulkProvision.A2_GalLdapSearchBase]);
e.setAttribute("n",ZaBulkProvision.A2_GalLdapSearchBase);
e=n.set("a",s[ZaBulkProvision.A2_GalLdapFilter]);
e.setAttribute("n",ZaBulkProvision.A2_GalLdapFilter);
e=n.set("a",s[ZaBulkProvision.A2_GalLdapBindDn]);
e.setAttribute("n",ZaBulkProvision.A2_GalLdapBindDn);
e=n.set("a",s[ZaBulkProvision.A2_GalLdapBindPassword]);
e.setAttribute("n",ZaBulkProvision.A2_GalLdapBindPassword);
if(s[ZaBulkProvision.A2_password]){
e=n.set(ZaBulkProvision.A2_password,s[ZaBulkProvision.A2_password])
}
e=n.set(ZaBulkProvision.A2_generatePassword,s[ZaBulkProvision.A2_generatePassword]);
e=n.set(ZaBulkProvision.A2_genPasswordLength,s[ZaBulkProvision.A2_genPasswordLength]);
e=n.set(ZaBulkProvision.A_mustChangePassword,s[ZaBulkProvision.A_mustChangePassword]);
e=n.set(ZaBulkProvision.A2_maxResults,s[ZaBulkProvision.A2_maxResults]);
if(s[ZaBulkProvision.A2_provAction]==ZaBulkProvision.ACTION_GENERATE_MIG_XML){
e=n.set(ZaBulkProvision.A2_fileFormat,ZaBulkProvision.FILE_FORMAT_MIGRATION_XML);
e=n.set(ZaBulkProvision.A2_importMails,s[ZaBulkProvision.A2_importMails]);
e=n.set(ZaBulkProvision.A2_importContacts,s[ZaBulkProvision.A2_importContacts]);
e=n.set(ZaBulkProvision.A2_importTasks,s[ZaBulkProvision.A2_importTasks]);
e=n.set(ZaBulkProvision.A2_importCalendar,s[ZaBulkProvision.A2_importCalendar]);
e=n.set(ZaBulkProvision.A2_importDeletedItems,s[ZaBulkProvision.A2_importDeletedItems]);
e=n.set(ZaBulkProvision.A2_importJunk,s[ZaBulkProvision.A2_importJunk]);
e=n.set(ZaBulkProvision.A2_ignorePreviouslyImported,s[ZaBulkProvision.A2_ignorePreviouslyImported]);
e=n.set(ZaBulkProvision.A2_InvalidSSLOk,s[ZaBulkProvision.A2_InvalidSSLOk]);
e=n.set(ZaBulkProvision.A2_TargetDomainName,s[ZaBulkProvision.A2_TargetDomainName]);
e=n.set(ZaBulkProvision.A2_ZimbraAdminLogin,s[ZaBulkProvision.A2_ZimbraAdminLogin]);
e=n.set(ZaBulkProvision.A2_ZimbraAdminPassword,s[ZaBulkProvision.A2_ZimbraAdminPassword]);
e=n.set(ZaBulkProvision.A2_MapiProfile,s[ZaBulkProvision.A2_MapiProfile]);
e=n.set(ZaBulkProvision.A2_MapiServer,s[ZaBulkProvision.A2_MapiServer]);
e=n.set(ZaBulkProvision.A2_MapiLogonUserDN,s[ZaBulkProvision.A2_MapiLogonUserDN]);
e=n.set(ZaBulkProvision.A2_provisionUsers,s[ZaBulkProvision.A2_provisionUsers])
}else{
if(s[ZaBulkProvision.A2_provAction]==ZaBulkProvision.ACTION_GENERATE_BULK_XML){
e=n.set(ZaBulkProvision.A2_fileFormat,ZaBulkProvision.FILE_FORMAT_BULK_XML)
}else{
if(s[ZaBulkProvision.A2_provAction]==ZaBulkProvision.ACTION_GENERATE_BULK_CSV){
e=n.set(ZaBulkProvision.A2_fileFormat,ZaBulkProvision.FILE_FORMAT_BULK_CSV)
}}}
var t=new Object();
t.soapDoc=n;
t.asyncMode=true;
t.callback=r;
var o={};
o.controller=ZaApp.getInstance().getCurrentController();
o.busyMsg=com_zimbra_bulkprovision.BUSY_GENERATING_BULK_FILE;
ZaRequestMgr.invoke(t,o)
};
ZaBulkProvision.getBulkDataImportTasks=function(){
var u=ZaApp.getInstance().getMailServers(true);
var c=new ZaItemList(ZaBulkProvisionTask);
for(var n=0;
n<u.length;
n++){
var d=AjxSoapDoc.create("GetBulkIMAPImportTaskListRequest",ZaBulkProvision.URN,null);
var t=new Object();
t.soapDoc=d;
t.asyncMode=false;
t.targetServer=u[n].id;
var e={
controller:ZaApp.getInstance().getCurrentController(),busyMsg:com_zimbra_bulkprovision.BUSY_GET_BULK_TASKS};
var o=ZaRequestMgr.invoke(t,e).Body.GetBulkIMAPImportTaskListResponse;
var l=new ZaItemList(ZaBulkProvisionTask);
l.loadFromJS(o);
var r=l.getArray();
for(var s=0;
s<r.length;
s++){
c.add(r[s])
}}
return c
};
ZaBulkProvision.deleteBulkDataImportTasks=function(){
var t=AjxSoapDoc.create("PurgeBulkIMAPImportTasksRequest",ZaBulkProvision.URN,null);
var n=new Object();
n.soapDoc=t;
n.asyncMode=false;
var e={
controller:ZaApp.getInstance().getCurrentController(),busyMsg:com_zimbra_bulkprovision.BUSY_GET_BULK_TASKS};
var o=ZaRequestMgr.invoke(n,e).Body.PurgeBulkIMAPImportTasksResponse
};
ZaBulkProvisionTask=function(){
ZaItem.call(this,"ZaBulkProvisionTask");
this._init();
this.type=ZaItem.BULK_PROVISION_TASK
};
ZaBulkProvisionTask.prototype=new ZaItem;
ZaBulkProvisionTask.prototype.constructor=ZaBulkProvisionTask;
ZaBulkProvisionTask.A_owner="owner";
ZaBulkProvisionTask.A_totalTasks="totalTasks";
ZaBulkProvisionTask.A_finishedTasks="finishedTasks";
ZaBulkProvisionTask.A_failedTasks="failedTasks";
ZaBulkProvisionTask.A_status="status";
ZaBulkProvisionAccountsListView=function(n,o,t,e){
if(arguments.length==0){
return
}
ZaListView.call(this,n,o,t,e);
this.hideHeader=true;
this._app=ZaApp.getInstance()
};
ZaBulkProvisionAccountsListView.prototype=new ZaListView;
ZaBulkProvisionAccountsListView.prototype.constructor=ZaBulkProvisionAccountsListView;
ZaBulkProvisionAccountsListView.prototype.toString=function(){
return"ZaBulkProvisionAccountsListView"
};
ZaBulkProvisionAccountsListView.prototype.createHeaderHtml=function(e){
if(!this.hideHeader){
DwtListView.prototype.createHeaderHtml.call(this,e)
}};
ZaBulkProvisionAccountsListView.prototype._createItemHtml=function(s){
var n=new Array(50);
var c=document.createElement("div");
c[DwtListView._STYLE_CLASS]="Row";
c[DwtListView._SELECTED_STYLE_CLASS]=c[DwtListView._STYLE_CLASS]+"-"+DwtCssStyle.SELECTED;
c.className=c[DwtListView._STYLE_CLASS];
var l=this.associateItemWithElement(s,c,DwtListView.TYPE_LIST_ITEM);
var e=0;
n[e++]="<table width='100%' cellspacing='2' cellpadding='0'";
if(s[ZaBulkProvision.A2_isValid]!="TRUE"){
n[e++]=" style='background: #ee1122;' "
}
n[e++]=">";
n[e++]="<tr>";
if(s[ZaBulkProvision.A2_isValid]!="TRUE"){
n[e++]="<td align='left' colspan=3><nobr>";
n[e++]=AjxStringUtil.htmlEncode(s[ZaBulkProvision.A2_status]);
n[e++]="</nobr></td>"
}else{
var o=this._headerList.length;
for(var t=0;
t<o;
t++){
var r=this._headerList[t]._field;
n[e++]="<td align='left' width="+this._headerList[t]._width+"><nobr>";
n[e++]=AjxStringUtil.htmlEncode(s[r]);
n[e++]="</nobr></td>"
}}
n[e++]="</tr></table>";
c.innerHTML=n.join("");
return c
};
ZaBulkProvisionAccountsListView.prototype._setNoResultsHtml=function(){
var e=new AjxBuffer();
var t=document.createElement("div");
e.append("<table width='100%' cellspacing='0' cellpadding='1'>","<tr><td class='NoResults'><br />",com_zimbra_bulkprovision.no_accounts,"</td></tr></table>");
t.innerHTML=e.toString();
this._addRow(t)
};
ZaBulkProvisionStatusDialog=function(e){
if(arguments.length==0){
return
}
this._app=ZaApp.getInstance();
this._standardButtons=[DwtDialog.OK_BUTTON];
var t=new DwtDialog_ButtonDescriptor(ZaBulkProvisionStatusDialog.ABORT_BUTTON,ZaMsg.NAD_AbortDeleting,DwtDialog.ALIGN_RIGHT,new AjxCallback(this,this.abortCreatingAccounts));
this._extraButtons=[t];
w="420px";
h="320px";
ZaXDialog.call(this,e,null,com_zimbra_bulkprovision.title_provision,w,h);
this._containedObject=[];
this.initForm(ZaBulkProvisionStatusDialog.myXModel,this.getMyXForm())
};
ZaBulkProvisionStatusDialog.prototype=new ZaXDialog;
ZaBulkProvisionStatusDialog.prototype.constructor=ZaBulkProvisionStatusDialog;
ZaBulkProvisionStatusDialog.ABORT_BUTTON=++DwtDialog.LAST_BUTTON;
ZaBulkProvisionStatusDialog.A_currentStatus="currentStatus";
ZaBulkProvisionStatusDialog.A_createdAccounts="createdAccounts";
ZaBulkProvisionStatusDialog.myXModel={
items:[{
ref:ZaBulkProvisionStatusDialog.A_currentStatus,type:_STRING_}
,{
ref:ZaBulkProvisionStatusDialog.A_createdAccounts,type:_LIST_,dataType:_STRING_,outputType:_LIST_}
]};
ZaBulkProvisionStatusDialog.prototype.setObject=function(e){
this._containedObject=e;
if(!this._containedObject[ZaBulkProvisionStatusDialog.A_createdAccounts]){
this._containedObject[ZaBulkProvisionStatusDialog.A_createdAccounts]=[]
}
this._localXForm.setInstance(this._containedObject);
this._button[DwtDialog.OK_BUTTON].setEnabled(true)
};
ZaBulkProvisionStatusDialog.prototype.popup=function(e){
ZaXWizardDialog.prototype.popup.call(this,e)
};
ZaBulkProvisionStatusDialog.prototype.popdown=function(e){
ZaXWizardDialog.prototype.popdown.call(this);
this._aborted=false
};
ZaBulkProvisionStatusDialog.prototype.getMyXForm=function(){
var t=new Array();
var n=1;
var e=0;
t[e++]=new ZaListHeaderItem(ZaBulkProvision.A2_accountName,ZaMsg.ALV_Name_col,null,250,null,null,true,true);
t[e++]=new ZaListHeaderItem(ZaBulkProvision.A2_status,com_zimbra_bulkprovision.ALV_Stauts_col,null,null,null,null,true,true);
var o={
numCols:1,height:"300px",width:"400px",align:_CENTER_,cssStyle:"text-align:center",items:[{
type:_DWT_ALERT_,style:DwtAlert.INFORMATION,iconVisible:true,content:null,align:_CENTER_,valign:_MIDDLE_,colSpan:"*",width:"90%",ref:ZaBulkProvisionStatusDialog.A_currentStatus}
,{
type:_SPACER_,height:"10"}
,{
ref:ZaBulkProvisionStatusDialog.A_createdAccounts,type:_DWT_LIST_,height:200,width:400,colSpan:"*",cssClass:"DLSource",forceUpdate:true,widgetClass:ZaBPStatusDialogListView,headerList:t,hideHeader:false}
]};
return o
};
ZaBulkProvisionStatusDialog.prototype.abortCreatingAccounts=function(e){
try{
this._aborted=true
}
catch(t){
ZaApp.getInstance().getCurrentController()._handleException(t,"ZaBulkProvisionStatusDialog.prototype.abortCreatingAccounts",null,false)
}};
ZaBPStatusDialogListView=function(n,o,t,e){
if(arguments.length==0){
return
}
ZaListView.call(this,n,o,t,e);
this.hideHeader=true
};
ZaBPStatusDialogListView.prototype=new ZaListView;
ZaBPStatusDialogListView.prototype.constructor=ZaBPStatusDialogListView;
ZaBPStatusDialogListView.prototype.toString=function(){
return"ZaBPStatusDialogListView"
};
ZaBPStatusDialogListView.prototype.createHeaderHtml=function(e){
if(!this.hideHeader){
DwtListView.prototype.createHeaderHtml.call(this,e)
}};
ZaBPStatusDialogListView.prototype._createItemHtml=function(l,t,n){
var r=new Array(50);
var e=document.createElement("div");
e[DwtListView._STYLE_CLASS]="Row";
e[DwtListView._SELECTED_STYLE_CLASS]=e[DwtListView._STYLE_CLASS]+"-"+DwtCssStyle.SELECTED;
e.className=e[DwtListView._STYLE_CLASS];
this.associateItemWithElement(l,e,DwtListView.TYPE_LIST_ITEM);
var d=0;
r[d++]="<table width='100%' cellspacing='2' cellpadding='0'>";
r[d++]="<tr>";
var o=this._headerList.length;
for(var s=0;
s<o;
s++){
var c=this._headerList[s]._field;
r[d++]="<td align='left' width="+this._headerList[s]._width+"><nobr>";
r[d++]=AjxStringUtil.htmlEncode(l[c]);
r[d++]="</nobr></td>"
}
r[d++]="</tr></table>";
e.innerHTML=r.join("");
return e
};
ZaBPStatusDialogListView.prototype._setNoResultsHtml=function(){
var e=new AjxBuffer();
var t=document.createElement("div");
e.append("<table width='100%' cellspacing='0' cellpadding='1'>","<tr><td class='NoResults'><br>&nbsp","</td></tr></table>");
t.innerHTML=e.toString();
this._addRow(t)
};
ZaBulkProvisionTasksView=function(n){
var o=null;
var t=DwtControl.ABSOLUTE_STYLE;
var e=this._getHeaderList();
ZaListView.call(this,n,o,t,e);
this._appCtxt=this.shell.getData(ZaAppCtxt.LABEL)
};
ZaBulkProvisionTasksView.prototype=new ZaListView;
ZaBulkProvisionTasksView.prototype.constructor=ZaBulkProvisionTasksView;
ZaBulkProvisionTasksView.prototype.toString=function(){
return"ZaBulkProvisionTasksView"
};
ZaBulkProvisionTasksView.prototype.getTitle=function(){
return com_zimbra_bulkprovision.BP_view_title
};
ZaBulkProvisionTasksView.prototype.getTabIcon=function(){
return"BulkProvision"
};
ZaBulkProvisionTasksView.prototype._createItemHtml=function(o,t,s){
var l=new Array(50);
var e=document.createElement("div");
e[DwtListView._STYLE_CLASS]="Row";
e[DwtListView._SELECTED_STYLE_CLASS]=e[DwtListView._STYLE_CLASS]+"-"+DwtCssStyle.SELECTED;
e.className=e[DwtListView._STYLE_CLASS];
this.associateItemWithElement(o,e,DwtListView.TYPE_LIST_ITEM);
var d=0;
l[d++]="<table width='100%' cellspacing='0' cellpadding='0'>";
l[d++]="<tr>";
var n=this._headerList.length;
for(var r=0;
r<n;
r++){
var c=this._headerList[r]._field;
if(c==ZaBulkProvisionTask.A_totalTasks){
l[d++]="<td align='left' width="+this._headerList[r]._width+">";
l[d++]=AjxStringUtil.htmlEncode(o.attrs[ZaBulkProvisionTask.A_totalTasks]);
l[d++]="</td>"
}else{
if(c==ZaBulkProvisionTask.A_finishedTasks){
l[d++]="<td align='left' width="+this._headerList[r]._width+">";
l[d++]=AjxStringUtil.htmlEncode(o.attrs[ZaBulkProvisionTask.A_finishedTasks]);
l[d++]="</td>"
}else{
if(c==ZaBulkProvisionTask.A_failedTasks){
l[d++]="<td align='left' width="+this._headerList[r]._width+">";
l[d++]=AjxStringUtil.htmlEncode(o.attrs[ZaBulkProvisionTask.A_failedTasks]);
l[d++]="</td>"
}else{
if(c==ZaBulkProvisionTask.A_owner){
l[d++]="<td align='left' width="+this._headerList[r]._width+">";
l[d++]=AjxStringUtil.htmlEncode(o.attrs[ZaBulkProvisionTask.A_owner]);
l[d++]="</td>"
}else{
if(c==ZaBulkProvisionTask.A_status){
l[d++]="<td align='left' width="+this._headerList[r]._width+">";
if((parseInt(o.attrs[ZaBulkProvisionTask.A_finishedTasks])+(o.attrs[ZaBulkProvisionTask.A_failedTasks]?parseInt(o.attrs[ZaBulkProvisionTask.A_failedTasks]):0))==parseInt(o.attrs[ZaBulkProvisionTask.A_totalTasks])){
l[d++]=AjxStringUtil.htmlEncode(com_zimbra_bulkprovision.TaskComplete)
}else{
l[d++]=AjxStringUtil.htmlEncode(com_zimbra_bulkprovision.TaskInProgress)
}
l[d++]="</td>"
}}}}}}
l[d++]="</tr></table>";
e.innerHTML=l.join("");
return e
};
ZaBulkProvisionTasksView.prototype._getHeaderList=function(){
var e=new Array();
var t=1;
e[0]=new ZaListHeaderItem(ZaBulkProvisionTask.A_totalTasks,com_zimbra_bulkprovision.NumTotalAccts,null,"120px",null,null,true,true);
e[1]=new ZaListHeaderItem(ZaBulkProvisionTask.A_finishedTasks,com_zimbra_bulkprovision.NumCompletedAccts,null,"80px",null,null,true,true);
e[2]=new ZaListHeaderItem(ZaBulkProvisionTask.A_failedTasks,com_zimbra_bulkprovision.NumFailedAccts,null,"80px",null,null,true,true);
e[3]=new ZaListHeaderItem(ZaBulkProvisionTask.A_status,com_zimbra_bulkprovision.TaskStatus,null,"120px",null,null,true,true);
e[4]=new ZaListHeaderItem(ZaBulkProvisionTask.A_owner,com_zimbra_bulkprovision.TaskOwner,null,"auto",null,null,true,true);
return e
};
ZaBulkProvisionTasksController=function(t,e){
ZaListViewController.call(this,t,e,"ZaBulkProvisionTasksController");
this._toolbarOperations=new Array();
this._popupOperations=new Array();
this.objType=ZaEvent.S_BULK_PROVISION_TASK;
this._helpURL=ZaBulkProvisionTasksController.helpURL
};
ZaBulkProvisionTasksController.prototype=new ZaListViewController();
ZaBulkProvisionTasksController.prototype.constructor=ZaBulkProvisionTasksController;
ZaBulkProvisionTasksController.helpURL=location.pathname+ZaUtil.HELP_URL+"account_migration/migrating_accounts.htm?locid="+AjxEnv.DEFAULT_LOCALE;
ZaController.initToolbarMethods.ZaBulkProvisionTasksController=new Array();
ZaController.initPopupMenuMethods.ZaBulkProvisionTasksController=new Array();
ZaController.changeActionsStateMethods.ZaBulkProvisionTasksController=new Array();
ZaOperation.BULK_DATA_IMPORT=++ZA_OP_INDEX;
ZaBulkProvisionTasksController.prototype.show=function(t,e){
if(!this._UICreated){
this._createUI()
}
if(t!=null){
this._contentView.set(t.getVector())
}
ZaApp.getInstance().pushView(this.getContentViewId());
this.changeActionsState()
};
ZaBulkProvisionTasksController.initToolbarMethod=function(){
var e=false;
if(ZaZimbraAdmin.currentAdminAccount.attrs[ZaAccount.A_zimbraIsAdminAccount]=="TRUE"){
e=true
}else{
e=ZaZimbraAdmin.canCreateAccount()
}
if(e){
this._toolbarOperations[ZaOperation.BULK_DATA_IMPORT]=new ZaOperation(ZaOperation.BULK_DATA_IMPORT,com_zimbra_bulkprovision.TB_IMAP_Import,com_zimbra_bulkprovision.TB_IMAP_Import_tt,"ApplianceMigration","ApplianceMigration",new AjxListener(this,this.bulkDataImportListener));
this._toolbarOperations[ZaOperation.DELETE]=new ZaOperation(ZaOperation.DELETE,com_zimbra_bulkprovision.DeleteTask,com_zimbra_bulkprovision.DeleteTask_tt,"Delete","Delete",new AjxListener(this,this.deleteButtonListener));
this._toolbarOperations[ZaOperation.REFRESH]=new ZaOperation(ZaOperation.REFRESH,ZaMsg.TBB_Refresh,ZaMsg.TBB_Refresh_tt,"Refresh","Refresh",new AjxListener(this,this.refreshButtonListener));
this._toolbarOrder.push(ZaOperation.BULK_DATA_IMPORT);
this._toolbarOrder.push(ZaOperation.REFRESH);
this._toolbarOrder.push(ZaOperation.DELETE)
}
this._toolbarOperations[ZaOperation.NONE]=new ZaOperation(ZaOperation.NONE);
this._toolbarOperations[ZaOperation.HELP]=new ZaOperation(ZaOperation.HELP,ZaMsg.TBB_Help,ZaMsg.TBB_Help_tt,"Help","Help",new AjxListener(this,this._helpButtonListener));
this._toolbarOrder.push(ZaOperation.NONE);
this._toolbarOrder.push(ZaOperation.HELP)
};
ZaController.initToolbarMethods.ZaBulkProvisionTasksController.push(ZaBulkProvisionTasksController.initToolbarMethod);
ZaBulkProvisionTasksController.initPopupMenuMethod=function(){
var e=false;
if(ZaSettings.HAVE_MORE_DOMAINS||ZaZimbraAdmin.currentAdminAccount.attrs[ZaAccount.A_zimbraIsAdminAccount]=="TRUE"){
e=true
}else{
e=ZaZimbraAdmin.canCreateAccount()
}
if(e){
this._popupOperations[ZaOperation.BULK_DATA_IMPORT]=new ZaOperation(ZaOperation.BULK_DATA_IMPORT,com_zimbra_bulkprovision.TB_IMAP_Import,com_zimbra_bulkprovision.TB_IMAP_Import_tt,"ApplianceMigration","ApplianceMigration",new AjxListener(this,this.bulkDataImportListener));
this._popupOperations[ZaOperation.DELETE]=new ZaOperation(ZaOperation.DELETE,com_zimbra_bulkprovision.DeleteTask,com_zimbra_bulkprovision.DeleteTask_tt,"Delete","Delete",new AjxListener(this,this.deleteButtonListener));
this._popupOperations[ZaOperation.REFRESH]=new ZaOperation(ZaOperation.REFRESH,ZaMsg.TBB_Refresh,ZaMsg.TBB_Refresh_tt,"Refresh","Refresh",new AjxListener(this,this.refreshButtonListener))
}};
ZaController.initPopupMenuMethods.ZaBulkProvisionTasksController.push(ZaBulkProvisionTasksController.initPopupMenuMethod);
ZaBulkProvisionTasksController.prototype.refreshButtonListener=function(e){
var t=ZaBulkProvision.getBulkDataImportTasks();
if(t!=null){
this._contentView.set(t.getVector())
}
this.changeActionsState()
};
ZaBulkProvisionTasksController.prototype.deleteButtonListener=function(e){
ZaApp.getInstance().dialogs.confirmMessageDialog.setMessage(com_zimbra_bulkprovision.ConfirmDeleteTask,DwtMessageDialog.INFO_STYLE);
ZaApp.getInstance().dialogs.confirmMessageDialog.registerCallback(DwtDialog.YES_BUTTON,this.deleteAndGoAway,this,null);
ZaApp.getInstance().dialogs.confirmMessageDialog.registerCallback(DwtDialog.NO_BUTTON,this.closeCnfrmDlg,this,null);
ZaApp.getInstance().dialogs.confirmMessageDialog.popup()
};
ZaBulkProvisionTasksController.prototype.deleteAndGoAway=function(){
try{
ZaApp.getInstance().dialogs.confirmMessageDialog.popdown();
ZaBulkProvision.deleteBulkDataImportTasks();
this.show(ZaBulkProvision.getBulkDataImportTasks())
}
catch(e){
this._handleException(e,"ZaBulkProvisionTasksController.prototype.deleteAndGoAway",null,false)
}};
ZaBulkProvisionTasksController.prototype.openBulkProvisionDialog=function(n,t){
try{
var o=null;
if(n&&n.obj){
o=n.obj
}else{
o=new ZaBulkProvision()
}
if(n&&n.hideWiz){
if(ZaApp.getInstance().dialogs[n.hideWiz]){
ZaApp.getInstance().dialogs[n.hideWiz].popdown()
}}
if(!o[ZaBulkProvision.A2_provAction]){
o[ZaBulkProvision.A2_provAction]=ZaBulkProvision.ACTION_IMPORT_LDAP
}
o[ZaBulkProvision.A2_generatedFileLink]=null;
o[ZaBulkProvision.A2_maxResults]="0";
o[ZaBulkProvision.A2_GalLdapFilter]="(objectClass=organizationalPerson)";
o[ZaBulkProvision.A2_generatePassword]="TRUE";
o[ZaBulkProvision.A2_genPasswordLength]=8;
o[ZaBulkProvision.A2_ZimbraAdminLogin]=ZaZimbraAdmin.currentUserLogin;
o[ZaBulkProvision.A2_createDomains]="TRUE";
o[ZaBulkProvision.A2_connectionType]=ZaBulkProvision.CONNECTION_SSL;
ZaApp.getInstance().dialogs.importAccountsWizard=new ZaBulkImportXWizard(DwtShell.getShell(window),o);
if(n&&n.prevCallback){
ZaApp.getInstance().dialogs.importAccountsWizard.prevCallback=n.prevCallback;
o.prevCallback=n.prevCallback
}else{
ZaApp.getInstance().dialogs.importAccountsWizard.prevCallback=null;
o.prevCallback=null
}
if(n&&n.finishCallback){
ZaApp.getInstance().dialogs.importAccountsWizard.finishCallback=n.finishCallback;
o.finishCallback=n.finishCallback
}else{
ZaApp.getInstance().dialogs.importAccountsWizard.finishCallback=null;
o.finishCallback=null
}
ZaApp.getInstance().dialogs.importAccountsWizard.setObject(o);
ZaApp.getInstance().dialogs.importAccountsWizard.popup()
}
catch(e){
this._handleException(e,"ZaBulkProvisionTasksController.prototype.openBulkProvisionDialog",null,false)
}};
ZaBulkProvisionTasksController.prototype.openMigrationWizard=function(n,t){
try{
var o=null;
if(n&&n.obj){
o=n.obj
}else{
o=new ZaBulkProvision()
}
if(n&&n.hideWiz){
if(ZaApp.getInstance().dialogs[n.hideWiz]){
ZaApp.getInstance().dialogs[n.hideWiz].popdown()
}}
o[ZaBulkProvision.A2_provAction]=ZaBulkProvision.ACTION_GENERATE_MIG_XML;
o[ZaBulkProvision.A2_generatedFileLink]=null;
o[ZaBulkProvision.A2_maxResults]="0";
o[ZaBulkProvision.A2_GalLdapFilter]="(objectClass=organizationalPerson)";
o[ZaBulkProvision.A2_generatePassword]="TRUE";
o[ZaBulkProvision.A2_provisionUsers]="TRUE";
o[ZaBulkProvision.A2_importMails]="TRUE";
o[ZaBulkProvision.A2_importContacts]="TRUE";
o[ZaBulkProvision.A2_importTasks]="TRUE";
o[ZaBulkProvision.A2_importCalendar]="TRUE";
o[ZaBulkProvision.A2_InvalidSSLOk]="TRUE";
o[ZaBulkProvision.A2_genPasswordLength]=8;
o[ZaBulkProvision.A2_ZimbraAdminLogin]=ZaZimbraAdmin.currentUserLogin;
o[ZaBulkProvision.A2_createDomains]="TRUE";
o[ZaBulkProvision.A2_connectionType]=ZaBulkProvision.CONNECTION_SSL;
ZaApp.getInstance().dialogs.migrationWizard=new ZaMigrationXWizard(DwtShell.getShell(window),o);
if(n&&n.prevCallback){
ZaApp.getInstance().dialogs.migrationWizard.prevCallback=n.prevCallback;
o.prevCallback=n.prevCallback
}else{
ZaApp.getInstance().dialogs.migrationWizard.prevCallback=null;
o.prevCallback=null
}
ZaApp.getInstance().dialogs.migrationWizard.setObject(o);
ZaApp.getInstance().dialogs.migrationWizard.popup()
}
catch(e){
this._handleException(e,"ZaBulkProvisionTasksController.prototype.openMigrationWizard",null,false)
}};
ZaBulkProvisionTasksController.prototype.bulkDataImportListener=function(s,l,t,n){
try{
if(!ZaApp.getInstance().dialogs.bulkDataImportWizard){
ZaApp.getInstance().dialogs.bulkDataImportWizard=new ZaBulkDataImportXWizard(this._container)
}
var r=null;
if(t&&typeof t=="object"){
r=t
}else{
r=new ZaBulkProvision();
r[ZaModel.currentStep]=ZaBulkDataImportXWizard.STEP_INTRODUCTION;
r[ZaBulkProvision.A2_provisionUsers]="TRUE";
r[ZaBulkProvision.A2_importEmail]="TRUE";
r[ZaBulkProvision.A2_sourceType]=ZaBulkProvision.SOURCE_TYPE_XML;
r[ZaBulkProvision.A2_sourceServerType]=ZaBulkProvision.MAIL_SOURCE_TYPE_IMAP;
r[ZaBulkProvision.A2_connectionType]=ZaBulkProvision.CONNECTION_SSL
}
if(l){
for(var e in l){
r[e]=l[e]
}}
if(s&&typeof s=="string"){
if(ZaApp.getInstance().dialogs[s]){
ZaApp.getInstance().dialogs[s].popdown()
}}
ZaApp.getInstance().dialogs.bulkDataImportWizard.setObject(r);
ZaApp.getInstance().dialogs.bulkDataImportWizard.popup()
}
catch(o){
this._handleException(o,"ZaBulkProvisionTasksController.prototype.bulkDataImportListener",null,false)
}};
ZaBulkProvisionTasksController.prototype._createUI=function(){
try{
var o=new Object();
this._contentView=new ZaBulkProvisionTasksView(this._container);
this._initToolbar();
this._toolbar=new ZaToolBar(this._container,this._toolbarOperations,this._toolbarOrder);
this._initPopupMenu();
this._actionMenu=new ZaPopupMenu(this._contentView,"ActionMenu",null,this._popupOperations);
o[ZaAppViewMgr.C_APP_CONTENT]=this._contentView;
if(!appNewUI){
o[ZaAppViewMgr.C_TOOLBAR_TOP]=this._toolbar;
var e={
openInNewTab:false,tabId:this.getContentViewId(),tab:this.getMainTab()};
ZaApp.getInstance().createView(this.getContentViewId(),o,e)
}else{
ZaApp.getInstance().getAppViewMgr().createView(this.getContentViewId(),o)
}
this._UICreated=true;
ZaApp.getInstance()._controllers[this.getContentViewId()]=this;
this._contentView.addSelectionListener(new AjxListener(this,this._listSelectionListener));
this._contentView.addActionListener(new AjxListener(this,this._listActionListener))
}
catch(t){
this._handleException(t,"ZaBulkProvisionTasksController.prototype._createUI",null,false);
return
}};
ZaBulkProvisionTasksController.prototype.set=function(e){
this.show(e)
};
ZaBulkProvisionTasksController.prototype._listSelectionListener=function(e){
this.changeActionsState()
};
ZaBulkProvisionTasksController.prototype._listActionListener=function(e){
this.changeActionsState();
this._actionMenu.popup(0,e.docX,e.docY)
};
ZaBulkProvisionTasksController.changeActionsStateMethod=function(r,s){
if(!this._contentView){
return
}
var o=this._contentView.getSelectionCount();
var l=false;
if(o>=1){
var e=this._contentView.getSelectedItems().getArray();
for(var t in e){
var n=this._contentView.getItemFromElement(e[t]);
if(n){
if(n.name=="default"){
l=true;
break
}}}}
if(o==1){
var n=this._contentView.getSelection()[0];
if(!n){
if(this._toolbarOperations[ZaOperation.DELETE]){
this._toolbarOperations[ZaOperation.DELETE].enabled=false
}
if(this._popupOperations[ZaOperation.DELETE]){
this._popupOperations[ZaOperation.DELETE].enabled=false
}}}else{
if(o<1){
if(this._toolbarOperations[ZaOperation.DELETE]){
this._toolbarOperations[ZaOperation.DELETE].enabled=false
}
if(this._popupOperations[ZaOperation.DELETE]){
this._popupOperations[ZaOperation.DELETE].enabled=false
}}}};
ZaController.changeActionsStateMethods.ZaBulkProvisionTasksController.push(ZaBulkProvisionTasksController.changeActionsStateMethod);
function ZaBulkDataImportXWizard(t,o){
var e="650px";
ZaXWizardDialog.call(this,t,null,com_zimbra_bulkprovision.BulkDataImport_Wiz_title,e,(AjxEnv.isIE?"330px":"320px"),"ZaBulkDataImportXWizard");
ZaBulkDataImportXWizard.xmlUploadFormId=Dwt.getNextId();
ZaBulkDataImportXWizard.attachmentInputId=Dwt.getNextId();
this.stepChoices=[{
label:com_zimbra_bulkprovision.DataImport_Wizard_Intro,value:ZaBulkDataImportXWizard.STEP_INTRODUCTION}
,{
label:com_zimbra_bulkprovision.DataImport_Wizard_Options,value:ZaBulkDataImportXWizard.STEP_OPTIONS}
,{
label:com_zimbra_bulkprovision.DataImport_File_Upload,value:ZaBulkDataImportXWizard.STEP_FILE_UPLOAD}
,{
label:com_zimbra_bulkprovision.DataImport_Wizard_AcctPicker,value:ZaBulkDataImportXWizard.STEP_ACCT_PICKER}
,{
label:com_zimbra_bulkprovision.DataImport_IMAP_Info,value:ZaBulkDataImportXWizard.STEP_IMAP_OPTIONS}
,{
label:com_zimbra_bulkprovision.DataImport_Review,value:ZaBulkDataImportXWizard.STEP_REVIEW}
,{
label:com_zimbra_bulkprovision.DataImport_Finish,value:ZaBulkDataImportXWizard.STEP_FINISH}
];
this.yesNoChoices=[{
value:"TRUE",label:ZaMsg.Yes}
,{
value:"FALSE",label:ZaMsg.No}
];
this.initForm(ZaBulkProvision.getMyXModel(),this.getMyXForm(o),null);
this._helpURL=[location.pathname,ZaUtil.HELP_URL,ZaBulkDataImportXWizard.helpURL,"?locid=",AjxEnv.DEFAULT_LOCALE].join("")
}
ZaBulkDataImportXWizard.STEP_INDEX=1;
ZaBulkDataImportXWizard.STEP_INTRODUCTION=ZaBulkDataImportXWizard.STEP_INDEX++;
ZaBulkDataImportXWizard.STEP_OPTIONS=ZaBulkDataImportXWizard.STEP_INDEX++;
ZaBulkDataImportXWizard.STEP_FILE_UPLOAD=ZaBulkDataImportXWizard.STEP_INDEX++;
ZaBulkDataImportXWizard.STEP_ACCT_PICKER=ZaBulkDataImportXWizard.STEP_INDEX++;
ZaBulkDataImportXWizard.STEP_IMAP_OPTIONS=ZaBulkDataImportXWizard.STEP_INDEX++;
ZaBulkDataImportXWizard.STEP_REVIEW=ZaBulkDataImportXWizard.STEP_INDEX++;
ZaBulkDataImportXWizard.STEP_FINISH=ZaBulkDataImportXWizard.STEP_INDEX++;
ZaBulkDataImportXWizard.prototype=new ZaXWizardDialog;
ZaBulkDataImportXWizard.prototype.constructor=ZaBulkDataImportXWizard;
ZaBulkDataImportXWizard.prototype.miniType=2;
ZaXDialog.XFormModifiers.ZaBulkDataImportXWizard=new Array();
ZaBulkDataImportXWizard.helpURL="account_migration/migrating_accounts.htm";
ZaBulkDataImportXWizard.prototype.getCacheName=function(){
return"bulkDataImportWizard"
};
ZaBulkDataImportXWizard.prototype.setObject=function(e){
this._containedObject=e;
this._containedObject[ZaBulkProvision.A2_src_acct_selection_pool]=e[ZaBulkProvision.A2_src_acct_selection_pool]||[];
this._containedObject[ZaBulkProvision.A2_account]=e[ZaBulkProvision.A2_account]||[];
this._containedObject[ZaBulkProvision.A2_accountPool]=e[ZaBulkProvision.A2_accountPool]||[];
this._containedObject._uuid=e._uuid||ZaUtil.getItemUUid();
this._localXForm.setInstance(this._containedObject);
if(this._containedObject[ZaModel.currentStep]>0){
this.goPage(this._containedObject[ZaModel.currentStep])
}};
ZaBulkDataImportXWizard.prototype.finishWizard=function(){
this.popdown();
ZaApp.getInstance().getBulkProvisionTasksController().show(ZaBulkProvision.getBulkDataImportTasks())
};
ZaBulkDataImportXWizard.prototype.startImportCallback=function(t,e){
if(e&&e.isException()){
this._button[DwtWizardDialog.FINISH_BUTTON].setEnabled(false);
this._button[DwtWizardDialog.NEXT_BUTTON].setEnabled(false);
this._button[DwtWizardDialog.PREV_BUTTON].setEnabled(true);
this._button[DwtDialog.CANCEL_BUTTON].setEnabled(true);
ZaApp.getInstance().getCurrentController()._handleException(e.getException(),"ZaBulkDataImportXWizard.prototype.previewCallback")
}else{
this._button[DwtWizardDialog.FINISH_BUTTON].setEnabled(true);
this._button[DwtWizardDialog.NEXT_BUTTON].setEnabled(false);
this._button[DwtWizardDialog.PREV_BUTTON].setEnabled(false);
this._button[DwtDialog.CANCEL_BUTTON].setEnabled(false);
this.goPage(ZaBulkDataImportXWizard.STEP_FINISH)
}};
ZaBulkDataImportXWizard.prototype.previewCallback=function(l,r){
if(r&&r.isException()){
this._button[DwtWizardDialog.FINISH_BUTTON].setEnabled(false);
this._button[DwtWizardDialog.NEXT_BUTTON].setEnabled(true);
this._button[DwtWizardDialog.PREV_BUTTON].setEnabled(true);
this._button[DwtDialog.CANCEL_BUTTON].setEnabled(true);
ZaApp.getInstance().getCurrentController()._handleException(r.getException(),"ZaBulkDataImportXWizard.prototype.previewCallback")
}else{
var e=r.getResponse().Body.BulkIMAPDataImportResponse;
var o=0;
var s=null;
var n=null;
var t=null;
var c=0;
if(e[ZaBulkProvision.A2_totalCount]&&e[ZaBulkProvision.A2_totalCount][0]&&e[ZaBulkProvision.A2_totalCount][0]._content){
o=e[ZaBulkProvision.A2_totalCount][0]._content
}
this._localXForm.setInstanceValue(o,ZaBulkProvision.A2_totalCount);
if(e[ZaBulkProvision.A2_runningCount]&&e[ZaBulkProvision.A2_runningCount][0]&&e[ZaBulkProvision.A2_runningCount][0]._content){
t=e[ZaBulkProvision.A2_runningCount][0]._content;
if(t){
this._localXForm.setInstanceValue(t,ZaBulkProvision.A2_runningCount)
}}
if(e[ZaBulkProvision.A2_idleCount]&&e[ZaBulkProvision.A2_idleCount][0]&&e[ZaBulkProvision.A2_idleCount][0]._content){
s=e[ZaBulkProvision.A2_idleCount][0]._content;
if(s){
this._localXForm.setInstanceValue(s,ZaBulkProvision.A2_idleCount)
}}
if(e[ZaBulkProvision.A2_finishedCount]&&e[ZaBulkProvision.A2_finishedCount][0]&&e[ZaBulkProvision.A2_finishedCount][0]._content){
n=e[ZaBulkProvision.A2_finishedCount][0]._content;
if(n){
this._localXForm.setInstanceValue(n,ZaBulkProvision.A2_finishedCount)
}}
if(e[ZaBulkProvision.A2_IMAPHost]&&e[ZaBulkProvision.A2_IMAPHost][0]&&e[ZaBulkProvision.A2_IMAPHost][0]._content){
this._localXForm.setInstanceValue(e[ZaBulkProvision.A2_IMAPHost][0]._content,ZaBulkProvision.A2_IMAPHost)
}
if(e[ZaBulkProvision.A2_IMAPPort]&&e[ZaBulkProvision.A2_IMAPPort][0]&&e[ZaBulkProvision.A2_IMAPPort][0]._content){
this._localXForm.setInstanceValue(e[ZaBulkProvision.A2_IMAPPort][0]._content,ZaBulkProvision.A2_IMAPPort)
}else{
if(l.nextStep==ZaBulkDataImportXWizard.STEP_IMAP_OPTIONS){
this._localXForm.setInstanceValue(993,ZaBulkProvision.A2_IMAPPort)
}}
if(e[ZaBulkProvision.A2_connectionType]&&e[ZaBulkProvision.A2_connectionType][0]&&e[ZaBulkProvision.A2_connectionType][0]._content){
this._localXForm.setInstanceValue(e[ZaBulkProvision.A2_connectionType][0]._content,ZaBulkProvision.A2_connectionType)
}
if(e[ZaBulkProvision.A2_useAdminLogin]&&e[ZaBulkProvision.A2_useAdminLogin][0]&&e[ZaBulkProvision.A2_useAdminLogin][0]._content){
c=parseInt(e[ZaBulkProvision.A2_useAdminLogin][0]._content)
}
if(c>0){
if(e[ZaBulkProvision.A2_IMAPAdminLogin]&&e[ZaBulkProvision.A2_IMAPAdminLogin][0]&&e[ZaBulkProvision.A2_IMAPAdminLogin][0]._content){
this._localXForm.setInstanceValue(e[ZaBulkProvision.A2_IMAPAdminLogin][0]._content,ZaBulkProvision.A2_IMAPAdminLogin)
}
if(e[ZaBulkProvision.A2_IMAPAdminPassword]&&e[ZaBulkProvision.A2_IMAPAdminPassword][0]&&e[ZaBulkProvision.A2_IMAPAdminPassword][0]._content){
this._localXForm.setInstanceValue(e[ZaBulkProvision.A2_IMAPAdminPassword][0]._content,ZaBulkProvision.A2_IMAPAdminPassword)
}
this._localXForm.setInstanceValue(1,ZaBulkProvision.A2_useAdminLogin)
}else{
this._localXForm.setInstanceValue(0,ZaBulkProvision.A2_useAdminLogin)
}
this._button[DwtWizardDialog.FINISH_BUTTON].setEnabled(false);
this._button[DwtWizardDialog.NEXT_BUTTON].setEnabled(true);
this._button[DwtWizardDialog.PREV_BUTTON].setEnabled(true);
this._button[DwtDialog.CANCEL_BUTTON].setEnabled(true);
this.goPage(l.nextStep)
}};
ZaBulkDataImportXWizard.getFileName=function(e){
if(e==null){
return null
}
var t=0;
if(AjxEnv.isWindows){
t=e.lastIndexOf("\\")
}else{
t=e.lastIndexOf("/")
}
return e.substring(t+1)
};
ZaBulkDataImportXWizard.prototype.getUploadFrameId=function(){
if(!this._uploadManagerIframeId){
var o=Dwt.getNextId();
var e=["<iframe name='",o,"' id='",o,"' src='",(AjxEnv.isIE&&location.protocol=="https:")?appContextPath+"/public/blank.html":'javascript:""',"' style='position: absolute; top: 0; left: 0; visibility: hidden'></iframe>"];
var t=document.createElement("div");
t.innerHTML=e.join("");
document.body.appendChild(t.firstChild);
this._uploadManagerIframeId=o
}
return this._uploadManagerIframeId
};
ZaBulkDataImportXWizard.prototype.getUploadManager=function(){
return this._uploadManager
};
ZaBulkDataImportXWizard.prototype.setUploadManager=function(e){
this._uploadManager=e
};
ZaBulkDataImportXWizard.prototype.popup=function(e){
ZaXWizardDialog.prototype.popup.call(this,e);
if(this.prevCallback){
this._button[DwtWizardDialog.PREV_BUTTON].setEnabled(true)
}else{
this._button[DwtWizardDialog.PREV_BUTTON].setEnabled(false)
}
this._button[DwtWizardDialog.FINISH_BUTTON].setEnabled(false)
};
ZaBulkDataImportXWizard.prototype.handleXFormChange=function(){
var e=this._containedObject[ZaModel.currentStep];
if(e!=ZaBulkDataImportXWizard.STEP_INTRODUCTION){
this._button[DwtWizardDialog.FINISH_BUTTON].setEnabled(false);
this._button[DwtWizardDialog.NEXT_BUTTON].setEnabled(true);
this._button[DwtWizardDialog.PREV_BUTTON].setEnabled(true);
this._button[DwtDialog.CANCEL_BUTTON].setEnabled(true)
}
if(e==ZaBulkDataImportXWizard.STEP_FINISH){
this._button[DwtWizardDialog.FINISH_BUTTON].setEnabled(true);
this._button[DwtWizardDialog.NEXT_BUTTON].setEnabled(false);
this._button[DwtWizardDialog.PREV_BUTTON].setEnabled(false);
this._button[DwtDialog.CANCEL_BUTTON].setEnabled(false)
}};
ZaBulkDataImportXWizard.prototype.goNext=function(){
var b=this._containedObject[ZaModel.currentStep];
if(b==ZaBulkDataImportXWizard.STEP_OPTIONS&&this._containedObject[ZaBulkProvision.A2_sourceType]==ZaBulkProvision.SOURCE_TYPE_XML&&(this._containedObject[ZaBulkProvision.A2_sourceServerType]==ZaBulkProvision.MAIL_SOURCE_TYPE_IMAP||this._containedObject[ZaBulkProvision.A2_sourceServerType]==ZaBulkProvision.MAIL_SOURCE_TYPE_EXCHANGE_IMAP||this._containedObject[ZaBulkProvision.A2_sourceServerType]==ZaBulkProvision.MAIL_SOURCE_TYPE_ZIMBRA)){
this.goPage(ZaBulkDataImportXWizard.STEP_FILE_UPLOAD);
this._button[DwtWizardDialog.FINISH_BUTTON].setEnabled(false);
this._button[DwtWizardDialog.NEXT_BUTTON].setEnabled(true);
this._button[DwtWizardDialog.PREV_BUTTON].setEnabled(true);
this._button[DwtDialog.CANCEL_BUTTON].setEnabled(true)
}else{
if(b==ZaBulkDataImportXWizard.STEP_OPTIONS&&this._containedObject[ZaBulkProvision.A2_sourceType]==ZaBulkProvision.SOURCE_TYPE_ZIMBRA&&(this._containedObject[ZaBulkProvision.A2_sourceServerType]==ZaBulkProvision.MAIL_SOURCE_TYPE_IMAP||this._containedObject[ZaBulkProvision.A2_sourceServerType]==ZaBulkProvision.MAIL_SOURCE_TYPE_EXCHANGE_IMAP||this._containedObject[ZaBulkProvision.A2_sourceServerType]==ZaBulkProvision.MAIL_SOURCE_TYPE_ZIMBRA)){
this._containedObject[ZaBulkProvision.A2_activateSearch]=1;
this.goPage(ZaBulkDataImportXWizard.STEP_ACCT_PICKER);
this._button[DwtWizardDialog.FINISH_BUTTON].setEnabled(false);
this._button[DwtWizardDialog.NEXT_BUTTON].setEnabled(true);
this._button[DwtWizardDialog.PREV_BUTTON].setEnabled(true);
this._button[DwtDialog.CANCEL_BUTTON].setEnabled(true)
}else{
if(b==ZaBulkDataImportXWizard.STEP_OPTIONS&&this._containedObject[ZaBulkProvision.A2_sourceType]==ZaBulkProvision.SOURCE_TYPE_REUSE_XML&&(this._containedObject[ZaBulkProvision.A2_sourceServerType]==ZaBulkProvision.MAIL_SOURCE_TYPE_IMAP||this._containedObject[ZaBulkProvision.A2_sourceServerType]==ZaBulkProvision.MAIL_SOURCE_TYPE_EXCHANGE_IMAP||this._containedObject[ZaBulkProvision.A2_sourceServerType]==ZaBulkProvision.MAIL_SOURCE_TYPE_ZIMBRA)){
try{
this._containedObject[ZaBulkProvision.A2_op]=ZaBulkProvision.OP_PREVIEW;
this._containedObject[ZaBulkProvision.A2_sourceType]=ZaBulkProvision.SOURCE_TYPE_XML;
var y=new AjxCallback(this,ZaBulkDataImportXWizard.prototype.previewCallback,{
nextStep:ZaBulkDataImportXWizard.STEP_IMAP_OPTIONS}
);
ZaBulkProvision.bulkDataIMport(this._containedObject,y)
}
catch(d){
this._app.getCurrentController()._handleException(d);
return
}}else{
if(b==ZaBulkDataImportXWizard.STEP_INTRODUCTION&&this._containedObject[ZaBulkProvision.A2_sourceServerType]==ZaBulkProvision.MAIL_SOURCE_TYPE_EXCHANGE){
var c=new AjxCallback(this._app.getCurrentController(),ZaBulkProvisionTasksController.prototype.bulkDataImportListener,["migrationWizard"]);
ZaBulkProvisionTasksController.prototype.openMigrationWizard.call(this._app.getCurrentController(),{
prevCallback:c,hideWiz:"bulkDataImportWizard"}
,null)
}else{
if(b==ZaBulkDataImportXWizard.STEP_INTRODUCTION&&(this._containedObject[ZaBulkProvision.A2_sourceServerType]==ZaBulkProvision.MAIL_SOURCE_TYPE_IMAP||this._containedObject[ZaBulkProvision.A2_sourceServerType]==ZaBulkProvision.MAIL_SOURCE_TYPE_EXCHANGE_IMAP)&&this._containedObject[ZaBulkProvision.A2_provisionUsers]=="TRUE"){
var m=new ZaBulkProvision();
if(this._containedObject[ZaBulkProvision.A2_sourceServerType]==ZaBulkProvision.MAIL_SOURCE_TYPE_EXCHANGE_IMAP){
m[ZaBulkProvision.A2_sourceType]=ZaBulkProvision.SOURCE_TYPE_XML;
m[ZaModel.currentStep]=ZaBulkDataImportXWizard.STEP_FILE_UPLOAD
}else{
m[ZaModel.currentStep]=ZaBulkDataImportXWizard.STEP_OPTIONS;
m[ZaBulkProvision.A2_sourceType]=ZaBulkProvision.SOURCE_TYPE_ZIMBRA
}
m[ZaBulkProvision.A2_sourceServerType]=this._containedObject[ZaBulkProvision.A2_sourceServerType];
m[ZaBulkProvision.A2_provisionUsers]="FALSE";
m[ZaBulkProvision.A2_importEmail]="TRUE";
m[ZaBulkProvision.A2_activateSearch]=1;
var l=new ZaBulkProvision();
l[ZaBulkProvision.A2_importEmail]=this._containedObject[ZaBulkProvision.A2_importEmail];
if(this._containedObject[ZaBulkProvision.A2_sourceServerType]==ZaBulkProvision.MAIL_SOURCE_TYPE_EXCHANGE_IMAP){
l[ZaBulkProvision.A2_provAction]=ZaBulkProvision.ACTION_IMPORT_AD
}else{
l[ZaBulkProvision.A2_provAction]=ZaBulkProvision.ACTION_IMPORT_LDAP
}
var k=new AjxCallback(this._app.getCurrentController(),ZaBulkProvisionTasksController.prototype.bulkDataImportListener,["importAccountsWizard",m]);
var u=new ZaBulkProvision();
u[ZaModel.currentStep]=b;
u[ZaBulkProvision.A2_sourceServerType]=this._containedObject[ZaBulkProvision.A2_sourceServerType];
u[ZaBulkProvision.A2_provisionUsers]=this._containedObject[ZaBulkProvision.A2_provisionUsers];
u[ZaBulkProvision.A2_importEmail]=this._containedObject[ZaBulkProvision.A2_importEmail];
u[ZaBulkProvision.A2_sourceType]=this._containedObject[ZaBulkProvision.A2_sourceType];
var c=new AjxCallback(this._app.getCurrentController(),ZaBulkProvisionTasksController.prototype.bulkDataImportListener,["importAccountsWizard",u]);
ZaBulkProvisionTasksController.prototype.openBulkProvisionDialog.call(this._app.getCurrentController(),{
obj:l,prevCallback:c,finishCallback:k,hideWiz:"bulkDataImportWizard"}
,null)
}else{
if(b==ZaBulkDataImportXWizard.STEP_INTRODUCTION&&this._containedObject[ZaBulkProvision.A2_sourceServerType]==ZaBulkProvision.MAIL_SOURCE_TYPE_ZIMBRA&&this._containedObject[ZaBulkProvision.A2_provisionUsers]=="TRUE"){
var m=new ZaBulkProvision();
m[ZaModel.currentStep]=ZaBulkDataImportXWizard.STEP_OPTIONS;
m[ZaBulkProvision.A2_sourceServerType]=this._containedObject[ZaBulkProvision.A2_sourceServerType];
m[ZaBulkProvision.A2_provisionUsers]="FALSE";
m[ZaBulkProvision.A2_importEmail]="TRUE";
m[ZaBulkProvision.A2_sourceType]=ZaBulkProvision.SOURCE_TYPE_ZIMBRA;
m[ZaBulkProvision.A2_activateSearch]=1;
var k=new AjxCallback(this._app.getCurrentController(),ZaBulkProvisionTasksController.prototype.bulkDataImportListener,["importAccountsWizard",m]);
var u=new ZaBulkProvision();
u[ZaModel.currentStep]=b;
u[ZaBulkProvision.A2_sourceServerType]=this._containedObject[ZaBulkProvision.A2_sourceServerType];
u[ZaBulkProvision.A2_provisionUsers]=this._containedObject[ZaBulkProvision.A2_provisionUsers];
u[ZaBulkProvision.A2_importEmail]=this._containedObject[ZaBulkProvision.A2_importEmail];
u[ZaBulkProvision.A2_sourceType]=this._containedObject[ZaBulkProvision.A2_sourceType];
var c=new AjxCallback(this._app.getCurrentController(),ZaBulkProvisionTasksController.prototype.bulkDataImportListener,["importAccountsWizard",u]);
var l=new ZaBulkProvision();
l[ZaBulkProvision.A2_provAction]=ZaBulkProvision.ACTION_IMPORT_ZIMBRA;
ZaBulkProvisionTasksController.prototype.openBulkProvisionDialog.call(this._app.getCurrentController(),{
prevCallback:c,finishCallback:k,hideWiz:"bulkDataImportWizard",obj:l}
,null)
}else{
if(b==ZaBulkDataImportXWizard.STEP_INTRODUCTION&&(this._containedObject[ZaBulkProvision.A2_sourceServerType]==ZaBulkProvision.MAIL_SOURCE_TYPE_IMAP||this._containedObject[ZaBulkProvision.A2_sourceServerType]==ZaBulkProvision.MAIL_SOURCE_TYPE_ZIMBRA||this._containedObject[ZaBulkProvision.A2_sourceServerType]==ZaBulkProvision.MAIL_SOURCE_TYPE_EXCHANGE_IMAP)&&this._containedObject[ZaBulkProvision.A2_provisionUsers]=="FALSE"&&this._containedObject[ZaBulkProvision.A2_importEmail]=="TRUE"){
if(this._containedObject[ZaBulkProvision.A2_sourceServerType]==ZaBulkProvision.MAIL_SOURCE_TYPE_EXCHANGE_IMAP){
this._containedObject[ZaBulkProvision.A2_sourceType]=ZaBulkProvision.SOURCE_TYPE_XML;
this.goPage(ZaBulkDataImportXWizard.STEP_FILE_UPLOAD)
}else{
this._containedObject[ZaBulkProvision.A2_sourceType]=ZaBulkProvision.SOURCE_TYPE_ZIMBRA;
this.goPage(ZaBulkDataImportXWizard.STEP_OPTIONS)
}
this._button[DwtWizardDialog.FINISH_BUTTON].setEnabled(false);
this._button[DwtWizardDialog.NEXT_BUTTON].setEnabled(true);
this._button[DwtWizardDialog.PREV_BUTTON].setEnabled(true);
this._button[DwtDialog.CANCEL_BUTTON].setEnabled(true)
}else{
if(b==ZaBulkDataImportXWizard.STEP_INTRODUCTION&&this._containedObject[ZaBulkProvision.A2_provisionUsers]=="FALSE"&&this._containedObject[ZaBulkProvision.A2_importEmail]=="FALSE"){
ZaApp.getInstance().getCurrentController().popupErrorDialog(com_zimbra_bulkprovision.ERROR_PLEASE_SELECT_YES);
return
}else{
if(b==ZaBulkDataImportXWizard.STEP_FILE_UPLOAD){
var g=document.getElementById(ZaBulkDataImportXWizard.xmlUploadFormId);
var o=g.getElementsByTagName("input");
var e=[];
for(var r=0;
r<o.length;
r++){
if(o[r].type=="file"){
var t=o[r].name;
var p=ZaBulkDataImportXWizard.getFileName(o[r].value);
if(t=="xmlFile"){
if(p==null||p.length<=0){
this._app.getCurrentController().popupErrorDialog(com_zimbra_bulkprovision.error_no_bulk_file_specified);
return
}
break
}}}
try{
this._button[DwtWizardDialog.FINISH_BUTTON].setEnabled(false);
this._button[DwtWizardDialog.NEXT_BUTTON].setEnabled(false);
this._button[DwtWizardDialog.PREV_BUTTON].setEnabled(false);
this._button[DwtDialog.CANCEL_BUTTON].setEnabled(true);
var f=new AjxCallback(this,this._uploadCallback);
ZaUploader.upload.call(this,f,[ZaBulkDataImportXWizard.attachmentInputId],ZaBulkDataImportXWizard.xmlUploadFormId)
}
catch(s){
this._app.getCurrentController().popupErrorDialog((s&&s.msg)?s.msg:com_zimbra_bulkprovision.error_no_bulk_file_specified)
}}else{
if(b==ZaBulkDataImportXWizard.STEP_ACCT_PICKER){
if(AjxUtil.isEmpty(this._containedObject[ZaBulkProvision.A2_account])){
ZaApp.getInstance().getCurrentController().popupErrorDialog(com_zimbra_bulkprovision.ERROR_MUST_SELECT_ACCOUNTS);
return
}
this._containedObject[ZaBulkProvision.A2_useAdminLogin]=1;
this.goPage(ZaBulkDataImportXWizard.STEP_IMAP_OPTIONS)
}else{
if(b==ZaBulkDataImportXWizard.STEP_IMAP_OPTIONS){
if(this._containedObject[ZaBulkProvision.A2_sourceType]!=ZaBulkProvision.SOURCE_TYPE_XML&&this._containedObject[ZaBulkProvision.A2_useAdminLogin]!=1){
ZaApp.getInstance().getCurrentController().popupErrorDialog(com_zimbra_bulkprovision.REQUIRED_TO_USE_ADMIN_CREDENTIALS);
return
}
if(this._containedObject[ZaBulkProvision.A2_useAdminLogin]==1){
if(AjxUtil.isEmpty(this._containedObject[ZaBulkProvision.A2_IMAPAdminLogin])){
ZaApp.getInstance().getCurrentController().popupErrorDialog(com_zimbra_bulkprovision.ERROR_IMAP_ADMIN_LOGIN_REQUIRED);
return
}
if(AjxUtil.isEmpty(this._containedObject[ZaBulkProvision.A2_IMAPAdminPassword])){
ZaApp.getInstance().getCurrentController().popupErrorDialog(com_zimbra_bulkprovision.ERROR_IMAP_ADMIN_PASSWORD_REQUIRED);
return
}
if(this._containedObject[ZaBulkProvision.A2_IMAPAdminPassword]!=this._containedObject[ZaBulkProvision.A2_IMAPAdminPasswordConfirm]){
ZaApp.getInstance().getCurrentController().popupErrorDialog(com_zimbra_bulkprovision.ERROR_PASSWORDS_DONT_MATCH);
return
}}
if(AjxUtil.isEmpty(this._containedObject[ZaBulkProvision.A2_IMAPHost])){
ZaApp.getInstance().getCurrentController().popupErrorDialog(com_zimbra_bulkprovision.ERROR_IMAP_HOST_REQUIRED);
return
}
if(AjxUtil.isEmpty(this._containedObject[ZaBulkProvision.A2_IMAPPort])){
ZaApp.getInstance().getCurrentController().popupErrorDialog(com_zimbra_bulkprovision.ERROR_IMAP_PORT_REQUIRED);
return
}
if(AjxUtil.isEmpty(this._containedObject[ZaBulkProvision.A2_connectionType])){
ZaApp.getInstance().getCurrentController().popupErrorDialog(com_zimbra_bulkprovision.ERROR_IMAP_CONNECTION_TYPE_REQUIRED);
return
}
this._button[DwtWizardDialog.FINISH_BUTTON].setEnabled(false);
this._button[DwtWizardDialog.NEXT_BUTTON].setEnabled(false);
this._button[DwtWizardDialog.PREV_BUTTON].setEnabled(false);
this._button[DwtDialog.CANCEL_BUTTON].setEnabled(true);
this._containedObject[ZaBulkProvision.A2_op]=ZaBulkProvision.OP_PREVIEW;
var y=new AjxCallback(this,ZaBulkDataImportXWizard.prototype.previewCallback,{
nextStep:ZaBulkDataImportXWizard.STEP_REVIEW}
);
ZaBulkProvision.bulkDataIMport(this._containedObject,y)
}else{
if(b==ZaBulkDataImportXWizard.STEP_REVIEW){
this._button[DwtWizardDialog.NEXT_BUTTON].setEnabled(false);
this._button[DwtDialog.CANCEL_BUTTON].setEnabled(false);
this._button[DwtWizardDialog.PREV_BUTTON].setEnabled(false);
this._button[DwtWizardDialog.FINISH_BUTTON].setEnabled(false);
var y=new AjxCallback(this,ZaBulkDataImportXWizard.prototype.startImportCallback,{}
);
this._containedObject[ZaBulkProvision.A2_op]=ZaBulkProvision.OP_START_IMPORT;
ZaBulkProvision.bulkDataIMport(this._containedObject,y)
}}}}}}}}}}}}};
ZaBulkDataImportXWizard.prototype.goPrev=function(){
var t=this._containedObject[ZaModel.currentStep];
var e;
if(t==ZaBulkDataImportXWizard.STEP_REVIEW){
e=ZaBulkDataImportXWizard.STEP_IMAP_OPTIONS;
this._button[DwtWizardDialog.NEXT_BUTTON].setEnabled(true);
this._button[DwtWizardDialog.PREV_BUTTON].setEnabled(true)
}else{
if(t==ZaBulkDataImportXWizard.STEP_IMAP_OPTIONS){
if(this._containedObject[ZaBulkProvision.A2_sourceType]==ZaBulkProvision.SOURCE_TYPE_XML){
e=ZaBulkDataImportXWizard.STEP_FILE_UPLOAD
}else{
if(this._containedObject[ZaBulkProvision.A2_sourceType]==ZaBulkProvision.SOURCE_TYPE_ZIMBRA){
e=ZaBulkDataImportXWizard.STEP_ACCT_PICKER
}}
this._button[DwtWizardDialog.NEXT_BUTTON].setEnabled(true);
this._button[DwtWizardDialog.PREV_BUTTON].setEnabled(true)
}else{
if(t==ZaBulkDataImportXWizard.STEP_FILE_UPLOAD){
if(this._containedObject[ZaBulkProvision.A2_sourceServerType]==ZaBulkProvision.MAIL_SOURCE_TYPE_EXCHANGE_IMAP){
this._containedObject[ZaBulkProvision.A2_sourceType]=ZaBulkProvision.SOURCE_TYPE_XML;
e=ZaBulkDataImportXWizard.STEP_INTRODUCTION
}else{
e=ZaBulkDataImportXWizard.STEP_OPTIONS;
this._button[DwtWizardDialog.NEXT_BUTTON].setEnabled(true);
this._button[DwtWizardDialog.PREV_BUTTON].setEnabled(true)
}}else{
if(t==ZaBulkDataImportXWizard.STEP_ACCT_PICKER){
e=ZaBulkDataImportXWizard.STEP_OPTIONS;
this._button[DwtWizardDialog.NEXT_BUTTON].setEnabled(true);
this._button[DwtWizardDialog.PREV_BUTTON].setEnabled(true)
}else{
if(t==ZaBulkDataImportXWizard.STEP_FINISH){
e=ZaBulkDataImportXWizard.STEP_REVIEW;
this._button[DwtWizardDialog.NEXT_BUTTON].setEnabled(true);
this._button[DwtWizardDialog.PREV_BUTTON].setEnabled(true)
}else{
if(this.prevCallback&&t==ZaBulkDataImportXWizard.STEP_INTRODUCTION){
this.prevCallback.run(null);
return
}else{
if(t==ZaBulkDataImportXWizard.STEP_OPTIONS){
e=ZaBulkDataImportXWizard.STEP_INTRODUCTION;
this._button[DwtWizardDialog.NEXT_BUTTON].setEnabled(true);
if(this.prevCallback){
this._button[DwtWizardDialog.PREV_BUTTON].setEnabled(true)
}else{
this._button[DwtWizardDialog.PREV_BUTTON].setEnabled(false)
}}}}}}}}
this._button[DwtWizardDialog.FINISH_BUTTON].setEnabled(false);
this._button[DwtDialog.CANCEL_BUTTON].setEnabled(true);
this.goPage(e)
};
ZaBulkDataImportXWizard.prototype._uploadCallback=function(e,t){
var o=this._containedObject[ZaModel.currentStep];
if(t&&t[0]&&e==AjxPost.SC_OK){
if(t[0].aid!=null&&t[0].aid.length>0){
this._containedObject[ZaBulkProvision.A_aid]=t[0].aid
}else{
this._app.getCurrentController().popupErrorDialog(com_zimbra_bulkprovision.error_upload_bulk_no_aid);
return
}
try{
this._containedObject[ZaBulkProvision.A2_op]=ZaBulkProvision.OP_PREVIEW;
this._containedObject[ZaBulkProvision.A2_sourceType]=ZaBulkProvision.SOURCE_TYPE_XML;
var r=new AjxCallback(this,ZaBulkDataImportXWizard.prototype.previewCallback,{
nextStep:ZaBulkDataImportXWizard.STEP_IMAP_OPTIONS}
);
ZaBulkProvision.bulkDataIMport(this._containedObject,r)
}
catch(n){
this._app.getCurrentController()._handleException(n);
return
}}else{
var s=AjxMessageFormat.format(com_zimbra_bulkprovision.error_upload_bulk,[e]);
this._app.getCurrentController().popupErrorDialog(s)
}};
ZaBulkDataImportXWizard.isAccountSourceLDAP=function(){
var e=this.getModel().getInstanceValue(this.getInstance(),ZaBulkProvision.A2_sourceType);
return(e==ZaBulkProvision.SOURCE_TYPE_LDAP)
};
ZaBulkDataImportXWizard.getUploadFormHtml=function(){
var o=appContextPath+"/../service/upload";
var t=[];
var e=0;
t[e++]="<div style='height:50px;width: 500px; overflow:auto;'><form method='POST' action='";
t[e++]=o;
t[e++]="' id='";
t[e++]=ZaBulkDataImportXWizard.xmlUploadFormId;
t[e++]="' enctype='multipart/form-data'>";
t[e++]="<div><table border=0 cellspacing=0 cellpadding=2 style='table-layout: fixed;'> ";
t[e++]="<tbody><tr><td width=65>"+com_zimbra_bulkprovision.XML_Upload_file+"</td>";
t[e++]="<td><input type=file  name='bulkFile' size='45' id='";
t[e++]=ZaBulkDataImportXWizard.attachmentInputId;
t[e++]="'></input></form></td></tr>";
t[e++]="</tbody></table></div>";
t[e++]="</form></div>";
return t.join("")
};
ZaBulkDataImportXWizard.fwdPoolButtonHndlr=function(e){
var t=parseInt(this.getInstanceValue("/poolPagenum"));
this.setInstanceValue(t+1,"/poolPagenum");
ZaBulkDataImportXWizard.srchButtonHndlr.call(this,e)
};
ZaBulkDataImportXWizard.backPoolButtonHndlr=function(e){
var t=parseInt(this.getInstanceValue("/poolPagenum"))-1;
this.setInstanceValue(t,"/poolPagenum");
ZaBulkDataImportXWizard.srchButtonHndlr.call(this,e)
};
ZaBulkDataImportXWizard.srchButtonHndlr=function(o){
var t=this.getForm().getInstance();
var e=this.getForm().parent;
var n={};
n.types=[ZaSearch.ACCOUNTS];
if(t[ZaSearch.A_query]){
n.query=ZaSearch.getSearchByNameQuery(t[ZaSearch.A_query])
}else{
n.query=""
}
n.limit=ZaSettings.RESULTSPERPAGE;
if(!t[ZaBulkProvision.A2_poolPagenum]){
t[ZaBulkProvision.A2_poolPagenum]=0
}
n.offset=t[ZaBulkProvision.A2_poolPagenum]*ZaSettings.RESULTSPERPAGE;
n.attrs=[ZaItem.A_zimbraId,ZaAccount.A_uid,ZaAccount.A_displayname,ZaResource.A_zimbraCalResType].join(",");
n.callback=new AjxCallback(e,ZaBulkDataImportXWizard.srchAccountsClbck);
this.getModel().setInstanceValue(this.getInstance(),ZaBulkProvision.A2_activateSearch,0);
ZaSearch.searchDirectory(n)
};
ZaBulkDataImportXWizard.srchAccountsClbck=function(r){
var e=this._localXForm.getInstance();
try{
if(!r){
throw (new AjxException(ZaMsg.ERROR_EMPTY_RESPONSE_ARG,AjxException.UNKNOWN,"ZaBulkDataImportXWizard.srchAccountsClbck"))
}
if(r.isException()){
throw (r.getException())
}else{
var o=r.getResponse().Body.SearchDirectoryResponse;
var s=new ZaItemList(null);
s.loadFromJS(o);
this._localXForm.setInstanceValue(s.getArray(),ZaBulkProvision.A2_accountPool);
var t=Math.ceil(o.searchTotal/ZaSettings.RESULTSPERPAGE);
this._localXForm.setInstanceValue(t,ZaBulkProvision.A2_poolNumPages)
}}
catch(n){
ZaApp.getInstance().getCurrentController()._handleException(n,"ZaBulkDataImportXWizard.srchAccountsClbck")
}
this._localXForm.setInstanceValue(1,ZaBulkProvision.A2_activateSearch)
};
ZaBulkDataImportXWizard.accPoolSelectionListener=function(){
var e=this.widget.getSelection();
if(e&&e.length){
e.sort();
this.getModel().setInstanceValue(this.getInstance(),ZaBulkProvision.A2_src_acct_selection_pool,e)
}else{
this.getModel().setInstanceValue(this.getInstance(),ZaBulkProvision.A2_src_acct_selection_pool,null)
}};
ZaBulkDataImportXWizard.accTargetSelectionListener=function(){
var e=this.widget.getSelection();
if(e&&e.length){
e.sort();
this.getModel().setInstanceValue(this.getInstance(),ZaBulkProvision.A2_tgt_acct_selection_pool,e)
}else{
this.getModel().setInstanceValue(this.getInstance(),ZaBulkProvision.A2_tgt_acct_selection_pool,null)
}};
ZaBulkDataImportXWizard.removeAllButtonHndlr=function(o){
var t=this.getForm();
var e=t.getInstance();
e[ZaBulkProvision.A2_account]=new Array();
var n=e[ZaBulkProvision.A2_account]?e[ZaBulkProvision.A2_account]:[];
if(n.length>0){
t.parent._button[DwtWizardDialog.NEXT_BUTTON].setEnabled(true)
}else{
t.parent._button[DwtWizardDialog.NEXT_BUTTON].setEnabled(false)
}
this.getForm().setInstance(e)
};
ZaBulkDataImportXWizard.addAllButtonHndlr=function(d){
var t=this.getForm();
var m=t.getInstance();
var e=m[ZaBulkProvision.A2_account]?m[ZaBulkProvision.A2_account]:[];
var l=m[ZaBulkProvision.A2_accountPool];
var c=new Array();
if(l){
var o=l.length;
var u=e.length;
for(var n=0;
n<o;
n++){
var f=false;
for(var r=u-1;
r>=0;
r--){
if(e[r].id==l[n].id){
f=true;
break
}}
if(!f){
c.push(l[n])
}}}
c=c.concat(e);
this.getModel().setInstanceValue(this.getInstance(),ZaBulkProvision.A2_account,c);
this.getModel().setInstanceValue(this.getInstance(),ZaBulkProvision.A2_accountPool,new Array());
var m=t.getInstance();
var s=m[ZaBulkProvision.A2_account]?m[ZaBulkProvision.A2_account]:[];
if(s.length>0){
t.parent._button[DwtWizardDialog.NEXT_BUTTON].setEnabled(true)
}else{
t.parent._button[DwtWizardDialog.NEXT_BUTTON].setEnabled(false)
}};
ZaBulkDataImportXWizard.addButtonHndlr=function(m){
var e=this.getForm();
var g=e.getInstance();
var f=e.getItemsById(ZaBulkProvision.A2_accountPool);
if(f&&(f instanceof Array)&&f[0]&&f[0].widget){
var p=f[0].widget.getSelection();
var n=g[ZaBulkProvision.A2_account]?g[ZaBulkProvision.A2_account]:[];
var u=(p instanceof AjxVector)?p.getArray():(p instanceof Array)?p:[p];
if(u){
u.sort(ZaItem.compareNamesDesc);
var s=[];
var c=n.length;
for(var l=0;
l<c;
l++){
s.push(n[l])
}
s.sort(ZaItem.compareNamesDesc);
var d=[];
var o=u.length;
for(var l=o-1;
l>=0;
l--){
var t=false;
c=s.length;
for(var r=c-1;
r>=0;
r--){
if(u[l].name==s[r].name){
t=true;
s.splice(r,c-r);
break
}}
if(!t){
n.push(u[l])
}}
this.getModel().setInstanceValue(this.getInstance(),ZaBulkProvision.A2_account,n)
}}
if(n.length>0){
e.parent._button[DwtWizardDialog.NEXT_BUTTON].setEnabled(true)
}else{
e.parent._button[DwtWizardDialog.NEXT_BUTTON].setEnabled(false)
}};
ZaBulkDataImportXWizard.removeButtonHndlr=function(u){
var e=this.getForm();
var f=e.getInstance();
var d=e.getItemsById(ZaBulkProvision.A2_account);
if(d&&(d instanceof Array)&&d[0]&&d[0].widget){
var m=d[0].widget.getSelection();
var o=f[ZaBulkProvision.A2_account]?f[ZaBulkProvision.A2_account]:[];
o.sort(ZaItem.compareNamesDesc);
var n=[];
var c=(m instanceof AjxVector)?m.getArray():(m instanceof Array)?m:[m];
if(c){
c.sort(ZaItem.compareNamesDesc);
var t=c.length;
var l=o.length;
for(var r=0;
r<l;
r++){
n.push(o[r])
}
for(var r=t-1;
r>=0;
r--){
var l=n.length;
for(var s=l-1;
s>=0;
s--){
if(c[r].name==n[s].name){
o.splice(s,1);
n.splice(s,l-s)
}}}
this.getModel().setInstanceValue(this.getInstance(),ZaBulkProvision.A2_account,o)
}}
if(o.length>0){
e.parent._button[DwtWizardDialog.NEXT_BUTTON].setEnabled(true)
}else{
e.parent._button[DwtWizardDialog.NEXT_BUTTON].setEnabled(false)
}};
ZaBulkDataImportXWizard.addAllBtnEnabled=function(){
return !AjxUtil.isEmpty(this.getInstanceValue(ZaBulkProvision.A2_accountPool))
};
ZaBulkDataImportXWizard.removeAllBtnEnabled=function(){
return(this.instance&&this.instance[ZaBulkProvision.A2_account]&&this.instance[ZaBulkProvision.A2_account].length>0)
};
ZaBulkDataImportXWizard.forwardBtnEnabled=function(){
return(parseInt(this.getInstanceValue(ZaBulkProvision.A2_poolPagenum))<(parseInt(this.getInstanceValue(ZaBulkProvision.A2_poolNumPages))-1)&&this.getInstanceValue(ZaBulkProvision.A2_activateSearch)==1)
};
ZaBulkDataImportXWizard.backBtnEnabled=function(){
return(parseInt(this.getInstanceValue(ZaBulkProvision.A2_poolPagenum))>0&&this.getInstanceValue(ZaBulkProvision.A2_activateSearch)==1)
};
ZaBulkDataImportXWizard.myXFormModifier=function(l,m){
var c=new Array();
var n=1;
c[0]=new ZaListHeaderItem("type",ZaMsg.ALV_Type_col,null,"34px",null,"objectClass",true,true);
c[1]=new ZaListHeaderItem(ZaAccount.A_name,ZaMsg.ALV_Name_col,null,"auto",null,ZaAccount.A_name,true,true);
var p=new Array();
var u={
type:_CASE_,numCols:2,colSizes:["250px","380px"],tabGroupKey:ZaBulkDataImportXWizard.STEP_OPTIONS,caseKey:ZaBulkDataImportXWizard.STEP_INTRODUCTION,items:[{
type:_DWT_ALERT_,colSpan:2,style:DwtAlert.INFO,iconVisible:false,content:com_zimbra_bulkprovision.DataImportWizardOverview,visibilityChecks:[]}
,{
ref:ZaBulkProvision.A2_sourceServerType,type:_OSELECT1_,label:com_zimbra_bulkprovision.SourceServerType,labelLocation:_LEFT_,visibilityChecks:[],enableDisableChecks:[]}
,{
type:_OSELECT1_,label:com_zimbra_bulkprovision.ImportAccountRecordsQ,ref:ZaBulkProvision.A2_provisionUsers,choices:this.yesNoChoices,visibilityChecks:[],enableDisableChecks:[]}
,{
type:_OSELECT1_,label:com_zimbra_bulkprovision.ImportAccountMailQ,ref:ZaBulkProvision.A2_importEmail,choices:this.yesNoChoices,visibilityChecks:[],enableDisableChecks:[]}
]};
p.push(u);
var e={
type:_CASE_,numCols:2,colSizes:["250px","380px"],tabGroupKey:ZaBulkDataImportXWizard.STEP_OPTIONS,caseKey:ZaBulkDataImportXWizard.STEP_OPTIONS,items:[{
type:_DWT_ALERT_,colSpan:2,style:DwtAlert.INFO,iconVisible:false,content:com_zimbra_bulkprovision.AccountListTypeNote,visibilityChecks:[]}
,{
type:_RADIO_,groupname:"source_selection_group",ref:ZaBulkProvision.A2_sourceType,bmolsnr:true,labelLocation:_RIGHT_,label:com_zimbra_bulkprovision.PickAccounts,updateElement:function(g){
this.getElement().checked=(g==ZaBulkProvision.SOURCE_TYPE_ZIMBRA)
}
,elementChanged:function(b,y,g){
this.setInstanceValue(ZaBulkProvision.SOURCE_TYPE_ZIMBRA,ZaBulkProvision.A2_sourceType)
}
,visibilityChecks:[[XForm.checkInstanceValueNot,ZaBulkProvision.A2_sourceServerType,ZaBulkProvision.MAIL_SOURCE_TYPE_EXCHANGE_IMAP]],enableDisableChecks:[]}
,{
type:_RADIO_,groupname:"source_selection_group",ref:ZaBulkProvision.A2_sourceType,bmolsnr:true,labelLocation:_RIGHT_,label:com_zimbra_bulkprovision.UploadAccountsInXML,updateElement:function(g){
this.getElement().checked=(g==ZaBulkProvision.SOURCE_TYPE_XML)
}
,elementChanged:function(b,y,g){
this.setInstanceValue(ZaBulkProvision.SOURCE_TYPE_XML,ZaBulkProvision.A2_sourceType)
}
,visibilityChecks:[],enableDisableChecks:[]}
,{
type:_RADIO_,groupname:"source_selection_group",ref:ZaBulkProvision.A2_sourceType,bmolsnr:true,labelLocation:_RIGHT_,label:com_zimbra_bulkprovision.ReuseAccountsXML,updateElement:function(g){
this.getElement().checked=(g==ZaBulkProvision.SOURCE_TYPE_REUSE_XML)
}
,elementChanged:function(b,y,g){
this.setInstanceValue(ZaBulkProvision.SOURCE_TYPE_REUSE_XML,ZaBulkProvision.A2_sourceType)
}
,visibilityChecks:[[XForm.checkInstanceValueNotEmty,ZaBulkProvision.A_aid]],enableDisableChecks:[],visibilityChangeEventSources:[ZaBulkProvision.A_aid]}
]};
p.push(e);
var d={
type:_CASE_,numCols:2,colSizes:["250px","380px"],tabGroupKey:ZaBulkDataImportXWizard.STEP_FILE_UPLOAD,caseKey:ZaBulkDataImportXWizard.STEP_FILE_UPLOAD,items:[{
type:_OUTPUT_,value:ZaBulkDataImportXWizard.getUploadFormHtml(),colSpan:2}
]};
p.push(d);
var r={
type:_CASE_,caseKey:ZaBulkDataImportXWizard.STEP_ACCT_PICKER,tabGroupKey:ZaBulkDataImportXWizard.STEP_ACCT_PICKER,numCols:2,colSizes:["250px","380px"],items:[{
type:_GROUP_,colSpan:2,numCols:3,width:"100%",colSizes:["170px","85px","170px"],cellspacing:"5px",items:[{
type:_TEXTFIELD_,cssClass:"admin_xform_name_input",width:"160px",ref:ZaSearch.A_query,label:null,elementChanged:function(v,b,y){
var g=y.charCode;
if(g==13||g==3){
ZaBulkDataImportXWizard.srchButtonHndlr.call(this)
}else{
this.getForm().itemChanged(this,v,y)
}}
,visibilityChecks:[],enableDisableChecks:[]}
,{
type:_DWT_BUTTON_,label:ZaMsg.DLXV_ButtonSearch,width:"80px",onActivate:ZaBulkDataImportXWizard.srchButtonHndlr,align:_CENTER_,enableDisableChecks:[[XForm.checkInstanceValue,ZaBulkProvision.A2_activateSearch,1]],enableDisableChangeEventSources:[ZaBulkProvision.A2_activateSearch]}
,{
type:_OUTPUT_,value:com_zimbra_bulkprovision.AccountsForDataImport,visibilityChecks:[]}
,{
ref:ZaBulkProvision.A2_accountPool,type:_DWT_LIST_,height:"200px",width:"170px",cssClass:"DLSource",bmolsnr:true,widgetClass:ZaAccMiniListView,headerList:c,rowSpan:4,hideHeader:true,onSelection:ZaBulkDataImportXWizard.accPoolSelectionListener,visibilityChecks:[],enableDisableChecks:[]}
,{
type:_DWT_BUTTON_,label:AjxMsg.addAll,width:"80px",onActivate:ZaBulkDataImportXWizard.addAllButtonHndlr,enableDisableChecks:[[XForm.checkInstanceValueNotEmty,ZaBulkProvision.A2_accountPool]],enableDisableChangeEventSources:[ZaBulkProvision.A2_accountPool]}
,{
ref:ZaBulkProvision.A2_account,type:_DWT_LIST_,height:"200px",width:"170px",cssClass:"DLSource",bmolsnr:true,widgetClass:ZaAccMiniListView,headerList:c,rowSpan:5,hideHeader:true,onSelection:ZaBulkDataImportXWizard.accTargetSelectionListener,visibilityChecks:[],enableDisableChecks:[]}
,{
type:_DWT_BUTTON_,label:AjxMsg.add,width:"80px",onActivate:ZaBulkDataImportXWizard.addButtonHndlr,bmolsnr:true,enableDisableChecks:[[XForm.checkInstanceValueNotEmty,ZaBulkProvision.A2_src_acct_selection_pool]],enableDisableChangeEventSources:[ZaBulkProvision.A2_src_acct_selection_pool]}
,{
type:_DWT_BUTTON_,label:AjxMsg.remove,width:"80px",onActivate:ZaBulkDataImportXWizard.removeButtonHndlr,bmolsnr:true,enableDisableChecks:[[XForm.checkInstanceValueNotEmty,ZaBulkProvision.A2_tgt_acct_selection_pool]],enableDisableChangeEventSources:[ZaBulkProvision.A2_tgt_acct_selection_pool]}
,{
type:_DWT_BUTTON_,label:AjxMsg.removeAll,width:"80px",onActivate:ZaBulkDataImportXWizard.removeAllButtonHndlr,enableDisableChecks:[[XForm.checkInstanceValueNotEmty,ZaBulkProvision.A2_account]],enableDisableChangeEventSources:[ZaBulkProvision.A2_account]}
,{
type:_GROUP_,numCols:3,colSizes:["80px","*","80px"],items:[{
type:_SPACER_,colSpan:3}
,{
type:_DWT_BUTTON_,label:ZaMsg.Previous,width:75,id:"backButton",icon:"LeftArrow",disIcon:"LeftArrowDis",onActivate:ZaBulkDataImportXWizard.backPoolButtonHndlr,align:_CENTER_,enableDisableChecks:[ZaBulkDataImportXWizard.backBtnEnabled],enableDisableChangeEventSources:[ZaBulkProvision.A2_poolPagenum,ZaBulkProvision.A2_activateSearch]}
,{
type:_CELLSPACER_}
,{
type:_DWT_BUTTON_,label:ZaMsg.Next,width:75,id:"fwdButton",icon:"RightArrow",disIcon:"RightArrowDis",onActivate:ZaBulkDataImportXWizard.fwdPoolButtonHndlr,align:_CENTER_,enableDisableChecks:[ZaBulkDataImportXWizard.forwardBtnEnabled],enableDisableChangeEventSources:[ZaBulkProvision.A2_poolPagenum,ZaBulkProvision.A2_activateSearch]}
]}
,{
type:_CELLSPACER_}
,{
type:_DWT_ALERT_,style:DwtAlert.INFORMATION,iconVisible:true,content:ZaMsg.pleaseWaitSearching,width:"200px",align:_CENTER_,cssStyle:"position:relative;top:-200;left:125;opacity: 0.8",visibilityChecks:[[XForm.checkInstanceValue,ZaBulkProvision.A2_activateSearch,0]],visibilityChangeEventSources:[ZaBulkProvision.A2_activateSearch]}
]}
]};
p.push(r);
var o={
type:_CASE_,numCols:2,colSizes:["250px","380px"],tablGroupKey:ZaBulkDataImportXWizard.STEP_IMAP_OPTIONS,caseKey:ZaBulkDataImportXWizard.STEP_IMAP_OPTIONS,items:[{
ref:ZaBulkProvision.A2_connectionType,type:_OSELECT1_,label:com_zimbra_bulkprovision.IMAPConnectionType,labelLocation:_LEFT_,visibilityChecks:[],enableDisableChecks:[],elementChanged:function(b,y,g){
this.setInstanceValue(b);
if(b==ZaBulkProvision.CONNECTION_CLEARTEXT){
this.setInstanceValue(143,ZaBulkProvision.A2_IMAPPort)
}else{
this.setInstanceValue(993,ZaBulkProvision.A2_IMAPPort)
}}}
,{
type:_TEXTFIELD_,label:com_zimbra_bulkprovision.IMAPHost,ref:ZaBulkProvision.A2_IMAPHost,visibilityChecks:[],enableDisableChecks:[]}
,{
type:_TEXTFIELD_,label:com_zimbra_bulkprovision.IMAPPort,ref:ZaBulkProvision.A2_IMAPPort,visibilityChecks:[],enableDisableChecks:[],bmolsnr:true}
,{
ref:ZaBulkProvision.A2_useAdminLogin,type:_CHECKBOX_,label:com_zimbra_bulkprovision.UseIMAPAdminCredentialsChkBx,trueValue:"1",falseValue:"0",visibilityChecks:[],enableDisableChecks:[]}
,{
type:_TEXTFIELD_,label:com_zimbra_bulkprovision.IMAPAdminLogin,ref:ZaBulkProvision.A2_IMAPAdminLogin,enableDisableChecks:[[XForm.checkInstanceValue,ZaBulkProvision.A2_useAdminLogin,"1"]],enableDisableChangeEventSources:[ZaBulkProvision.A2_useAdminLogin],visibilityChecks:[]}
,{
type:_SECRET_,label:com_zimbra_bulkprovision.IMAPAdminPassword,ref:ZaBulkProvision.A2_IMAPAdminPassword,enableDisableChecks:[[XForm.checkInstanceValue,ZaBulkProvision.A2_useAdminLogin,"1"]],enableDisableChangeEventSources:[ZaBulkProvision.A2_useAdminLogin],visibilityChecks:[]}
,{
type:_SECRET_,label:com_zimbra_bulkprovision.IMAPAdminPasswordConfirm,ref:ZaBulkProvision.A2_IMAPAdminPasswordConfirm,enableDisableChecks:[[XForm.checkInstanceValue,ZaBulkProvision.A2_useAdminLogin,"1"]],enableDisableChangeEventSources:[ZaBulkProvision.A2_useAdminLogin],visibilityChecks:[]}
]};
p.push(o);
var t={
type:_CASE_,numCols:2,colSizes:["250px","380px"],tablGroupKey:ZaBulkDataImportXWizard.STEP_REVIEW,caseKey:ZaBulkDataImportXWizard.STEP_REVIEW,items:[{
type:_OUTPUT_,label:com_zimbra_bulkprovision.TotalMailboxes,ref:ZaBulkProvision.A2_totalCount,visibilityChecks:[]}
,{
type:_OUTPUT_,label:com_zimbra_bulkprovision.RunningMailboxes,ref:ZaBulkProvision.A2_runningCount,visibilityChecks:[[XForm.checkInstanceValueNotEmty,ZaBulkProvision.A2_runningCount]],visibilityChangeEventSources:[ZaBulkProvision.A2_runningCount]}
,{
type:_OUTPUT_,label:com_zimbra_bulkprovision.IdleMailboxes,ref:ZaBulkProvision.A2_idleCount,visibilityChecks:[[XForm.checkInstanceValueNotEmty,ZaBulkProvision.A2_idleCount]],visibilityChangeEventSources:[ZaBulkProvision.A2_idleCount]}
,{
type:_OUTPUT_,label:com_zimbra_bulkprovision.FinishedMaiboxes,ref:ZaBulkProvision.A2_finishedCount,visibilityChecks:[[XForm.checkInstanceValueNotEmty,ZaBulkProvision.A2_finishedCount]],visibilityChangeEventSources:[ZaBulkProvision.A2_finishedCount]}
,{
type:_OUTPUT_,label:com_zimbra_bulkprovision.IMAPHost,ref:ZaBulkProvision.A2_IMAPHost,visibilityChecks:[],enableDisableChecks:[]}
,{
type:_OUTPUT_,label:com_zimbra_bulkprovision.IMAPPort,ref:ZaBulkProvision.A2_IMAPPort,visibilityChecks:[],enableDisableChecks:[]}
,{
ref:ZaBulkProvision.A2_connectionType,type:_OUTPUT_,label:com_zimbra_bulkprovision.IMAPConnectionType,labelLocation:_LEFT_,visibilityChecks:[],enableDisableChecks:[]}
,{
ref:ZaBulkProvision.A2_useAdminLogin,type:_OUTPUT_,label:com_zimbra_bulkprovision.UseIMAPAdminCredentials,getDisplayValue:function(g){
return g=="1"?ZaMsg.Yes:ZaMsg.No
}}
,{
type:_OUTPUT_,label:com_zimbra_bulkprovision.IMAPAdminLogin,ref:ZaBulkProvision.A2_IMAPAdminLogin,visibilityChecks:[],enableDisableChecks:[[XForm.checkInstanceValue,ZaBulkProvision.A2_useAdminLogin,"1"]],enableDisableChangeEventSources:[ZaBulkProvision.A2_useAdminLogin]}
,{
type:_DWT_ALERT_,colSpan:2,style:DwtAlert.INFO,iconVisible:false,content:com_zimbra_bulkprovision.ClickNextToStartImport,visibilityChecks:[]}
]};
p.push(t);
var f={
type:_CASE_,numCols:2,colSizes:["250px","380px"],tablGroupKey:ZaBulkDataImportXWizard.STEP_FINISH,caseKey:ZaBulkDataImportXWizard.STEP_FINISH,items:[{
type:_DWT_ALERT_,colSpan:2,style:DwtAlert.INFO,iconVisible:false,content:com_zimbra_bulkprovision.DataImportStarted,visibilityChecks:[]}
]};
p.push(f);
var s=630;
l.items=[{
type:_OUTPUT_,colSpan:2,align:_CENTER_,valign:_TOP_,ref:ZaModel.currentStep,choices:this.stepChoices,valueChangeEventSources:[ZaModel.currentStep]}
,{
type:_SEPARATOR_,align:_CENTER_,valign:_TOP_}
,{
type:_SPACER_,align:_CENTER_,valign:_TOP_}
,{
type:_SWITCH_,width:s,align:_LEFT_,valign:_TOP_,items:p}
]
};
ZaXDialog.XFormModifiers.ZaBulkDataImportXWizard.push(ZaBulkDataImportXWizard.myXFormModifier);
if(window.console&&window.console.log){
window.console.log("Starting loading com_zimbra_helptooltip.js")
}
if(ZaSettings&&ZaSettings.EnabledZimlet.com_zimbra_tooltip){
if(XFormItem){
XFormItem.prototype.helpTooltip=true;
XFormItem.prototype.showHelpTooltip=function(n){
var s=new DwtUiEvent(true);
s.setFromDhtmlEvent(n);
var o=this.getInheritedProperty("helpTooltipContent");
if(!o){
var e=this.getInheritedProperty("attributeName");
if(!e){
e=this.getRefPath()
}
if(!e){
return
}
var t=e.lastIndexOf("/");
if(t!=-1){
e=e.substring(t+1)
}
o=e
}
if(!o){
return
}
this._helpToolTipExt=new ZaHelpToolTipAdminExtension();
this._helpToolTipExt.handleHover(s.docX,s.docY,o)
};
XFormItem.prototype.hideHelpTooltip=function(e){
if(!this._helpToolTipExt){
return
}
this._helpToolTipExt.hoverOut()
}
}}
ZaHelpToolTipAdminExtension=function(){};
ZaHelpToolTipAdminExtension.prototype.handleHover=function(e,s,t){
this.hoverOver=true;
var o=DwtShell.getShell(window);
var n=o.getToolTip();
n.setContent('<div id="ZaHelpToolTipAdminExtension"></div>',true);
this.x=e;
this.y=s;
this.tooltip=n;
Dwt.setHandler(n._div,DwtEvent.ONMOUSEOUT,AjxCallback.simpleClosure(this.hoverOut,this));
this.canvas=document.getElementById("ZaHelpToolTipAdminExtension");
this.slideShow=new ZaToolTipView(this,this.canvas,t);
n.popup(this.x,this.y,true)
};
ZaHelpToolTipAdminExtension.prototype.redraw=function(){
if(!this.tooltip){
return
}
if(!this.x){
return
}
if(!this.y){
return
}
this.tooltip.popup(this.x,this.y,true)
};
ZaHelpToolTipAdminExtension.prototype.hoverOut=function(){
if(!this.tooltip){
return
}
this._hoverOver=false;
this.tooltip._poppedUp=false;
setTimeout(AjxCallback.simpleClosure(this.popDownIfMouseNotOnSlide,this),700)
};
ZaHelpToolTipAdminExtension.prototype.popDownIfMouseNotOnSlide=function(){
if(this._hoverOver){
return
}else{
if(this.slideShow&&this.slideShow.isMouseOverTooltip){
return
}else{
if(this.tooltip){
this.tooltip._poppedUp=true;
this.tooltip.popdown()
}}}};
if(window.console&&window.console.log){
window.console.log("loaded com_zimbra_helptooltip.js")
}
ZaHelpTooltip=function(){};
ZaHelpTooltip.prototype=new ZaItem();
ZaHelpTooltip.prototype.constructor=ZaHelpTooltip;
ZaHelpTooltip.A_description="description";
ZaHelpTooltip.descriptionCache={};
ZaHelpTooltip.cacheNumber=0;
ZaHelpTooltip.getDescByName=function(e){
if(ZaHelpTooltip.descriptionCache[e]!==undefined){
return ZaHelpTooltip.descriptionCache[e]
}
if(ZaHelpTooltip.cacheNumber>50){
ZaHelpTooltip.descriptionCache={}
}
ZaHelpTooltip.descriptionCache[e]=ZaHelpTooltip.getDescBySoap(e);
return ZaHelpTooltip.descriptionCache[e]
};
ZaHelpTooltip.getDescBySoap=function(e){
var n=AjxSoapDoc.create("GetAttributeInfoRequest",ZaZimbraAdmin.URN,null);
var o=n.setMethodAttribute("attrs",e);
var l=new Object();
l.soapDoc=n;
var t={
controller:ZaApp.getInstance().getCurrentController(),busyMsg:ZaMsg.BUSY_GET_DESC};
var r=ZaRequestMgr.invoke(l,t).Body.GetAttributeInfoResponse;
var s="";
if(r&&r.a&&r.a[0]){
s=r.a[0].desc
}
return s
};
ZaToolTipView=function(e,o,t){
this.tooltipZimlet=e;
this.canvas=o;
this._createView(o);
this._headDiv=document.getElementById(ZaToolTipView.toolTipHeadId);
this._attributeDiv=document.getElementById(ZaToolTipView.toolTipArributeId);
this._moreDiv=document.getElementById(ZaToolTipView.toolTipMoreId);
this._bodyDiv=document.getElementById(ZaToolTipView.toolTipBodyId);
this.updateAttribute(t);
this._moreDiv.onclick=AjxCallback.simpleClosure(this._handleClick,this);
this.isMore=true;
o.onmouseover=AjxCallback.simpleClosure(this.handleMouseOver,this);
o.onmouseout=AjxCallback.simpleClosure(this.handleMouseOut,this);
Dwt.setCursor(this._moreDiv,"pointer");
Dwt.setSize(this._headDiv,ZaToolTipView.width);
Dwt.setSize(this._bodyDiv,ZaToolTipView.width)
};
ZaToolTipView.toolTipHeadId="ZatooltipZimletHeader";
ZaToolTipView.toolTipArributeId="ZatooltipZimletAttributeName";
ZaToolTipView.toolTipMoreId="ZatooltipZimletMore";
ZaToolTipView.toolTipBodyId="ZatooltopZimletBody";
ZaToolTipView.width=300;
ZaToolTipView.prototype._createView=function(e){
var o=new Array(50);
var t=0;
o[t++]="<table cellspacing='0' cellpadding='0' border='0' >";
o[t++]="<tr><td>";
o[t++]='<div id="'+ZaToolTipView.toolTipHeadId+'">';
o[t++]="<table cellspacing='0' cellpadding='0' border='0' ";
o[t++]=" style='table-layout:fixed; width:100%'>";
o[t++]="<tr><td><div";
o[t++]=" style='text-align: left; font-weight:bold' ";
o[t++]=">"+com_zimbra_tooltip.llAttributeName+"</div></td></tr>";
o[t++]="<tr><td><div style='word-wrap: break-word;' id=\""+ZaToolTipView.toolTipArributeId+'"';
o[t++]="></div></td></tr>";
o[t++]="</table></div>";
o[t++]="</td></tr>";
o[t++]="<tr><td>";
o[t++]='<div id="'+ZaToolTipView.toolTipBodyId+'"</div>';
o[t++]="</td></tr>";
o[t++]='<tr><td><div id="'+ZaToolTipView.toolTipMoreId+'"';
o[t++]=" style='white-space:nowrap; text-align: right; font-weight:bold' ";
o[t++]=">"+com_zimbra_tooltip.llMore+"</div></td></tr>";
o[t++]="</table>";
e.innerHTML=o.join("")
};
ZaToolTipView.prototype._getBodyView=function(o){
var t=new Array(50);
var e=0;
t[e++]="<table cellspacing='0' cellpadding='0' border='0' ";
t[e++]=" style='table-layout:fixed;width:100%' >";
t[e++]="<tr><td style='font-weight:bold' >"+com_zimbra_tooltip.llDesc+"</td></tr>";
t[e++]="<tr><td>"+o+"</td></tr>";
t[e++]="</table>";
return t.join("")
};
ZaToolTipView.prototype.updateAttribute=function(e){
this._bodyDiv.innerHTML="";
Dwt.setVisible(this._bodyDiv,false);
this._attributeName=e;
this._attributeDiv.innerHTML=this._attributeName
};
ZaToolTipView.prototype.updateDesc=function(e){
if(!e){
this.updateBody(com_zimbra_tooltip.llNoResult)
}else{
this._bodyDiv.innerHTML=this._getBodyView(e)
}};
ZaToolTipView.prototype.updateBody=function(e){
this._bodyDiv.style.textAlign="center";
this._bodyDiv.innerHTML="<span style='font-weight:bold;'>"+e+"</span>"
};
ZaToolTipView.prototype._handleClick=function(e){
if(!this._attributeName){
return
}
if(this.isMore){
this.isMore=false;
this._moreDiv.innerHTML=com_zimbra_tooltip.llHide;
this.updateBody(com_zimbra_tooltip.llLoading);
Dwt.setVisible(this._bodyDiv,true);
var t=ZaHelpTooltip.getDescByName(this._attributeName);
this.updateDesc(t)
}else{
this.isMore=true;
this._moreDiv.innerHTML=com_zimbra_tooltip.llMore;
Dwt.setVisible(this._bodyDiv,false)
}
this.tooltipZimlet.redraw()
};
ZaToolTipView.prototype.handleMouseOver=function(){
this.isMouseOverTooltip=true
};
ZaToolTipView.prototype.handleMouseOut=function(){
this.isMouseOverTooltip=false;
this.tooltipZimlet.hoverOut()
};
if(ZaSettings&&ZaSettings.EnabledZimlet.com_zimbra_adminversioncheck){
if(window.console&&window.console.log){
console.log("Start loading com_zimbra_adminversioncheck.js")
}
function ZaVersionCheck(){
ZaItem.call(this,"ZaVersionCheck");
this.attrs=new Object();
this.attrsToGet=[ZaVersionCheck.A_zimbraVersionCheckLastAttempt,ZaVersionCheck.A_zimbraVersionCheckLastSuccess,ZaVersionCheck.A_zimbraVersionCheckNotificationEmail,ZaVersionCheck.A_zimbraVersionCheckInterval,ZaVersionCheck.A_zimbraVersionCheckServer,ZaVersionCheck.A_zimbraVersionCheckURL]
}
ZaVersionCheck.prototype=new ZaItem;
ZaVersionCheck.prototype.constructor=ZaVersionCheck;
ZaVersionCheck.prototype.errorMsg="";
ZaVersionCheck.prototype.isAvailable=false;
ZaVersionCheck.downloadUrl="http://www.zimbra.com/downloads/ne-downloads.html";
ZaItem.loadMethods.ZaVersionCheck=new Array();
ZaItem.modifyMethods.ZaVersionCheck=new Array();
ZaOperation.VERSION_CHECK=++ZA_OP_INDEX;
ZaVersionCheck.INVALID_VC_RESPONSE="versioncheck.INVALID_VC_RESPONSE";
ZaVersionCheck.A_zimbraVersionCheckLastAttempt="zimbraVersionCheckLastAttempt";
ZaVersionCheck.A_zimbraVersionCheckLastSuccess="zimbraVersionCheckLastSuccess";
ZaVersionCheck.A_zimbraVersionCheckNotificationEmail="zimbraVersionCheckNotificationEmail";
ZaVersionCheck.A_zimbraVersionCheckSendNotifications="zimbraVersionCheckSendNotifications";
ZaVersionCheck.A_zimbraVersionCheckNotificationEmailFrom="zimbraVersionCheckNotificationEmailFrom";
ZaVersionCheck.A_zimbraVersionCheckNotificationSubject="zimbraVersionCheckNotificationSubject";
ZaVersionCheck.A_zimbraVersionCheckNotificationBody="zimbraVersionCheckNotificationBody";
ZaVersionCheck.A_zimbraVersionCheckInterval="zimbraVersionCheckInterval";
ZaVersionCheck.A_zimbraVersionCheckServer="zimbraVersionCheckServer";
ZaVersionCheck.A_zimbraVersionCheckURL="zimbraVersionCheckURL";
ZaVersionCheck.A_zimbraVersionCheckUpdates="updates";
ZaVersionCheck.A_zimbraVersionCheckUpdateType="type";
ZaVersionCheck.A_zimbraVersionCheckUpdateCritical="critical";
ZaVersionCheck.A_zimbraVersionCheckUpdateVersion="version";
ZaVersionCheck.A_zimbraVersionCheckUpdateBuildtype="buildtype";
ZaVersionCheck.A_zimbraVersionCheckUpdateUpdateURL="updateURL";
ZaVersionCheck.A_zimbraVersionCheckUpdateDescription="description";
ZaVersionCheck.A_zimbraVersionCheckUpdateShortversion="shortversion";
if(ZaSettings){
ZaSettings.SOFTWARE_UPDATES_VIEW="softwareUpdatesView";
ZaSettings.ALL_UI_COMPONENTS.push({
value:ZaSettings.SOFTWARE_UPDATES_VIEW,label:com_zimbra_adminversioncheck.UI_Comp_versionCheck}
);
ZaSettings.OVERVIEW_TOOLS_ITEMS.push(ZaSettings.SOFTWARE_UPDATES_VIEW);
ZaSettings.VIEW_RIGHTS[ZaSettings.SOFTWARE_UPDATES_VIEW]="adminConsoleSoftwareUpdatesRights"
}
ZaVersionCheck.myXModel={
items:[{
id:ZaVersionCheck.A_zimbraVersionCheckLastAttempt,ref:"attrs/"+ZaVersionCheck.A_zimbraVersionCheckLastAttempt,type:_DATETIME_}
,{
id:ZaVersionCheck.A_zimbraVersionCheckLastSuccess,ref:"attrs/"+ZaVersionCheck.A_zimbraVersionCheckLastSuccess,type:_DATETIME_}
,{
id:ZaVersionCheck.A_zimbraVersionCheckNotificationEmail,ref:"attrs/"+ZaVersionCheck.A_zimbraVersionCheckNotificationEmail,type:_STRING_}
,{
id:ZaVersionCheck.A_zimbraVersionCheckNotificationEmailFrom,ref:"attrs/"+ZaVersionCheck.A_zimbraVersionCheckNotificationEmailFrom,type:_STRING_}
,{
id:ZaVersionCheck.A_zimbraVersionCheckNotificationSubject,ref:"attrs/"+ZaVersionCheck.A_zimbraVersionCheckNotificationSubject,type:_STRING_}
,{
id:ZaVersionCheck.A_zimbraVersionCheckNotificationBody,ref:"attrs/"+ZaVersionCheck.A_zimbraVersionCheckNotificationBody,type:_STRING_}
,{
id:ZaVersionCheck.A_zimbraVersionCheckSendNotifications,ref:"attrs/"+ZaVersionCheck.A_zimbraVersionCheckSendNotifications,type:_ENUM_,choices:ZaModel.BOOLEAN_CHOICES}
,{
id:ZaVersionCheck.A_zimbraVersionCheckServer,ref:"attrs/"+ZaVersionCheck.A_zimbraVersionCheckServer,type:_STRING_}
,{
id:ZaVersionCheck.A_zimbraVersionCheckURL,ref:"attrs/"+ZaVersionCheck.A_zimbraVersionCheckURL,type:_STRING_}
,{
id:ZaVersionCheck.A_zimbraVersionCheckInterval,type:_MLIFETIME_,ref:"attrs/"+ZaVersionCheck.A_zimbraVersionCheckInterval}
,{
id:ZaVersionCheck.A_zimbraVersionCheckUpdates,type:_LIST_,listItem:{
type:_OBJECT_,items:[{
id:ZaVersionCheck.A_zimbraVersionCheckUpdateType,type:_STRING_}
,{
id:ZaVersionCheck.A_zimbraVersionCheckUpdateCritical,type:_ENUM_,choices:ZaModel.BOOLEAN_CHOICES2}
,{
id:ZaVersionCheck.A_zimbraVersionCheckUpdateVersion,type:_STRING_}
,{
id:ZaVersionCheck.A_zimbraVersionCheckUpdateBuildtype,type:_STRING_}
,{
id:ZaVersionCheck.A_zimbraVersionCheckUpdateUpdateURL,type:_STRING_}
,{
id:ZaVersionCheck.A_zimbraVersionCheckUpdateDescription,type:_STRING_}
,{
id:ZaVersionCheck.A_zimbraVersionCheckUpdateShortversion,type:_STRING_}
]}}
]};
ZaVersionCheck.getAttemptTime=function(e){
if(e){
return ZaItem.formatServerTime(e)
}else{
return com_zimbra_adminversioncheck.Never
}};
ZaVersionCheck.checkNow=function(){
var l,o;
o=AjxSoapDoc.create("BatchRequest","urn:zimbra");
o.setMethodAttribute("onerror","continue");
var s=o.set("VersionCheckRequest",null,null,ZaZimbraAdmin.URN);
s.setAttribute("action","check");
try{
l=new Object();
l.soapDoc=o;
var t={
controller:ZaApp.getInstance().getCurrentController()};
var r=ZaRequestMgr.invoke(l,t);
if(r.isException&&r.isException()){
ZaApp.getInstance().getCurrentController()._handleException(r.getException(),"ZaVersionCheck.checkNow",null,false);
hasError=true
}else{
if(r.Body.BatchResponse.Fault){
var n=r.Body.BatchResponse.Fault;
if(n instanceof Array){
n=n[0]
}
if(n){
var e=ZmCsfeCommand.faultToEx(n);
ZaApp.getInstance().getCurrentController()._handleException(e,"ZaVersionCheck.checkNow",null,false);
hasError=true
}}}}
catch(e){
ZaApp.getInstance().getCurrentController()._handleException(e,"ZaVersionCheck.loadMethod",null,false)
}};
ZaVersionCheck.loadMethod=function(f,o){
var l,p;
p=AjxSoapDoc.create("BatchRequest","urn:zimbra");
p.setMethodAttribute("onerror","continue");
var s=p.set("GetAllConfigRequest",null,null,ZaZimbraAdmin.URN);
if(!this.getAttrs.all&&!AjxUtil.isEmpty(this.attrsToGet)){
s.setAttribute("attrs",this.attrsToGet.join(","))
}
var d=p.set("VersionCheckRequest",null,null,ZaZimbraAdmin.URN);
d.setAttribute("action","status");
this.errorMsg="";
this.isAvailable=false;
try{
l=new Object();
l.soapDoc=p;
var n={
controller:ZaApp.getInstance().getCurrentController()};
var e=ZaRequestMgr.invoke(l,n);
if(e.isException&&e.isException()){
var m=e.getException();
throw m
}else{
if(e.Body.BatchResponse.Fault){
var u=e.Body.BatchResponse.Fault;
if(u instanceof Array){
u=u[0]
}
if(u){
var m=ZmCsfeCommand.faultToEx(u);
this.errorMsg=m.getErrorMsg()
}}}
var g=e.Body.BatchResponse;
if(g.GetAllConfigResponse){
r=g.GetAllConfigResponse[0];
this.initFromJS(r)
}
if(g.VersionCheckResponse){
var r=g.VersionCheckResponse[0];
this[ZaVersionCheck.A_zimbraVersionCheckUpdates]=[];
if(r&&r.versionCheck&&r.versionCheck[0]&&r.versionCheck[0].updates){
if(r.versionCheck[0].updates instanceof Array&&r.versionCheck[0].updates.length>0&&r.versionCheck[0].updates[0].update&&r.versionCheck[0].updates[0].update.length>0){
var t=r.versionCheck[0].updates[0].update.length;
for(var c=0;
c<t;
c++){
this[ZaVersionCheck.A_zimbraVersionCheckUpdates].push(r.versionCheck[0].updates[0].update[c])
}
this.isAvailable=true
}}}}
catch(m){
this.errorMsg=m.getErrorMsg()
}};
ZaItem.loadMethods.ZaVersionCheck.push(ZaVersionCheck.loadMethod);
ZaVersionCheck.modifyMethod=function(r){
var s=AjxSoapDoc.create("ModifyConfigRequest",ZaZimbraAdmin.URN,null);
for(var o in r){
if(r[o] instanceof Array){
var n=r[o].length;
if(n>0){
for(var t=0;
t<n;
t++){
if(r[o][t] instanceof String){
var e=s.set("a",r[o][t].toString())
}else{
if(r[o][t] instanceof Object){
var e=s.set("a",r[o][t].toString())
}else{
var e=s.set("a",r[o][t])
}}
e.setAttribute("n",o)
}}else{
var e=s.set("a");
e.setAttribute("n",o)
}}else{
var e=s.set("a",r[o]);
e.setAttribute("n",o)
}}
var c=new ZmCsfeCommand();
var l=new Object();
l.soapDoc=s;
l.noAuthToken=true;
c.invoke(l)
};
ZaItem.modifyMethods.ZaVersionCheck.push(ZaVersionCheck.modifyMethod);
ZaZimbraAdmin._VERSION_CHECK_VIEW=ZaZimbraAdmin.VIEW_INDEX++;
ZaApp.prototype.getVersionCheckViewController=function(){
if(this._controllers[ZaZimbraAdmin._VERSION_CHECK_VIEW]==null){
this._controllers[ZaZimbraAdmin._VERSION_CHECK_VIEW]=new ZaVersionCheckViewController(this._appCtxt,this._container)
}
return this._controllers[ZaZimbraAdmin._VERSION_CHECK_VIEW]
};
ZaVersionCheck.versionCheckTreeListener=function(e){
var t=new ZaVersionCheck();
if(ZaApp.getInstance().getCurrentController()){
ZaApp.getInstance().getCurrentController().switchToNextView(ZaApp.getInstance().getVersionCheckViewController(),ZaVersionCheckViewController.prototype.show,[t])
}else{
ZaApp.getInstance().getVersionCheckViewController().show(t)
}};
ZaVersionCheck.versionCheckTreeModifier=function(e){
var t=this;
if(!t){
throw new Exception("ZaCert.versionCheckTreeModifier: Overview Panel Controller is not set.")
}
if(ZaSettings.ENABLED_UI_COMPONENTS[ZaSettings.SOFTWARE_UPDATES_VIEW]||ZaSettings.ENABLED_UI_COMPONENTS[ZaSettings.CARTE_BLANCHE_UI]){
if(!appNewUI){
if(!this._toolsTi){
this._toolsTi=new DwtTreeItem(e,null,null,null,null,"overviewHeader");
this._toolsTi.enableSelection(false);
this._toolsTi.setText(ZaMsg.OVP_tools);
this._toolsTi.setData(ZaOverviewPanelController._TID,ZaZimbraAdmin._TOOLS)
}
this._versionCheckTi=new DwtTreeItem({
parent:this._toolsTi,className:"AdminTreeItem"}
);
this._versionCheckTi.setText(com_zimbra_adminversioncheck.OVP_versionCheck);
this._versionCheckTi.setImage("AdminRefresh");
this._versionCheckTi.setData(ZaOverviewPanelController._TID,ZaZimbraAdmin._VERSION_CHECK_VIEW)
}else{
var o=ZaTree.getPathByArray([ZaMsg.OVP_home,ZaMsg.OVP_toolMig]);
var n=new ZaTreeItemData({
parent:o,id:ZaId.getTreeItemId(ZaId.PANEL_APP,"magHV",null,"VersionCheckHV"),text:com_zimbra_adminversioncheck.OVP_versionCheck,mappingId:ZaZimbraAdmin._VERSION_CHECK_VIEW}
);
e.addTreeItemData(n)
}
if(ZaOverviewPanelController.overviewTreeListeners){
ZaOverviewPanelController.overviewTreeListeners[ZaZimbraAdmin._VERSION_CHECK_VIEW]=ZaVersionCheck.versionCheckTreeListener
}}};
if(ZaOverviewPanelController.treeModifiers){
ZaOverviewPanelController.treeModifiers.push(ZaVersionCheck.versionCheckTreeModifier)
}
if(ZaHome&&ZaHome.myXModel){
ZaHome.A2_versionUpdateAvailable="versionUpdateAvailable";
ZaHome.A2_updateMessage="A2_updateMessage";
ZaHome.myXModel.items.push({
id:ZaHome.A2_versionUpdateAvailable,type:_ENUM_,ref:"attrs/"+ZaHome.A2_versionUpdateAvailable,choices:ZaModel.BOOLEAN_CHOICES}
);
ZaHome.myXModel.items.push({
id:ZaHome.A2_updateMessage,type:_STRING_,ref:"attrs/"+ZaHome.A2_updateMessage}
);
ZaHome.loadVersionMethod=function(){
this.attrs[ZaHome.A2_versionUpdateAvailable]=false;
this.attrs[ZaHome.A2_updateMessage]="Zimbra 8.1 is available"
};
ZaItem.loadMethods.ZaHome.push(ZaHome.loadVersionMethod)
}
if(ZaTabView.XFormModifiers.ZaHomeXFormView){
ZaHomeXFormView.onViewVersionUpdate=function(t){
var e=ZaZimbraAdmin.getInstance().getOverviewPanelController().getOverviewPanel().getFolderTree();
var o=ZaTree.getPathByArray([ZaMsg.OVP_home,ZaMsg.OVP_toolMig,com_zimbra_adminversioncheck.OVP_versionCheck]);
e.setSelectionByPath(o,false)
};
ZaVersionCheck.HomeXFormModifier=function(t){
if(ZaSettings.ENABLED_UI_COMPONENTS[ZaSettings.SOFTWARE_UPDATES_VIEW]||ZaSettings.ENABLED_UI_COMPONENTS[ZaSettings.CARTE_BLANCHE_UI]){
var e=ZaHomeXFormView.getWarningPanelItem(t);
e.items.push({
type:_GROUP_,numCols:3,width:"100%",colSizes:ZaHomeXFormView.getWarningPanelCol(),visibilityChecks:[[XForm.checkInstanceValue,ZaHome.A2_versionUpdateAvailable,true]],items:[{
type:_OUTPUT_,ref:ZaHome.A2_versionUpdateAvailable,getDisplayValue:function(o){
if(o){
return AjxImg.getImageHtml("Information")
}}}
,{
type:_OUTPUT_,ref:ZaHome.A2_updateMessage}
,{
type:_OUTPUT_,value:com_zimbra_adminversioncheck.LBL_ViewUpdate,containerCssStyle:"cursor:pointer;color:white",onClick:ZaHomeXFormView.onViewVersionUpdate}
]}
)
}};
ZaTabView.XFormModifiers.ZaHomeXFormView.push(ZaVersionCheck.HomeXFormModifier)
}
if(ZaTask&&ZaTask.myXModel){
ZaTask.A2_versionCanBeShown="versionCanBeShownForTask";
ZaTask.A2_versionUpdateAvailable="versionUpdateAvailableForTask";
ZaTask.A2_versionHasError="versionHasError";
ZaTask.A2_versionUpdateMessage="updateMessageForTask";
ZaTask.myXModel.items.push({
id:ZaTask.A2_versionUpdateAvailable,type:_ENUM_,ref:"attrs/"+ZaTask.A2_versionUpdateAvailable,choices:ZaModel.BOOLEAN_CHOICES}
);
ZaTask.myXModel.items.push({
id:ZaTask.A2_versionUpdateMessage,type:_STRING_,ref:"attrs/"+ZaTask.A2_versionUpdateMessage}
);
ZaTask.myXModel.items.push({
id:ZaTask.A2_versionCanBeShown,type:_ENUM_,choices:ZaModel.BOOLEAN_CHOICES,defaultValue:false}
);
ZaTask.myXModel.items.push({
id:ZaTask.A2_versionHasError,type:_ENUM_,choices:ZaModel.BOOLEAN_CHOICES,defaultValue:false}
);
if(ZaTabView.XFormModifiers.ZaTaskContentView!=null){
ZaTask.loadVersionMethod=function(){
this.attrs[ZaTask.A2_versionUpdateAvailable]=false;
this.attrs[ZaTask.A2_versionUpdateMessage]=""
};
ZaItem.loadMethods.ZaTask.push(ZaTask.loadVersionMethod);
ZaVersionCheck.taskContentViewXFormModifier=function(t){
if(!ZaSettings.ENABLED_UI_COMPONENTS[ZaSettings.SOFTWARE_UPDATES_VIEW]&&!ZaSettings.ENABLED_UI_COMPONENTS[ZaSettings.CARTE_BLANCHE_UI]){
return
}
var e=ZaTaskContentView.getNotificationBoard(t);
e.items.push({
type:_GROUP_,numCols:1,width:"98%",visibilityChecks:[[XForm.checkInstanceValue,ZaTask.A2_versionCanBeShown,true]],visibilityChangeEventSources:[ZaTask.A2_versionCanBeShown],items:[{
type:_GROUP_,numCols:2,colSizes:["20px","*"],cssStyle:"padding-left:5px; padding-top:8px;",items:[{
type:_OUTPUT_,valign:_TOP_,ref:ZaTask.A2_versionHasError,bmolsnr:true,getDisplayValue:function(o){
if(o){
return AjxImg.getImageHtml("Warning")
}else{
return AjxImg.getImageHtml("Information")
}}}
,{
type:_OUTPUT_,ref:ZaTask.A2_versionUpdateMessage,cssStyle:"padding-left:5px;",bmolsnr:true}
]}
,{
type:_OUTPUT_,align:_RIGHT_,value:com_zimbra_adminversioncheck.LBL_ViewUpdate,visibilityChecks:[[XForm.checkInstanceValue,ZaTask.A2_versionHasError,true]],visibilityChangeEventSources:[ZaTask.A2_versionHasError],containerCssClass:"ZaLinkedItem",onClick:ZaHomeXFormView.onViewVersionUpdate}
,{
type:_OUTPUT_,align:_RIGHT_,value:com_zimbra_adminversioncheck.LBL_GO_TO_DOWNLOAD_URL,visibilityChecks:[[XForm.checkInstanceValue,ZaTask.A2_versionHasError,false],[XForm.checkInstanceValue,ZaTask.A2_versionUpdateAvailable,true]],visibilityChangeEventSources:[ZaTask.A2_versionHasError,ZaTask.A2_versionUpdateAvailable],containerCssClass:"ZaLinkedItem",onClick:ZaVersionCheck.goToDownloadUrl}
,{
type:_SPACER_,height:5}
]}
)
};
ZaTabView.XFormModifiers.ZaTaskContentView.push(ZaVersionCheck.taskContentViewXFormModifier);
ZaVersionCheck.goToDownloadUrl=function(){
window.open(ZaVersionCheck.downloadUrl,"_blank")
};
ZaTaskContentView.postLoadVersionUpdateInfo=function(){
if(!ZaSettings.ENABLED_UI_COMPONENTS[ZaSettings.SOFTWARE_UPDATES_VIEW]&&!ZaSettings.ENABLED_UI_COMPONENTS[ZaSettings.CARTE_BLANCHE_UI]){
return
}
if(this._versionCheck==null){
this._versionCheck=new ZaVersionCheck()
}
this._versionCheck.load();
var n=false;
var s="";
var t=(this._versionCheck.errorMsg!="");
var e=this._versionCheck.isAvailable;
if(t){
n=true;
s=com_zimbra_adminversioncheck.WARNING_CURRENT_ATTEMPT_FAILED
}else{
if(e){
n=true;
s=com_zimbra_adminversioncheck.UpdatesAreAvailable
}}
var o=ZaZimbraAdmin.getInstance().getTaskController();
o.setInstanceValue(s,ZaTask.A2_versionUpdateMessage);
o.setInstanceValue(n,ZaTask.A2_versionCanBeShown);
o.setInstanceValue(e,ZaTask.A2_versionUpdateAvailable);
o.setInstanceValue(t,ZaTask.A2_versionHasError);
if(n){
o.increaseNotificationCount(ZaTask.A2_versionUpdateMessage)
}else{
o.decreaseNotificationCount(ZaTask.A2_versionUpdateMessage)
}};
if(ZaTask.postLoadDataFunction!=null){
ZaTask.postLoadDataFunction.push(ZaTaskContentView.postLoadVersionUpdateInfo)
}}}}
ZaVersionCheckViewController=function(t,e){
ZaXFormViewController.call(this,t,e,"ZaVersionCheckViewController");
this._UICreated=false;
this.objType=ZaEvent.S_GLOBALCONFIG;
this.tabConstructor=ZaVersionCheckXFormView;
this._helpURL=[location.pathname,ZaUtil.HELP_URL,ZaVersionCheckViewController.helpURL,"?locid=",AjxEnv.DEFAULT_LOCALE].join("");
this._helpButtonText=ZaMsg.zimbraHelpCenter
};
ZaVersionCheckViewController.prototype=new ZaXFormViewController();
ZaVersionCheckViewController.prototype.constructor=ZaVersionCheckViewController;
ZaVersionCheckViewController.helpURL="monitoring/getting_latest_software_updates.htm";
ZaController.initPopupMenuMethods.ZaVersionCheckViewController=new Array();
ZaController.setViewMethods.ZaVersionCheckViewController=[];
ZaController.changeActionsStateMethods.ZaVersionCheckViewController=new Array();
ZaVersionCheckViewController.initPopupMenuMethod=function(){
this._popupOperations[ZaOperation.SAVE]=new ZaOperation(ZaOperation.SAVE,ZaMsg.TBB_Save,ZaMsg.ALTBB_Save_tt,"Save","SaveDis",new AjxListener(this,this.saveButtonListener));
this._popupOperations[ZaOperation.VERSION_CHECK]=new ZaOperation(ZaOperation.VERSION_CHECK,com_zimbra_adminversioncheck.CheckNow,com_zimbra_adminversioncheck.CheckNow_tt,"Refresh","Refresh",new AjxListener(this,this.checkNowListener))
};
ZaController.initPopupMenuMethods.ZaVersionCheckViewController.push(ZaVersionCheckViewController.initPopupMenuMethod);
ZaVersionCheckViewController.prototype.checkNowListener=function(e){
if(this._view.isDirty()){
this.popupMsgDialog(com_zimbra_adminversioncheck.saveChangesFirst,true)
}else{
if(AjxUtil.isEmpty(this._currentObject.attrs[ZaVersionCheck.A_zimbraVersionCheckServer])||AjxUtil.isEmpty(this._currentObject.attrs[ZaVersionCheck.A_zimbraVersionCheckURL])||(this._currentObject.attrs[ZaVersionCheck.A_zimbraVersionCheckNotificationEmail]=="TRUE"&&(AjxUtil.isEmpty(this._currentObject.attrs[ZaVersionCheck.A_zimbraVersionCheckNotificationSubject])||AjxUtil.isEmpty(this._currentObject.attrs[ZaVersionCheck.A_zimbraVersionCheckNotificationBody])||AjxUtil.isEmpty(this._currentObject.attrs[ZaVersionCheck.A_zimbraVersionCheckNotificationEmail])))){
this.popupMsgDialog(com_zimbra_adminversioncheck.ERROR_UPDATES_NOT_CONFIGURED,true)
}else{
if(this._view._localXForm&&this._view._localXForm.getInstance()){
ZaVersionCheck.checkNow()
}
this._currentObject.refresh(false,true);
this._view.setObject(this._currentObject)
}}};
ZaVersionCheckViewController.setViewMethod=function(t){
if(!this._UICreated){
this._initPopupMenu();
this._contentView=this._view=new this.tabConstructor(this._container,t);
var o=new Object();
o[ZaAppViewMgr.C_APP_CONTENT]=this._view;
ZaApp.getInstance().getAppViewMgr().createView(this.getContentViewId(),o);
this._UICreated=true;
ZaApp.getInstance()._controllers[this.getContentViewId()]=this
}
ZaApp.getInstance().pushView(this.getContentViewId());
t.load();
try{
t[ZaModel.currentTab]="1";
this._view.setDirty(false);
this._view.setObject(t)
}
catch(e){
this._handleException(e,"ZaVersionCheckViewController.prototype.show",null,false)
}
this._currentObject=t
};
ZaController.setViewMethods.ZaVersionCheckViewController.push(ZaVersionCheckViewController.setViewMethod);
ZaVersionCheckViewController.prototype._saveChanges=function(){
var n=this._view.getObject();
var e=false;
if(n.attrs==null){
this._errorDialog.setMessage(ZaMsg.ERROR_UNKNOWN,null,DwtMessageDialog.CRITICAL_STYLE,null);
this._errorDialog.popup();
return false
}
if(!AjxUtil.isEmpty(n.attrs[ZaVersionCheck.A_zimbraVersionCheckSendNotifications])&&n.attrs[ZaVersionCheck.A_zimbraVersionCheckSendNotifications]=="TRUE"){
if(AjxUtil.isEmpty(n.attrs[ZaVersionCheck.A_zimbraVersionCheckNotificationEmail])){
this._errorDialog.setMessage(AjxMessageFormat.format(ZaMsg.ERROR_INVALID_VALUE_FOR,[com_zimbra_adminversioncheck.MSG_zimbraVersionCheckNotificationEmail]),null,DwtMessageDialog.CRITICAL_STYLE,null);
this._errorDialog.popup();
return false
}
if(AjxUtil.isEmpty(n.attrs[ZaVersionCheck.A_zimbraVersionCheckNotificationBody])){
this._errorDialog.setMessage(AjxMessageFormat.format(ZaMsg.ERROR_INVALID_VALUE_FOR,[com_zimbra_adminversioncheck.MSG_zimbraVersionCheckNotificationBody]),null,DwtMessageDialog.CRITICAL_STYLE,null);
this._errorDialog.popup();
return false
}
if(AjxUtil.isEmpty(n.attrs[ZaVersionCheck.A_zimbraVersionCheckNotificationSubject])){
this._errorDialog.setMessage(AjxMessageFormat.format(ZaMsg.ERROR_INVALID_VALUE_FOR,[com_zimbra_adminversioncheck.MSG_zimbraVersionCheckNotificationSubject]),null,DwtMessageDialog.CRITICAL_STYLE,null);
this._errorDialog.popup();
return false
}}
var o=new Object();
for(var t in n.attrs){
if(t==ZaItem.A_objectClass||t==ZaGlobalConfig.A_zimbraAccountClientAttr||t==ZaGlobalConfig.A_zimbraServerInheritedAttr||t==ZaGlobalConfig.A_zimbraDomainInheritedAttr||t==ZaGlobalConfig.A_zimbraCOSInheritedAttr||t==ZaGlobalConfig.A_zimbraGalLdapAttrMap||t==ZaGlobalConfig.A_zimbraGalLdapFilterDef||/^_/.test(t)||t==ZaGlobalConfig.A_zimbraMtaBlockedExtension||t==ZaGlobalConfig.A_zimbraMtaCommonBlockedExtension||t==ZaItem.A_zimbraACE){
continue
}
if((this._currentObject.attrs[t]!=n.attrs[t])&&!(this._currentObject.attrs[t]==undefined&&n.attrs[t]==="")){
if(n.attrs[t] instanceof Array){
if(!this._currentObject.attrs[t]){
this._currentObject.attrs[t]=[]
}
if(n.attrs[t].join(",").valueOf()!=this._currentObject.attrs[t].join(",").valueOf()){
o[t]=n.attrs[t]
}}else{
o[t]=n.attrs[t]
}}}
this._currentObject.modify(o);
return true
};
ZaVersionCheckViewController.changeActionsStateMethod=function(){
if(!this._currentObject){
return
}
if(this._popupOperations[ZaOperation.SAVE]){
this._popupOperations[ZaOperation.SAVE].enabled=false
}};
ZaController.changeActionsStateMethods.ZaVersionCheckViewController.push(ZaVersionCheckViewController.changeActionsStateMethod);
ZaVersionCheckXFormView=function(e,t){
ZaTabView.call(this,e,"ZaVersionCheckXFormView",undefined,"VERSION_EDIT");
this.TAB_INDEX=0;
this.criticalChoices=new XFormChoices([{
value:"1",label:com_zimbra_adminversioncheck.Critical}
,{
value:"0",label:com_zimbra_adminversioncheck.NotCritical}
],XFormChoices.OBJECT_LIST,"value","label");
this.initForm(ZaVersionCheck.myXModel,this.getMyXForm(t),null)
};
ZaVersionCheckXFormView.prototype=new ZaTabView();
ZaVersionCheckXFormView.prototype.constructor=ZaVersionCheckXFormView;
ZaTabView.XFormModifiers.ZaVersionCheckXFormView=new Array();
ZaVersionCheckXFormView.prototype.getTitle=function(){
return com_zimbra_adminversioncheck.VersionCheck_view_title
};
ZaVersionCheckXFormView.prototype.getTabIcon=function(){
return"Refresh"
};
ZaVersionCheckXFormView.prototype.getTabTitle=function(){
return this.getTitle()
};
ZaVersionCheckXFormView.prototype.getTabToolTip=function(){
return this.getTitle()
};
ZaVersionCheckXFormView.CONFIG_TAB_ATTRS=[];
ZaVersionCheckXFormView.CONFIG_TAB_RIGHTS=[];
ZaVersionCheckXFormView.STATUS_TAB_ATTRS=[];
ZaVersionCheckXFormView.STATUS_TAB_RIGHTS=[];
ZaVersionCheckXFormView.checkLastAttemptFailed=function(){
return(this.getInstanceValue(ZaVersionCheck.A_zimbraVersionCheckLastAttempt)!=this.getInstanceValue(ZaVersionCheck.A_zimbraVersionCheckLastSuccess))
};
ZaVersionCheckXFormView.prototype.setObject=function(o){
this._containedObject=new Object();
this._containedObject.attrs=new Object();
for(var e in o.attrs){
var t=this._localXForm.getModel().getItem(e);
if((t!=null&&t.type==_LIST_)||(o.attrs[e]!=null&&o.attrs[e] instanceof Array)){
this._containedObject.attrs[e]=ZaItem.deepCloneListItem(o.attrs[e])
}else{
this._containedObject.attrs[e]=o.attrs[e]
}}
this._containedObject.name=o.name;
this._containedObject.type=o.type;
if(o.rights){
this._containedObject.rights=o.rights
}
if(o.setAttrs){
this._containedObject.setAttrs=o.setAttrs
}
if(o.getAttrs){
this._containedObject.getAttrs=o.getAttrs
}
if(o._defaultValues){
this._containedObject._defaultValues=o._defaultValues
}
if(o.id){
this._containedObject.id=o.id
}
if(!o[ZaModel.currentTab]){
this._containedObject[ZaModel.currentTab]="1"
}else{
this._containedObject[ZaModel.currentTab]=o[ZaModel.currentTab]
}
this._containedObject[ZaVersionCheck.A_zimbraVersionCheckUpdates]=[];
if(o[ZaVersionCheck.A_zimbraVersionCheckUpdates]){
this._containedObject[ZaVersionCheck.A_zimbraVersionCheckUpdates]=o[ZaVersionCheck.A_zimbraVersionCheckUpdates]
}
this._localXForm.setInstance(this._containedObject);
if(!appNewUI){
this.updateTab()
}};
ZaVersionCheckXFormView.getCustomHeight=function(){
try{
var e=this.getForm();
var l=parseInt(e.parent.getHtmlElement().style.height);
var o=0;
var d=e.getItemsById("xform_warningpanel");
if(d&&d[0]){
var s=d[0].getElement();
o=s.clientHeight?s.clientHeight:s.offsetHeight
}
var n=0;
var c=e.getItemsById("xform_warningpanel");
if(c&&c[0]){
var t=c[0].getElement();
n=t.clientHeight?t.clientHeight:t.offsetHeight
}
if(l>(o+n)){
return(l-o-n)
}else{
return"100%"
}}
catch(r){}
return"100%"
};
ZaVersionCheckXFormView.myXFormModifier=function(l,r){
l.tableCssStyle="width:100%;overflow:auto;";
var t,e;
t=++this.TAB_INDEX;
e=++this.TAB_INDEX;
var n=[{
value:t,label:com_zimbra_adminversioncheck.TABT_ConfigPage}
,{
value:e,label:com_zimbra_adminversioncheck.TABT_UpdatesPage}
];
var s={
type:_ZATABCASE_,caseKey:t,colSizes:["auto"],numCols:1,getCustomHeight:ZaVersionCheckXFormView.getCustomHeight,items:[{
type:_ZAGROUP_,items:[{
ref:ZaVersionCheck.A_zimbraVersionCheckServer,type:_OSELECT1_,label:com_zimbra_adminversioncheck.VersionCheckServer,editable:false,choices:ZaApp.getInstance().getServerIdListChoices(),enableDisableChecks:[],visibilityChecks:[],tableCssStyle:"height: 15px",required:true}
,{
type:_DWT_ALERT_,colSpan:"*",containerCssStyle:"padding-bottom:0px",style:DwtAlert.WARNING,iconVisible:false,ref:ZaVersionCheck.A_zimbraVersionCheckServer,getDisplayValue:function(d){
return AjxMessageFormat.format(com_zimbra_adminversioncheck.Alert_Crontab,[ZaApp.getInstance().getServerMap()[d]])
}
,bmolsnr:true}
,{
ref:ZaVersionCheck.A_zimbraVersionCheckInterval,type:_LIFETIME_,label:com_zimbra_adminversioncheck.LBL_zimbraVersionCheckInterval,labelLocation:_LEFT_}
,{
ref:ZaVersionCheck.A_zimbraVersionCheckURL,type:_TEXTFIELD_,label:com_zimbra_adminversioncheck.LBL_zimbraVersionCheckURL,width:250,required:true}
,{
type:_CHECKBOX_,ref:ZaVersionCheck.A_zimbraVersionCheckSendNotifications,label:com_zimbra_adminversioncheck.LBL_zimbraVersionCheckSendNotifications,trueValue:"TRUE",falseValue:"FALSE",enableDisableChecks:[],visibilityChecks:[]}
,{
type:_DWT_ALERT_,colSpan:"*",containerCssStyle:"padding-bottom:0px",style:DwtAlert.WARNING,iconVisible:false,content:com_zimbra_adminversioncheck.NoteSendingNotificationFromAddress}
,{
ref:ZaVersionCheck.A_zimbraVersionCheckNotificationEmail,type:_TEXTFIELD_,label:com_zimbra_adminversioncheck.LBL_zimbraVersionCheckNotificationEmail,width:250,visibilityChecks:[],enableDisableChangeEventSources:[ZaVersionCheck.A_zimbraVersionCheckSendNotifications],enableDisableChecks:[[XForm.checkInstanceValue,ZaVersionCheck.A_zimbraVersionCheckSendNotifications,"TRUE"]]}
,{
ref:ZaVersionCheck.A_zimbraVersionCheckNotificationEmailFrom,type:_TEXTFIELD_,visibilityChecks:[],enableDisableChangeEventSources:[ZaVersionCheck.A_zimbraVersionCheckSendNotifications],enableDisableChecks:[[XForm.checkInstanceValue,ZaVersionCheck.A_zimbraVersionCheckSendNotifications,"TRUE"]],label:com_zimbra_adminversioncheck.LBL_zimbraVersionCheckNotificationEmailFrom}
,{
ref:ZaVersionCheck.A_zimbraVersionCheckNotificationSubject,type:_TEXTFIELD_,label:com_zimbra_adminversioncheck.LBL_zimbraVersionCheckNotificationSubject,width:250,visibilityChecks:[],enableDisableChangeEventSources:[ZaVersionCheck.A_zimbraVersionCheckSendNotifications],enableDisableChecks:[[XForm.checkInstanceValue,ZaVersionCheck.A_zimbraVersionCheckSendNotifications,"TRUE"]]}
,{
type:_TEXTAREA_,ref:ZaVersionCheck.A_zimbraVersionCheckNotificationBody,label:com_zimbra_adminversioncheck.LBL_zimbraVersionCheckNotificationBody,visibilityChecks:[],enableDisableChangeEventSources:[ZaVersionCheck.A_zimbraVersionCheckSendNotifications],enableDisableChecks:[[XForm.checkInstanceValue,ZaVersionCheck.A_zimbraVersionCheckSendNotifications,"TRUE"]]}
]}
]};
var o={
type:_ZATABCASE_,caseKey:e,getCustomHeight:ZaVersionCheckXFormView.getCustomHeight,colSizes:["auto"],numCols:1,items:[{
type:_ZAGROUP_,colSizes:["275","*"],items:[{
ref:ZaVersionCheck.A_zimbraVersionCheckLastAttempt,type:_OUTPUT_,label:com_zimbra_adminversioncheck.LBL_zimbraVersionCheckLastAttempt,getDisplayValue:function(d){
return ZaVersionCheck.getAttemptTime(d)
}}
,{
ref:ZaVersionCheck.A_zimbraVersionCheckLastSuccess,type:_OUTPUT_,label:com_zimbra_adminversioncheck.LBL_zimbraVersionCheckLastSuccess,getDisplayValue:function(d){
return ZaVersionCheck.getAttemptTime(d)
}}
,{
ref:ZaVersionCheck.A_zimbraVersionCheckUpdates,type:_REPEAT_,colSpan:"*",bmolsnr:true,align:_LEFT_,repeatInstance:"",showAddButton:false,showRemoveButton:false,showAddOnNextRow:false,visibilityChecks:[[XForm.checkInstanceValueNotEmty,ZaVersionCheck.A_zimbraVersionCheckUpdates]],visibilityChangeEventSources:[ZaVersionCheck.A_zimbraVersionCheckUpdates],items:[{
type:_GROUP_,numCols:3,colSizes:["275","100","300"],items:[{
ref:ZaVersionCheck.A_zimbraVersionCheckUpdateShortversion,type:_OUTPUT_,label:null,labelLocation:_NONE_,containerCssStyle:"text-align:right"}
,{
ref:ZaVersionCheck.A_zimbraVersionCheckUpdateCritical,type:_OUTPUT_,label:null,labelLocation:_NONE_,choices:this.criticalChoices,containerCssStyle:"text-align:center"}
,{
ref:ZaVersionCheck.A_zimbraVersionCheckUpdateUpdateURL,type:_URL_,label:null,labelLocation:_NONE_,containerCssStyle:"text-align:center"}
]}
]}
]}
]};
var c=[s,o];
l.items=[{
type:_GROUP_,id:"xform_warningpanel",colSpan:"*",width:"100%",cols:["auto"],items:[{
type:_DWT_ALERT_,cssClass:"DwtTabTable",visibilityChecks:[ZaVersionCheckXFormView.checkLastAttemptFailed],visibilityChangeEventSources:[ZaVersionCheck.A_zimbraVersionCheckLastAttempt,ZaVersionCheck.A_zimbraVersionCheckLastSuccess],containerCssStyle:"padding-bottom:0px",style:DwtAlert.CRITICAL,iconVisible:true,content:com_zimbra_adminversioncheck.WARNING_LAST_ATTEMPT_FAILED,colSpan:"*"}
,{
type:_DWT_ALERT_,cssClass:"DwtTabTable",visibilityChecks:[[XForm.checkInstanceValueNotEmty,ZaVersionCheck.A_zimbraVersionCheckUpdates]],visibilityChangeEventSources:[ZaVersionCheck.A_zimbraVersionCheckUpdates],containerCssStyle:"padding-bottom:0px",style:DwtAlert.WARNING,iconVisible:true,content:com_zimbra_adminversioncheck.UpdatesAreAvailable,colSpan:"*"}
,{
type:_DWT_ALERT_,cssClass:"DwtTabTable",visibilityChecks:[[XForm.checkInstanceValueEmty,ZaVersionCheck.A_zimbraVersionCheckUpdates]],visibilityChangeEventSources:[ZaVersionCheck.A_zimbraVersionCheckUpdates],containerCssStyle:"padding-bottom:0px",style:DwtAlert.INFORMATION,iconVisible:true,content:com_zimbra_adminversioncheck.ServerIsUpToDate,colSpan:"*"}
]}
,{
type:_TAB_BAR_,ref:ZaModel.currentTab,id:"xform_tabbar",containerCssStyle:"padding-top:0px",choices:n}
,{
type:_SWITCH_,items:c}
]
};
ZaTabView.XFormModifiers.ZaVersionCheckXFormView.push(ZaVersionCheckXFormView.myXFormModifier);
if(ZaSettings&&ZaSettings.EnabledZimlet.com_zimbra_viewmail){
ZaAccountViewMail=function(){};
ZaAccountViewMail.initExtraPopupButton=function(){
if(ZaZimbraAdmin.haveAnyTargetRight(ZaItem.ACCOUNT,ZaAccount.VIEW_MAIL_RIGHT)||ZaZimbraAdmin.haveAnyTargetRight(ZaItem.RESOURCE,ZaResource.VIEW_RESOURCE_MAIL_RIGHT)){
this._popupOperations[ZaOperation.VIEW_MAIL]=new ZaOperation(ZaOperation.VIEW_MAIL,com_zimbra_viewmail.ACTBB_ViewMail,com_zimbra_viewmail.ACTBB_ViewMail_tt,"ReadMailbox","ReadMailbox",new AjxListener(this,ZaAccountViewMail._viewMailListener))
}};
if(ZaController.initPopupMenuMethods.ZaAccountListController){
ZaController.initPopupMenuMethods.ZaAccountListController.push(ZaAccountViewMail.initExtraPopupButton)
}
if(ZaController.initPopupMenuMethods.ZaSearchListController){
ZaController.initPopupMenuMethods.ZaSearchListController.push(ZaAccountViewMail.initExtraPopupButton)
}
if(ZaController.initPopupMenuMethods.ZaAccountViewController){
ZaController.initPopupMenuMethods.ZaAccountViewController.push(ZaAccountViewMail.initExtraPopupButton)
}
if(ZaController.initPopupMenuMethods.ZaDLController){
ZaController.initPopupMenuMethods.ZaDLController.push(ZaAccountViewMail.initExtraPopupButton)
}
if(ZaController.initPopupMenuMethods.ZaResourceController){
ZaController.initPopupMenuMethods.ZaResourceController.push(ZaAccountViewMail.initExtraPopupButton)
}
ZaAccountViewMail._viewMailListenerLauncher=ZaAccountListController._viewMailListenerLauncher;
ZaAccountViewMail._viewMailListener=function(o){
try{
var n=null;
if(this instanceof ZaAccountListController||this instanceof ZaSearchListController){
var t=this._contentView.getSelection();
if(!t||t.length<=0){
return
}
n=t[0]
}else{
if(this instanceof ZaAccountViewController||this instanceof ZaDLController||this instanceof ZaResourceController){
n=this._currentObject
}else{
return
}}
if(n){
ZaAccountViewMail._viewMailListenerLauncher.call(this,n)
}}
catch(e){
this._handleException(e,"ZaAccountViewMail._viewMailListener",null,false)
}};
ZaAccountViewMail.changeActionsStateMethod=function(){
var t,o;
if(this instanceof ZaAccountListController||this instanceof ZaSearchListController){
o=this._contentView.getSelection()[0];
t=this._contentView.getSelectionCount()
}else{
if(this instanceof ZaAccountViewController||this instanceof ZaDLController||this instanceof ZaResourceController){
o=this._currentObject;
t=1
}else{
return
}}
if(t==1){
if(o){
if(o.type==ZaItem.ACCOUNT){
var e=false;
if(ZaZimbraAdmin.currentAdminAccount.attrs[ZaAccount.A_zimbraIsAdminAccount]=="TRUE"){
e=true
}else{
if(AjxUtil.isEmpty(o.rights)){
o.loadEffectiveRights("id",o.id,false)
}}
if(!e){
if(!ZaItem.hasRight(ZaAccount.VIEW_MAIL_RIGHT,o)){
if(this._popupOperations[ZaOperation.VIEW_MAIL]){
this._popupOperations[ZaOperation.VIEW_MAIL].enabled=false
}}}}else{
if((o.type==ZaItem.ALIAS)&&(o.attrs[ZaAlias.A_targetType]==ZaItem.ACCOUNT)){
if(!o.targetObj){
o.targetObj=o.getAliasTargetObj()
}
var e=false;
if(ZaZimbraAdmin.currentAdminAccount.attrs[ZaAccount.A_zimbraIsAdminAccount]=="TRUE"){
e=true
}else{
if(AjxUtil.isEmpty(o.targetObj.rights)){
o.targetObj.loadEffectiveRights("id",o.id,false)
}}
if(!e){
if(!ZaItem.hasRight(ZaAccount.VIEW_MAIL_RIGHT,o.targetObj)){
if(this._popupOperations[ZaOperation.VIEW_MAIL]){
this._popupOperations[ZaOperation.VIEW_MAIL].enabled=false
}}}}else{
if((o.type==ZaItem.ALIAS)&&(o.attrs[ZaAlias.A_targetType]==ZaItem.RESOURCE)){
if(!o.targetObj){
o.targetObj=o.getAliasTargetObj()
}
var e=false;
if(ZaZimbraAdmin.currentAdminAccount.attrs[ZaAccount.A_zimbraIsAdminAccount]=="TRUE"){
e=true
}else{
if(AjxUtil.isEmpty(o.targetObj.rights)){
o.targetObj.loadEffectiveRights("id",o.id,false)
}}
if(!e){
if(!ZaItem.hasRight(ZaResource.VIEW_RESOURCE_MAIL_RIGHT,o.targetObj)){
if(this._popupOperations[ZaOperation.VIEW_MAIL]){
this._popupOperations[ZaOperation.VIEW_MAIL].enabled=false
}}}}else{
if(o.type==ZaItem.RESOURCE){
var e=false;
if(ZaZimbraAdmin.currentAdminAccount.attrs[ZaAccount.A_zimbraIsAdminAccount]=="TRUE"){
e=true
}else{
if(AjxUtil.isEmpty(o.rights)){
o.loadEffectiveRights("id",o.id,false)
}}
if(!e){
if(!ZaItem.hasRight(ZaResource.VIEW_RESOURCE_MAIL_RIGHT,o)){
if(this._popupOperations[ZaOperation.VIEW_MAIL]){
this._popupOperations[ZaOperation.VIEW_MAIL].enabled=false
}}}}else{
if(this._popupOperations[ZaOperation.VIEW_MAIL]){
this._popupOperations[ZaOperation.VIEW_MAIL].enabled=false
}}}}}}else{
if(this._popupOperations[ZaOperation.VIEW_MAIL]){
this._popupOperations[ZaOperation.VIEW_MAIL].enabled=false
}}}else{
if(this._popupOperations[ZaOperation.VIEW_MAIL]){
this._popupOperations[ZaOperation.VIEW_MAIL].enabled=false
}}};
if(ZaController.changeActionsStateMethods.ZaAccountListController){
ZaController.changeActionsStateMethods.ZaAccountListController.push(ZaAccountViewMail.changeActionsStateMethod)
}
if(ZaController.changeActionsStateMethods.ZaSearchListController){
ZaController.changeActionsStateMethods.ZaSearchListController.push(ZaAccountViewMail.changeActionsStateMethod)
}
if(ZaController.changeActionsStateMethods.ZaAccountViewController){
ZaController.changeActionsStateMethods.ZaAccountViewController.push(ZaAccountViewMail.changeActionsStateMethod)
}
if(ZaController.changeActionsStateMethods.ZaDLController){
ZaController.changeActionsStateMethods.ZaDLController.push(ZaAccountViewMail.changeActionsStateMethod)
}
if(ZaController.changeActionsStateMethods.ZaResourceController){
ZaController.changeActionsStateMethods.ZaResourceController.push(ZaAccountViewMail.changeActionsStateMethod)
}}
if(window.console&&window.console.log){
window.console.log("Start loading com_zimbra_license.js")
}
if(ZaSettings&&ZaSettings.EnabledZimlet.com_zimbra_license){
function ZaLicense(){
ZaItem.call(this,"ZaLicense");
this._init();
this.type=ZaItem.LICENSE
}
ZaLicense.prototype=new ZaItem;
ZaLicense.prototype.constructor=ZaLicense;
ZaSettings.IS_ZCS_NETWORK_VERSION=true;
if(ZaOperation){
ZaOperation.UPDATELICENSE=++ZA_OP_INDEX;
ZaOperation.ACTIVATE_LICENSE=++ZA_OP_INDEX;
ZaOperation.MANUAL_ACTIVATE=++ZA_OP_INDEX
}
ZaItem.LICENSE="license";
ZaLicense.A_accountsLimit="AccountsLimit";
ZaLicense.A_installType="InstallType";
ZaLicense.A_issuedOn="IssuedOn";
ZaLicense.A_issuedToEmail="IssuedToEmail";
ZaLicense.A_issuedToName="IssuedToName";
ZaLicense.A_licenseId="LicenseId";
ZaLicense.A_MAPIConnectorAccountsLimit="MAPIConnectorAccountsLimit";
ZaLicense.A_mobileSyncAccountsLimit="MobileSyncAccountsLimit";
ZaLicense.A_archivingAccountsLimit="ArchivingAccountsLimit";
ZaLicense.A_attachmentIndexingAccountsLimit="AttachmentIndexingAccountsLimit";
ZaLicense.A_SMIMEAccountsLimit="SMIMEAccountsLimit";
ZaLicense.A_VoiceAccountsLimit="VoiceAccountsLimit";
ZaLicense.A_resellerName="ResellerName";
ZaLicense.A_validFrom="ValidFrom";
ZaLicense.A_validUntil="ValidUntil";
ZaLicense.InstallStatusMsg="LicenseInstallStatusMsg";
ZaLicense.ActivationStatus="ActivationStatus";
ZaLicense.Info_TotalAccounts="TotalAccounts";
ZaLicense.A_activation_id="ActivationId";
ZaLicense.A_activation_last_update="LastUpdate";
ZaLicense.A_activation_version="Version";
ZaLicense.A_activation_fingerprint="Fingerprint";
ZaLicense.A_info_fingerprint="info_"+ZaLicense.A_activation_fingerprint;
ZaLicense.A_info_licenseId="info_"+ZaLicense.A_licenseId;
ZaLicense.A_info_prodution_version="info_"+ZaLicense.A_activation_version;
ZaLicense.INSTALL_TYPE_TRIAL="trial";
ZaLicense.INSTALL_TYPE_TRIAL_EXTENDED="trialExtended";
ZaLicense.INSTALL_TYPE_REGULAR="regular";
ZaLicense.INSTALL_TYPE_PERPETUAL="perpetual";
ZaLicense.INSTALL_ZCS_LICENSE_RIGHT="installZCSLicense";
ZaLicense.myXModel={
items:[{
id:ZaLicense.A_accountsLimit,type:_STRING_,ref:"attrs/"+ZaLicense.A_accountsLimit}
,{
id:ZaLicense.A_installType,type:_STRING_,ref:"attrs/"+ZaLicense.A_installType}
,{
id:ZaLicense.A_issuedOn,type:_STRING_,ref:"attrs/"+ZaLicense.A_issuedOn}
,{
id:ZaLicense.A_issuedToEmail,type:_STRING_,ref:"attrs/"+ZaLicense.A_issuedToEmail}
,{
id:ZaLicense.A_issuedToName,type:_STRING_,ref:"attrs/"+ZaLicense.A_issuedToName}
,{
id:ZaLicense.A_licenseId,type:_STRING_,ref:"attrs/"+ZaLicense.A_licenseId}
,{
id:ZaLicense.A_MAPIConnectorAccountsLimit,type:_STRING_,ref:"attrs/"+ZaLicense.A_MAPIConnectorAccountsLimit}
,{
id:ZaLicense.A_SMIMEAccountsLimit,type:_STRING_,ref:"attrs/"+ZaLicense.A_SMIMEAccountsLimit}
,{
id:ZaLicense.A_VoiceAccountsLimit,type:_STRING_,ref:"attrs/"+ZaLicense.A_VoiceAccountsLimit}
,{
id:ZaLicense.A_attachmentIndexingAccountsLimit,type:_STRING_,ref:"attrs/"+ZaLicense.A_attachmentIndexingAccountsLimit}
,{
id:ZaLicense.A_archivingAccountsLimit,type:_STRING_,ref:"attrs/"+ZaLicense.A_archivingAccountsLimit}
,{
id:ZaLicense.A_mobileSyncAccountsLimit,type:_STRING_,ref:"attrs/"+ZaLicense.A_mobileSyncAccountsLimit}
,{
id:ZaLicense.A_resellerName,type:_STRING_,ref:"attrs/"+ZaLicense.A_resellerName}
,{
id:ZaLicense.A_validFrom,type:_STRING_,ref:"attrs/"+ZaLicense.A_validFrom}
,{
id:ZaLicense.A_validUntil,type:_STRING_,ref:"attrs/"+ZaLicense.A_validUntil}
,{
id:ZaLicense.A_activation_id,type:_STRING_,ref:"activation/"+ZaLicense.A_activation_id}
,{
id:ZaLicense.A_activation_last_update,type:_STRING_,ref:"activation/"+ZaLicense.A_activation_last_update}
,{
id:ZaLicense.A_activation_version,type:_STRING_,ref:"activation/"+ZaLicense.A_activation_version}
,{
id:ZaLicense.A_activation_fingerprint,type:_STRING_,ref:"activation/"+ZaLicense.A_activation_fingerprint}
,{
id:ZaLicense.A_info_fingerprint,type:_STRING_,ref:"info/"+ZaLicense.A_info_fingerprint}
,{
id:ZaLicense.A_info_prodution_version,type:_STRING_,ref:"info/"+ZaLicense.A_info_prodution_version}
,{
id:ZaLicense.A_info_licenseId,type:_STRING_,ref:"info/"+ZaLicense.A_info_licenseId}
,{
id:ZaLicense.ActivationStatus,type:_ENUM_,choices:ZaModel.BOOLEAN_CHOICES,ref:ZaLicense.ActivationStatus}
,{
id:ZaLicense.InstallStatusMsg,type:_STRING_,ref:ZaLicense.InstallStatusMsg}
]};
ZaLicense.prototype.init=function(e){
this.initFromJS(e.license[0],true);
this.initInfo(e.info[0]);
if(e.activation){
this.initActivation(e.activation[0])
}};
ZaLicense.prototype.initFromJS=function(n,o){
if(!n){
return
}
this.attrs=new Object();
if(n.attr){
var e=n.attr.length;
for(var t=0;
t<e;
t++){
if(o&&ZaUtil.findValueInObjArrByPropertyName(ZaLicense.myXModel.items,n.attr[t].name,"id")<0){
continue
}
if(!this.attrs[[n.attr[t].name]]){
this.attrs[[n.attr[t].name]]=n.attr[t]._content
}else{
this.attrs[[n.attr[t].name]].push(n.attr[t]._content)
}}}};
ZaLicense.prototype.initInfo=function(t){
if(!t){
return
}
var e={};
ZaLicense.prototype.initFromJS.call(e,t);
this.info=e.attrs
};
ZaLicense.prototype.initActivation=function(t){
if(!t){
return
}
var e={};
ZaLicense.prototype.initFromJS.call(e,t);
this.activation=e.attrs
};
ZaLicense.prototype.getServerUTCTime=function(){
var o=this.info.ServerTime;
var t=new AjxDateFormat("yyyyMMddHHmmss'Z'");
var e=new Date();
e.setTime(o);
var n=t.format(e);
if(window.console&&window.console.log){
window.console.log("Server Time is "+n)
}
return n
};
ZaLicense.getLicenseInfo=function(n,o,r){
var t=AjxSoapDoc.create("GetLicenseRequest","urn:zimbraAdmin",null);
var e=new ZmCsfeCommand();
var s={};
s.soapDoc=t;
s.noAuthToken=true;
r=r||new AjxCallback(n,ZaLicense.getLicenseCallback,o);
s.asyncMode=true;
s.callback=r;
e.invoke(s)
};
ZaLicense.getLicenseCallback=function(n,l){
var t=n.parent._appCtxt._appController;
try{
if(l._isException){
throw new AjxException(com_zimbra_license.LI_GETLICENSE_ERROR_MSG,AjxException.UNKNOWN_ERROR,"ZaLicense.getLicenseCallback",l._data.msg)
}
var s=l._data.Body.GetLicenseResponse;
if(s.license){
if(!this._license){
this._license=new ZaLicense()
}
this._license.init(s);
var r=this._license.attrs[ZaLicense.A_validFrom];
ZaLicense.setLicenseStatus(t);
var e=n.getInstance();
ZaLicense.addLicense(e,this._license);
e[ZaLicense.InstallStatusMsg]=ZaLicenseInstallWizard.getInstallMsg();
n.setInstance(e);
ZaLicenseInstallWizard.INSTALL_STATUS=-1;
ZaTaskContentView.prototype.updateLicenseInfo.call(this,l)
}}
catch(o){
ZaLicenseInstallWizard.INSTALL_STATUS=-1;
t.popupErrorDialog(o.msg,o,true)
}};
ZaLicense.addLicense=function(e,o){
o.attrs[ZaLicense.A_validFrom]=ZaLicense.getLocaleString(o.attrs[ZaLicense.A_validFrom]);
o.attrs[ZaLicense.A_validUntil]=ZaLicense.getLocaleString(o.attrs[ZaLicense.A_validUntil]);
o.attrs[ZaLicense.A_issuedOn]=ZaLicense.getLocaleString(o.attrs[ZaLicense.A_issuedOn]);
o.attrs[ZaLicense.A_MAPIConnectorAccountsLimit]=ZaLicense.getAccountNumber(o.attrs[ZaLicense.A_MAPIConnectorAccountsLimit]);
o.attrs[ZaLicense.A_accountsLimit]=ZaLicense.getAccountNumber(o.attrs[ZaLicense.A_accountsLimit]);
o.attrs[ZaLicense.A_SMIMEAccountsLimit]=ZaLicense.getAccountNumber(o.attrs[ZaLicense.A_SMIMEAccountsLimit]);
o.attrs[ZaLicense.A_VoiceAccountsLimit]=ZaLicense.getAccountNumber(o.attrs[ZaLicense.A_VoiceAccountsLimit]);
o.attrs[ZaLicense.A_mobileSyncAccountsLimit]=ZaLicense.getAccountNumber(o.attrs[ZaLicense.A_mobileSyncAccountsLimit]);
o.attrs[ZaLicense.A_attachmentIndexingAccountsLimit]=ZaLicense.getAccountNumber(o.attrs[ZaLicense.A_attachmentIndexingAccountsLimit]);
o.attrs[ZaLicense.A_archivingAccountsLimit]=ZaLicense.getAccountNumber(o.attrs[ZaLicense.A_archivingAccountsLimit]);
if(o.info[ZaLicense.Info_TotalAccounts]>=0){
o.attrs[ZaLicense.A_accountsLimit]+=" "+AjxMessageFormat.format(com_zimbra_license.LI_ACCOUNTS_USED,[o.info[ZaLicense.Info_TotalAccounts]])
}else{
if(o.info[ZaLicense.Info_TotalAccounts]==-1){
o.attrs[ZaLicense.A_accountsLimit]+=" "+com_zimbra_license.LI_ACCOUNT_COUNTING
}else{
o.attrs[ZaLicense.A_accountsLimit]+=" "+com_zimbra_license.LI_ACCOUNT_COUNT_ERROR
}}
if(!e){
e={};
e.attrs=o.attrs
}else{
if(!e.attrs){
e.attrs={}
}
for(var t in o.attrs){
e.attrs[t]=o.attrs[t]
}}
if(o.activation){
e.activation=o.activation;
e.activation[ZaLicense.A_activation_last_update]=ZaLicense.getLocaleString(e.activation[ZaLicense.A_activation_last_update]);
e[ZaLicense.ActivationStatus]="TRUE"
}else{
e[ZaLicense.ActivationStatus]="FALSE"
}
if(o.info){
if(!e.license_info){
e.license_info={}
}
e.license_info[ZaLicense.A_info_fingerprint]=o.info[ZaLicense.A_activation_fingerprint];
e.license_info[ZaLicense.A_info_prodution_version]=o.info[ZaLicense.A_activation_version];
e.license_info[ZaLicense.A_info_licenseId]=o.attrs[ZaLicense.A_licenseId]
}};
ZaLicense.EXPIRED=false;
ZaLicense.WILL_EXPIRE=false;
ZaLicense.NOT_YET_VALID=false;
ZaLicense.NOT_YET_ACTIVATED=false;
ZaLicense.setLicenseStatus=function(e){
var t=new AjxCallback(e,ZaLicense.setLicenseStatusCallback,e);
ZaLicense.getLicenseInfo(e,null,t)
};
ZaLicense.setLicenseStatusCallback=function(e,n){
try{
if(n._isException){
ZaLicense.setNoLicenseStatusMsg(e);
throw new AjxException(com_zimbra_license.LI_GETLICENSE_ERROR_MSG,AjxException.UNKNOWN_ERROR,"ZaLicense.setLicenseStatusCallback",n._data.msg)
}
var o=n._data.Body.GetLicenseResponse;
if(o.license){
if(!this._license){
this._license=new ZaLicense()
}
this._license.init(o);
ZaLicense.setLicenseStatusMsg(e,this._license)
}}
catch(t){
e.popupErrorDialog(t.msg,t,true)
}};
ZaLicense.setNoLicenseStatusMsg=function(e){
e.setStatusMsg(com_zimbra_license.LI_NOLICENSE)
};
ZaLicense.checkLicenseExpiration=function(c){
var y="";
var u=(ZaLicense.parseLicenseDateTime(c.attrs[ZaLicense.A_validUntil])).getTime();
var m=24*60*60*1000;
var f=30*m;
var t=30;
var o=(new Date());
var p;
var r;
if(u<=o){
p=Math.ceil((o-u)/m);
ZaLicense.EXPIRED=true;
ZaLicense.WILL_EXPIRE=false
}else{
r=Math.ceil((u-o)/m);
ZaLicense.WILL_EXPIRE=(r<=t);
ZaLicense.EXPIRED=false
}
var d=c.getServerUTCTime();
var e=c.attrs[ZaLicense.A_validFrom];
ZaLicense.NOT_YET_VALID=(d.toLowerCase()<e);
ZaLicense.NOT_YET_ACTIVATED=(c.activation==null);
var g=c.attrs[ZaLicense.A_installType];
var l=(g==ZaLicense.INSTALL_TYPE_REGULAR);
var s=(g==ZaLicense.INSTALL_TYPE_PERPETUAL);
var n=(g==ZaLicense.INSTALL_TYPE_TRIAL||g==ZaLicense.INSTALL_TYPE_TRIAL_EXTENDED)?com_zimbra_license.licenseTrial:"";
if(ZaLicense.NOT_YET_VALID){
y=AjxMessageFormat.format(com_zimbra_license.ERROR_LICENSE_NOT_YET_VALID,[ZaLicense.getLocaleString(d),ZaLicense.getLocaleString(e)])
}else{
if(ZaLicense.EXPIRED){
if(!s){
y=AjxMessageFormat.format(com_zimbra_license.consoleLicenseExpired,[n,p])
}else{
y=AjxMessageFormat.format(com_zimbra_license.licenseLoseSupport,[p])
}}else{
if(ZaLicense.WILL_EXPIRE||(!l)){
if(!s){
y=AjxMessageFormat.format(com_zimbra_license.licenseWillExpire,[n,r])
}else{
y=AjxMessageFormat.format(com_zimbra_license.licenseWillLoseSupport,[r])
}}else{
if(ZaLicense.NOT_YET_ACTIVATED){
y=com_zimbra_license.licenseNotYetActivated
}}}}
return y
};
ZaLicense.checkLicenseExpirationFromResponse=function(o){
var e="";
if(o.isException()){
e=com_zimbra_license.LI_NOLICENSE;
ZaLicense.NOT_YET_VALID=true
}else{
var t=o.getResponse().Body.GetLicenseResponse;
if(t.license){
if(AjxUtil.isEmpty(this._license)){
this._license=new ZaLicense()
}
this._license.init(t);
e=ZaLicense.checkLicenseExpiration(this._license)
}}
return e
};
ZaLicense.setLicenseStatusMsg=function(e,n){
var o=ZaLicense.checkLicenseExpiration(n);
var t=o;
if(ZaLicense.NOT_YET_VALID){}else{
if(ZaLicense.EXPIRED){}else{
if(ZaLicense.WILL_EXPIRE){}else{
if(ZaLicense.NOT_YET_ACTIVATED){
o+=com_zimbra_license.licenseActivateInstrucution
}}}}};
ZaLicense.getAccountNumber=function(e){
if(!e){
return"0"
}else{
if(e=="-1"){
return com_zimbra_license.LI_UNLIMITED
}else{
return e
}}};
ZaLicense.getFeatureEanbled=function(e){
if(!e){
return ZaMsg.NAD_Disabled
}
e=e.toString().toLowerCase();
if(e=="true"){
return ZaMsg.NAD_Enabled
}else{
return ZaMsg.NAD_Disabled
}};
ZaLicense.getLocaleString=function(o){
var t=AjxDateFormat.getDateTimeInstance(AjxDateFormat.FULL);
var e=AjxDateUtil.parseServerDateTime(o);
return t.format(e)
};
ZaLicense.parseLicenseDateTime=function(t){
if(t==null){
return null
}
var o=new Date();
var s=parseInt(t.substr(0,4),10);
var n=parseInt(t.substr(4,2),10);
var e=parseInt(t.substr(6,2),10);
o.setFullYear(s);
o.setMonth(n-1);
o.setMonth(n-1);
o.setDate(e);
ZaLicense.parseLicenseTime(t,o);
return o
};
ZaLicense.parseLicenseTime=function(n,e){
var o=parseInt(n.substr(8,2),10);
var s=parseInt(n.substr(10,2),10);
var t=parseInt(n.substr(12,2),10);
s+=AjxTimezone.getOffset(AjxTimezone.DEFAULT,e);
e.setHours(o,s,t,0);
return e
};
if(ZaGlobalConfig){
ZaGlobalConfig.A_zimbraFeatureLicenseEnabled="zimbraFeatureLicenseEnabled";
ZaGlobalConfig.myXModel.items.push({
id:ZaGlobalConfig.A_zimbraFeatureLicenseEnabled,type:_COS_ENUM_,ref:"attrs/"+ZaGlobalConfig.A_zimbraFeatureLicenseEnabled,choices:ZaModel.BOOLEAN_CHOICES}
);
ZaGlobalConfig.myXModel.items=ZaGlobalConfig.myXModel.items.concat(ZaLicense.myXModel.items)
}
if(ZaController.initPopupMenuMethods.ZaGlobalConfigViewController){
ZaLicense.initLicenseButtonsrMethod=function(){
this._popupOperations[ZaOperation.UPDATELICENSE]=new ZaOperation(ZaOperation.UPDATELICENSE,com_zimbra_license.TBB_UpdateLicense,com_zimbra_license.ALTBB_UpdateLicense_tt,"UpdateLicense","UpdateLicense",new AjxListener(this,this.updateLicenseButtonListener));
this._popupOperations[ZaOperation.ACTIVATE_LICENSE]=new ZaOperation(ZaOperation.ACTIVATE_LICENSE,com_zimbra_license.TBB_ActivateLicense,com_zimbra_license.ALTBB_ActivateLicense_tt,"ActivateLicense","ActivateLicense",new AjxListener(this,this.activateLicenseButtonListener));
this._popupOperations[ZaOperation.MANUAL_ACTIVATE]=new ZaOperation(ZaOperation.MANUAL_ACTIVATE,com_zimbra_license.TBB_ManualActivation,com_zimbra_license.ALTBB_ManualActivate_tt,"ImgManualLicense","ImgManualLicense",new AjxListener(this,this.manualActivateButtonListener))
};
ZaController.initPopupMenuMethods.ZaGlobalConfigViewController.push(ZaLicense.initLicenseButtonsrMethod)
}
ZaGlobalConfigViewController.prototype.updateLicenseButtonListener=function(t){
try{
this._license=new ZaLicense();
if(!ZaApp.getInstance().dialogs.licenseInstallWizard){
ZaApp.getInstance().dialogs.licenseInstallWizard=new ZaLicenseInstallWizard(this._container,ZaApp.getInstance())
}
ZaApp.getInstance().dialogs.licenseInstallWizard.setObject(this._license);
ZaApp.getInstance().dialogs.licenseInstallWizard.popup()
}
catch(e){
this._handleException(e,"ZaGlobalConfigViewController.prototype.updateLicenseButtonListener",null,false)
}};
ZaGlobalConfigViewController.prototype.manualActivateButtonListener=function(n){
try{
var t=this._view._localXForm.getInstance().license_info;
if(!t){
this.popupMsgDialog(com_zimbra_license.LAW_no_license);
return
}
var o=new ZaLicense();
o.info={};
o.info[ZaLicense.A_info_fingerprint]=t[ZaLicense.A_info_fingerprint];
o.info[ZaLicense.A_info_prodution_version]=t[ZaLicense.A_info_prodution_version];
o.info[ZaLicense.A_info_licenseId]=t[ZaLicense.A_info_licenseId];
if(!ZaApp.getInstance().dialogs.licenseActivateDialog){
ZaApp.getInstance().dialogs.licenseActivateDialog=new ZaLicenseActivateDialog(this._container,ZaApp.getInstance())
}
ZaApp.getInstance().dialogs.licenseActivateDialog.setObject(o);
ZaApp.getInstance().dialogs.licenseActivateDialog.popup()
}
catch(e){
this._handleException(e,"ZaGlobalConfigViewController.prototype.manualActivateButtonListener",null,false)
}};
ZaGlobalConfigViewController.prototype.activateLicenseButtonListener=function(t){
var o=AjxSoapDoc.create("ActivateLicenseRequest",ZaZimbraAdmin.URN,null);
var n=o.set("content","");
if(t&&t.attId!=null){
n.setAttribute("aid",t.attId)
}
var r=new Object();
r.soapDoc=o;
var l={
controller:this,busyMsg:com_zimbra_license.BUSY_ACTIVATE_LICENSE};
try{
var s=ZaRequestMgr.invoke(r,l);
if(s.isException&&s.isException()){
if(ZaApp.getInstance()&&ZaApp.getInstance().getCurrentController()){
this._handleException(s.getException(),"ZaGlobalConfigViewController.prototype.activateLicenseButtonListener",null,false)
}}else{
this.popupMsgDialog(com_zimbra_license.activationsucceed);
ZaLicense.getLicenseInfo(this,this._view._localXForm)
}}
catch(e){
this._handleException(e,"ZaGlobalConfigViewController.prototype.activateLicenseButtonListener",null,false)
}};
GlobalConfigXFormView.enableLicenseRelatedButtons=function(o,s){
var e=[ZaOperation.UPDATELICENSE,ZaOperation.ACTIVATE_LICENSE,ZaOperation.MANUAL_ACTIVATE];
var r=o._popupOperations;
for(var n=0;
n<e.length;
n++){
var t=e[n];
if(r[t]){
r[t].enabled=s
}}};
GlobalConfigXFormView.switchTab=function(s,n,o){
var t=ZaApp.getInstance().getCurrentController();
var e=(s==ZaLicense.GlobalConfigTabIndex);
GlobalConfigXFormView.enableLicenseRelatedButtons(t,e);
this.setInstanceValue(s);
return s
};
if(ZaTabView.XFormModifiers.GlobalConfigXFormView){
ZaLicense.GlobalConfigXFormModifier=function(r){
ZaLicense.GlobalConfigTabIndex=++this.TAB_INDEX;
var n,t,o;
for(n=t=o=0;
;
o++){
if(o>=r.items.length){
return
}
var s=r.items[o];
if(r.items[o].type==_TAB_BAR_){
n=o
}else{
if(r.items[o].type==_SWITCH_){
t=o
}}
if(n&t!=0){
break
}}
var e=r.items[n];
e.choices.push({
value:ZaLicense.GlobalConfigTabIndex,label:com_zimbra_license.NAD_Tab_License}
);
var l={
type:_ZATABCASE_,caseKey:ZaLicense.GlobalConfigTabIndex,colSizes:["300px","*"],visibilityChecks:[ZaLicense.visibilityChecks],items:[{
type:_SPACER_,height:10}
,{
type:_OUTPUT_,ref:ZaLicense.InstallStatusMsg,colSpan:"2",width:"600px",align:_CENTER_,cssStyle:"border: solid thin",visibilityChecks:[function(){
return ZaLicenseInstallWizard.INSTALL_STATUS>=0
}
]}
,{
type:_OUTPUT_,value:com_zimbra_license.LI_INFO_TITLE,colSpan:"2",width:"600px",align:_CENTER_}
,{
type:_OUTPUT_,ref:ZaLicense.A_issuedToName,label:com_zimbra_license.LB_company_name,align:_LEFT_}
,{
type:_OUTPUT_,ref:ZaLicense.A_installType,label:com_zimbra_license.LB_license_type,align:_LEFT_}
,{
type:_OUTPUT_,ref:ZaLicense.A_licenseId,label:com_zimbra_license.LB_license_id,align:_LEFT_}
,{
type:_OUTPUT_,ref:ZaLicense.A_issuedOn,label:com_zimbra_license.LB_issue_date,align:_LEFT_}
,{
type:_OUTPUT_,ref:ZaLicense.A_validFrom,label:com_zimbra_license.LB_effective_date,align:_LEFT_}
,{
type:_OUTPUT_,ref:ZaLicense.A_validUntil,label:com_zimbra_license.LB_expiration_date,align:_LEFT_,visibilityChecks:[[XForm.checkInstanceValueNot,ZaLicense.A_installType,ZaLicense.INSTALL_TYPE_PERPETUAL]],visibilityChangeEventSources:[ZaLicense.A_installType]}
,{
type:_OUTPUT_,ref:ZaLicense.A_validUntil,label:com_zimbra_license.LB_support_end_date,align:_LEFT_,visibilityChecks:[[XForm.checkInstanceValue,ZaLicense.A_installType,ZaLicense.INSTALL_TYPE_PERPETUAL]],visibilityChangeEventSources:[ZaLicense.A_installType]}
,{
type:_OUTPUT_,ref:ZaLicense.A_accountsLimit,label:com_zimbra_license.LB_account_limit,align:_LEFT_}
,{
type:_OUTPUT_,ref:ZaLicense.A_mobileSyncAccountsLimit,label:com_zimbra_license.LB_mobile_limit,align:_LEFT_}
,{
type:_OUTPUT_,ref:ZaLicense.A_MAPIConnectorAccountsLimit,label:com_zimbra_license.LB_mapi_limit,align:_LEFT_}
,{
type:_OUTPUT_,ref:ZaLicense.A_archivingAccountsLimit,label:com_zimbra_license.LB_archiving_limit,align:_LEFT_}
,{
type:_OUTPUT_,ref:ZaLicense.A_attachmentIndexingAccountsLimit,label:com_zimbra_license.LB_attachment_limit,align:_LEFT_}
,{
type:_OUTPUT_,ref:ZaLicense.A_SMIMEAccountsLimit,label:com_zimbra_license.LB_smime_limit,align:_LEFT_}
,{
type:_OUTPUT_,ref:ZaLicense.A_VoiceAccountsLimit,label:com_zimbra_license.LB_voice_limit,align:_LEFT_}
,{
type:_GROUP_,colSpan:"2",colSizes:["300px","*"],visibilityChecks:[[XForm.checkInstanceValue,ZaLicense.ActivationStatus,"TRUE"]],visibilityChangeEventSources:[ZaLicense.ActivationStatus],bmolsnr:true,items:[{
type:_OUTPUT_,ref:ZaLicense.A_activation_id,label:com_zimbra_license.LB_activation_id,align:_LEFT_}
,{
type:_OUTPUT_,ref:ZaLicense.A_activation_fingerprint,label:com_zimbra_license.LB_activation_fingerprint,align:_LEFT_}
,{
type:_OUTPUT_,ref:ZaLicense.A_activation_last_update,label:com_zimbra_license.LB_activation_last_update,align:_LEFT_}
,{
type:_OUTPUT_,ref:ZaLicense.A_activation_version,label:com_zimbra_license.LB_activation_version,align:_LEFT_}
]}
,{
type:_OUTPUT_,value:"<span style='color: red;'>"+com_zimbra_license.license_not_activated+"</span>",visibilityChecks:[[XForm.checkInstanceValue,ZaLicense.ActivationStatus,"FALSE"]],visibilityChangeEventSources:[ZaLicense.ActivationStatus],colSpan:"2",width:"600px",align:_CENTER_,bmolsnr:true}
]};
r.items[t].items.push(l)
};
ZaTabView.XFormModifiers.GlobalConfigXFormView.push(ZaLicense.GlobalConfigXFormModifier)
}
if(ZaHome&&ZaHome.myXModel){
ZaHome.A2_licenseInBadStatus="LicenseInBadStatusForHome";
ZaHome.A2_licenseMessage="LicenseMessageForHome";
ZaHome.A2_licenseCanBeShown="LicenseCanBeShownForHome";
ZaHome.myXModel.items.push({
id:ZaHome.A2_licenseInBadStatus,type:_ENUM_,ref:"attrs/"+ZaHome.A2_licenseInBadStatus,choices:ZaModel.BOOLEAN_CHOICES}
);
ZaHome.myXModel.items.push({
id:ZaHome.A2_licenseMessage,type:_STRING_,ref:"attrs/"+ZaHome.A2_licenseMessage}
);
ZaHome.myXModel.items.push({
id:ZaHome.A2_licenseCanBeShown,type:_ENUM_,choices:ZaModel.BOOLEAN_CHOICES,defaultValue:false}
);
ZaHome.loadLicenseMethod=function(){
this.attrs[ZaHome.A2_licenseInBadStatus]=false;
this.attrs[ZaHome.A2_licenseMessage]=""
};
ZaItem.loadMethods.ZaHome.push(ZaHome.loadLicenseMethod);
ZaHome.postLoadLicenseInfo=function(){
var o=AjxSoapDoc.create("GetLicenseRequest","urn:zimbraAdmin",null);
var e=new ZmCsfeCommand();
var n={};
n.soapDoc=o;
n.asyncMode=true;
n.noAuthToken=true;
n.callback=new AjxCallback(this,ZaHome.prototype.updateLicenseInfo);
try{
e.invoke(n)
}
catch(t){
ZaApp.getInstance().getHomeViewController().setInstanceValue(true,ZaHome.A2_licenseInBadStatus);
ZaApp.getInstance().getHomeViewController().setInstanceValue(com_zimbra_license.LI_NOLICENSE,ZaHome.A2_licenseMessage);
ZaLicense.NOT_YET_VALID=true
}};
ZaHome.postLoadDataFunction.push(ZaHome.postLoadLicenseInfo);
ZaHome.prototype.updateLicenseInfo=function(o){
var e=ZaLicense.checkLicenseExpirationFromResponse.call(this,o);
var n=ZaApp.getInstance().getHomeViewController();
var t=(e!="");
n.setInstanceValue(t,ZaHome.A2_licenseCanBeShown);
n.setInstanceValue(ZaLicense.isInBadStatus(),ZaHome.A2_licenseInBadStatus);
n.setInstanceValue(e,ZaHome.A2_licenseMessage);
if(t){
n.showWarningPanel()
}}
}
if(ZaTabView.XFormModifiers.ZaHomeXFormView){
ZaHomeXFormView.onInstallLicense=function(t){
var e=ZaZimbraAdmin.getInstance().getOverviewPanelController().getOverviewPanel().getFolderTree();
var o=ZaTree.getPathByArray([ZaMsg.OVP_home,ZaMsg.OVP_configure,ZaMsg.OVP_global]);
e.setSelectionByPath(o,false);
var o=ZaTree.getPathByArray([ZaMsg.OVP_home,ZaMsg.OVP_configure,ZaMsg.OVP_global,com_zimbra_license.NAD_Tab_License]);
e.setSelectionByPath(o,false)
};
ZaLicense.HomeXFormModifier=function(l){
var s=ZaHomeXFormView.getWarningPanelItem(l);
s.items.push({
type:_GROUP_,numCols:3,width:"100%",colSizes:ZaHomeXFormView.getWarningPanelCol(),containerCssClass:"ZaHomeWarnginItem",visibilityChecks:[[XForm.checkInstanceValue,ZaHome.A2_licenseCanBeShown,true]],visibilityChangeEventSources:[ZaHome.A2_licenseCanBeShown],items:[{
type:_OUTPUT_,ref:ZaHome.A2_licenseInBadStatus,bmolsnr:true,getDisplayValue:function(c){
if(c){
return AjxImg.getImageHtml("Critical")
}else{
return AjxImg.getImageHtml("Warning")
}}}
,{
type:_OUTPUT_,ref:ZaHome.A2_licenseMessage,bmolsnr:true}
,{
type:_OUTPUT_,value:com_zimbra_license.LBL_HomeManageLicense,visibilityChecks:[[ZaItem.hasRight,ZaLicense.INSTALL_ZCS_LICENSE_RIGHT,ZaZimbraAdmin.currentAdminAccount]],visibilityChangeEventSources:[ZaTask.A2_licenseCanBeShown],containerCssClass:"ZaLinkedItem",onClick:ZaHomeXFormView.onInstallLicense}
]}
);
if(ZaItem.hasRight(ZaLicense.INSTALL_ZCS_LICENSE_RIGHT,ZaZimbraAdmin.currentAdminAccount)){
var t=ZaHomeXFormView.getHomeSetupItem(l);
var n=t.headerLabels;
var e=t.contentItems;
var o;
for(var o=0;
o<n.length;
o++){
if(n[o]==ZaMsg.LBL_HomeGetStared){
break
}}
if(o!=n.length){
var r=e[o];
r[0]={
value:com_zimbra_license.LBL_HomeInstallLicense,onClick:ZaHomeXFormView.onInstallLicense}
}}};
ZaTabView.XFormModifiers.ZaHomeXFormView.push(ZaLicense.HomeXFormModifier)
}
ZaLicense.viewSetObject=function(t,n){
var o=this._localXForm;
if(!o){
return
}
var e=o.getInstance();
if(!e.attrs[ZaLicense.A_licenseId]){
ZaLicense.getLicenseInfo(this,o)
}
return t
};
if(ZaTabView.XFormSetObjectMethods.GlobalConfigXFormView){
ZaTabView.XFormSetObjectMethods.GlobalConfigXFormView.push(ZaLicense.viewSetObject)
}
ZaLicense.visibilityChecks=function(){
var e=this.getForm();
var t=e.parent;
var s=t._containedObject[ZaModel.currentTab];
var n=(s==ZaLicense.GlobalConfigTabIndex);
var o=ZaApp.getInstance().getCurrentController();
GlobalConfigXFormView.enableLicenseRelatedButtons(o,n);
o.changeActionsState();
return n
};
function ZaLicenseActivateDialog(e){
if(arguments.length==0){
return
}
this._standardButtons=[DwtDialog.CANCEL_BUTTON];
var o=new DwtDialog_ButtonDescriptor(ZaXWizardDialog.HELP_BUTTON,ZaMsg.TBB_Help,DwtDialog.ALIGN_LEFT,new AjxCallback(this,this._helpButtonListener));
var t=new DwtDialog_ButtonDescriptor(ZaLicenseActivateDialog.ACTIVATE_BUTTON,com_zimbra_license.LAW_activate,DwtDialog.ALIGN_RIGHT,new AjxCallback(this,this.doActivate));
this._extraButtons=[o,t];
ZaXDialog.call(this,e,null,com_zimbra_license.LAW_title,"500px","300px","ZaLicenseActivateDialog");
this.attId=null;
this.initForm(ZaLicense.myXModel,this.getMyXForm());
this._setAllowSelection();
this._localXForm.setController(ZaApp.getInstance());
this._helpURL=ZaLicenseInstallWizard.helpURL
}
ZaLicenseActivateDialog.prototype=new ZaXDialog;
ZaLicenseActivateDialog.prototype.constructor=ZaLicenseActivateDialog;
ZaLicenseActivateDialog.ACTIVATE_BUTTON=++DwtDialog.LAST_BUTTON;
ZaXDialog.XFormModifiers.ZaLicenseActivateDialog=new Array();
ZaLicenseActivateDialog.helpURL=location.pathname+"help/admin/html/managing_global_settings/activating_your_zimbra_license.htm?locid="+AjxEnv.DEFAULT_LOCALE;
ZaLicenseActivateDialog.prototype.getMyXForm=function(){
var e={
numCols:1,items:[{
type:_SPACER_,height:20}
,{
type:_OUTPUT_,value:com_zimbra_license.LAW_instructions,align:_LEFT_}
,{
type:_SPACER_,height:20}
,{
type:_GROUP_,numCols:2,items:[{
type:_OUTPUT_,ref:ZaLicense.A_info_fingerprint,label:com_zimbra_license.LB_activation_fingerprint,align:_LEFT_}
,{
type:_OUTPUT_,ref:ZaLicense.A_info_licenseId,label:com_zimbra_license.LB_license_id,align:_LEFT_}
,{
type:_OUTPUT_,ref:ZaLicense.A_info_prodution_version,label:com_zimbra_license.LB_activation_version,align:_LEFT_}
]}
,{
type:_SPACER_,height:20}
,{
type:_OUTPUT_,value:com_zimbra_license.LAW_uploadTitle,align:_LEFT_}
,{
type:_OUTPUT_,value:ZaLicenseActivateDialog.getUploadFormHtml()}
]};
return e
};
ZaLicenseActivateDialog.LicenseUploadAttachmentInputId=Dwt.getNextId();
ZaLicenseActivateDialog.LicenseUploadFormId=Dwt.getNextId();
ZaLicenseActivateDialog.getUploadFormHtml=function(){
var o=appContextPath+"/../service/upload";
var t=new Array();
var e=0;
t[e++]="<div style='overflow: visible;'><form method='POST' action='";
t[e++]=o;
t[e++]="' id='";
t[e++]=ZaLicenseActivateDialog.LicenseUploadFormId;
t[e++]="' enctype='multipart/form-data'><input id='";
t[e++]=ZaLicenseActivateDialog.LicenseUploadAttachmentInputId;
t[e++]="' type=file  name='licenseFile' size='45'></input>";
t[e++]="</form></div>";
return t.join("")
};
ZaLicenseActivateDialog.prototype.doActivate=function(){
this.setUploadManager(new AjxPost(ZaLicenseInstallWizard.prototype.getUploadFrameId.call(this)));
var e=new AjxCallback(this,this._uploadCallback);
var t=this.getUploadManager();
window._uploadManager=t;
try{
t.execute(e,document.getElementById(ZaLicenseActivateDialog.LicenseUploadFormId))
}
catch(o){
ZaApp.getInstance().getCurrentController().popupErrorDialog(com_zimbra_license.activationFileNameError)
}};
ZaLicenseActivateDialog.prototype._uploadCallback=function(e,t){
if((e==AjxPost.SC_OK)&&(t!=null)){
this.attId=t;
ZaGlobalConfigViewController.prototype.activateLicenseButtonListener.call(ZaApp.getInstance().getCurrentController(),this);
this.popdown()
}else{
var o=AjxMessageFormat.format(com_zimbra_license.UploadActivationErrorMsg,e);
ZaApp.getInstance().getCurrentController().popupErrorDialog(o+com_zimbra_license.ErrorTryAgain,null,null,true)
}};
ZaLicenseActivateDialog.prototype.setUploadManager=function(e){
this._uploadManager=e
};
ZaLicenseActivateDialog.prototype.getUploadManager=function(){
return this._uploadManager
};
function ZaLicenseInstallWizard(e){
ZaXWizardDialog.call(this,e,null,com_zimbra_license.LIW_title,"500px","300px","ZaLicenseInstallWizard");
this.stepChoices=[{
label:com_zimbra_license.LIW_TABT_upload,value:1}
,{
label:com_zimbra_license.LIW_uploadstatus_title,value:2}
];
this._lastStep=this.stepChoices.length;
this.attId=null;
this.initForm(ZaLicense.myXModel,this.getMyXForm());
this._localXForm.setController(ZaApp.getInstance());
this._localXForm.addListener(DwtEvent.XFORMS_FORM_DIRTY_CHANGE,new AjxListener(this,ZaLicenseInstallWizard.prototype.handleXFormChange));
this._localXForm.addListener(DwtEvent.XFORMS_VALUE_ERROR,new AjxListener(this,ZaLicenseInstallWizard.prototype.handleXFormChange));
this._helpURL=ZaLicenseInstallWizard.helpURL
}
ZaLicenseInstallWizard.INSTALL_STATUS=-1;
ZaLicenseInstallWizard.prototype=new ZaXWizardDialog;
ZaLicenseInstallWizard.prototype.constructor=ZaLicenseInstallWizard;
ZaXDialog.XFormModifiers.ZaLicenseInstallWizard=new Array();
ZaLicenseInstallWizard.helpURL=location.pathname+"help/admin/html/managing_global_settings/updating_your_zimbra_license.htm?locid="+AjxEnv.DEFAULT_LOCALE;
ZaLicenseInstallWizard.prototype.handleXFormChange=function(){
if(this._localXForm.hasErrors()){
this._button[DwtWizardDialog.FINISH_BUTTON].setEnabled(false)
}else{
this._button[DwtWizardDialog.FINISH_BUTTON].setEnabled(true)
}};
ZaLicenseInstallWizard.getInstallMsg=function(){
if(ZaLicenseInstallWizard.INSTALL_STATUS==0){
return com_zimbra_license.LI_INSTALL_STATUS_0
}else{
if(ZaLicenseInstallWizard.INSTALL_STATUS==1){
return com_zimbra_license.LI_INSTALL_STATUS_1
}else{
return""
}}};
ZaLicenseInstallWizard.prototype.popup=function(e){
ZaXWizardDialog.prototype.popup.call(this,e);
this._button[DwtWizardDialog.NEXT_BUTTON].setEnabled(false);
this._button[DwtWizardDialog.FINISH_BUTTON].setEnabled(false);
this._button[DwtWizardDialog.FINISH_BUTTON].setText(com_zimbra_license.LIW_INSTALL_BUTTON_text);
this._button[DwtWizardDialog.PREV_BUTTON].setEnabled(false)
};
ZaLicenseInstallWizard.prototype.finishWizard=function(){
try{
ZaLicenseInstallWizard.INSTALL_STATUS=0;
var t=AjxSoapDoc.create("InstallLicenseRequest","urn:zimbraAdmin",null);
var o=t.set("content","");
o.setAttribute("aid",this.attId[0].aid);
var s=new ZmCsfeCommand();
var n=new Object();
n.soapDoc=t;
n.noAuthToken=true;
var r=new AjxCallback(this,this.installCallback);
n.asyncMode=true;
n.callback=r;
s.invoke(n);
this.popdown()
}
catch(e){
ZaApp.getInstance().getCurrentController()._handleException(e,"ZaLicenseInstallWizard.prototype.finishWizard",null,false)
}};
ZaLicenseInstallWizard.getCause=function(o){
var t=/Caused by:\s*com.zimbra.cs.license.LicenseException:\s*(.*)/;
var e=o.match(t);
if(e!=null){
return e[1]
}else{
return o
}};
ZaLicenseInstallWizard.prototype.installCallback=function(r){
var t=ZaApp.getInstance().getCurrentController();
var e=t._view._localXForm;
try{
if(r._isException){
var s=r._data.msg;
throw new AjxException(com_zimbra_license.LI_INSTALL_STATUS_1+": "+ZaLicenseInstallWizard.getCause(s),"ZaLicenseInstallWizard.prototype.installCallback",AjxException.UNKNOWN_ERROR,s)
}else{
var n=r._data.Body.InstallLicenseResponse;
if(n){
ZaLicense.getLicenseInfo(this,e)
}else{
throw new AjxException(com_zimbra_license.LIW_ERROR_0,"installCallback",AjxException.UNKNOWN_ERROR)
}}}
catch(o){
ZaLicenseInstallWizard.INSTALL_STATUS=1;
e.getItemsById(ZaLicense.InstallStatusMsg)[0].setInstanceValue(o.msg);
e.refresh();
ZaLicenseInstallWizard.INSTALL_STATUS=-1;
t.popupErrorDialog(o.msg,o,true)
}};
ZaLicenseInstallWizard.prototype._uploadCallback=function(e,t){
if((e==AjxPost.SC_OK)&&(t!=null)){
this.attId=t;
this.goPage(this._containedObject[ZaModel.currentStep]+1);
this._button[DwtWizardDialog.PREV_BUTTON].setEnabled(true);
if(this._containedObject[ZaModel.currentStep]==this._lastStep){
this._button[DwtWizardDialog.NEXT_BUTTON].setEnabled(false);
this._button[DwtWizardDialog.FINISH_BUTTON].setEnabled(true)
}}else{
var o=AjxMessageFormat.format(com_zimbra_license.UploadLicenseErrorMsg,e);
ZaApp.getInstance().getCurrentController().popupErrorDialog(o+com_zimbra_license.ErrorTryAgain,null,null,true)
}};
ZaLicenseInstallWizard.prototype.getUploadFrameId=function(){
if(!this._uploadManagerIframeId){
var o=Dwt.getNextId();
var e=["<iframe name='",o,"' id='",o,"' src='",(AjxEnv.isIE&&location.protocol=="https:")?appContextPath+"/public/blank.html":'javascript:""',"' style='position: absolute; top: 0; left: 0; visibility: hidden'></iframe>"];
var t=document.createElement("div");
t.innerHTML=e.join("");
document.body.appendChild(t.firstChild);
this._uploadManagerIframeId=o
}
return this._uploadManagerIframeId
};
ZaLicenseInstallWizard.prototype.getUploadManager=function(){
return this._uploadManager
};
ZaLicenseInstallWizard.prototype.setUploadManager=function(e){
this._uploadManager=e
};
ZaLicenseInstallWizard.setNext=function(){
var o=ZaApp.getInstance().dialogs.licenseInstallWizard;
o._button[DwtWizardDialog.NEXT_BUTTON].setEnabled(true);
var t=ZaApp.getInstance().getCurrentController();
var e=t._view._localXForm;
e.refresh()
};
ZaLicenseInstallWizard.prototype.goNext=function(){
if(this._containedObject[ZaModel.currentStep]==1){
try{
var o=new AjxCallback(this,this._uploadCallback);
if(AjxEnv.supportsHTML5File){
ZaUploader.upload(o,ZaLicenseInstallWizard.LicenseUploadAttachmentInputId)
}else{
this.setUploadManager(new AjxPost(this.getUploadFrameId()));
var e=this.getUploadManager();
window._uploadManager=e;
e.execute(o,document.getElementById(ZaLicenseInstallWizard.LicenseUploadFormId))
}}
catch(t){
ZaApp.getInstance().getCurrentController().popupErrorDialog((t&&t.msg)?t.msg:com_zimbra_license.licenseFileNameError)
}}else{
this.goPage(this._containedObject[ZaModel.currentStep]+1);
this._button[DwtWizardDialog.PREV_BUTTON].setEnabled(true);
if(this._containedObject[ZaModel.currentStep]==this._lastStep){
this._button[DwtWizardDialog.NEXT_BUTTON].setEnabled(false);
this._button[DwtWizardDialog.FINISH_BUTTON].setEnabled(true)
}}};
ZaLicenseInstallWizard.prototype.goPrev=function(){
if(this._containedObject[ZaModel.currentStep]==2){
this._button[DwtWizardDialog.PREV_BUTTON].setEnabled(false)
}
if(this._containedObject[ZaModel.currentStep]==this._lastStep){
this._button[DwtWizardDialog.NEXT_BUTTON].setEnabled(true)
}
this.goPage(this._containedObject[ZaModel.currentStep]-1)
};
ZaLicenseInstallWizard.prototype.setObject=function(t){
this._containedObject=new Object();
this._containedObject.attrs=new Object();
for(var e in t.attrs){
this._containedObject.attrs[e]=t.attrs[e]
}
this._containedObject[ZaModel.currentStep]=1;
this._localXForm.setInstance(this._containedObject)
};
ZaLicenseInstallWizard.LicenseUploadAttachmentInputId=Dwt.getNextId();
ZaLicenseInstallWizard.LicenseUploadFormId=Dwt.getNextId();
ZaLicenseInstallWizard.getUploadFormHtml=function(){
var o=appContextPath+"/../service/upload";
var t=new Array();
var e=0;
t[e++]="<div style='overflow:visible'><form method='POST' action='";
t[e++]=o;
t[e++]="' id='";
t[e++]=ZaLicenseInstallWizard.LicenseUploadFormId;
t[e++]="' enctype='multipart/form-data'><input id='";
t[e++]=ZaLicenseInstallWizard.LicenseUploadAttachmentInputId;
t[e++]="' type=file  name='licenseFile' size='45' onChange='ZaLicenseInstallWizard.setNext()'></input>";
t[e++]="</form></div>";
return t.join("")
};
ZaLicenseInstallWizard.myXFormModifier=function(s){
var o=new Array();
var t={
type:_CASE_,numCols:1,caseKey:1,align:_LEFT_,valign:_TOP_};
var n=[{
type:_OUTPUT_,value:com_zimbra_license.LIW_uploadTitle,align:_LEFT_}
,{
type:_OUTPUT_,value:ZaLicenseInstallWizard.getUploadFormHtml()}
];
t.items=n;
o.push(t);
var e={
type:_CASE_,numCols:2,colSizes:["200px","*"],caseKey:2,items:[{
type:_OUTPUT_,value:com_zimbra_license.LIW_uLicenseInfo_title,colSpan:"2",width:"400px",align:_LEFT_}
,{
type:_SPACER_,height:10}
,{
type:_OUTPUT_,value:com_zimbra_license.LIW_uLicenseConfirmation,colSpan:"2",width:"400px",align:_LEFT_}
]};
o.push(e);
s.items=[{
type:_OUTPUT_,colSpan:2,valign:_TOP_,cssStyle:"white-space: normal",ref:ZaModel.currentStep,choices:this.stepChoices,valueChangeEventSources:[ZaModel.currentStep]}
,{
type:_SEPARATOR_,align:_CENTER_,valign:_TOP_}
,{
type:_SPACER_,align:_CENTER_,valign:_TOP_}
,{
type:_SWITCH_,width:450,align:_LEFT_,valign:_TOP_,cssStyle:"white-space: normal",items:o}
]
};
ZaXDialog.XFormModifiers.ZaLicenseInstallWizard.push(ZaLicenseInstallWizard.myXFormModifier);
ZaLicense.changeActionsStateMethod=function(){
if(this._view&&this._view._containedObject&&this._view._containedObject[ZaModel.currentTab]){
var t=this._view._containedObject[ZaModel.currentTab];
var e=(t==ZaLicense.GlobalConfigTabIndex)
}else{
GlobalConfigXFormView.enableLicenseRelatedButtons(this,false)
}};
ZaController.changeActionsStateMethods.ZaGlobalConfigViewController.push(ZaLicense.changeActionsStateMethod);
if(ZaTask&&ZaTask.myXModel){
ZaTask.A2_licenseMessage="LicenseMessageForTask";
ZaTask.A2_licenseInBadStatus="LicenseInBadStatusForTask";
ZaTask.A2_licenseCanBeShown="LicenseCanBeShownForTask";
ZaTask.myXModel.items.push({
id:ZaTask.A2_licenseMessage,type:_STRING_,defaultValue:ZaMsg.MSG_HomeLoading}
);
ZaTask.myXModel.items.push({
id:ZaTask.A2_licenseInBadStatus,type:_ENUM_,choices:ZaModel.BOOLEAN_CHOICES,defaultValue:false}
);
ZaTask.myXModel.items.push({
id:ZaTask.A2_licenseCanBeShown,type:_ENUM_,choices:ZaModel.BOOLEAN_CHOICES,defaultValue:false}
);
if(ZaTabView.XFormModifiers.ZaTaskContentView!=null){
ZaLicense.taskContentViewXFormModifier=function(t){
var e=ZaTaskContentView.getNotificationBoard(t);
e.items.push({
type:_GROUP_,numCols:1,width:"98%",visibilityChecks:[[XForm.checkInstanceValue,ZaTask.A2_licenseCanBeShown,true]],visibilityChangeEventSources:[ZaTask.A2_licenseCanBeShown],items:[{
type:_GROUP_,numCols:2,colSizes:["20px","*"],cssStyle:"padding-left:5px; padding-top:8px;",items:[{
type:_OUTPUT_,ref:ZaTask.A2_licenseInBadStatus,valign:_TOP_,bmolsnr:true,getDisplayValue:function(o){
if(o){
return AjxImg.getImageHtml("Critical")
}else{
return AjxImg.getImageHtml("Warning")
}}}
,{
type:_OUTPUT_,ref:ZaTask.A2_licenseMessage,cssStyle:"padding-left:5px;",bmolsnr:true}
]}
,{
type:_OUTPUT_,align:_RIGHT_,value:com_zimbra_license.LBL_HomeManageLicense,visibilityChecks:[[ZaItem.hasRight,ZaLicense.INSTALL_ZCS_LICENSE_RIGHT,ZaZimbraAdmin.currentAdminAccount]],visibilityChangeEventSources:[ZaTask.A2_licenseCanBeShown],containerCssClass:"ZaLinkedItem",onClick:ZaHomeXFormView.onInstallLicense}
,{
type:_SPACER_,height:5}
]}
)
};
ZaTabView.XFormModifiers.ZaTaskContentView.push(ZaLicense.taskContentViewXFormModifier);
ZaTaskContentView.postLoadLicenseInfo=function(){
var o=AjxSoapDoc.create("GetLicenseRequest","urn:zimbraAdmin",null);
var e=new ZmCsfeCommand();
var s={};
s.soapDoc=o;
s.asyncMode=true;
s.noAuthToken=true;
s.callback=new AjxCallback(this,ZaTaskContentView.prototype.updateLicenseInfo);
try{
e.invoke(s)
}
catch(t){
var n=ZaZimbraAdmin.getInstance().getTaskController();
n.setInstanceValue(com_zimbra_license.LI_NOLICENSE,ZaTask.A2_licenseMessage);
ZaLicense.NOT_YET_VALID=true
}};
ZaTaskContentView.prototype.updateLicenseInfo=function(c){
var t=ZaLicense.checkLicenseExpirationFromResponse.call(this,c);
var o=this._license.attrs[ZaLicense.A_installType];
var e=(t!=""&&t!=com_zimbra_license.LI_NOLICENSE&&o!=ZaLicense.INSTALL_TYPE_PERPETUAL);
var l="";
var r=ZaZimbraAdmin.getInstance().getTaskController();
if(e){
var s=ZaLicense.getLocaleString(this._license.attrs[ZaLicense.A_validUntil]);
var n=(o==ZaLicense.INSTALL_TYPE_TRIAL||o==ZaLicense.INSTALL_TYPE_TRIAL_EXTENDED)?com_zimbra_license.licenseTrial:"";
l=AjxMessageFormat.format(com_zimbra_license.licenseExpirationDate,[n,s]);
r.increaseNotificationCount(ZaTask.A2_licenseMessage)
}else{
r.decreaseNotificationCount(ZaTask.A2_licenseMessage)
}
r.setInstanceValue(ZaLicense.isInBadStatus(),ZaTask.A2_licenseInBadStatus);
r.setInstanceValue(l,ZaTask.A2_licenseMessage);
r.setInstanceValue(e,ZaTask.A2_licenseCanBeShown)
};
if(ZaTask.postLoadDataFunction!=null){
ZaTask.postLoadDataFunction.push(ZaTaskContentView.postLoadLicenseInfo)
}}}
ZaLicense.isInBadStatus=function(){
return(ZaLicense.EXPIRED|ZaLicense.WILL_EXPIRE|ZaLicense.NOT_YET_VALID|ZaLicense.NOT_YET_ACTIVATED)
};
if(window.console&&window.console.log){
window.console.log("Loaded com_zimbra_license.js")
}}
if(ZaSettings&&ZaSettings.EnabledZimlet.com_zimbra_ucconfig){
if(window.console&&window.console.log){
console.log("Start loading ZaUCService.js")
}
function ZaUCService(){
ZaItem.call(this,"ZaUCService");
this._init()
}
ZaUCService.prototype=new ZaItem;
ZaUCService.prototype.constructor=ZaUCService;
ZaItem.loadMethods.ZaUCService=new Array();
ZaItem.modifyMethods.ZaUCService=new Array();
ZaItem.initMethods.ZaUCService=new Array();
ZaItem.getRelatedMethods.ZaUCService=new Array();
ZaUCService.CREATE_RIGHT="createUCService";
ZaUCService.MODIFY_RIGHT="modifyUCService";
ZaUCService.DELETE_RIGHT="deleteUCService";
ZaUCService.A_name="cn";
ZaUCService.A_description="description";
ZaUCService.A_zimbraUCProvider="zimbraUCProvider";
ZaUCService.A_zimbraUCVoicemailURL="zimbraUCVoicemailURL";
ZaUCService.A_zimbraUCCallControlURL="zimbraUCCallControlURL";
ZaUCService.A_zimbraUCPresenceURL="zimbraUCPresenceURL";
ZaUCService.A_zimbraUCPresenceSessionId="zimbraUCPresenceSessionId";
ZaUCService.A2_zimbraAppName="A2_zimbraAppName";
ZaUCService.A2_zimbraAppPassword="A2_zimbraAppPassword";
ZaUCService.A_zimbraUCUserURL="zimbraUCUserURL";
ZaUCService.PROVIDER=undefined;
ZaUCService.UCSERVICE_ITEM="ucServiceItem";
ZaUCService._ACCOUNT_LIST_VIEW=ZaZimbraAdmin.VIEW_INDEX++;
ZaUCService._DOMAIN_LIST_VIEW=ZaZimbraAdmin.VIEW_INDEX++;
ZaUCService._COS_LIST_VIEW=ZaZimbraAdmin.VIEW_INDEX++;
ZaUCService.myXModel={
items:[{
id:"getAttrs",type:_LIST_}
,{
id:"setAttrs",type:_LIST_}
,{
id:"rights",type:_LIST_}
,{
id:ZaItem.A_zimbraId,type:_STRING_,ref:"attrs/"+ZaItem.A_zimbraId}
,{
id:ZaUCService.A_name,type:_STRING_,ref:"attrs/"+ZaUCService.A_name,required:true}
,ZaItem.descriptionModelItem,{
id:ZaItem.A_zimbraCreateTimestamp,ref:"attrs/"+ZaItem.A_zimbraCreateTimestamp}
,{
id:ZaUCService.A_zimbraUCProvider,type:_STRING_,ref:"attrs/"+ZaUCService.A_zimbraUCProvider}
,{
id:ZaUCService.A_zimbraUCVoicemailURL,type:_FULL_URL_,ref:"attrs/"+ZaUCService.A_zimbraUCVoicemailURL}
,{
id:ZaUCService.A_zimbraUCCallControlURL,type:_FULL_URL_,ref:"attrs/"+ZaUCService.A_zimbraUCCallControlURL}
,{
id:ZaUCService.A_zimbraUCUserURL,type:_FULL_URL_,ref:"attrs/"+ZaUCService.A_zimbraUCUserURL}
,{
id:ZaUCService.A_zimbraUCPresenceURL,type:_FULL_URL_,ref:"attrs/"+ZaUCService.A_zimbraUCPresenceURL}
,{
id:ZaUCService.A_zimbraUCPresenceSessionId,type:_STRING_,ref:"attrs/"+ZaUCService.A_zimbraUCPresenceSessionId}
,{
id:ZaUCService.A2_zimbraAppName,type:_STRING_,ref:ZaUCService.A2_zimbraAppName}
,{
id:ZaUCService.A2_zimbraAppPassword,type:_STRING_,ref:ZaUCService.A2_zimbraAppPassword}
]};
ZaUCService.initMethod=function(){
this.attrs=new Object();
this.id="";
this.name="";
this.type="ZaUCService";
if(ZaUCService.PROVIDER){
this.attrs[ZaUCService.A_zimbraUCProvider]=ZaUCService.PROVIDER
}};
ZaItem.initMethods.ZaUCService.push(ZaUCService.initMethod);
ZaUCService.loadMethod=function(n,l){
var o=AjxSoapDoc.create("GetUCServiceRequest",ZaZimbraAdmin.URN,null);
var t=o.set("ucservice",l);
t.setAttribute("by",n);
if(!this.getAttrs.all&&!AjxUtil.isEmpty(this.attrsToGet)){
o.getMethod().setAttribute("attrs",this.attrsToGet.join(","))
}
var r=new Object();
r.soapDoc=o;
var e={
controller:ZaApp.getInstance().getCurrentController(),busyMsg:com_zimbra_ucconfig.BUSY_GET_UCConfig};
var s=ZaRequestMgr.invoke(r,e).Body.GetUCServiceResponse;
this.initFromJS(s.ucservice[0])
};
ZaItem.loadMethods.ZaUCService.push(ZaUCService.loadMethod);
ZaUCService.prototype.create=function(e,u){
var d=AjxSoapDoc.create("CreateUCServiceRequest",ZaZimbraAdmin.URN,null);
d.set("name",e);
for(var c in u){
if(u[c] instanceof Array){
var o=u[c].length;
if(o){
for(var n=0;
n<o;
n++){
if(u[c][n] instanceof String){
var l=d.set("a",u[c][n].toString())
}else{
if(u[c][n] instanceof Object){
var l=d.set("a",u[c][n].toString())
}else{
var l=d.set("a",u[c][n])
}}
l.setAttribute("n",c)
}}}else{
if(u[c]&&(u[c].length||!isNaN(u[c]))){
var l=d.set("a",u[c]);
l.setAttribute("n",c)
}}}
var r=new Object();
r.soapDoc=d;
var t={
controller:ZaApp.getInstance().getCurrentController(),busyMsg:com_zimbra_ucconfig.BUSY_CREATE_UCService};
var s=ZaRequestMgr.invoke(r,t).Body.CreateUCServiceResponse;
this.initFromJS(s.ucservice[0])
};
ZaUCService.prototype.rename=function(e){
var o=AjxSoapDoc.create("RenameUCServiceRequest",ZaZimbraAdmin.URN,null);
o.set("id",this.id);
o.set("newName",e);
var s=new Object();
s.soapDoc=o;
var t={
controller:ZaApp.getInstance().getCurrentController(),busyMsg:com_zimbra_ucconfig.BUSY_MODIFY_UCService};
var n=ZaRequestMgr.invoke(s,t).Body.RenameUCServiceResponse;
this.initFromJS(n.ucservice[0])
};
ZaUCService.prototype.addService=function(o){
var e=o.getInstance();
if(!ZaUCService.checkValues(e)){
return
}
try{
e.create(e.attrs[ZaUCService.A_name],e.attrs);
ZaApp.getInstance().getUCServiceListController().fireCreationEvent(this);
o.parent.popdown();
ZaApp.getInstance().getAppCtxt().getAppController().setActionStatusMsg(AjxMessageFormat.format(com_zimbra_ucconfig.MSG_UCServiceCreated,[e]))
}
catch(t){
if(t.code==ZmCsfeException.UCSERVER_EXISTS){
ZaApp.getInstance().getCurrentController().popupErrorDialog(com_zimbra_ucconfig.WARNING_UCService_EXISTS,t)
}else{
ZaApp.getInstance().getCurrentController()._handleException(t,"ZaUCService.prototype.addService",null,false)
}}};
ZaUCService.prototype.remove=function(n){
var t=AjxSoapDoc.create("DeleteUCServiceRequest",ZaZimbraAdmin.URN,null);
t.set("id",this.id);
var o=new Object();
o.soapDoc=t;
o.soapDoc=t;
if(n){
o.asyncMode=true;
o.callback=n
}
var e={
controller:ZaApp.getInstance().getCurrentController(),busyMsg:com_zimbra_ucconfig.BUSY_DELETE_UCService};
ZaRequestMgr.invoke(o,e)
};
ZaUCService.prototype.activate=function(l){
var o=AjxSoapDoc.create("UpdatePresenceSessionIdRequest",ZaZimbraAdmin.URN,null);
var e=o.set("ucservice",this.id);
e.setAttribute("by","id");
o.set("username",this[ZaUCService.A2_zimbraAppName]);
o.set("password",this[ZaUCService.A2_zimbraAppPassword]);
var r=Dwt.getNextId();
var n=new AjxCallback(this,this.getDataCallback,{
callback:l,busyId:r}
);
var s=new Object();
s.soapDoc=o;
if(l){
s.asyncMode=true;
s.callback=n
}
var t={
controller:ZaApp.getInstance().getCurrentController(),showBusy:true,busyId:r,busyMsg:com_zimbra_ucconfig.BUSY_MODIFY_UCService};
ZaRequestMgr.invoke(s,t)
};
ZaUCService.prototype.getDataCallback=function(t,e){
var o=t.callback;
if(t.busyId){
ZaApp.getInstance().getAppCtxt().getShell().setBusy(false,t.busyId)
}
if(o){
o.run(e)
}};
ZaUCService.modifyMethod=function(u){
var d=false;
var c=AjxSoapDoc.create("ModifyUCServiceRequest",ZaZimbraAdmin.URN,null);
c.set("id",this.id);
c.set("name",this.name);
for(var l in u){
d=true;
if(u[l] instanceof Array){
var t=u[l].length;
if(t){
for(var o=0;
o<t;
o++){
var r=null;
if(u[l][o] instanceof String){
var r=c.set("a",u[l][o].toString())
}else{
if(u[l][o] instanceof Object){
var r=c.set("a",u[l][o].toString())
}else{
if(u[l][o]){
var r=c.set("a",u[l][o])
}}}
if(r){
r.setAttribute("n",l)
}}}else{
var r=c.set("a","");
r.setAttribute("n",l)
}}else{
var r=c.set("a",u[l]);
r.setAttribute("n",l)
}}
if(!d){
return
}
var s=new Object();
s.soapDoc=c;
var e={
controller:ZaApp.getInstance().getCurrentController(),busyMsg:com_zimbra_ucconfig.BUSY_MODIFY_UCService};
var n=ZaRequestMgr.invoke(s,e).Body.ModifyUCServiceResponse;
this.initFromJS(n.ucservice[0])
};
ZaItem.modifyMethods.ZaUCService.push(ZaUCService.modifyMethod);
ZaUCService.checkValues=function(e){
if(e.attrs==null){
ZaApp.getInstance().getCurrentController().popupErrorDialog(ZaMsg.ERROR_UNKNOWN);
return false
}
if((e.attrs[ZaUCService.A_name]==null||e.attrs[ZaUCService.A_name].length<1)){
ZaApp.getInstance().getCurrentController().popupErrorDialog(ZaMsg.ERROR_NAME_REQUIRED);
return false
}else{
e.name=e.attrs[ZaUCService.A_name]
}
if(e.name.length>256||e.attrs[ZaUCService.A_name].length>256){
ZaApp.getInstance().getCurrentController().popupErrorDialog(com_zimbra_ucconfig.ERROR_UC_NAME_TOOLONG);
return false
}
return true
};
ZaUCService.hasProperty=function(n,s){
var t=ZaUCService.getAllProviders();
var e;
var o=false;
for(e=0;
e<t.length;
e++){
if(t[e].value==n){
o=true;
break
}}
if(!o){
return false
}
return AjxUtil.arrayContains(ZaUCService.getAllProviders()[e].attrs,s)
};
ZaUCService.getAll=function(e){
var o=AjxSoapDoc.create("GetAllUCServicesRequest",ZaZimbraAdmin.URN,null);
o.getMethod().setAttribute("applyConfig","false");
var r=new Object();
r.soapDoc=o;
r.asyncMode=false;
if(e){
o.setMethodAttribute("attrs",e.join(","))
}
var t={
controller:ZaApp.getInstance().getCurrentController(),busyMsg:com_zimbra_ucconfig.BUSY_GET_UCServices};
var s=ZaRequestMgr.invoke(r,t).Body.GetAllUCServicesResponse;
var n=new ZaItemList(ZaUCService);
n.loadFromJS(s);
if(n.getArray().length==0){
ZaUCService.PROVIDER=undefined
}else{
ZaUCService.PROVIDER=n.getArray()[0].attrs[ZaUCService.A_zimbraUCProvider]
}
return n
};
ZaUCService.getAllServiceChoices=function(){
var o=[];
o.push({
value:"",label:com_zimbra_ucconfig.CHC_noSet}
);
var t=ZaUCService.getAll().getArray();
for(var e=0;
e<t.length;
e++){
o.push({
value:t[e].attrs[ZaItem.A_zimbraId],label:t[e].attrs[ZaUCService.A_name],provider:t[e].attrs[ZaUCService.A_zimbraUCProvider]}
)
}
return o
};
ZaUCService.getAllProviders=function(u){
if(!ZaUCService.UC_PROVIDERS||u){
ZaUCService.UC_PROVIDERS=[];
var m=AjxSoapDoc.create("GetAllUCProvidersRequest",ZaZimbraAdmin.URN,null);
var n=new Object();
n.soapDoc=m;
n.asyncMode=false;
var o={
controller:ZaApp.getInstance().getCurrentController(),busyMsg:com_zimbra_ucconfig.BUSY_GET_UCProviders};
try{
var s=ZaRequestMgr.invoke(n,o).Body.GetAllUCProvidersResponse;
if(s.provider){
var l=s.provider;
for(var c=0;
c<l.length;
c++){
var f=[];
var t=l[c].attrs[0].a;
for(var r=0;
r<t.length;
r++){
f.push(t[r].n)
}
ZaUCService.UC_PROVIDERS.push({
value:l[c].name,label:l[c].name,attrs:f}
)
}}}
catch(d){
var e=ZaApp.getInstance().getCurrentController();
e._handleException(d,"ZaUCService.getAllProviders")
}}
return ZaUCService.UC_PROVIDERS
};
ZaUCService.RELATED_OBJECTS=[ZaSearch.ACCOUNTS,ZaSearch.COSES,ZaSearch.DOMAINS];
ZaUCService.prototype.getCountsOfRelatedObjects=function(){
var g={
account:0,cos:0,domain:0};
var p=AjxSoapDoc.create("BatchRequest","urn:zimbra");
p.setMethodAttribute("onerror","continue");
var m="("+ZaItem.A_zimbraUCServiceId+"="+this.id+")";
var l=ZaUCService.RELATED_OBJECTS.length,r=0;
for(;
r<l;
r++){
var c=p.set("SearchDirectoryRequest",null,null,ZaZimbraAdmin.URN);
c.setAttribute("limit",1);
c.setAttribute("types",ZaUCService.RELATED_OBJECTS[r]);
p.set("query",m,c)
}
var s={
soapDoc:p};
var o={
busyMsg:com_zimbra_ucconfig.BUSY_GET_RELATED_OBJECTS};
var t=null,y=null;
try{
t=ZaRequestMgr.invoke(s,o);
y=t.Body.BatchResponse
}
catch(u){
return g
}
if(t.isException&&t.isException()||!y){
ZaApp.getInstance().getCurrentController()._handleException(t.getException(),"ZaUCService.prototype.getCountsOfRelatedObjects",null,false)
}else{
if(y.Fault){
var d=y.Fault;
if(AjxUtil.isArray(d)){
d=d[0]
}
if(d){
var u=ZmCsfeCommand.faultToEx(d);
ZaApp.getInstance().getCurrentController()._handleException(u,"ZaUCService.prototype.getCountsOfRelatedObjects",null,false)
}}else{
var f=y.SearchDirectoryResponse;
if(f){
if(!AjxUtil.isArray(f)){
f=[f]
}
l=f.length,r=0;
for(;
r<l;
r++){
var n=f[r];
for(var e in g){
if(!AjxUtil.isEmpty(n[e])){
g[e]=n.searchTotal||0;
break
}}}}}}
return g
};
ZaUCService.prototype._addToRelatedList=function(t,e,o){
e.setData(ZaUCService.UCSERVICE_ITEM,this);
e.setData("skipHistory","TRUE");
t.push(e);
ZaOverviewPanelController.overviewTreeListeners[e.mappingId]=o
};
ZaUCService.getRelatedList=function(t){
var e=[];
var l=this.getCountsOfRelatedObjects();
var o=l.account,d=l.cos,n=l.domain;
if(o>0){
var s=new ZaTreeItemData({
text:ZaMsg.OVP_accounts,count:o,image:"Account",mappingId:ZaUCService._ACCOUNT_LIST_VIEW}
);
this._addToRelatedList(e,s,ZaUCServiceViewController.accountListTreeListener)
}
if(d>0){
var r=new ZaTreeItemData({
text:ZaMsg.OVP_cos,count:d,image:"Cos",mappingId:ZaUCService._COS_LIST_VIEW}
);
this._addToRelatedList(e,r,ZaUCServiceViewController.cosListTreeListener)
}
if(n>0){
var c=new ZaTreeItemData({
text:ZaMsg.OVP_domains,count:n,image:"Domain",mappingId:ZaUCService._DOMAIN_LIST_VIEW}
);
this._addToRelatedList(e,c,ZaUCServiceViewController.domainListTreeListener)
}
return e
};
ZaItem.getRelatedMethods.ZaUCService.push(ZaUCService.getRelatedList)
}
if(ZaSettings&&ZaSettings.EnabledZimlet.com_zimbra_ucconfig){
if(window.console&&window.console.log){
console.log("Start loading com_zimbra_ucconfig.js")
}
ZaUCServiceManager=function(){};
ZaZimbraAdmin._UC_SERVICE_VIEW_=ZaZimbraAdmin.VIEW_INDEX++;
ZaZimbraAdmin._UC_SERVICE_LIST_VIEW_=ZaZimbraAdmin.VIEW_INDEX++;
ZaOperation.ACTIVATE_PRESENCE=++ZA_OP_INDEX;
ZaApp.prototype.getUCServiceViewController=function(e){
if(e&&this._controllers[e]!=null){
return this._controllers[e]
}else{
var t=this._controllers[e]=new ZaUCServiceViewController(this._appCtxt,this._container);
return t
}};
ZaApp.prototype.getUCServiceListController=function(){
if(this._controllers[ZaZimbraAdmin._UC_SERVICE_LIST_VIEW_]==null){
var e=this._controllers[ZaZimbraAdmin._UC_SERVICE_LIST_VIEW_]=new ZaUCServiceListController(this._appCtxt,this._container);
e.addChangeListener(new AjxListener(e,ZaListViewController.prototype.handleChange));
e.addCreationListener(new AjxListener(e,ZaListViewController.prototype.handleCreation));
e.addRemovalListener(new AjxListener(e,ZaListViewController.prototype.handleRemoval))
}
return this._controllers[ZaZimbraAdmin._UC_SERVICE_LIST_VIEW_]
};
ZaUCServiceManager.ucServiceListTreeListener=function(e){
if(ZaApp.getInstance().getCurrentController()){
ZaApp.getInstance().getCurrentController().switchToNextView(ZaApp.getInstance().getUCServiceListController(),ZaUCServiceListController.prototype.show)
}else{
ZaApp.getInstance().getUCServiceListController().show()
}};
ZaUCServiceManager.serviceAssignmentChanged=function(n,o,t){
this.setInstanceValue(n);
if(!AjxUtil.isEmpty(n)){
if(!ZaApp.getInstance().dialogs.assignUCServiceInfoDialog){
var e=new ZaMsgDialog(ZaApp.getInstance().getAppCtxt().getShell(),null,[DwtDialog.OK_BUTTON],ZaApp.getInstance());
e.setMessage(com_zimbra_ucconfig.MSG_UCServiceAssignedInfo,DwtMessageDialog.INFO_STYLE);
ZaApp.getInstance().dialogs.assignUCServiceInfoDialog=e
}
ZaApp.getInstance().dialogs.assignUCServiceInfoDialog.popup()
}};
ZaUCServiceManager.ucServiceOvTreeModifier=function(e){
var t=this;
if(!t){
throw new Exception("ZaUCServiceManager.UCConfigTreeModifier: Overview Panel Controller is not set.")
}
if(ZaSettings.ENABLED_UI_COMPONENTS[ZaSettings.UC_SERVICE_VIEW]||ZaSettings.ENABLED_UI_COMPONENTS[ZaSettings.CARTE_BLANCHE_UI]){
var o=ZaTree.getPathByArray([ZaMsg.OVP_home,ZaMsg.OVP_configure]);
var n=new ZaTreeItemData({
parent:o,id:ZaId.getTreeItemId(ZaId.PANEL_APP,ZaId.PANEL_CONFIGURATION,null,"UCConfigHV"),text:com_zimbra_ucconfig.OVP_UCService,canShowOnRoot:false,forceNode:false,mappingId:ZaZimbraAdmin._UC_SERVICE_LIST_VIEW_}
);
e.addTreeItemData(n);
if(ZaOverviewPanelController.overviewTreeListeners){
ZaOverviewPanelController.overviewTreeListeners[ZaZimbraAdmin._UC_SERVICE_LIST_VIEW_]=ZaUCServiceManager.ucServiceListTreeListener
}}};
if(ZaOverviewPanelController.treeModifiers){
ZaOverviewPanelController.treeModifiers.push(ZaUCServiceManager.ucServiceOvTreeModifier)
}
if(ZaSettings){
ZaSettings.UC_SERVICE_VIEW="zimbraUCConfigurationView";
ZaSettings.ALL_UI_COMPONENTS.push({
value:ZaSettings.UC_SERVICE_VIEW,label:com_zimbra_ucconfig.UI_Comp_UCConfiguration}
);
ZaSettings.OVERVIEW_CONFIG_ITEMS.push(ZaSettings.UC_SERVICE_VIEW);
ZaSettings.VIEW_RIGHTS[ZaSettings.UC_SERVICE_VIEW]="adminConsoleUCServiceRights"
}
if(ZaItem){
ZaItem.A_zimbraUCServiceId="zimbraUCServiceId";
ZaItem.A_zimbraFeatureVoiceEnabled="zimbraFeatureVoiceEnabled"
}
if(ZmCsfeException){
ZmCsfeException.UCSERVER_EXISTS="account.SERVER_EXISTS";
ZmCsfeException.UC_SERVICE_EXISTS="account.UC_SERVICE_EXISTS"
}
if(ZaAccount){
ZaAccount.A_zimbraUCServiceId=ZaItem.A_zimbraUCServiceId;
ZaAccount.A_zimbraUCUsername="zimbraUCUsername";
ZaAccount.A_zimbraFeatureVoiceEnabled=ZaItem.A_zimbraFeatureVoiceEnabled;
ZaAccount.myXModel.items.push({
id:ZaAccount.A_zimbraUCServiceId,type:_COS_STRING_,ref:"attrs/"+ZaAccount.A_zimbraUCServiceId,choices:new XFormChoices([],XFormChoices.SIMPLE_LIST)}
,{
id:ZaAccount.A_zimbraUCUsername,type:_STRING_,ref:"attrs/"+ZaAccount.A_zimbraUCUsername}
,{
id:ZaAccount.A_zimbraFeatureVoiceEnabled,type:_COS_ENUM_,ref:"attrs/"+ZaAccount.A_zimbraFeatureVoiceEnabled,choices:ZaModel.BOOLEAN_CHOICES}
)
}
if(ZaTabView.XFormModifiers.ZaAccountXFormView){
ZaUCServiceManager.AccountXFormModifier=function(d,m){
var o=d.items.length;
var c,n,r,s=false,e=false;
for(var l=0;
l<o;
l++){
if(d.items[l].type=="switch"){
c=d.items[l];
e=true
}
if(d.items[l].type==_TAB_BAR_){
n=d.items[l];
s=true
}
if(s&&e){
break
}}
var t={
type:_ZA_TOP_GROUPER_,label:com_zimbra_ucconfig.TGT_ucSettings,numCols:2,colSizes:["275px","auto"],visibilityChecks:[[ZATopGrouper_XFormItem.isGroupVisible,[ZaAccount.A_zimbraUCUsername,ZaAccount.A_zimbraUCServiceId]]],items:[{
ref:ZaAccount.A_zimbraUCUsername,type:_TEXTFIELD_,msgName:com_zimbra_ucconfig.LBL_MSG_VoiceUsername,label:com_zimbra_ucconfig.LBL_VoiceUsername,labelLocation:_LEFT_,width:150,nowrap:false,labelWrap:true}
,{
ref:ZaAccount.A_zimbraUCServiceId,id:"UC_SERVICE_SELECTOR",type:_SUPER_SELECT1_,colSpan:2,choices:ZaUCService.getAllServiceChoices(),onChange:ZaUCServiceManager.serviceAssignmentChanged,msgName:com_zimbra_ucconfig.LBL_UCService,label:com_zimbra_ucconfig.LBL_UCService,labelLocation:_LEFT_,resetToSuperLabel:ZaMsg.NAD_ResetToCOS}
]};
c.items[0].items.push(t);
var u={
type:_ZA_TOP_GROUPER_,label:com_zimbra_ucconfig.TGT_ucFeatures,numCols:2,colSizes:["275px","auto"],visibilityChecks:[[ZATopGrouper_XFormItem.isGroupVisible,[ZaAccount.A_zimbraFeatureVoiceEnabled]]],items:[{
ref:ZaAccount.A_zimbraFeatureVoiceEnabled,type:_SUPER_CHECKBOX_,resetToSuperLabel:ZaMsg.NAD_ResetToCOS,msgName:com_zimbra_ucconfig.LBL_MSG_enableVoiceFeature,checkBoxLabel:com_zimbra_ucconfig.LBL_EnableVoiceFeature,trueValue:"TRUE",falseValue:"FALSE"}
]};
c.items[3].items.push(u)
};
ZaTabView.XFormModifiers.ZaAccountXFormView.push(ZaUCServiceManager.AccountXFormModifier)
}
if(ZaXDialog.XFormModifiers.ZaNewAccountXWizard){
ZaUCServiceManager.AccountXWizardModifier=function(r,n){
var t=r.items.length;
var e=0;
for(e=0;
e<t;
e++){
if(r.items[e].type=="switch"){
break
}}
var o={
type:_ZAWIZ_TOP_GROUPER_,label:com_zimbra_ucconfig.TGT_ucSettings,numCols:2,colSizes:["275px","auto"],visibilityChecks:[[ZATopGrouper_XFormItem.isGroupVisible,[ZaAccount.A_zimbraUCUsername,ZaAccount.A_zimbraUCServiceId]]],items:[{
ref:ZaAccount.A_zimbraUCUsername,type:_TEXTFIELD_,msgName:com_zimbra_ucconfig.LBL_MSG_VoiceUsername,label:com_zimbra_ucconfig.LBL_VoiceUsername,labelLocation:_LEFT_,width:150,nowrap:false,labelWrap:true}
,{
ref:ZaAccount.A_zimbraUCServiceId,id:"UC_SERVICE_SELECTOR",type:_SUPER_SELECT1_,colSpan:2,choices:ZaUCService.getAllServiceChoices(),onChange:ZaUCServiceManager.serviceAssignmentChanged,msgName:com_zimbra_ucconfig.LBL_UCService,label:com_zimbra_ucconfig.LBL_UCService,labelLocation:_LEFT_,resetToSuperLabel:ZaMsg.NAD_ResetToCOS}
]};
r.items[e].items[0].items.push(o);
var s={
type:_ZAWIZ_TOP_GROUPER_,label:com_zimbra_ucconfig.TGT_ucFeatures,numCols:2,visibilityChecks:[[ZATopGrouper_XFormItem.isGroupVisible,[ZaAccount.A_zimbraFeatureVoiceEnabled]]],items:[{
ref:ZaAccount.A_zimbraFeatureVoiceEnabled,type:_SUPER_WIZ_CHECKBOX_,resetToSuperLabel:ZaMsg.NAD_ResetToCOS,msgName:com_zimbra_ucconfig.LBL_MSG_enableVoiceFeature,checkBoxLabel:com_zimbra_ucconfig.LBL_MSG_enableVoiceFeature,trueValue:"TRUE",falseValue:"FALSE"}
]};
r.items[e].items[5].items.push(s)
};
ZaXDialog.XFormModifiers.ZaNewAccountXWizard.push(ZaUCServiceManager.AccountXWizardModifier)
}
if(ZaCos){
ZaCos.A_zimbraUCServiceId=ZaItem.A_zimbraUCServiceId;
ZaCos.A_zimbraFeatureVoiceEnabled=ZaItem.A_zimbraFeatureVoiceEnabled;
ZaCos.myXModel.items.push({
id:ZaCos.A_zimbraFeatureVoiceEnabled,choices:ZaModel.BOOLEAN_CHOICES,ref:"attrs/"+ZaCos.A_zimbraFeatureVoiceEnabled,type:_ENUM_}
,{
id:ZaCos.A_zimbraUCServiceId,type:_STRING_,ref:"attrs/"+ZaCos.A_zimbraUCServiceId}
)
}
if(ZaTabView.XFormModifiers.ZaCosXFormView){
ZaUCServiceManager.ZaCosXFormModifier=function(d,m){
var o=d.items.length;
var c,n,r,s=false,e=false;
for(var l=0;
l<o;
l++){
if(d.items[l].type=="switch"){
c=d.items[l];
e=true
}
if(d.items[l].type==_TAB_BAR_){
n=d.items[l];
s=true
}
if(s&&e){
break
}}
var t={
type:_ZA_TOP_GROUPER_,label:com_zimbra_ucconfig.TGT_ucSettings,numCols:2,colSizes:["275px","auto"],visibilityChecks:[[ZATopGrouper_XFormItem.isGroupVisible,[ZaCos.A_zimbraUCServiceId]]],items:[{
ref:ZaCos.A_zimbraUCServiceId,id:"UC_SERVICE_SELECTOR",type:_OSELECT1_,choices:ZaUCService.getAllServiceChoices(),onChange:ZaUCServiceManager.serviceAssignmentChanged,msgName:com_zimbra_ucconfig.LBL_UCService,label:com_zimbra_ucconfig.LBL_UCService,labelLocation:_LEFT_}
]};
c.items[0].items.push(t);
var u={
type:_ZA_TOP_GROUPER_,label:com_zimbra_ucconfig.TGT_ucFeatures,numCols:2,colSizes:["275px","auto"],visibilityChecks:[[ZATopGrouper_XFormItem.isGroupVisible,[ZaCos.A_zimbraFeatureVoiceEnabled]]],items:[{
ref:ZaCos.A_zimbraFeatureVoiceEnabled,type:_CHECKBOX_,msgName:com_zimbra_ucconfig.LBL_MSG_enableVoiceFeature,label:com_zimbra_ucconfig.LBL_EnableVoiceFeature,trueValue:"TRUE",falseValue:"FALSE"}
]};
c.items[1].items.push(u)
};
ZaTabView.XFormModifiers.ZaCosXFormView.push(ZaUCServiceManager.ZaCosXFormModifier)
}
if(ZaXDialog.XFormModifiers.ZaNewCosXWizard){
ZaUCServiceManager.COSXWizardModifier=function(r,n){
var t=r.items.length;
var e=0;
for(e=0;
e<t;
e++){
if(r.items[e].type=="switch"){
break
}}
var o={
type:_ZAWIZ_TOP_GROUPER_,label:com_zimbra_ucconfig.TGT_ucSettings,numCols:2,colSizes:["275px","auto"],visibilityChecks:[[ZATopGrouper_XFormItem.isGroupVisible,[ZaCos.A_zimbraUCServiceId]]],items:[{
ref:ZaCos.A_zimbraUCServiceId,id:"UC_SERVICE_SELECTOR",type:_OSELECT1_,choices:ZaUCService.getAllServiceChoices(),onChange:ZaUCServiceManager.serviceAssignmentChanged,visibilityChecks:[],enableDisableChecks:[],msgName:com_zimbra_ucconfig.LBL_UCService,label:com_zimbra_ucconfig.LBL_UCService,labelLocation:_LEFT_}
]};
r.items[e].items[0].items.push(o);
var s={
type:_ZAWIZ_TOP_GROUPER_,label:com_zimbra_ucconfig.TGT_ucFeatures,numCols:2,visibilityChecks:[[ZATopGrouper_XFormItem.isGroupVisible,[ZaCos.A_zimbraFeatureVoiceEnabled]]],items:[{
ref:ZaCos.A_zimbraFeatureVoiceEnabled,type:_WIZ_CHECKBOX_,msgName:com_zimbra_ucconfig.LBL_MSG_enableVoiceFeature,label:com_zimbra_ucconfig.LBL_MSG_enableVoiceFeature,trueValue:"TRUE",falseValue:"FALSE"}
]};
r.items[e].items[1].items.push(s)
};
ZaXDialog.XFormModifiers.ZaNewCosXWizard.push(ZaUCServiceManager.COSXWizardModifier)
}
if(ZaDomain){
ZaDomain.A_zimbraUCServiceId=ZaItem.A_zimbraUCServiceId;
ZaDomain.myXModel.items.push({
id:ZaDomain.A_zimbraUCServiceId,type:_STRING_,ref:"attrs/"+ZaDomain.A_zimbraUCServiceId}
)
}
if(ZaTabView.XFormModifiers.ZaDomainXFormView){
ZaUCServiceManager.DomainXFormModifier=function(d,u){
var o=d.items.length;
var c,n,r,s=false,e=false;
for(var l=0;
l<o;
l++){
if(d.items[l].type=="switch"){
c=d.items[l];
e=true
}
if(d.items[l].type==_TAB_BAR_){
n=d.items[l];
s=true
}
if(s&&e){
break
}}
var t={
type:_ZA_TOP_GROUPER_,label:com_zimbra_ucconfig.TGT_ucSettings,numCols:2,colSizes:["275px","auto"],visibilityChecks:[[ZATopGrouper_XFormItem.isGroupVisible,[ZaDomain.A_zimbraUCServiceId]]],items:[{
ref:ZaDomain.A_zimbraUCServiceId,id:"UC_SERVICE_SELECTOR",type:_OSELECT1_,choices:ZaUCService.getAllServiceChoices(),onChange:ZaUCServiceManager.serviceAssignmentChanged,msgName:com_zimbra_ucconfig.LBL_UCService,label:com_zimbra_ucconfig.LBL_UCService,labelLocation:_LEFT_}
]};
c.items[0].items.push(t)
};
ZaTabView.XFormModifiers.ZaDomainXFormView.push(ZaUCServiceManager.DomainXFormModifier)
}
if(ZaXDialog.XFormModifiers.ZaNewDomainXWizard){
ZaUCServiceManager.DomainXWizardModifier=function(s,n){
var t=s.items.length;
var e=0;
for(e=0;
e<t;
e++){
if(s.items[e].type=="switch"){
break
}}
var o={
type:_ZAWIZ_TOP_GROUPER_,label:com_zimbra_ucconfig.TGT_ucSettings,colSpan:"*",visibilityChecks:[[ZATopGrouper_XFormItem.isGroupVisible,[ZaDomain.A_zimbraUCServiceId]]],items:[{
ref:ZaDomain.A_zimbraUCServiceId,id:"UC_SERVICE_SELECTOR",type:_OSELECT1_,choices:ZaUCService.getAllServiceChoices(),onChange:ZaUCServiceManager.serviceAssignmentChanged,msgName:com_zimbra_ucconfig.LBL_UCService,label:com_zimbra_ucconfig.LBL_UCService,labelLocation:_LEFT_}
]};
s.items[e].items[0].items.push(o)
};
ZaXDialog.XFormModifiers.ZaNewDomainXWizard.push(ZaUCServiceManager.DomainXWizardModifier)
}}
if(ZaSettings&&ZaSettings.EnabledZimlet.com_zimbra_ucconfig){
ZaUCPresenceIDResultXDlg=function(o,t,s,n,e){
this._app=ZaApp.getInstance();
var r=e?ZaId.getDialogId(ZaId.DLG_MSG,e):ZaId.getDialogId(ZaId.DLG_MSG);
DwtMessageDialog.call(this,o,t,s,n,r)
};
ZaUCPresenceIDResultXDlg.prototype=new DwtMessageDialog;
ZaUCPresenceIDResultXDlg.prototype.constructor=ZaUCPresenceIDResultXDlg;
ZaUCPresenceIDResultXDlg.RETRY_BUTTON=++DwtDialog.LAST_BUTTON;
ZaUCPresenceIDResultXDlg.SUCCESSS_STYLE=1;
ZaUCPresenceIDResultXDlg.FAIL_STYLE=2;
ZaUCPresenceIDResultXDlg.ICON={};
ZaUCPresenceIDResultXDlg.ICON[ZaUCPresenceIDResultXDlg.SUCCESSS_STYLE]="Success";
ZaUCPresenceIDResultXDlg.ICON[ZaUCPresenceIDResultXDlg.FAIL_STYLE]="Critical";
ZaUCPresenceIDResultXDlg.prototype.setMessage=function(n,o,s,r){
s=s||ZaUCPresenceIDResultXDlg.SUCCESSS_STYLE;
r=r||com_zimbra_ucconfig.TTL_ActivatePresence;
this.setTitle(r);
if(o){
var t=[];
var e=0;
t[e++]="<table cellspacing=0 cellpadding=0 border=0 width=100% height=100%><tr><td>";
t[e++]=AjxImg.getImageHtml(ZaUCPresenceIDResultXDlg.ICON[s],null,"id='"+this._msgCellId+"_Image'");
t[e++]="</td><td class='DwtDialogTitle' id='"+this._msgCellId+"_Sub' width='100%'>";
t[e++]=n;
t[e++]="</td></tr>";
t[e++]="<tr><td colspan='2' class='DwtMsgArea' id='"+this._msgCellId+"_Msg'>";
t[e++]=o;
t[e++]="</td></tr></table>";
this._msgCell.innerHTML=t.join("")
}else{
this._msgCell.innerHTML=""
}}
}
if(ZaSettings&&ZaSettings.EnabledZimlet.com_zimbra_ucconfig){
ZaUCServiceXFormView=function(e,t){
if(arguments.length==0){
return
}
ZaTabView.call(this,e,"ZaUCServiceXFormView");
ZaTabView.call(this,{
parent:e,iKeyName:"ZaUCServiceXFormView",contextId:"UC_Service"}
);
this.TAB_INDEX=0;
this.setScrollStyle(Dwt.SCROLL);
this.initForm(ZaUCService.myXModel,this.getMyXForm(t),null)
};
ZaUCServiceXFormView.prototype=new ZaTabView();
ZaUCServiceXFormView.prototype.constructor=ZaUCServiceXFormView;
ZaUCServiceXFormView.prototype.TAB_INDEX=0;
ZaTabView.XFormModifiers.ZaUCServiceXFormView=new Array();
ZaUCServiceXFormView.prototype.getTabIcon=function(){
return"UCService"
};
ZaUCServiceXFormView.prototype.getTabTitle=function(){
return com_zimbra_ucconfig.TTL_UCConfig
};
ZaUCServiceXFormView.prototype.getTitle=function(){
return com_zimbra_ucconfig.TTL_UCConfig
};
ZaUCServiceXFormView.prototype.getTabChoices=function(){
return this.tabChoices
};
ZaUCServiceXFormView.prototype.setObject=function(o){
this._containedObject=new Object();
this._containedObject.attrs=new Object();
this._containedObject.name=o.name;
this._containedObject.type=o.type;
if(o.rights){
this._containedObject.rights=o.rights
}
if(o.setAttrs){
this._containedObject.setAttrs=o.setAttrs
}
if(o.getAttrs){
this._containedObject.getAttrs=o.getAttrs
}
if(o._defaultValues){
this._containedObject._defaultValues=o._defaultValues
}
if(o.id){
this._containedObject.id=o.id
}
for(var e in o.attrs){
var t=this._localXForm.getModel().getItem(e);
if((t!=null&&t.type==_LIST_)||(o.attrs[e]!=null&&o.attrs[e] instanceof Array)){
this._containedObject.attrs[e]=ZaItem.deepCloneListItem(o.attrs[e])
}else{
this._containedObject.attrs[e]=o.attrs[e]
}}
if(!o[ZaModel.currentTab]){
this._containedObject[ZaModel.currentTab]="1"
}else{
this._containedObject[ZaModel.currentTab]=o[ZaModel.currentTab]
}
this.modifyContainedObject();
this._localXForm.setInstance(this._containedObject)
};
ZaUCServiceXFormView.prototype.isVisible=function(){
var e=this.refPath;
if(!this.refPath){
e=ZaUCService.A_zimbraUCPresenceSessionId
}
var t=this.getForm().getInstanceValue(ZaUCService.A_zimbraUCProvider);
return ZaUCService.hasProperty(t,e)
};
ZaUCServiceXFormView.generateID=function(){
ZaUCServiceViewController.prototype.activatePresenceService.call(ZaApp.getInstance().getCurrentController())
};
ZaUCServiceXFormView.myXFormModifier=function(l,s){
this.tabChoices=new Array();
var t=++this.TAB_INDEX;
this.tabChoices.push({
value:t,label:ZaMsg.TABT_GeneralPage}
);
var n=[];
var e={
type:_GROUP_,cssClass:"ZmSelectedHeaderBg",colSpan:"*",id:"xform_header",items:[{
type:_GROUP_,numCols:3,colSizes:["*","80px","*"],items:[{
type:_OUTPUT_,ref:"name",getDisplayValue:AjxUtil.htmlEncode,label:null,cssClass:"AdminTitle",height:32,rowSpan:3}
,{
type:_OUTPUT_,ref:ZaItem.A_zimbraId,label:ZaMsg.NAD_ZimbraID,visibilityChecks:[ZaItem.hasReadPermission]}
,{
type:_OUTPUT_,ref:ZaItem.A_zimbraCreateTimestamp,label:ZaMsg.LBL_zimbraCreateTimestamp,labelLocation:_LEFT_,getDisplayValue:function(){
var c=ZaItem.formatServerTime(this.getInstanceValue());
if(!c){
return ZaMsg.Server_Time_NA
}
return c
}
,visibilityChecks:[ZaItem.hasReadPermission]}
]}
]};
n.push(e);
var o={
type:_ZATABCASE_,caseKey:t,numCols:1,paddingStyle:"padding-left:15px;",width:"98%",cellpadding:2};
var r=[{
type:_ZA_TOP_GROUPER_,label:ZaMsg.TABT_GeneralPage,numCols:2,colSizes:["275px","auto"],items:[{
ref:ZaUCService.A_name,type:_INPUT_,msgName:ZaMsg.NAD_DisplayName,label:ZaMsg.NAD_DisplayName,labelLocation:_LEFT_,cssClass:"admin_xform_number_input",width:"20em"}
,{
ref:ZaUCService.A_zimbraUCProvider,type:_OUTPUT_,label:com_zimbra_ucconfig.LBL_serviceType,labelLocation:_LEFT_}
]}
,{
type:_ZA_TOP_GROUPER_,label:com_zimbra_ucconfig.TGT_ucSettings,numCols:2,colSizes:["275px","auto"],items:[{
ref:ZaUCService.A_zimbraUCVoicemailURL,type:_INPUT_,msgName:com_zimbra_ucconfig.LBL_ucVoiceMailURL,visibilityChecks:[ZaUCServiceXFormView.prototype.isVisible],label:com_zimbra_ucconfig.LBL_ucVoiceMailURL,labelLocation:_LEFT_,cssClass:"admin_xform_number_input",width:"30em"}
,{
ref:ZaUCService.A_zimbraUCCallControlURL,type:_INPUT_,msgName:com_zimbra_ucconfig.LBL_callControlURL,visibilityChecks:[ZaUCServiceXFormView.prototype.isVisible],label:com_zimbra_ucconfig.LBL_callControlURL,labelLocation:_LEFT_,cssClass:"admin_xform_number_input",width:"30em"}
,{
ref:ZaUCService.A_zimbraUCUserURL,type:_INPUT_,msgName:com_zimbra_ucconfig.LBL_ucUserURL,visibilityChecks:[ZaUCServiceXFormView.prototype.isVisible],label:com_zimbra_ucconfig.LBL_ucUserURL,labelLocation:_LEFT_,cssClass:"admin_xform_number_input",width:"30em"}
,{
ref:ZaUCService.A_zimbraUCPresenceURL,type:_INPUT_,msgName:com_zimbra_ucconfig.LBL_ucPresenceURL,visibilityChecks:[ZaUCServiceXFormView.prototype.isVisible],label:com_zimbra_ucconfig.LBL_ucPresenceURL,labelLocation:_LEFT_,cssClass:"admin_xform_number_input",width:"30em"}
,{
ref:ZaUCService.A_zimbraUCPresenceSessionId,type:_OUTPUT_,msgName:com_zimbra_ucconfig.LBL_ucPresenceSessionId,visibilityChecks:[[ZaUCServiceXFormView.prototype.isVisible],[XForm.checkInstanceValueNotEmty,ZaUCService.A_zimbraUCPresenceSessionId]],label:com_zimbra_ucconfig.LBL_ucPresenceSessionId,labelLocation:_LEFT_,cssClass:"admin_xform_number_input",width:"30em"}
,{
type:_OUTPUT_,value:com_zimbra_ucconfig.MSG_UCGenPresenseIdLink,label:com_zimbra_ucconfig.LBL_ucPresenceSessionId,labelLocation:_LEFT_,onClick:ZaUCServiceXFormView.generateID,visibilityChecks:[[ZaUCServiceXFormView.prototype.isVisible],[XForm.checkInstanceValueEmty,ZaUCService.A_zimbraUCPresenceSessionId]],containerCssClass:"ZaLinkedItem"}
]}
];
o.items=r;
n.push(o);
l.tableCssStyle="width:100%;overflow:auto;";
l.itemDefaults={
_SEPARATOR_:{
containerCssStyle:"padding-right:3px;padding-left:3px;"}};
l.items=[{
type:_SWITCH_,align:_LEFT_,valign:_TOP_,items:n}
]
};
ZaTabView.XFormModifiers.ZaUCServiceXFormView.push(ZaUCServiceXFormView.myXFormModifier)
}
if(ZaSettings&&ZaSettings.EnabledZimlet.com_zimbra_ucconfig){
ZaUCServiceViewController=function(t,e){
ZaXFormViewController.call(this,t,e,"ZaUCServiceViewController");
this._UICreated=false;
this.deleteMsg=com_zimbra_ucconfig.Q_DELETE_UCService;
this.tabConstructor=ZaUCServiceXFormView
};
ZaUCServiceViewController.prototype=new ZaXFormViewController();
ZaUCServiceViewController.prototype.constructor=ZaUCServiceViewController;
ZaController.setViewMethods.ZaUCServiceViewController=[];
ZaController.initPopupMenuMethods.ZaUCServiceViewController=[];
ZaController.changeActionsStateMethods.ZaUCServiceViewController=[];
ZaUCServiceViewController.setViewMethod=function(t){
try{
t[ZaModel.currentTab]="1";
if(t.id){
t.load("id",t.id)
}
this._currentObject=t;
if(!this._UICreated){
this._initPopupMenu();
this._contentView=this._view=new this.tabConstructor(this._container,t);
var o=new Object();
o[ZaAppViewMgr.C_APP_CONTENT]=this._view;
this._UICreated=true;
ZaApp.getInstance().getAppViewMgr().createView(this.getContentViewId(),o);
ZaApp.getInstance()._controllers[this.getContentViewId()]=this;
ZaApp.getInstance().pushView(this.getContentViewId())
}
this._view.setDirty(false);
this._view.setObject(t)
}
catch(e){
this._handleException(e,"ZaUCServiceViewController.prototype._setView",null,false)
}};
ZaController.setViewMethods.ZaUCServiceViewController.push(ZaUCServiceViewController.setViewMethod);
ZaUCServiceViewController.initPopupMenuMethod=function(){
this._popupOperations[ZaOperation.SAVE]=new ZaOperation(ZaOperation.SAVE,ZaMsg.TBB_Save,ZaMsg.TBB_Save,"Save","SaveDis",new AjxListener(this,this.saveButtonListener));
this._popupOperations[ZaOperation.NEW]=new ZaOperation(ZaOperation.NEW,ZaMsg.TBB_New,ZaMsg.TBB_New,"Administration","AdministrationDis",new AjxListener(this,ZaUCServiceListController.prototype._newUCServiceListener));
this._popupOperations[ZaOperation.DELETE]=new ZaOperation(ZaOperation.DELETE,ZaMsg.TBB_Delete,ZaMsg.TBB_Delete,"Delete","DeleteDis",new AjxListener(this,this.deleteButtonListener));
if(ZaUCService.PROVIDER=="cisco"){
this._popupOperations[ZaOperation.ACTIVATE_PRESENCE]=new ZaOperation(ZaOperation.ACTIVATE_PRESENCE,com_zimbra_ucconfig.MNU_ActivatePresence,null,"Activate","ActivateDis",new AjxListener(this,ZaUCServiceViewController.prototype.activatePresenceService))
}};
ZaController.initPopupMenuMethods.ZaUCServiceViewController.push(ZaUCServiceViewController.initPopupMenuMethod);
ZaUCServiceViewController.changeActionsStateMethod=function(){
var e=(this._view&&this._view.isDirty());
if(this._popupOperations[ZaOperation.SAVE]){
this._popupOperations[ZaOperation.SAVE].enabled=e
}
if(this._popupOperations[ZaOperation.ACTIVATE_PRESENCE]){
this._popupOperations[ZaOperation.ACTIVATE_PRESENCE].enabled=false
}
var t=this._view.getObject();
if(t.attrs[ZaUCService.A_zimbraUCPresenceURL]){
this._popupOperations[ZaOperation.ACTIVATE_PRESENCE].enabled=true
}
this._popupOperations[ZaOperation.NEW].enabled=true;
this._popupOperations[ZaOperation.DELETE].enabled=true
};
ZaController.changeActionsStateMethods.ZaUCServiceViewController.push(ZaUCServiceViewController.changeActionsStateMethod);
ZaUCServiceViewController.prototype._saveChanges=function(){
if(this._view.getMyForm().hasErrors()){
var t=this._view.getMyForm().getItemsInErrorState();
var c=ZaMsg.CORRECT_ERRORS;
c+="<br><ul>";
var s=0;
for(var m in t){
if(s>19){
c+="<li>...</li>";
break
}
if(m=="size"){
continue
}
var u=t[m].getInheritedProperty("msgName");
if(!u&&t[m].getParentItem()){
u=t[m].getParentItem().getInheritedProperty("msgName")
}
if(u){
if(u.substring(u.length-1,1)==":"){
u=u.substring(0,u.length-1)
}}
if(u){
c+="<li>";
c+=u;
c+="</li>"
}
s++
}
c+="</ul>";
this.popupMsgDialog(c,true);
return false
}
var n=this._view.getObject();
var r=false;
if(!ZaUCService.checkValues(n)){
return false
}
var f=new Object();
if(!n.id){
r=true
}
for(var d in n.attrs){
if(d==ZaUCService.A_name||d==ZaUCService.A_zimbraUCPresenceSessionId||d==ZaUCService.A_description){
continue
}
if(r||(this._currentObject.attrs[d]!=n.attrs[d])){
f[d]=n.attrs[d]
}}
if(this._currentObject[ZaModel.currentTab]!=n[ZaModel.currentTab]){
this._currentObject[ZaModel.currentTab]=n[ZaModel.currentTab]
}
try{
if(r){
this._currentObject.create(n.name,f);
this.fireCreationEvent(this._currentObject);
ZaApp.getInstance().getAppCtxt().getAppController().setActionStatusMsg(AjxMessageFormat.format(com_zimbra_ucconfig.MSG_UCServiceCreated,[instance]))
}else{
if(n.name!=this._currentObject.name){
this._currentObject.rename(n.name)
}
this._currentObject.modify(f);
ZaApp.getInstance().getAppCtxt().getAppController().setActionStatusMsg(AjxMessageFormat.format(com_zimbra_ucconfig.MSG_UCServiceModified,[this._currentObject.name]))
}}
catch(l){
var o="";
for(var e in l){
if(l[e] instanceof Function){
continue
}
o=o+e+" - "+l[e]+"\n"
}
if(l.code==ZmCsfeException.UCSERVER_EXISTS||l.code==ZmCsfeException.UC_SERVICE_EXISTS){
this._errorDialog.setMessage(com_zimbra_ucconfig.WARNING_UCService_EXISTS_RENAME,o,DwtMessageDialog.CRITICAL_STYLE,ZabMsg.zimbraAdminTitle);
this._errorDialog.popup()
}else{
this._handleException(l,"ZaUCServiceViewController.prototype._saveChanges",null,false)
}
return false
}
return true
};
ZaUCServiceViewController.prototype.getAppBarAction=function(){
if(AjxUtil.isEmpty(this._appbarOperation)){
this._appbarOperation[ZaOperation.SAVE]=new ZaOperation(ZaOperation.SAVE,ZaMsg.TBB_Save,ZaMsg.ALTBB_Save_tt,"","",new AjxListener(this,this.saveButtonListener));
this._appbarOperation[ZaOperation.CLOSE]=new ZaOperation(ZaOperation.CLOSE,ZaMsg.TBB_Close,ZaMsg.ALTBB_Close_tt,"","",new AjxListener(this,this.closeButtonListener))
}
return this._appbarOperation
};
ZaUCServiceViewController.prototype.getAppBarOrder=function(){
if(AjxUtil.isEmpty(this._appbarOrder)){
this._appbarOrder.push(ZaOperation.SAVE);
this._appbarOrder.push(ZaOperation.CLOSE)
}
return this._appbarOrder
};
ZaUCServiceViewController.prototype.activatePresenceService=function(e){
if(!ZaApp.getInstance().dialogs.activatePresenceFormDialog){
ZaApp.getInstance().dialogs.activatePresenceFormDialog=new ZaActivatePresenceXDlg(ZaApp.getInstance().getAppCtxt().getShell(),"400px","120px");
ZaApp.getInstance().dialogs.activatePresenceFormDialog.registerCallback(DwtDialog.OK_BUTTON,ZaUCServiceViewController.prototype._doActivate,this)
}
ZaApp.getInstance().dialogs.activatePresenceFormDialog.setObject(this._currentObject);
ZaApp.getInstance().dialogs.activatePresenceFormDialog.popup()
};
ZaUCServiceViewController.prototype._doActivate=function(){
if(ZaApp.getInstance().dialogs.activatePresenceFormDialog){
ZaApp.getInstance().dialogs.activatePresenceFormDialog.popdown()
}
try{
var t=ZaApp.getInstance().dialogs.activatePresenceFormDialog.getObject();
var o=new AjxCallback(this,ZaApp.getInstance().getCurrentController()._handleActivated,ZaApp.getInstance().getCurrentController()._view._localXForm);
t.activate(o)
}
catch(e){
this._handleException(e,"ZaUCServiceViewController.prototype.doActivate",null,false)
}};
ZaUCServiceViewController.prototype._handleActivated=function(s,l){
var o=l&&l._data&&l._data.Body&&l._data.Body.UpdatePresenceSessionIdResponse&&l._data.Body.UpdatePresenceSessionIdResponse.a&&l._data.Body.UpdatePresenceSessionIdResponse.a instanceof Array&&l._data.Body.UpdatePresenceSessionIdResponse.a[0];
if(o&&s){
var r=l._data.Body.UpdatePresenceSessionIdResponse;
s.setInstanceValue(r.a[0]._content,ZaUCService.A_zimbraUCPresenceSessionId);
s.refresh();
if(!ZaApp.getInstance().dialogs.genSessionIdSuccDialog){
var n=new ZaUCPresenceIDResultXDlg(ZaApp.getInstance().getAppCtxt().getShell(),null,[DwtDialog.OK_BUTTON],null,"genPresenceSessionIdSuccDialog");
n.setMessage(com_zimbra_ucconfig.SUB_UCPresenceGenSuccess,com_zimbra_ucconfig.MSG_UCPresenceGenSuccess,ZaUCPresenceIDResultXDlg.SUCCESSS_STYLE);
ZaApp.getInstance().dialogs.genSessionIdSuccDialog=n
}
ZaApp.getInstance().dialogs.genSessionIdSuccDialog.popup()
}else{
if(!ZaApp.getInstance().dialogs.genSessionIdFailedFormDialog){
var t=new DwtDialog_ButtonDescriptor(ZaUCPresenceIDResultXDlg.RETRY_BUTTON,com_zimbra_ucconfig.BTN_RETRY,DwtDialog.ALIGN_RIGHT,new AjxCallback(this,this._retryGeneratePreID));
var e=new ZaUCPresenceIDResultXDlg(ZaApp.getInstance().getAppCtxt().getShell(),null,[DwtDialog.CANCEL_BUTTON],[t],"genPresenceSessionIdFailedFormDialog");
e.setMessage(com_zimbra_ucconfig.SUB_UCPresenceGenFail,com_zimbra_ucconfig.ERROR_FailedGenerateSessionId,ZaUCPresenceIDResultXDlg.FAIL_STYLE);
ZaApp.getInstance().dialogs.genSessionIdFailedFormDialog=e
}
ZaApp.getInstance().dialogs.genSessionIdFailedFormDialog.popup()
}};
ZaUCServiceViewController.prototype._retryGeneratePreID=function(){
if(ZaApp.getInstance().dialogs.genSessionIdFailedFormDialog){
ZaApp.getInstance().dialogs.genSessionIdFailedFormDialog.popdown()
}
if(ZaApp.getInstance().dialogs.activatePresenceFormDialog){
ZaApp.getInstance().dialogs.activatePresenceFormDialog.popup()
}};
ZaUCServiceViewController._listTreeListener=function(n,e){
var o=n.item.getData(ZaUCService.UCSERVICE_ITEM);
if(o&&o.id){
e._currentQuery="("+ZaItem.A_zimbraUCServiceId+"="+o.id+")";
var t=ZaApp.getInstance().getCurrentController();
if(t){
t.switchToNextView(e,e.show,true)
}else{
e.show(true)
}
e._currentQuery=""
}};
ZaUCServiceViewController.accountListTreeListener=function(t){
var e=ZaApp.getInstance().getAccountListController();
ZaUCServiceViewController._listTreeListener.call(this,t,e)
};
ZaUCServiceViewController.cosListTreeListener=function(e){
var t=ZaApp.getInstance().getCosListController();
ZaUCServiceViewController._listTreeListener.call(this,e,t)
};
ZaUCServiceViewController.domainListTreeListener=function(t){
var e=ZaApp.getInstance().getDomainListController();
ZaUCServiceViewController._listTreeListener.call(this,t,e)
}
}
if(ZaSettings&&ZaSettings.EnabledZimlet.com_zimbra_ucconfig){
ZaActivatePresenceXDlg=function(o,e,t){
if(arguments.length==0){
return
}
this._standardButtons=[DwtDialog.CANCEL_BUTTON,DwtDialog.OK_BUTTON];
ZaXDialog.call(this,o,null,com_zimbra_ucconfig.TTL_ActivatePresence,e,t,"ZaActivatePresenceXDlg");
this.initForm(ZaUCService.myXModel,this.getMyXForm());
this.setTitle(com_zimbra_ucconfig.TTL_ActivatePresence)
};
ZaActivatePresenceXDlg.prototype=new ZaXDialog;
ZaActivatePresenceXDlg.prototype.constructor=ZaActivatePresenceXDlg;
ZaActivatePresenceXDlg.prototype.isVisible=function(){
var e=this.getForm().instance.attrs[ZaUCService.A_zimbraUCProvider];
return ZaUCService.hasProperty(e,this.refPath)
};
ZaActivatePresenceXDlg.prototype.getMyXForm=function(){
var e={
items:[{
type:_GROUP_,isTabGroup:true,numCols:2,colSizes:["150px","auto"],items:[{
type:_OUTPUT_,cssStyle:"padding: 10",colSpan:2,value:com_zimbra_ucconfig.MSG_UCPresenceIdPrompt}
,{
ref:ZaUCService.A2_zimbraAppName,type:_INPUT_,msgName:com_zimbra_ucconfig.LBL_AppName,label:com_zimbra_ucconfig.LBL_AppName,labelLocation:_LEFT_,cssClass:"admin_xform_number_input",width:"200px"}
,{
ref:ZaUCService.A2_zimbraAppPassword,type:_SECRET_,msgName:com_zimbra_ucconfig.LBL_Password,label:com_zimbra_ucconfig.LBL_Password,labelLocation:_LEFT_,cssClass:"admin_xform_number_input",width:"200px"}
]}
]};
return e
}
}
if(ZaSettings&&ZaSettings.EnabledZimlet.com_zimbra_ucconfig){
ZaNewUCServiceXDlg=function(o,e,t){
if(arguments.length==0){
return
}
this._standardButtons=[DwtDialog.CANCEL_BUTTON,DwtDialog.OK_BUTTON];
ZaXDialog.call(this,o,null,com_zimbra_ucconfig.UCService_new_title,e,t,"ZaNewUCServiceXDlg");
this.initForm(ZaUCService.myXModel,this.getMyXForm());
this.setTitle(com_zimbra_ucconfig.UCService_new_title)
};
ZaNewUCServiceXDlg.prototype=new ZaXDialog;
ZaNewUCServiceXDlg.prototype.constructor=ZaNewUCServiceXDlg;
ZaNewUCServiceXDlg.prototype.supportMinimize=true;
ZaNewUCServiceXDlg.prototype.isVisible=function(){
var e=this.getForm().instance.attrs[ZaUCService.A_zimbraUCProvider];
return ZaUCService.hasProperty(e,this.refPath)
};
ZaNewUCServiceXDlg.prototype.getMyXForm=function(){
var e={
numCols:2,items:[{
type:_GROUP_,isTabGroup:true,width:"100%",numCols:2,colSizes:["150px","auto"],items:[{
ref:ZaUCService.A_name,type:_INPUT_,msgName:ZaMsg.NAD_DisplayName,label:ZaMsg.NAD_DisplayName,labelLocation:_LEFT_,cssClass:"admin_xform_number_input",width:"200px"}
,{
ref:ZaUCService.A_zimbraUCVoicemailURL,type:_INPUT_,msgName:com_zimbra_ucconfig.LBL_ucVoiceMailURL,visibilityChecks:[ZaNewUCServiceXDlg.prototype.isVisible],label:com_zimbra_ucconfig.LBL_ucVoiceMailURL,labelLocation:_LEFT_,cssClass:"admin_xform_number_input",width:"300px"}
,{
ref:ZaUCService.A_zimbraUCCallControlURL,type:_INPUT_,msgName:com_zimbra_ucconfig.LBL_callControlURL,visibilityChecks:[ZaNewUCServiceXDlg.prototype.isVisible],label:com_zimbra_ucconfig.LBL_callControlURL,labelLocation:_LEFT_,cssClass:"admin_xform_number_input",width:"300px"}
,{
ref:ZaUCService.A_zimbraUCUserURL,type:_INPUT_,msgName:com_zimbra_ucconfig.LBL_ucUserURL,visibilityChecks:[ZaNewUCServiceXDlg.prototype.isVisible],label:com_zimbra_ucconfig.LBL_ucUserURL,labelLocation:_LEFT_,cssClass:"admin_xform_number_input",width:"300px"}
,{
ref:ZaUCService.A_zimbraUCPresenceURL,type:_INPUT_,msgName:com_zimbra_ucconfig.LBL_ucPresenceURL,visibilityChecks:[ZaNewUCServiceXDlg.prototype.isVisible],label:com_zimbra_ucconfig.LBL_ucPresenceURL,labelLocation:_LEFT_,cssClass:"admin_xform_number_input",width:"300px"}
]}
]};
return e
}
}
if(ZaSettings&&ZaSettings.EnabledZimlet.com_zimbra_ucconfig){
ZaChooseProviderXDlg=function(o,e,t){
if(arguments.length==0){
return
}
this._standardButtons=[DwtDialog.CANCEL_BUTTON,DwtDialog.OK_BUTTON];
ZaXDialog.call(this,o,null,com_zimbra_ucconfig.TTL_ChooseProvider,e,t,"ZaChooseProviderXDlg");
this.initForm(ZaUCService.myXModel,this.getMyXForm());
this._button[DwtDialog.OK_BUTTON].setEnabled(false)
};
ZaChooseProviderXDlg.prototype=new ZaXDialog;
ZaChooseProviderXDlg.prototype.constructor=ZaChooseProviderXDlg;
ZaChooseProviderXDlg.prototype.getMyXForm=function(){
var e={
items:[{
type:_GROUP_,isTabGroup:true,numCols:2,colSizes:["200px","auto"],items:[{
type:_OUTPUT_,cssStyle:"padding: 10px; white-space: normal",colSpan:2,colSizes:["*"],value:com_zimbra_ucconfig.Q_Choose_Provider}
,{
ref:ZaUCService.A_zimbraUCProvider,type:_OSELECT1_,choices:ZaUCService.getAllProviders(),label:"",labelLocation:_LEFT_,onChange:function(n,o,t){
this.setInstanceValue(n);
this.getForm().parent._button[DwtDialog.OK_BUTTON].setEnabled(!(AjxUtil.isEmpty(n)))
}}
]}
]};
return e
}
}
if(ZaSettings&&ZaSettings.EnabledZimlet.com_zimbra_ucconfig){
ZaUCServiceListView=function(n){
var o=null;
var t=DwtControl.ABSOLUTE_STYLE;
var e=this._getHeaderList();
ZaListView.call(this,{
parent:n,className:o,posStyle:t,headerList:e,id:"ServiceManage"}
);
this._appCtxt=this.shell.getData(ZaAppCtxt.LABEL)
};
ZaUCServiceListView.prototype=new ZaListView;
ZaUCServiceListView.prototype.constructor=ZaUCServiceListView;
ZaUCServiceListView.prototype.toString=function(){
return"ZaUCServiceListView"
};
ZaUCServiceListView.prototype.getTitle=function(){
return com_zimbra_ucconfig.UCService_view_title
};
ZaUCServiceListView.prototype.getTabIcon=function(){
return"UCService"
};
ZaUCServiceListView.prototype._createItemHtml=function(l,u,n){
var r=new Array(50);
var e=document.createElement("div");
e[DwtListView._STYLE_CLASS]="Row";
e[DwtListView._SELECTED_STYLE_CLASS]=e[DwtListView._STYLE_CLASS]+"-"+DwtCssStyle.SELECTED;
e.className=e[DwtListView._STYLE_CLASS];
this.associateItemWithElement(l,e,DwtListView.TYPE_LIST_ITEM);
var d=0;
r[d++]="<table width='100%'>";
r[d++]="<tr>";
var t=this._headerList.length;
for(var s=0;
s<t;
s++){
var c=this._headerList[s]._field;
var o=this._getCellWidth(s,{}
);
if(c==ZaUCService.A_name){
r[d++]="<td align='left' width="+this._headerList[s]._width+"><nobr>";
r[d++]=AjxStringUtil.htmlEncode(l.name);
r[d++]="</nobr></td>"
}else{
if(c==ZaUCService.A_zimbraUCProvider){
r[d++]="<td align='left' width="+this._headerList[s]._width+"><nobr>";
r[d++]=AjxStringUtil.htmlEncode(l.attrs[ZaUCService.A_zimbraUCProvider]);
r[d++]="</nobr></td>"
}else{
if(c==ZaUCService.A_zimbraUCCallControlURL){
r[d++]="<td align='left' width="+this._headerList[s]._width+"><nobr>";
r[d++]=AjxStringUtil.htmlEncode(l.attrs[ZaUCService.A_zimbraUCCallControlURL]);
r[d++]="</nobr></td>"
}else{
if(c==ZaUCService.A_zimbraUCVoicemailURL){
r[d++]="<td align='left' width="+this._headerList[s]._width+"><nobr>";
r[d++]=AjxStringUtil.htmlEncode(l.attrs[ZaUCService.A_zimbraUCVoicemailURL]);
r[d++]="</nobr></td>"
}}}}}
r[d++]="</tr></table>";
e.innerHTML=r.join("");
return e
};
ZaUCServiceListView.prototype._getHeaderList=function(){
var e=new Array();
var o=1;
var t=0;
e[t++]=new ZaListHeaderItem(ZaUCService.A_name,com_zimbra_ucconfig.CLV_Name_col,null,"150px",o++,ZaUCService.A_name,true,true);
e[t++]=new ZaListHeaderItem(ZaUCService.A_zimbraUCProvider,com_zimbra_ucconfig.CLV_Type_col,null,"80",null,null,true,true);
e[t++]=new ZaListHeaderItem(ZaUCService.A_zimbraUCCallControlURL,com_zimbra_ucconfig.CLV_Call_URL_col,null,"350",null,null,true,true);
e[t++]=new ZaListHeaderItem(ZaUCService.A_zimbraUCVoicemailURL,com_zimbra_ucconfig.CLV_Voicemail_URL_col,null,"auto",null,null,true,true);
return e
}
}
if(ZaSettings&&ZaSettings.EnabledZimlet.com_zimbra_ucconfig){
ZaUCServiceListController=function(t,e){
ZaListViewController.call(this,t,e,"ZaUCServiceListController");
this._popupOperations=new Array()
};
ZaUCServiceListController.prototype=new ZaListViewController();
ZaUCServiceListController.prototype.constructor=ZaUCServiceListController;
ZaController.initPopupMenuMethods.ZaUCServiceListController=new Array();
ZaController.changeActionsStateMethods.ZaUCServiceListController=new Array();
ZaUCServiceListController.prototype.show=function(){
var e=ZaUCService.getAll();
if(e!=null){
this._list=e
}
if(!this._UICreated){
this._createUI()
}
if(e!=null){
this._contentView.set(e.getVector())
}
ZaApp.getInstance().pushView(this.getContentViewId());
this.changeActionsState()
};
ZaUCServiceListController.initPopupMenuMethod=function(){
if(ZaItem.hasRight(ZaUCService.CREATE_RIGHT,ZaZimbraAdmin.currentAdminAccount)){
this._popupOperations[ZaOperation.NEW]=new ZaOperation(ZaOperation.NEW,ZaMsg.TBB_New,null,"Administration","AdministrationDis",new AjxListener(this,ZaUCServiceListController.prototype._newUCServiceListener))
}
this._popupOperations[ZaOperation.EDIT]=new ZaOperation(ZaOperation.EDIT,ZaMsg.TBB_Edit,null,"Properties","PropertiesDis",new AjxListener(this,ZaUCServiceListController.prototype._editButtonListener));
this._popupOperations[ZaOperation.DELETE]=new ZaOperation(ZaOperation.DELETE,ZaMsg.TBB_Delete,null,"Delete","DeleteDis",new AjxListener(this,ZaUCServiceListController.prototype._deleteButtonListener));
if(this._shouldShowPreSessionGenMenu()){
this._popupOperations[ZaOperation.ACTIVATE_PRESENCE]=new ZaOperation(ZaOperation.ACTIVATE_PRESENCE,com_zimbra_ucconfig.MNU_ActivatePresence,null,"Activate","ActivateDis",new AjxListener(this,ZaUCServiceListController.prototype.activatePresenceService))
}};
ZaUCServiceListController.prototype._shouldShowPreSessionGenMenu=function(){
if(!this._list||this._list.getArray().length==0){
return true
}
var e=this._list.getArray()[0].attrs[ZaUCService.A_zimbraUCProvider];
return ZaUCService.hasProperty(e,ZaUCService.A_zimbraUCPresenceSessionId)
};
ZaController.initPopupMenuMethods.ZaUCServiceListController.push(ZaUCServiceListController.initPopupMenuMethod);
ZaUCServiceListController.prototype._createUI=function(){
try{
var t=new Object();
this._contentView=new ZaUCServiceListView(this._container);
this._initPopupMenu();
if(this._popupOperations&&this._popupOperations.length){
this._actionMenu=new ZaPopupMenu(this._contentView,"ActionMenu",null,this._popupOperations)
}
t[ZaAppViewMgr.C_APP_CONTENT]=this._contentView;
ZaApp.getInstance().getAppViewMgr().createView(this.getContentViewId(),t);
this._contentView.addSelectionListener(new AjxListener(this,this._listSelectionListener));
this._contentView.addActionListener(new AjxListener(this,this._listActionListener));
this._removeConfirmMessageDialog=new ZaMsgDialog(ZaApp.getInstance().getAppCtxt().getShell(),null,[DwtDialog.YES_BUTTON,DwtDialog.NO_BUTTON],ZaApp.getInstance());
this._UICreated=true;
ZaApp.getInstance()._controllers[this.getContentViewId()]=this
}
catch(e){
this._handleException(e,"ZaUCServiceListController.prototype._createUI",null,false);
return
}};
ZaUCServiceListController.prototype.set=function(e){
this.show(e)
};
ZaUCServiceListController.prototype._listSelectionListener=function(e){
if(e.detail==DwtListView.ITEM_DBL_CLICKED){
if(e.item){
this._editItem(e.item)
}}else{
this.changeActionsState()
}};
ZaUCServiceListController.prototype._listActionListener=function(e){
this.changeActionsState();
this._actionMenu.popup(0,e.docX,e.docY)
};
ZaUCServiceListController.changeActionsStateMethod=function(){
if(!this._contentView){
return
}
var o=this._contentView.getSelectionCount();
if(o>=1){
var e=this._contentView.getSelectedItems().getArray();
for(var t in e){
var n=this._contentView.getItemFromElement(e[t]);
if(n){
break
}}}
if(this._popupOperations[ZaOperation.NEW]){
this._popupOperations[ZaOperation.NEW].enabled=ZaUCService.getAllProviders().length>0
}
if(this._popupOperations[ZaOperation.ACTIVATE_PRESENCE]){
this._popupOperations[ZaOperation.ACTIVATE_PRESENCE].enabled=false
}
if(o==1){
if(ZaItem.hasRight(ZaUCService.DELETE_RIGHT,n)){
this._popupOperations[ZaOperation.DELETE].enabled=true
}else{
this._popupOperations[ZaOperation.DELETE].enabled=false
}
if(ZaItem.hasRight(ZaUCService.MODIFY_RIGHT,n)){
this._popupOperations[ZaOperation.EDIT].enabled=true;
if(n&&n.attrs&&n.attrs[ZaUCService.A_zimbraUCPresenceURL]){
this._popupOperations[ZaOperation.ACTIVATE_PRESENCE].enabled=true
}}else{
this._popupOperations[ZaOperation.EDIT].enabled=false
}}else{
if(o==0){
this._popupOperations[ZaOperation.DELETE].enabled=false
}else{
this._popupOperations[ZaOperation.DELETE].enabled=true
}
this._popupOperations[ZaOperation.EDIT].enabled=false
}};
ZaController.changeActionsStateMethods.ZaUCServiceListController.push(ZaUCServiceListController.changeActionsStateMethod);
ZaUCServiceListController.prototype._newUCServiceListener=function(e){
var t=new ZaUCService();
if(!ZaUCService.PROVIDER){
if(!ZaApp.getInstance().dialogs.chooseProviderDialog){
ZaApp.getInstance().dialogs.chooseProviderDialog=new ZaChooseProviderXDlg(ZaApp.getInstance().getAppCtxt().getShell(),"500px","150px");
ZaApp.getInstance().dialogs.chooseProviderDialog.registerCallback(DwtDialog.OK_BUTTON,ZaUCServiceListController.popUCServiceCreationDlg,this,["true"])
}
ZaApp.getInstance().dialogs.chooseProviderDialog.setObject(t);
ZaApp.getInstance().dialogs.chooseProviderDialog._button[DwtDialog.OK_BUTTON].setEnabled(false);
ZaApp.getInstance().dialogs.chooseProviderDialog.popup()
}else{
ZaUCServiceListController.popUCServiceCreationDlg.call(this)
}};
ZaUCServiceListController.popUCServiceCreationDlg=function(e){
if(ZaApp.getInstance().dialogs.chooseProviderDialog){
ZaApp.getInstance().dialogs.chooseProviderDialog.popdown()
}
var n;
if(e){
n=ZaApp.getInstance().dialogs.chooseProviderDialog.getObject();
try{
ZaUCServiceListController.saveProvider.call(this,n.attrs[ZaUCService.A_zimbraUCProvider])
}
catch(t){
this._errorDialog.setMessage(com_zimbra_ucconfig.ERROR_FailedSaveProvider,t,DwtMessageDialog.CRITICAL_STYLE,ZabMsg.zimbraAdminTitle);
this._errorDialog.popup();
return
}}
if(!n){
n=new ZaUCService()
}
if(!ZaApp.getInstance().dialogs.newUCServiceDialog){
var o=1;
if(!n.attrs[ZaUCService.A_zimbraUCProvider]){
o++
}
o+=ZaUCService.getAllProviders()[0].attrs.length;
ZaApp.getInstance().dialogs.newUCServiceDialog=new ZaNewUCServiceXDlg(ZaApp.getInstance().getAppCtxt().getShell(),"500px","300px");
ZaApp.getInstance().dialogs.newUCServiceDialog.registerCallback(DwtDialog.OK_BUTTON,ZaUCService.prototype.addService,n,ZaApp.getInstance().dialogs.newUCServiceDialog._localXForm)
}
ZaApp.getInstance().dialogs.newUCServiceDialog.setObject(n);
ZaApp.getInstance().dialogs.newUCServiceDialog.popup()
};
ZaUCServiceListController.saveProvider=function(s){
var o=AjxSoapDoc.create("ModifyConfigRequest",ZaZimbraAdmin.URN,null);
var e=o.set("a",s);
e.setAttribute("n","zimbraUCProviderEnabled");
var n=new Object();
n.soapDoc=o;
var t={
controller:ZaApp.getInstance().getCurrentController(),busyMsg:com_zimbra_ucconfig.BUSY_CREATE_UCService};
ZaRequestMgr.invoke(n,t)
};
ZaUCServiceListController.prototype._editButtonListener=function(t){
if(this._contentView.getSelectionCount()==1){
var e=this._contentView.getSelection()[0];
this._editItem(e)
}};
ZaUCServiceListController.prototype._editItem=function(t){
ZaApp.getInstance().getUCServiceViewController().show(t);
var e=ZaTree.getPathByArray([ZaMsg.OVP_home,ZaMsg.OVP_configure,com_zimbra_ucconfig.OVP_UCService]);
ZaZimbraAdmin.getInstance().getOverviewPanelController().addObjectItem(e,t.name,null,false,false,t)
};
ZaUCServiceListController.prototype._deleteButtonListener=function(s){
this._removeList=new Array();
if(this._contentView.getSelectionCount()>0){
var n=this._contentView.getSelection();
var t=n.length;
for(var e=0;
e<t;
e++){
var o=n[e];
if(o){
this._removeList.push(o)
}}}
this._deleteUCServiceInRemoveList()
};
ZaUCServiceListController.prototype._deleteUCServiceInRemoveList=function(){
if(this._removeList.length){
var e=com_zimbra_ucconfig.Q_DELETE_UCServices;
e+=ZaUCServiceListController.getDlMsgFromList(this._removeList);
this._removeConfirmMessageDialog.setMessage(e,DwtMessageDialog.WARNING_STYLE);
this._removeConfirmMessageDialog.registerCallback(DwtDialog.YES_BUTTON,ZaUCServiceListController.prototype._deleteUCServiceCallback,this);
this._removeConfirmMessageDialog.registerCallback(DwtDialog.NO_BUTTON,ZaUCServiceListController.prototype._donotDeleteUCServiceCallback,this);
this._removeConfirmMessageDialog.popup()
}};
ZaUCServiceListController.getDlMsgFromList=function(t){
dlgMsg="<br><ul>";
var s=0,o;
for(var n in t){
if(s>19){
dlgMsg+="<li>...</li>";
break
}
dlgMsg+="<li>";
o=t[n].name;
if(o.length>50){
var e=49;
var r=0;
while(e<o.length){
dlgMsg+=AjxStringUtil.htmlEncode(o.slice(r,e));
r=e+1;
if(r>=(o.length)){
break
}
e=(o.length<=(e+50))?o.length-1:(e+50);
dlgMsg+="<br>"
}}else{
dlgMsg+=AjxStringUtil.htmlEncode(o)
}
dlgMsg+="</li>";
s++
}
dlgMsg+="</ul>";
return dlgMsg
};
ZaUCServiceListController.prototype._donotDeleteUCServiceCallback=function(){
this._removeList=new Array();
this._removeConfirmMessageDialog.popdown()
};
ZaUCServiceListController.prototype._deleteUCServiceCallback=function(){
var o=new Array();
for(var t in this._removeList){
if(this._removeList[t]){
try{
this._removeList[t].remove();
o.push(this._removeList[t])
}
catch(e){
this._removeConfirmMessageDialog.popdown();
this._handleException(e,ZaUCServiceListController.prototype._deleteUCServiceCallback,null,false);
return
}}
if(this._list){
this._list.remove(this._removeList[t])
}}
this.fireRemovalEvent(o);
this._removeConfirmMessageDialog.popdown();
if(this._contentView){
this._contentView.setUI()
}
this.show()
};
ZaUCServiceListController.prototype.activatePresenceService=function(e){
if(this._contentView.getSelectionCount()<=0){
return
}
var t=this._contentView.getSelection()[0];
if(!ZaApp.getInstance().dialogs.activatePresenceDialog){
ZaApp.getInstance().dialogs.activatePresenceDialog=new ZaActivatePresenceXDlg(ZaApp.getInstance().getAppCtxt().getShell(),"400px","140px");
ZaApp.getInstance().dialogs.activatePresenceDialog.registerCallback(DwtDialog.OK_BUTTON,ZaUCServiceListController.prototype._doActivate,this)
}
ZaApp.getInstance().dialogs.activatePresenceDialog.setObject(t);
ZaApp.getInstance().dialogs.activatePresenceDialog.popup()
};
ZaUCServiceListController.prototype._doActivate=function(){
if(ZaApp.getInstance().dialogs.activatePresenceDialog){
ZaApp.getInstance().dialogs.activatePresenceDialog.popdown()
}
try{
var t=ZaApp.getInstance().dialogs.activatePresenceDialog.getObject();
var o=new AjxCallback(this,this._handleActivated);
t.activate(o)
}
catch(e){
this._handleException(e,"ZaUCServiceViewController.prototype.doActivate",null,false)
}};
ZaUCServiceListController.prototype._handleActivated=function(s){
var o=s&&s._data&&s._data.Body&&s._data.Body.UpdatePresenceSessionIdResponse&&s._data.Body.UpdatePresenceSessionIdResponse.a&&s._data.Body.UpdatePresenceSessionIdResponse.a instanceof Array&&s._data.Body.UpdatePresenceSessionIdResponse.a[0];
if(o){
if(!ZaApp.getInstance().dialogs.genSessionIdSuccDialog){
var n=new ZaUCPresenceIDResultXDlg(ZaApp.getInstance().getAppCtxt().getShell(),null,[DwtDialog.OK_BUTTON],null,"genPresenceSessionIdSuccDialog");
n.setMessage(com_zimbra_ucconfig.SUB_UCPresenceGenSuccess,com_zimbra_ucconfig.MSG_UCPresenceGenSuccess,ZaUCPresenceIDResultXDlg.SUCCESSS_STYLE);
ZaApp.getInstance().dialogs.genSessionIdSuccDialog=n
}
ZaApp.getInstance().dialogs.genSessionIdSuccDialog.popup();
return true
}else{
if(!ZaApp.getInstance().dialogs.genSessionIdFailedDialog){
var t=new DwtDialog_ButtonDescriptor(ZaUCPresenceIDResultXDlg.RETRY_BUTTON,com_zimbra_ucconfig.BTN_RETRY,DwtDialog.ALIGN_RIGHT,new AjxCallback(this,this._retryGeneratePreID));
var e=new ZaUCPresenceIDResultXDlg(ZaApp.getInstance().getAppCtxt().getShell(),null,[DwtDialog.CANCEL_BUTTON],[t],"genPresenceSessionIdFailedDialog");
e.setMessage(com_zimbra_ucconfig.SUB_UCPresenceGenFail,com_zimbra_ucconfig.ERROR_FailedGenerateSessionId,ZaUCPresenceIDResultXDlg.FAIL_STYLE);
ZaApp.getInstance().dialogs.genSessionIdFailedDialog=e
}
ZaApp.getInstance().dialogs.genSessionIdFailedDialog.popup()
}};
ZaUCServiceListController.prototype._retryGeneratePreID=function(){
if(ZaApp.getInstance().dialogs.genSessionIdFailedDialog){
ZaApp.getInstance().dialogs.genSessionIdFailedDialog.popdown()
}
if(ZaApp.getInstance().dialogs.activatePresenceDialog){
ZaApp.getInstance().dialogs.activatePresenceDialog.popup()
}}
}
ZaCheckBoxListView=function(n,o,t,e){
if(arguments.length==0){
return
}
var o=o||null;
var t=t||DwtControl.STATIC_STYLE;
var e=e||ZaCheckBoxListView._getHeaderList();
ZaListView.call(this,n,o,t,e);
this._appCtxt=this.shell.getData(ZaAppCtxt.LABEL)
};
ZaCheckBoxListView.prototype=new ZaListView;
ZaCheckBoxListView.prototype.constructor=ZaCheckBoxListView;
ZaCheckBoxListView.prototype.toString=function(){
return"ZaCheckBoxListView"
};
ZaCheckBoxListView.prototype._createItemHtml=function(d,t,n){
var r=new Array(50);
var e=document.createElement("div");
e[DwtListView._STYLE_CLASS]="Row";
e[DwtListView._SELECTED_STYLE_CLASS]=e[DwtListView._STYLE_CLASS]+"-"+DwtCssStyle.SELECTED;
e.className=e[DwtListView._STYLE_CLASS];
this.associateItemWithElement(d,e,DwtListView.TYPE_LIST_ITEM);
var c=0;
r[c++]="<table width='100%' cellspacing='0' cellpadding='0'>";
r[c++]="<tr align='left' width=20><td>";
r[c++]="<input type='checkbox' />";
r[c++]="</td></tr>";
r[c++]="<tr>";
var o=this._headerList.length;
for(var s=0;
s<o;
s++){
var l=this._headerList[s]._field;
r[c++]="<td align='left' width="+this._headerList[s]._width+"><nobr>";
if(l=="admin_role_name"){
r[c++]=AjxStringUtil.htmlEncode(d)
}else{
if(l==ZaAccount.A_description){
r[c++]=AjxStringUtil.htmlEncode(d)
}}
r[c++]="</nobr></td>"
}
r[c++]="</tr></table>";
e.innerHTML=r.join("");
return e
};
ZaCheckBoxListView._getHeaderList=function(){
var e=[];
e[0]=new ZaListHeaderItem("admin_role_name",com_zimbra_delegatedadmin.Col_comp_name,null,200,null,"admin_role_name",true,true);
e[1]=new ZaListHeaderItem(ZaAccount.A_description,ZaMsg.ALV_Description_col,null,"auto",null,ZaAccount.A_description,true,true);
return e
};
ZaCheckBoxListView.onSelectionListener=function(){
var e=this.getForm().getInstance();
var t=this.widget.getSelection();
this.getModel().setInstanceValue(e,"ZaCheckBoxList_Selected_Items",t)
};
if(ZaSettings&&ZaSettings.EnabledZimlet.com_zimbra_delegatedadmin){
ZaDelegatedAdmin=function(){};
ZaDelegatedAdmin.isDelegatedAdmin=function(o){
var t=(o&&o.attrs&&(o.attrs[ZaAccount.A_zimbraIsDelegatedAdminAccount]=="TRUE"));
var e=(o&&o.attrs&&(o.attrs[ZaDistributionList.A_isAdminGroup]=="TRUE"));
return t||e
};
ZaDelegatedAdmin.makeUniqueObjectArray=function(t){
if(!t){
return[]
}
var s=[];
for(var o=0;
o<t.length;
o++){
var n=false;
for(var e=0;
e<s.length;
e++){
if(s[e].right==t[o].right){
n=true;
break
}}
if(!n){
s.push(t[o])
}}
return s
};
ZaDelegatedAdmin.getMissingRights=function(e,s){
var n=[];
for(var o=0;
o<s.length;
o++){
for(var t=0;
t<e.length;
t++){
if(s[o].right==e[t].right){
n.push(s[o]);
break
}}}
return n
};
ZaDelegatedAdmin.getFinalUIComponents=function(u,o){
var t=u.getInstanceValue(ZaAccount.A2_isAssignDefaultDARights)=="TRUE";
var d=u.getInstanceValue(ZaAccount.A2_domainAdminRight)=="TRUE";
var r=u.getInstanceValue(ZaAccount.A2_resetPasswordsRight)=="TRUE";
var l=u.getInstanceValue(ZaAccount.A2_editContactInfoRight)=="TRUE";
var s=[];
var e=ZaUtil.cloneArray(ZaNewAdminWizard.LEGACY_DA_MIN_VIEWS);
var c=ZaUtil.cloneArray(ZaNewAdminWizard.LEGACY_DOMAIN_VIEW);
if(t||r||l||d){
s=ZaUtil.cloneArray(ZaNewAdminWizard.LEGACY_DA_VIEW);
if(d){
s=ZaUtil.cloneArray(ZaNewAdminWizard.LEGACY_DOMAIN_VIEW)
}else{
for(var n=0;
n<o.length;
n++){
if(c.indexOf(o[n])<0){
s.push(o[n])
}}}}else{
for(var n=0;
n<o.length;
n++){
if(e.indexOf(o[n])>-1||c.indexOf(o[n])<0){
s.push(o[n])
}}}
return s
};
if(ZaAccount){
ZaAccount.A2_adminRoles="adminRoles";
ZaAccount.adminRolesModelItem={
ref:ZaAccount.A2_adminRoles,id:ZaAccount.A2_adminRoles,type:_LIST_,listItem:{
type:_EMAIL_ADDRESS_}
,};
ZaAccount.adminAccountModelItem={
id:ZaAccount.A_zimbraIsDelegatedAdminAccount,type:_ENUM_,choices:ZaModel.BOOLEAN_CHOICES,ref:"attrs/"+ZaAccount.A_zimbraIsDelegatedAdminAccount,};
ZaAccount.myXModel.items.push(ZaAccount.adminAccountModelItem);
ZaAccount.myXModel.items.push(ZaAccount.adminRolesModelItem);
ZaAccount.A2_isAssignDefaultDARights="isAssignDefaultDARights";
ZaAccount.myXModel.items.push({
id:ZaAccount.A2_isAssignDefaultDARights,type:_ENUM_,choices:ZaModel.BOOLEAN_CHOICES,ref:ZaAccount.A2_isAssignDefaultDARights,}
);
ZaAccount.A2_rightsList="rightsList";
ZaAccount.A2_viewsList="viewsList";
ZaAccount.A2_delegatedAdmin="isDelegatedAdmin";
ZaAccount.myXModel.items.push({
id:ZaAccount.A2_delegatedAdmin,type:_ENUM_,choices:ZaModel.BOOLEAN_CHOICES,ref:ZaAccount.A2_delegatedAdmin,}
);
ZaAccount.A2_editContactInfoRight="editContactInfoRight";
ZaAccount.myXModel.items.push({
id:ZaAccount.A2_editContactInfoRight,type:_ENUM_,choices:ZaModel.BOOLEAN_CHOICES,ref:ZaAccount.A2_editContactInfoRight,}
);
ZaAccount.A2_resetPasswordsRight="resetPasswordsRight";
ZaAccount.myXModel.items.push({
id:ZaAccount.A2_resetPasswordsRight,type:_ENUM_,choices:ZaModel.BOOLEAN_CHOICES,ref:ZaAccount.A2_resetPasswordsRight,}
);
ZaAccount.A2_domainAdminRight="domainAdminRight";
ZaAccount.myXModel.items.push({
id:ZaAccount.A2_domainAdminRight,type:_ENUM_,choices:ZaModel.BOOLEAN_CHOICES,ref:ZaAccount.A2_domainAdminRight,}
);
ZaAccount.ZaDelegatedAdminOnChangeHandler=function(r,s,n){
var e=ZaApp.getInstance().getCurrentController();
var o=this.getInstanceValue(ZaAccount.A_zimbraIsDelegatedAdminAccount);
var t=this.getInstanceValue(ZaDistributionList.A_isAdminGroup);
if(!e._assignDefaultDARightslistener){
e._assignDefaultDARightslistener=new AjxListener(e,e.assignDefaultDARights,[this])
}
if((e._currentObject||r=="TRUE")&&o=="TRUE"||t=="TRUE"){
e.addChangeListener(e._assignDefaultDARightslistener);
e.addCreationListener(e._assignDefaultDARightslistener)
}else{
e.removeChangeListener(e._assignDefaultDARightslistener);
e.removeCreationListener(e._assignDefaultDARightslistener)
}
this.setInstanceValue(r,this.getRef())
};
ZaAccount.getCheckboxStatus=function(r,o,n,l){
var s=0;
if(o.length>=r){
for(var t=0;
t<o.length;
t++){
if(s>r-1){
break
}
if(o[t].grantee_id===l){
for(var e=0;
e<n.length;
e++){
if(o[t].right==n[e].right&&o[t].deny=="0"){
s++;
break
}}}}}
if(s>=r){
return"TRUE"
}
return"FALSE"
};
ZaAccount._deleteOldDirectMember=function(n,e,o){
if(!n.getInstance()[ZaAccount.A2_memberOf]){
n.getInstance()[ZaAccount.A2_memberOf]={}
}
if(!n.getInstance()[ZaAccount.A2_memberOf][ZaAccount.A2_directMemberList]){
n.getInstance()[ZaAccount.A2_memberOf][ZaAccount.A2_directMemberList]=[]
}
var s=n.getInstance()[ZaAccount.A2_memberOf][ZaAccount.A2_directMemberList];
var t=ZaUtil.findValueInObjArrByPropertyName(s,e,"name");
if(t>=0){
s.splice(t,1);
o.getModel().setInstanceValue(n.getInstance(),ZaAccount.A2_directMemberList,s);
if(o.parent.setDirty){
o.parent.setDirty(true)
}}};
ZaAccount.changeAdminRoles=function(r,s,n){
var e=this.getInstanceValue();
if(e==r){
return
}
this.setInstanceValue(r);
var t=this.getChoices();
if(t&&t.getChoiceByValue(r)!=null){
var o=t.getChoiceByValue(r).id
}else{
ZaAccount._deleteOldDirectMember(this,e,n);
if(r==""){
if(this.hasError()){
this.clearError()
}}else{
this.setError(com_zimbra_delegatedadmin.ERROR_INVALID_ADMIN_ROLE);
var s=new DwtXFormsEvent(n,this,r);
n.notifyListeners(DwtEvent.XFORMS_VALUE_ERROR,s)
}
return
}
if(!this.getInstance()[ZaAccount.A2_memberOf]){
this.getInstance()[ZaAccount.A2_memberOf]={}
}
if(!this.getInstance()[ZaAccount.A2_memberOf][ZaAccount.A2_directMemberList]){
this.getInstance()[ZaAccount.A2_memberOf][ZaAccount.A2_directMemberList]=[]
}
var l=this.getInstance()[ZaAccount.A2_memberOf][ZaAccount.A2_directMemberList];
if(r&&r.length>0&&ZaUtil.findValueInObjArrByPropertyName(l,r,"name")<0){
l.push({
id:o,name:r,}
);
n.getModel().setInstanceValue(this.getInstance(),ZaAccount.A2_directMemberList,l)
}
if(ZaAccount.getDomain(n.getModel().getInstanceValue(this.getInstance(),ZaAccount.A_name))!=ZaAccount.getDomain(r)){
ZaApp.getInstance().getCurrentController().popupWarningDialog(com_zimbra_delegatedadmin.Alert_SingleDomain)
}};
ZaAccount.onAdminRoleRemove=function(e,o){
var n=this.getInstanceValue()[e];
var r=this.getRefPath();
this.getModel().removeRow(this.getInstance(),r,e);
this.items[e].clearError();
if(!this.getInstance()[ZaAccount.A2_memberOf]){
this.getInstance()[ZaAccount.A2_memberOf]={}
}
if(!this.getInstance()[ZaAccount.A2_memberOf][ZaAccount.A2_directMemberList]){
this.getInstance()[ZaAccount.A2_memberOf][ZaAccount.A2_directMemberList]=[]
}
var s=this.getInstance()[ZaAccount.A2_memberOf][ZaAccount.A2_directMemberList];
var t=ZaUtil.findValueInObjArrByPropertyName(s,n,"name");
if(t>=0){
s.splice(t,1);
o.getModel().setInstanceValue(this.getInstance(),ZaAccount.A2_directMemberList,s);
if(o.parent.setDirty){
o.parent.setDirty(true)
}}};
ZaController.prototype.assignDefaultDARights=function(g,y){
try{
var z=g.getInstanceValue(ZaAccount.A2_isAssignDefaultDARights);
var n=g.getInstanceValue(ZaAccount.A2_resetPasswordsRight);
var s=g.getInstanceValue(ZaAccount.A2_editContactInfoRight);
var k=g.getInstanceValue(ZaAccount.A2_domainAdminRight);
var u=g.getInstanceValue(ZaAccount.A_zimbraIsDelegatedAdminAccount);
var j=u=="TRUE";
var r=g.getInstanceValue(ZaDistributionList.A_isAdminGroup);
var v=r=="TRUE";
var b=y.getDetails();
var d=ZaNewAdminWizard.getDefaultDARights(b);
var l=ZaNewAdminWizard.getDomainRights(b);
var e=ZaNewAdminWizard.getResetPasswordsRights(b);
var o=ZaNewAdminWizard.getContactInfoRights(b);
var q=ZaNewAdminWizard.getCommonRCRights(b);
var m=b.attrs[ZaAccount.A_zimbraAdminConsoleUIComponents]||[];
var c=ZaDelegatedAdmin.getFinalUIComponents(g,m);
var f=[];
var t=[];
if(z!=b[ZaAccount.A2_isAssignDefaultDARights]){
if(z=="TRUE"){
f=AjxUtil.mergeArrays(f,d)
}else{
t=AjxUtil.mergeArrays(t,d)
}}
if(k!=b[ZaAccount.A2_domainAdminRight]){
if(k=="TRUE"){
f=AjxUtil.mergeArrays(f,l)
}else{
t=AjxUtil.mergeArrays(t,l)
}}
if(n!=b[ZaAccount.A2_resetPasswordsRight]){
if(n=="TRUE"){
f=AjxUtil.mergeArrays(f,e);
f=AjxUtil.mergeArrays(f,q)
}else{
t=AjxUtil.mergeArrays(t,e);
if(s==="FALSE"){
var x=ZaDelegatedAdmin.getMissingRights(b[ZaAccount.A2_rightsList],q);
t=AjxUtil.mergeArrays(t,x)
}}}
if(s!=b[ZaAccount.A2_editContactInfoRight]){
if(s=="TRUE"){
f=AjxUtil.mergeArrays(f,o);
f=AjxUtil.mergeArrays(f,q)
}else{
t=AjxUtil.mergeArrays(t,o);
if(n==="FALSE"){
var x=ZaDelegatedAdmin.getMissingRights(b[ZaAccount.A2_rightsList],q);
t=AjxUtil.mergeArrays(t,x)
}}}
f=ZaDelegatedAdmin.makeUniqueObjectArray(f);
t=ZaDelegatedAdmin.makeUniqueObjectArray(t);
if((j||v)&&t.length>0){
if(j){
b[ZaNewAdmin.A_admin_type]=ZaItem.ACCOUNT
}else{
if(v){
b[ZaNewAdmin.A_admin_type]=ZaItem.DL
}}
b.attrs[ZaAccount.A_zimbraAdminConsoleUIComponents]=c;
if(ZaNewAdmin.modifyAdmin(b)){
if(this._currentObject&&this._currentObject.attrs){
this._currentObject[ZaAccount.A2_isAssignDefaultDARights]=z;
this._currentObject[ZaAccount.A2_domainAdminRight]=k;
this._currentObject[ZaAccount.A2_editContactInfoRight]=s;
this._currentObject[ZaAccount.A2_resetPasswordsRight]=n;
this._currentObject.attrs[ZaAccount.A_zimbraAdminConsoleUIComponents]=b.attrs[ZaAccount.A_zimbraAdminConsoleUIComponents]
}}
ZaGrant.revokeMultiGrants.call(this,{
currentIndex:0,rightsArr:t,showStatus:-1,}
)
}
if((j||v)&&f.length>0){
if(j){
b[ZaNewAdmin.A_admin_type]=ZaItem.ACCOUNT
}else{
if(v){
b[ZaNewAdmin.A_admin_type]=ZaItem.DL
}}
b.attrs[ZaAccount.A_zimbraAdminConsoleUIComponents]=c;
if(ZaNewAdmin.modifyAdmin(b)){
if(this._currentObject&&this._currentObject.attrs){
this._currentObject[ZaAccount.A2_isAssignDefaultDARights]=z;
this._currentObject[ZaAccount.A2_domainAdminRight]=k;
this._currentObject[ZaAccount.A2_editContactInfoRight]=s;
this._currentObject[ZaAccount.A2_resetPasswordsRight]=n;
this._currentObject.attrs[ZaAccount.A_zimbraAdminConsoleUIComponents]=b.attrs[ZaAccount.A_zimbraAdminConsoleUIComponents]
}}
ZaGrant.assignMultiGrants.call(this,{
currentIndex:0,rightsArr:f,showStatus:-1,}
)
}}
catch(p){
this.popupErrorDialog(com_zimbra_delegatedadmin.ERROR_ASSIGN_DEFAULT_DA_RIGHTS,p)
}
finally{
this.removeChangeListener(this._assignDefaultDARightslistener);
this.removeCreationListener(this._assignDefaultDARightslistener)
}};
ZaAccount.getAssignDefaultDARightsChkBoxItem=function(e){
if(e==null){
e="300px"
}
var t={
type:_GROUP_,colSpan:"*",numCols:2,colSizes:[e,"*"],items:[{
ref:ZaAccount.A2_isAssignDefaultDARights,type:_CHECKBOX_,label:com_zimbra_delegatedadmin.NAD_IsAssignDefaultDARights,bmolsnr:true,visibilityChangeEventSources:[ZaAccount.A_zimbraIsDelegatedAdminAccount,ZaDistributionList.A_isAdminGroup,],enableDisableChecks:[],onChange:ZaAccount.ZaDelegatedAdminOnChangeHandler,trueValue:"TRUE",falseValue:"FALSE",}
,],};
return t
};
ZaAccount.getDelegatedAdminChkBoxItem=function(e){
if(e==null){
e="300px"
}
var t={
type:_GROUP_,numCols:6,colSizes:["22px","150px","22px","150px","22px","150px"],label:com_zimbra_delegatedadmin.label,visibilityChangeEventSources:[ZaAccount.A_zimbraIsDelegatedAdminAccount,ZaDistributionList.A_isAdminGroup,],visibilityChecks:[[XForm.checkInstanceValue,ZaAccount.A_zimbraIsDelegatedAdminAccount,"TRUE"],[ZaItem.hasWritePermission,ZaAccount.A_zimbraAdminConsoleUIComponents],],items:[{
ref:ZaAccount.A2_domainAdminRight,type:_CHECKBOX_,label:com_zimbra_delegatedadmin.NAD_IsDomainAdminAccount,labelLocation:_RIGHT_,bmolsnr:true,visibilityChangeEventSources:[ZaAccount.A_zimbraIsDelegatedAdminAccount,ZaDistributionList.A_isAdminGroup,],visibilityChecks:[[XForm.checkInstanceValue,ZaAccount.A_zimbraIsDelegatedAdminAccount,"TRUE"],[ZaItem.hasWritePermission,ZaAccount.A_zimbraAdminConsoleUIComponents],],onChange:ZaAccount.ZaDelegatedAdminOnChangeHandler,trueValue:"TRUE",falseValue:"FALSE",}
,{
ref:ZaAccount.A2_resetPasswordsRight,type:_CHECKBOX_,label:com_zimbra_delegatedadmin.label_ResetPasswords,labelLocation:_RIGHT_,bmolsnr:true,visibilityChangeEventSources:[ZaAccount.A_zimbraIsDelegatedAdminAccount,ZaDistributionList.A_isAdminGroup,],visibilityChecks:[[XForm.checkInstanceValue,ZaAccount.A_zimbraIsDelegatedAdminAccount,"TRUE"],[ZaItem.hasWritePermission,ZaAccount.A_zimbraAdminConsoleUIComponents],],onChange:ZaAccount.ZaDelegatedAdminOnChangeHandler,trueValue:"TRUE",falseValue:"FALSE",}
,{
ref:ZaAccount.A2_editContactInfoRight,type:_CHECKBOX_,label:com_zimbra_delegatedadmin.label_EditContactInfo,labelLocation:_RIGHT_,bmolsnr:true,visibilityChangeEventSources:[ZaAccount.A_zimbraIsDelegatedAdminAccount,ZaDistributionList.A_isAdminGroup,],visibilityChecks:[[XForm.checkInstanceValue,ZaAccount.A_zimbraIsDelegatedAdminAccount,"TRUE"],[ZaItem.hasWritePermission,ZaAccount.A_zimbraAdminConsoleUIComponents],],onChange:ZaAccount.ZaDelegatedAdminOnChangeHandler,trueValue:"TRUE",falseValue:"FALSE",}
,],};
return t
};
ZaAccount.getAdminChkBoxItem=function(){
var e={
ref:ZaAccount.A_zimbraIsDelegatedAdminAccount,type:_CHECKBOX_,label:com_zimbra_delegatedadmin.NAD_IsAdmin,bmolsnr:true,elementChanged:function(s,n,o){
if(s=="TRUE"){
var t=this.getInstanceValue(ZaAccount.A_zimbraIsAdminAccount);
if(t=="TRUE"){
this.setInstanceValue("FALSE",ZaAccount.A_zimbraIsAdminAccount)
}}
this.getForm().itemChanged(this,s,o)
}
,trueValue:"TRUE",falseValue:"FALSE",};
return e
};
ZaAccount.getAdminRolesItem=function(){
var t={
ref:".",type:_DYNSELECT_,dataFetcherMethod:ZaSearch.prototype.dynSelectSearchAdminGroups,onChange:ZaAccount.changeAdminRoles,emptyText:com_zimbra_delegatedadmin.searchTermAdminGroup,enableDisableChecks:[],visibilityChecks:[],dataFetcherClass:ZaSearch,editable:true,autoCompleteEnabled:true,};
var e={
ref:ZaAccount.A2_adminRoles,type:_REPEAT_,label:com_zimbra_delegatedadmin.Label_AssignAdminRole,labelLocation:_LEFT_,labelCssStyle:"vertical-align: top; padding-top: 3px;",align:_LEFT_,repeatInstance:"",showAddButton:true,showAddOnNextRow:true,addButtonLabel:com_zimbra_delegatedadmin.NAD_Add,showRemoveButton:true,removeButtonLabel:com_zimbra_delegatedadmin.NAD_Remove,enableDisableChecks:[],visibilityChecks:[],visibilityChangeEventSources:[ZaAccount.A_zimbraIsDelegatedAdminAccount,ZaDistributionList.A_isAdminGroup,],onRemove:ZaAccount.onAdminRoleRemove,items:[t],};
return e
}
}
ZaDelegatedAdmin.accountObjectModifer=function(){
var t=this._containedObject[ZaAccount.A2_memberOf][ZaAccount.A2_directMemberList];
if(!this._containedObject[ZaAccount.A2_adminRoles]){
this._containedObject[ZaAccount.A2_adminRoles]=[]
}
if(t&&t.length){
for(var e=0;
e<t.length;
e++){
if(t[e][ZaDistributionList.A_isAdminGroup]=="TRUE"){
this._containedObject[ZaAccount.A2_adminRoles].push(t[e].name)
}}}};
if(ZaTabView.ObjectModifiers.ZaAccountXFormView){
ZaTabView.ObjectModifiers.ZaAccountXFormView.push(ZaDelegatedAdmin.accountObjectModifer)
}
ZaDelegatedAdmin.loadMethod=function(){
var n={
isAllGrants:true,grantee:{
type:ZaGrant.GRANTEE_TYPE.usr,all:"1",val:this.name,by:"name",}
,};
var l=this.id;
if(ZaZimbraAdmin.currentAdminAccount.attrs[ZaAccount.A_zimbraIsAdminAccount]=="TRUE"){
var o=ZaGrant.load.call(this,n);
if(o){
var r=ZaNewAdminWizard.getDefaultDARights(this);
var s=ZaNewAdminWizard.getContactInfoRights(this,true);
var e=ZaNewAdminWizard.getResetPasswordsRights(this);
var t=ZaNewAdminWizard.getDomainRights(this,true);
this[ZaAccount.A2_isAssignDefaultDARights]=ZaAccount.getCheckboxStatus(3,o,r,l);
this[ZaAccount.A2_resetPasswordsRight]=ZaAccount.getCheckboxStatus(1,o,e,l);
this[ZaAccount.A2_editContactInfoRight]=ZaAccount.getCheckboxStatus(1,o,s,l);
this[ZaAccount.A2_domainAdminRight]=ZaAccount.getCheckboxStatus(1,o,t,l);
this[ZaAccount.A2_rightsList]=o;
this[ZaAccount.A2_viewsList]=this.attrs[ZaAccount.A_zimbraAdminConsoleUIComponents]
}}};
ZaItem.loadMethods.ZaAccount.push(ZaDelegatedAdmin.loadMethod);
if(ZaTabView.XFormModifiers.ZaAccountXFormView){
ZaDelegatedAdmin.AccountXFormModifier=function(l){
var c=ZaAccount.getAdminChkBoxItem();
var f=ZaAccount.getAdminRolesItem();
c.visibilityChecks=[[ZaItem.hasReadPermission,ZaAccount.A_zimbraIsDelegatedAdminAccount],[XForm.checkInstanceValueNot,ZaAccount.A_zimbraIsExternalVirtualAccount,"TRUE"],];
c.enableDisableChecks=[[ZaItem.hasWritePermission,ZaAccount.A_zimbraIsDelegatedAdminAccount]];
f.visibilityChecks=[[XForm.checkInstanceValue,ZaAccount.A_zimbraIsDelegatedAdminAccount,"TRUE"],[ZaItem.hasRight,ZaAccount.GET_ACCOUNT_MEMBERSHIP_RIGHT],[XForm.checkInstanceValueNot,ZaAccount.A_zimbraIsExternalVirtualAccount,"TRUE"],];
f.enableDisableChecks=[[ZaItem.hasWritePermission,ZaAccount.A_zimbraIsDelegatedAdminAccount],];
var t=ZaAccount.getAssignDefaultDARightsChkBoxItem();
t.items[0].visibilityChecks=[[XForm.checkInstanceValue,ZaAccount.A_zimbraIsDelegatedAdminAccount,"TRUE"],[ZaItem.hasWritePermission,ZaAccount.A_zimbraAdminConsoleUIComponents],];
t=t.items[0];
var m=ZaAccount.getDelegatedAdminChkBoxItem("220px");
var d=l.items[2].items;
var e=d[0].items;
var o=e.length;
for(var s=0;
s<o;
s++){
if(e[s].id=="account_form_setup_group"&&e[s].items){
var u=e[s].items;
var r=u.length;
for(var n=0;
n<r;
n++){
if(u[n]&&u[n].ref==ZaAccount.A_zimbraIsAdminAccount){
l.items[2].items[0].items[s].items.splice(n+1,0,c,t,m,f);
u[n].elementChanged=function(b,y,g){
if(b=="TRUE"){
var p=this.getInstanceValue(ZaAccount.A_zimbraIsDelegatedAdminAccount);
if(p&&p=="TRUE"){
this.setInstanceValue("FALSE",ZaAccount.A_zimbraIsDelegatedAdminAccount)
}}
this.getForm().itemChanged(this,b,g)
};
break
}}
break
}}};
ZaTabView.XFormModifiers.ZaAccountXFormView.push(ZaDelegatedAdmin.AccountXFormModifier)
}
if(ZaXDialog.XFormModifiers.ZaNewAccountXWizard){
ZaDelegatedAdmin.newAccountModifier=function(l){
var c=ZaAccount.getAdminChkBoxItem();
c.labelLocation=_RIGHT_;
c.align=_RIGHT_;
c.subLabel="";
var m=ZaAccount.getAdminRolesItem();
c.visibilityChecks=[[ZaItem.hasWritePermission,ZaAccount.A_zimbraIsDelegatedAdminAccount]];
m.visibilityChecks=[[XForm.checkInstanceValue,ZaAccount.A_zimbraIsDelegatedAdminAccount,"TRUE"],];
m.enableDisableChecks=[[ZaItem.hasWritePermission,ZaAccount.A_zimbraIsDelegatedAdminAccount],];
var t=ZaAccount.getAssignDefaultDARightsChkBoxItem("220px");
t.items[0].labelLocation=_RIGHT_;
t.items[0].align=_RIGHT_;
t.items[0].subLabel="";
t.items[0].visibilityChecks=[[XForm.checkInstanceValue,ZaAccount.A_zimbraIsDelegatedAdminAccount,"TRUE"],[ZaItem.hasWritePermission,ZaAccount.A_zimbraAdminConsoleUIComponents],];
var d=l.items[3].items;
var e=d[0].items;
var o=e.length;
for(var s=0;
s<o;
s++){
if(e[s].id=="account_wiz_setup_group"&&e[s].items){
var u=e[s].items;
var r=u.length;
for(var n=0;
n<r;
n++){
if(u[n]&&u[n].ref==ZaAccount.A_zimbraIsAdminAccount){
e[s].items.splice(n+1,0,c,t,m);
u[n].elementChanged=function(y,g,p){
if(y=="TRUE"){
var f=this.getInstanceValue(ZaAccount.A_zimbraIsDelegatedAdminAccount);
if(f&&f=="TRUE"){
this.setInstanceValue("FALSE",ZaAccount.A_zimbraIsDelegatedAdminAccount)
}}
this.getForm().itemChanged(this,y,p)
};
break
}}
break
}}};
ZaXDialog.XFormModifiers.ZaNewAccountXWizard.push(ZaDelegatedAdmin.newAccountModifier)
}
ZaDelegatedAdmin.accountViewMethod=function(s){
if(s.attrs[ZaAccount.A_zimbraIsDelegatedAdminAccount]&&s.attrs[ZaAccount.A_zimbraIsDelegatedAdminAccount]=="TRUE"&&ZaItem.hasRight(ZaAccount.GET_ACCOUNT_MEMBERSHIP_RIGHT,s)){
this._view._containedObject[ZaAccount.A2_adminRoles]=[];
var n=this._view._containedObject[ZaAccount.A2_memberOf][ZaAccount.A2_directMemberList];
if(n!=null){
for(var o=0;
o<n.length;
o++){
if(n[o][ZaDistributionList.A_isAdminGroup]=="TRUE"){
this._view._containedObject[ZaAccount.A2_adminRoles].push(n[o].name)
}}}
var t=this._view._localXForm;
var e=t.getInstance();
t.getModel().setInstanceValue(e,ZaAccount.A2_adminRoles,this._view._containedObject[ZaAccount.A2_adminRoles])
}};
if(ZaController.setViewMethods.ZaAccountViewController){
ZaController.setViewMethods.ZaAccountViewController.push(ZaDelegatedAdmin.accountViewMethod)
}
if(ZaDistributionList){
ZaDistributionList.myXModel.items.push({
id:ZaDistributionList.A_isAdminGroup,type:_ENUM_,choices:ZaModel.BOOLEAN_CHOICES,ref:"attrs/"+ZaDistributionList.A_isAdminGroup,}
);
ZaDistributionList.myXModel.items.push({
id:ZaAccount.A2_isAssignDefaultDARights,type:_ENUM_,choices:ZaModel.BOOLEAN_CHOICES,ref:ZaAccount.A2_isAssignDefaultDARights,}
)
}
if(ZaTabView.XFormModifiers.ZaDLXFormView){
ZaDelegatedAdmin.DLXFormModifier=function(d){
var u={
ref:ZaDistributionList.A_isAdminGroup,type:_CHECKBOX_,label:com_zimbra_delegatedadmin.LBL_IsAdminGroup,labelLocation:_LEFT_,align:_LEFT_,labelCssClass:"xform_label",cssStyle:"padding-left:0px",nowrap:false,labelWrap:true,trueValue:"TRUE",falseValue:"FALSE",visibilityChecks:[[XForm.checkInstanceValueNot,ZaDistributionList.A_zimbraIsACLGroup,"FALSE"],[XForm.checkInstanceValueNot,ZaDistributionList.A2_dlType,ZaDistributionList.DYNAMIC_DL_TYPE],[ZaItem.hasReadPermission,ZaDistributionList.A_isAdminGroup],],};
var e=ZaAccount.getAssignDefaultDARightsChkBoxItem("130px");
e.items[0].labelLocation=_RIGHT_;
e.items[0].align=_RIGHT_;
e.items[0].subLabel="";
e.items[0].visibilityChecks=[[XForm.checkInstanceValue,ZaDistributionList.A_isAdminGroup,"TRUE"],[ZaItem.hasWritePermission,ZaAccount.A_zimbraAdminConsoleUIComponents],];
var f;
for(var c=0;
c<d.items.length;
c++){
if(d.items[c].type==_SWITCH_){
f=d.items[c].items;
break
}}
var r,s;
for(var l=0;
l<f.length;
l++){
if(f[l].type==_ZATABCASE_&&f[l].id=="dl_form_properties"){
r=f[l].items;
for(var o=0;
o<r.length;
o++){
if(r[o].id=="dl_properties"){
for(var t=0;
t<r[o].items.length;
t++){
if(r[o].items[t].ref=="zimbraMailStatus"){
r[o].items.splice(t,0,u,e);
break
}}
break
}}
break
}}};
ZaTabView.XFormModifiers.ZaDLXFormView.push(ZaDelegatedAdmin.DLXFormModifier)
}
if(ZaSearch){
ZaSearch.prototype.dynSelectSearchAdminGroups=function(n){
var e="(zimbraIsAdminGroup=TRUE)";
var o=n.value;
var t=n.event;
var s=n.callback;
ZaSearch.prototype.dynSelectSearchGroups.call(this,{
value:o,event:t,callback:s,extraLdapQuery:e,}
)
}
}}
if(window.console&&window.console.log){
console.log("Starting loading domainadmin.js")
}
function ZaDomainAdmin(){}
var adminName=ZaZimbraAdmin.currentUserLogin;
if(adminName){
var emailChunks=adminName.split("@");
var tmpDomain=new ZaDomain();
if(emailChunks.length>1){
tmpDomain.name=emailChunks[1];
ZaSettings.myDomainName=emailChunks[1];
EmailAddr_XFormItem.domainChoices.setChoices([tmpDomain]);
EmailAddr_XFormItem.domainChoices.dirtyChoices()
}}
if(ZaSettings&&ZaSettings.EnabledZimlet.com_zimbra_delegatedadmin){
if(ZaAccount){
ZaAccount.A_zimbraDomainAdminMaxMailQuota="zimbraDomainAdminMaxMailQuota";
var domainAdminMaxMailQuotaItem={
id:ZaAccount.A_zimbraDomainAdminMaxMailQuota,type:_COS_MAILQUOTA_,minInclusive:-1,ref:"attrs/"+ZaAccount.A_zimbraDomainAdminMaxMailQuota};
ZaAccount.myXModel.items.push(domainAdminMaxMailQuotaItem)
}
if(ZaSearchOption){
ZaSearchOption.A_objTypeAccountDomainAdmin=ZaAccount.A_zimbraIsDelegatedAdminAccount
}
if(ZaCos){
ZaCos.A_zimbraDomainAdminMaxMailQuota="zimbraDomainAdminMaxMailQuota";
ZaCos.myXModel.items.push({
id:ZaCos.A_zimbraDomainAdminMaxMailQuota,type:_MAILQUOTA_,ref:"attrs/"+ZaCos.A_zimbraDomainAdminMaxMailQuota,minInclusive:-1}
)
}
if(ZaSettings){
ZaDomainAdmin.initSettings=function(){
if(window.console&&window.console.log){
console.log("domainadmin.js is modifying ZaSettings")
}};
if(ZaSettings.initMethods){
ZaSettings.initMethods.push(ZaDomainAdmin.initSettings)
}}
if(ZaTabView.XFormModifiers.ZaAccountXFormView){
ZaDomainAdmin.AccountXFormModifier=function(r){
var u={
ref:ZaAccount.A_zimbraDomainAdminMaxMailQuota,colSpan:"*",type:_SUPER_TEXTFIELD_,resetToSuperLabel:ZaMsg.NAD_ResetToCOS,msgName:com_zimbra_delegatedadmin.NAD_DomainAdminMaxMailQuota,txtBoxLabel:com_zimbra_delegatedadmin.NAD_DomainAdminMaxMailQuota,toolTipContent:com_zimbra_delegatedadmin.tt_DomainAdminMaxMailQuota,visibilityChecks:[[XForm.checkInstanceValue,ZaAccount.A_zimbraIsDelegatedAdminAccount,"TRUE"],[ZaItem.hasReadPermission,ZaAccount.A_zimbraDomainAdminMaxMailQuota]],visibilityChangeEventSources:[ZaAccount.A_zimbraIsDelegatedAdminAccount],enableDisableChecks:[ZaItem.hasWritePermission,ZaAccount.A_zimbraDomainAdminMaxMailQuota],enableDisableChangeEventSources:[ZaAccount.A_zimbraIsDelegatedAdminAccount],getDisplayValue:function(m){
if(m<0){
return""
}else{
return m
}}
,bmolsnr:true};
var c=r.items[2].items;
var e=c[0].items;
var t=e.length;
for(var s=0;
s<t;
s++){
if(e[s].id=="account_form_setup_group"&&e[s].items){
var d=e[s].items;
var l=d.length;
for(var n=0;
n<l;
n++){
if(d[n]&&d[n].ref==ZaAccount.A2_adminRoles){
r.items[2].items[0].items[s].items.splice(n+1,0,u);
break
}}
break
}}
for(var s=1;
s<c.length;
s++){
if(c[s].id=="account_form_advanced_tab"){
var e=c[s].items;
var t=e.length;
for(var n=0;
n<t;
n++){
if(e[n].id=="timeout_settings"&&e[n].items){
var d=e[n].items;
var l=d.length;
for(var o=0;
o<l;
o++){
if(d[o]&&d[o].ref==ZaAccount.A_zimbraAdminAuthTokenLifetime){
d[o].visibilityChecks=["instance.attrs[ZaAccount.A_zimbraIsDelegatedAdminAccount]=='TRUE' || instance.attrs[ZaAccount.A_zimbraIsAdminAccount]=='TRUE'"];
break
}}
break
}}
break
}}};
ZaTabView.XFormModifiers.ZaAccountXFormView.push(ZaDomainAdmin.AccountXFormModifier)
}
if(ZaXDialog.XFormModifiers.ZaNewAccountXWizard){
ZaDomainAdmin.NewAccountWizXFormModifier=function(l){
var m={
ref:ZaAccount.A_zimbraDomainAdminMaxMailQuota,type:_SUPERWIZ_TEXTFIELD_,resetToSuperLabel:ZaMsg.NAD_ResetToCOS,msgName:com_zimbra_delegatedadmin.NAD_DomainAdminMaxMailQuota,textFieldCssClass:"admin_xform_number_input",txtBoxLabel:com_zimbra_delegatedadmin.NAD_DomainAdminMaxMailQuota,toolTipContent:com_zimbra_delegatedadmin.tt_DomainAdminMaxMailQuota,visibilityChecks:[[XForm.checkInstanceValue,ZaAccount.A_zimbraIsDelegatedAdminAccount,"TRUE"],[ZaItem.hasWritePermission,ZaAccount.A_zimbraDomainAdminMaxMailQuota]],visibilityChangeEventSources:[ZaAccount.A_zimbraIsDelegatedAdminAccount],getDisplayValue:function(f){
if(f<0){
return""
}else{
return f
}}
,bmolsnr:true};
var d=l.items[3].items;
var e=d[0].items;
var t=e.length;
for(var s=0;
s<t;
s++){
if(e[s].id=="account_wiz_setup_group"&&e[s].items){
var u=e[s].items;
var c=u.length;
for(var n=0;
n<c;
n++){
if(u[n]&&u[n].ref==ZaAccount.A2_adminRoles){
l.items[3].items[0].items[s].items.splice(n+1,0,m);
break
}}
break
}}
for(var s=0;
s<d.length;
s++){
if(d[s]&&d[s].id=="account_form_advanced_step"&&d[s].items){
var r=d[s].items;
var t=r.length;
for(var n=0;
n<t;
n++){
if(r[n]&&r[n].items&&r[n].id=="timeout_settings"){
var u=r[n].items;
var c=u.length;
for(var o=0;
o<c;
o++){
if(u[o]&&u[o].ref==ZaAccount.A_zimbraAdminAuthTokenLifetime){
u[o].visibilityChecks=["instance.attrs[ZaAccount.A_zimbraIsDelegatedAdminAccount]=='TRUE' || instance.attrs[ZaAccount.A_zimbraIsAdminAccount]=='TRUE'"];
break
}}
break
}}
break
}}};
ZaXDialog.XFormModifiers.ZaNewAccountXWizard.push(ZaDomainAdmin.NewAccountWizXFormModifier)
}
if(ZaTabView.XFormModifiers.ZaMigrationWizView){
ZaDomainAdmin.MigViewXFormModifier=function(o){
var t=o.items.length;
for(var e=0;
e<t;
e++){
if(o.items[e].zName=="DownloadsForAdmin"){
o.items[e].items=o.items[e].items.concat([{
type:_GROUP_,numCols:2,items:[{
type:_OUTPUT_,value:AjxImg.getImageHtml("MigrationWiz")}
,{
type:_OUTPUT_,cssStyle:"font-size: 12px;",labelLocation:_NONE_,label:null,id:"zco_customizer_msi_link",value:ZaMigrationWizView.getDownloadLink(ZaMsg.CONNECTOR_MSI_DOWNLOAD_LINK,ZaMsg.CONNECTOR_MSI_DOWNLOAD_LINK_MSG)}
]}
,{
type:_OUTPUT_,cssClass:"ZaDownloadText",label:null,value:com_zimbra_delegatedadmin.CONNECTOR_MSI_DOWNLOAD_TEXT}
,{
type:_GROUP_,numCols:2,items:[{
type:_OUTPUT_,value:AjxImg.getImageHtml("MigrationWiz")}
,{
type:_OUTPUT_,cssStyle:"font-size: 12px;",labelLocation:_NONE_,label:null,id:"zco_branding_msi_link",value:ZaMigrationWizView.getDownloadLink(ZaMsg.ZCO_BRANDING_DOWNLOAD_LINK,ZaMsg.ZCO_BRANDING_DOWNLOAD_LINK_MSG)}
]}
,{
type:_OUTPUT_,cssClass:"ZaDownloadText",label:null,value:com_zimbra_delegatedadmin.ZCO_BRANDING_DOWNLOAD_TEXT}
])
}
if(o.items[e].zName=="DownloadsForUser"){
o.items[e].items=o.items[e].items.concat([{
type:_GROUP_,numCols:5,items:[{
type:_OUTPUT_,value:AjxImg.getImageHtml("MigrationWiz")}
,{
type:_OUTPUT_,cssStyle:"font-size: 12px;",labelLocation:_NONE_,label:null,id:"zco_32bit_link",value:ZaMigrationWizView.getDownloadLink(ZaMsg.CONNECTOR_32_DOWNLOAD_LINK,ZaMsg.CONNECTOR_32_DOWNLOAD_LINK_MSG)}
,{
type:_CELL_SPACER_}
,{
type:_OUTPUT_,cssStyle:"font-size: 12px;",labelLocation:_NONE_,label:null,id:"zco_64bit_link",value:ZaMigrationWizView.getDownloadLink(ZaMsg.CONNECTOR_64_DOWNLOAD_LINK,ZaMsg.CONNECTOR_64_DOWNLOAD_LINK_MSG)}
,{
type:_OUTPUT_,cssStyle:"font-size: 12px;",labelLocation:_NONE_,label:null,id:"zco_help_link",value:["(<A target='_blank' onclick='ZaZimbraAdmin.unloadHackCallback();' HREF='",location.pathname,"help/admin/pdf/User%20Instructions%20Connector%20for%20Outlook.pdf?locid=",AjxEnv.DEFAULT_LOCALE,"'>",ZaMsg.CONNECTOR_DOWNLOAD_HELP,"</a>)"].join("")}
]}
,{
type:_OUTPUT_,cssClass:"ZaDownloadText",label:null,value:com_zimbra_delegatedadmin.CONNECTOR_DOWNLOAD_TEXT}
])
}}};
ZaTabView.XFormModifiers.ZaMigrationWizView.push(ZaDomainAdmin.MigViewXFormModifier)
}
if(ZaTabView.XFormModifiers.ZaCosXFormView){
ZaDomainAdmin.CosXFormModifier=function(l){
var n={
ref:ZaCos.A_zimbraDomainAdminMaxMailQuota,type:_TEXTFIELD_,msgName:com_zimbra_delegatedadmin.NAD_DomainAdminMaxMailQuota,label:com_zimbra_delegatedadmin.NAD_DomainAdminMaxMailQuota,labelLocation:_LEFT_,cssClass:"admin_xform_number_input",bmolsnr:true,getDisplayValue:function(m){
if(m==-1){
return""
}else{
return m
}}};
var d=l.items[2].items;
var o=null;
var t=d.length;
for(var r=0;
r<t;
r++){
if(d[r].id=="cos_form_advanced_tab"){
o=d[r];
break
}}
if(o){
var e=o.items;
var c=e.length;
for(var r=0;
r<c;
r++){
if(e[r].id=="cos_quota_settings"&&e[r].items){
var u=e[r].items;
var c=u.length;
for(var s=0;
s<c;
s++){
if(u[s]&&u[s].ref==ZaCos.A_zimbraMailQuota){
u.splice(s+1,0,n);
break
}}
break
}}}};
ZaTabView.XFormModifiers.ZaCosXFormView.push(ZaDomainAdmin.CosXFormModifier)
}
if(ZaTabView.XFormModifiers.ZaDomainXFormView){
ZaAL=function(){
ZaItem.call(this,"ZaAL")
};
ZaAL.prototype=new ZaItem;
ZaAL.prototype.constructor=ZaAL;
ZaAL.getXModel=function(){
var e={
items:[{
id:"cos",type:_STRING_,ref:"cos"}
,{
id:"limits",type:_INT_,ref:"limits",minInclusive:0}
]};
return e
};
ZaAL.addAl=function(n,s){
var t=n.cos+":"+n.limits;
if(!s.attrs[ZaDomain.A_zimbraDomainCOSMaxAccounts]){
s.attrs[ZaDomain.A_zimbraDomainCOSMaxAccounts]=[]
}
var e=false;
for(var o=0;
o<s.attrs[ZaDomain.A_zimbraDomainCOSMaxAccounts].length;
o++){
if(n.cos==s.attrs[ZaDomain.A_zimbraDomainCOSMaxAccounts][o].split(":")[0]){
s.attrs[ZaDomain.A_zimbraDomainCOSMaxAccounts][o]=t;
e=true
}}
if(!e){
s.attrs[ZaDomain.A_zimbraDomainCOSMaxAccounts].push(t)
}};
ZaEditAlXDialog=function(e,o,t){
if(arguments.length==0){
return
}
this._standardButtons=[DwtDialog.CANCEL_BUTTON,DwtDialog.OK_BUTTON];
ZaXDialog.call(this,e,null,t,"350px","100px");
this._containedObject={};
this.cosChoices=new XFormChoices([],XFormChoices.OBJECT_LIST,"id","name");
this.initForm(ZaAL.getXModel(),this.getMyXForm());
this._helpURL=ZaEditAlXDialog.helpURL
};
ZaEditAlXDialog.prototype=new ZaXDialog;
ZaEditAlXDialog.prototype.constructor=ZaEditAlXDialog;
ZaEditAlXDialog.helpURL=location.pathname+ZaUtil.HELP_URL+"managing_domains/setting_account_limits_and_types_for_a_domain.htm?locid="+AjxEnv.DEFAULT_LOCALE;
ZaEditAlXDialog.prototype.getMyXForm=function(){
var e={
numCols:1,items:[{
type:_GROUP_,isTabGroup:true,items:[{
type:_SPACER_,height:"5px"}
,{
ref:"cos",visibilityChecks:[],enableDisableChecks:true,type:_INPUT_,label:ZaMsg.NAD_ClassOfService}
,{
ref:"limits",visibilityChecks:[],enableDisableChecks:true,type:_INPUT_,label:ZaMsg.Col_Limit}
]}
]};
return e
};
ZaDomainXFormView.isEditAlEnabled=function(e){
return(this.getInstance().al_selection_cache!=null&&this.getInstance().al_selection_cache.length==1&&this.getInstance().attrs[e].length>0)
};
ZaDomainXFormView.isDeleteAlEnabled=function(e){
return(this.getInstance().al_selection_cache!=null&&this.getInstance().al_selection_cache.length>0&&this.getInstance().attrs[e].length>0)
};
ZaDomainXFormView.alSelectionListener=function(o){
var t=this.getInstance();
var e=this.widget.getSelection();
if(e&&e.length){
e.sort();
t.al_selection_cache=e
}else{
t.al_selection_cache=null
}
this.getForm().refresh();
if(o.detail==DwtListView.ITEM_DBL_CLICKED){
ZaDomainXFormView.editAlButtonListener.call(this)
}};
ZaDomainXFormView.deleteAlButtonListener=function(s){
var e=this.getInstance();
if(e.al_selection_cache!=null){
var n=e.al_selection_cache.length;
if(n&&e.attrs[s]){
for(var o=0;
o<n;
o++){
var r=e.attrs[s].length-1;
for(var t=r;
t>=0;
t--){
if(e.attrs[s][t]==e.al_selection_cache[o]){
e.attrs[s].splice(t,1);
break
}}}}}
this.getForm().parent.setDirty(true);
this.getForm().refresh()
};
ZaDomainXFormView.editAlButtonListener=function(){
var e=this.getInstance();
if(e.al_selection_cache&&e.al_selection_cache[0]){
var o=this.getForm().parent;
if(!o.addAlDlg){
o.addAlDlg=new ZaEditAlXDialog(ZaApp.getInstance().getAppCtxt().getShell(),ZaApp.getInstance(),com_zimbra_delegatedadmin.Edit_Al_Title);
o.addAlDlg.registerCallback(DwtDialog.OK_BUTTON,ZaDomainXFormView.addAl,this.getForm(),null)
}else{
o.addAlDlg.setTitle(com_zimbra_delegatedadmin.Edit_Al_Title)
}
var t={};
t.cos=e.al_selection_cache[0].split(":")[0];
t.limits=e.al_selection_cache[0].split(":")[1];
o.addAlDlg.setObject(t);
o.addAlDlg.popup()
}};
ZaDomainXFormView.addAlButtonListener=function(){
var e=this.getInstance();
var o=this.getForm().parent;
if(!o.addAlDlg){
o.addAlDlg=new ZaEditAlXDialog(ZaApp.getInstance().getAppCtxt().getShell(),ZaApp.getInstance(),com_zimbra_delegatedadmin.Add_Al_Title);
o.addAlDlg.registerCallback(DwtDialog.OK_BUTTON,ZaDomainXFormView.addAl,this.getForm(),null)
}else{
o.addAlDlg.setTitle(com_zimbra_delegatedadmin.Add_Al_Title)
}
var t={
cos:"",limits:""};
o.addAlDlg.setObject(t);
o.addAlDlg.popup()
};
ZaDomainXFormView.addAl=function(){
if(this.parent.addAlDlg){
var s=ZaApp.getInstance();
var n=this.parent.addAlDlg._localXForm.getInstance();
if(n.cos==null){
s.getCurrentController().popupErrorDialog(AjxMessageFormat.format(ZaMsg.ERROR_INVALID_VALUE_FOR,[ZaMsg.NAD_COS]));
return
}
var t=ZaCos.getCosById(n.cos,s);
var o=ZaCos.getCosByName(n.cos,s);
if(t==null&&o==null){
s.getCurrentController().popupErrorDialog(AjxMessageFormat.format(ZaMsg.ERROR_INVALID_VALUE_FOR,[ZaMsg.NAD_COS]));
return
}
if(parseInt(n.limits)!=n.limits){
s.getCurrentController().popupErrorDialog(AjxMessageFormat.format(ZaMsg.ERROR_INVALID_VALUE_FOR,[ZaMsg.msgCol_Limit]));
return
}
n.cos=(t!=null)?n.cos:o.id;
var e=this.getInstance();
ZaAL.addAl(n,e);
if(this.parent.addAlDlg){
this.parent.addAlDlg.popdown()
}
this.parent.setDirty(true);
this.refresh()
}};
ZaDomainXFormView.isAccountLimitWarningEnabled=function(){
var t=this.getInstance().attrs[ZaDomain.A_domainMaxAccounts];
var e=ZaDomain.getTotalLimitsPerAccountTypes(this.getInstance().attrs[ZaDomain.A_zimbraDomainCOSMaxAccounts]);
if(t&&e&&(t<e)){
return true
}
return false
};
ZaFeatureAL=function(){
ZaItem.call(this,"ZaFeatureAL")
};
ZaFeatureAL.prototype=new ZaItem;
ZaFeatureAL.prototype.constructor=ZaFeatureAL;
ZaFeatureAL.getXModel=function(){
var e={
items:[{
id:"feature",type:_STRING_,ref:"feature",choices:ZaCos.MAJOR_FEATURES_CHOICES}
,{
id:"limits",type:_INT_,ref:"limits",minInclusive:0}
]};
return e
};
ZaFeatureAL.addAl=function(n,s){
var t=n.feature+":"+n.limits;
if(!s.attrs[ZaDomain.A_zimbraDomainFeatureMaxAccounts]){
s.attrs[ZaDomain.A_zimbraDomainFeatureMaxAccounts]=[]
}
var e=false;
for(var o=0;
o<s.attrs[ZaDomain.A_zimbraDomainFeatureMaxAccounts].length;
o++){
if(n.feature==s.attrs[ZaDomain.A_zimbraDomainFeatureMaxAccounts][o].split(":")[0]){
s.attrs[ZaDomain.A_zimbraDomainFeatureMaxAccounts][o]=t;
e=true
}}
if(!e){
s.attrs[ZaDomain.A_zimbraDomainFeatureMaxAccounts].push(t)
}};
ZaEditFeatureAlXDialog=function(e,o,t){
if(arguments.length==0){
return
}
this._standardButtons=[DwtDialog.CANCEL_BUTTON,DwtDialog.OK_BUTTON];
ZaXDialog.call(this,e,null,t,"300px","100px");
this._containedObject={};
this.initForm(ZaFeatureAL.getXModel(),this.getMyXForm())
};
ZaEditFeatureAlXDialog.prototype=new ZaXDialog;
ZaEditFeatureAlXDialog.prototype.constructor=ZaEditFeatureAlXDialog;
ZaEditFeatureAlXDialog.prototype.getMyXForm=function(){
var e={
numCols:1,items:[{
type:_GROUP_,isTabGroup:true,items:[{
type:_SPACER_,height:"5px"}
,{
ref:"feature",type:_OSELECT1_,label:ZaMsg.NAD_Feature,width:"200px"}
,{
ref:"limits",type:_INPUT_,label:ZaMsg.Col_Limit,width:"200px"}
]}
]};
return e
};
ZaDomainXFormView.alFeatureSelectionListener=function(o){
var t=this.getInstance();
var e=this.widget.getSelection();
if(e&&e.length){
e.sort();
t.feature_al_selection_cache=e
}else{
t.feature_al_selection_cache=null
}
this.getForm().refresh();
if(o.detail==DwtListView.ITEM_DBL_CLICKED){
ZaDomainXFormView.editFeatureAlButtonListener.call(this)
}};
ZaDomainXFormView.isEditFeatureAlEnabled=function(e){
return(this.instance.feature_al_selection_cache!=null&&this.instance.feature_al_selection_cache.length==1&&this.instance.attrs[e].length>0)
};
ZaDomainXFormView.isDeleteFeatureAlEnabled=function(e){
return(this.instance.feature_al_selection_cache!=null&&this.instance.feature_al_selection_cache.length>0&&this.instance.attrs[e].length>0)
};
ZaDomainXFormView.editFeatureAlButtonListener=function(){
var e=this.getInstance();
if(e.feature_al_selection_cache&&e.feature_al_selection_cache[0]){
var o=this.getForm().parent;
if(!o.addFeatureAlDlg){
o.addFeatureAlDlg=new ZaEditFeatureAlXDialog(ZaApp.getInstance().getAppCtxt().getShell(),ZaApp.getInstance(),com_zimbra_delegatedadmin.Edit_FeatureAl_Title);
o.addFeatureAlDlg.registerCallback(DwtDialog.OK_BUTTON,ZaDomainXFormView.addFeatureAl,this.getForm(),null)
}else{
o.addFeatureAlDlg.setTitle(com_zimbra_delegatedadmin.Edit_FeatureAl_Title)
}
var t={};
t.feature=e.feature_al_selection_cache[0].split(":")[0];
t.limits=e.feature_al_selection_cache[0].split(":")[1];
o.addFeatureAlDlg.setObject(t);
o.addFeatureAlDlg.popup()
}};
ZaDomainXFormView.deleteFeatureAlButtonListener=function(s){
var e=this.getInstance();
if(e.feature_al_selection_cache!=null){
var n=e.feature_al_selection_cache.length;
if(n&&e.attrs[s]){
for(var o=0;
o<n;
o++){
var r=e.attrs[s].length-1;
for(var t=r;
t>=0;
t--){
if(e.attrs[s][t]==e.feature_al_selection_cache[o]){
e.attrs[s].splice(t,1);
break
}}}}}
this.getForm().parent.setDirty(true);
this.getForm().refresh()
};
ZaDomainXFormView.addFeatureAlButtonListener=function(){
var e=this.getInstance();
var o=this.getForm().parent;
if(!o.addFeatureAlDlg){
o.addFeatureAlDlg=new ZaEditFeatureAlXDialog(ZaApp.getInstance().getAppCtxt().getShell(),ZaApp.getInstance(),com_zimbra_delegatedadmin.Add_FeatureAl_Title);
o.addFeatureAlDlg.registerCallback(DwtDialog.OK_BUTTON,ZaDomainXFormView.addFeatureAl,this.getForm(),null)
}else{
o.addFeatureAlDlg.setTitle(com_zimbra_delegatedadmin.Add_FeatureAl_Title)
}
var t={
feature:"",limits:""};
o.addFeatureAlDlg.setObject(t);
o.addFeatureAlDlg.popup()
};
ZaDomainXFormView.addFeatureAl=function(){
if(this.parent.addFeatureAlDlg){
var o=ZaApp.getInstance();
var t=this.parent.addFeatureAlDlg._localXForm.getInstance();
if(t.feature==null||t.feature.length<=0){
o.getCurrentController().popupErrorDialog(AjxMessageFormat.format(ZaMsg.ERROR_INVALID_VALUE_FOR,[ZaMsg.TABT_Feature]));
return
}
if(parseInt(t.limits)!=t.limits){
o.getCurrentController().popupErrorDialog(AjxMessageFormat.format(ZaMsg.ERROR_INVALID_VALUE_FOR,[ZaMsg.msgCol_Limit]));
return
}
var e=this.getInstance();
ZaFeatureAL.addAl(t,e);
if(this.parent.addFeatureAlDlg){
this.parent.addFeatureAlDlg.popdown()
}
this.parent.setDirty(true);
this.refresh()
}};
ZaDomainXFormView.LogoAppBannerPreviewId=Dwt.getNextId();
ZaDomainXFormView.onAppLogoURLChange=function(n,o,t){
this.setInstanceValue(n);
var e=t.getItemsById(ZaDomainXFormView.LogoAppBannerPreviewId)[0];
e.updateElement(ZaDomainXFormView.getAppLogoPreview.call(this))
};
ZaDomainXFormView.getAppLogoPreview=function(){
var n="200px";
var t="28px";
var s=this.getForm();
var e=s.getInstance();
var r=e.attrs[ZaDomain.A_zimbraSkinLogoAppBanner];
if(r==null&&e.cos!=null){
var r=e.cos.attrs[ZaDomain.A_zimbraSkinLogoAppBanner]
}
var o=AjxBuffer.concat("<div style='border: inset 1px; height:",t,"; width:",n,";","background-image:url(",r,")","'></div>");
return o
};
ZaDomainXFormView.LogoLoginBannerPreviewId=Dwt.getNextId();
ZaDomainXFormView.onLoginLogoURLChange=function(n,t,e){
this.setInstanceValue(n);
var o=e.getItemsById(ZaDomainXFormView.LogoLoginBannerPreviewId)[0];
o.updateElement(ZaDomainXFormView.getLoginLogoPreview.call(this))
};
ZaDomainXFormView.getLoginLogoPreview=function(){
var n="300px";
var t="48px";
var s=this.getForm();
var e=s.getInstance();
var r=e.attrs[ZaDomain.A_zimbraSkinLogoLoginBanner];
if(r==null&&e.cos!=null){
var r=e.cos.attrs[ZaDomain.A_zimbraSkinLogoLoginBanner]
}
var o=AjxBuffer.concat("<div style='border: inset 1px; height:",t,"; width:",n,";","background-image:url(",r,")","'></div>");
return o
};
ZaDomainAdmin.domainXFormModifer=function(y,o){
var l={
ref:ZaDomain.A_zimbraAdminConsoleDNSCheckEnabled,type:_SUPER_CHECKBOX_,resetToSuperLabel:ZaMsg.NAD_ResetToGlobal,checkBoxLabel:com_zimbra_delegatedadmin.ENABLE_DOM_CONSOLE_DNS_CHECK,trueValue:"TRUE",falseValue:"FALSE",onChange:ZaDomainXFormView.onFormFieldChanged};
var s=0;
var k=y.items[2].items[0].items;
for(var b=0;
b<k.length;
b++){
if(k[b].id=="dns_check_group"){
if(!ZaSettings.DOMAINS_ARE_READONLY){
k[b].items.push(l)
}
s++
}
if(s==1){
break
}}
var x,d;
for(var b=0;
b<y.items.length;
b++){
if(y.items[b].type==_TAB_BAR_){
x=y.items[b]
}
if(y.items[b].type==_SWITCH_){
d=y.items[b]
}}
var n,e,m;
var p=new Array();
var r=[];
var u=ZaMsg.Col_Cos;
if(ZaSettings.isDomainAdmin){
u=com_zimbra_delegatedadmin.Col_account_type
}
p[0]=new ZaListHeaderItem("cos",u,null,"200px",null,null,true,true);
p[1]=new ZaListHeaderItem("limits",ZaMsg.headerCol_Limit,null,"auto",null,null,true,true);
r[0]=new ZaListHeaderItem("feature",ZaMsg.TABT_Features,null,"200px",null,null,true,true);
r[1]=new ZaListHeaderItem("limits",ZaMsg.headerCol_Limit,null,"auto",null,null,true,true);
if(ZaSettings.isDomainAdmin){
n={
ref:ZaDomain.A_domainMaxAccounts,type:_OUTPUT_,label:com_zimbra_delegatedadmin.NAD_DomainMaxAccounts,width:"50px",getDisplayValue:function(q){
if(!q){
q=ZaMsg.Unlimited
}
return q
}};
e={
type:_GROUP_,colSpan:"*",colSizes:["275px","*"],numCols:2,width:"100%",visibilityChecks:["((instance.attrs[ZaDomain.A_zimbraDomainCOSMaxAccounts] != null) &&  (instance.attrs[ZaDomain.A_zimbraDomainCOSMaxAccounts].length > 0)) "],items:[{
type:_OUTPUT_,value:com_zimbra_delegatedadmin.accountLimitsByAccountType,align:_RIGHT_}
,{
ref:ZaDomain.A_zimbraDomainCOSMaxAccounts,type:_DWT_LIST_,height:"200px",width:"300px",forceUpdate:false,cssClass:"DLSource",widgetClass:ZaDomainCOSMaxAccountsListView,headerList:p,hideHeader:false}
]};
m={
type:_GROUP_,colSpan:"*",colSizes:["275px","*"],numCols:2,width:"100%",visibilityChecks:["((instance.attrs[ZaDomain.A_zimbraDomainFeatureMaxAccounts] != null) &&  (instance.attrs[ZaDomain.A_zimbraDomainFeatureMaxAccounts].length > 0)) "],items:[{
type:_OUTPUT_,value:com_zimbra_delegatedadmin.accountLimitsByFeature,align:_RIGHT_}
,{
ref:ZaDomain.A_zimbraDomainFeatureMaxAccounts,type:_DWT_LIST_,height:"200px",width:"300px",forceUpdate:true,cssClass:"DLSource",widgetClass:ZaDomainFeatureMaxAccountsListView,headerList:r,hideHeader:false}
]}
}else{
n={
ref:ZaDomain.A_domainMaxAccounts,type:_INPUT_,label:com_zimbra_delegatedadmin.NAD_DomainMaxAccounts,width:"50px",onChange:ZaDomainXFormView.onFormFieldChanged,enableDisableChecks:[[ZaItem.hasWritePermission,ZaDomain.A_domainMaxAccounts]],visibilityChecks:[[ZaItem.hasReadPermission,ZaDomain.A_domainMaxAccounts]]};
var t={
type:_DWT_ALERT_,id:"_domain_cos_account_limits_alert_",visibilityChecks:[ZaDomainXFormView.isAccountLimitWarningEnabled],visibilityChangeEventSources:[ZaDomain.A_domainMaxAccounts],containerCssStyle:"width: 400px;",style:DwtAlert.WARNING,iconVisible:true,content:com_zimbra_delegatedadmin.WARNING_TOTAL_LIMIT_OUT_OF_SYNC};
e={
type:_GROUP_,colSpan:"*",colSizes:["275px","*"],numCols:2,width:"100%",enableDisableChecks:[[ZaItem.hasWritePermission,ZaDomain.A_zimbraDomainCOSMaxAccounts]],visibilityChecks:[[ZaItem.hasReadPermission,ZaDomain.A_zimbraDomainCOSMaxAccounts]],items:[{
type:_OUTPUT_,value:com_zimbra_delegatedadmin.accountLimitsByCos,containerCssClass:"gridGroupBodyLabel",containerCssStyle:"text-align: left; border-right: 1px solid;"}
,{
ref:ZaDomain.A_zimbraDomainCOSMaxAccounts,type:_DWT_LIST_,height:"200px",width:"300px",forceUpdate:false,preserveSelection:false,multiselect:true,cssClass:"DLSource",cssStyle:"border: 2px solid #A4A4A4; ",widgetClass:ZaDomainCOSMaxAccountsListView,onSelection:ZaDomainXFormView.alSelectionListener,headerList:p,hideHeader:false}
,{
type:_CELLSPACER_,height:"5px"}
,{
type:_GROUP_,numCols:5,width:"270px",cssStyle:"margin: 10px; padding-bottom: 0px; ",items:[{
type:_DWT_BUTTON_,label:ZaMsg.TBB_Delete,width:"80px",onActivate:"ZaDomainXFormView.deleteAlButtonListener.call(this, ZaDomain.A_zimbraDomainCOSMaxAccounts);",enableDisableChecks:[[ZaDomainXFormView.isDeleteAlEnabled,ZaDomain.A_zimbraDomainCOSMaxAccounts]]}
,{
type:_CELLSPACER_,width:"10px"}
,{
type:_DWT_BUTTON_,label:ZaMsg.TBB_Edit,width:"80px",onActivate:"ZaDomainXFormView.editAlButtonListener.call(this);",enableDisableChecks:[[ZaDomainXFormView.isEditAlEnabled,ZaDomain.A_zimbraDomainCOSMaxAccounts]]}
,{
type:_CELLSPACER_,width:"10px"}
,{
type:_DWT_BUTTON_,label:ZaMsg.NAD_Add,width:"80px",onActivate:"ZaDomainXFormView.addAlButtonListener.call(this);"}
]}
]};
m={
type:_GROUP_,colSpan:"*",colSizes:["275px","*"],numCols:2,width:"100%",items:[{
type:_CELLSPACER_,height:"5px"}
,{
type:_DWT_ALERT_,containerCssStyle:"width: 300px;",style:DwtAlert.WARNING,iconVisible:true,content:com_zimbra_delegatedadmin.WARNING_FEATURE_MAX_ACCOUNTS}
,{
type:_OUTPUT_,value:com_zimbra_delegatedadmin.accountLimitsByFeature,align:_RIGHT_}
,{
ref:ZaDomain.A_zimbraDomainFeatureMaxAccounts,type:_DWT_LIST_,height:"200px",width:"300px",forceUpdate:true,preserveSelection:false,multiselect:true,cssClass:"DLSource",widgetClass:ZaDomainFeatureMaxAccountsListView,onSelection:ZaDomainXFormView.alFeatureSelectionListener,headerList:r,hideHeader:false}
,{
type:_CELLSPACER_,height:"5px"}
,{
type:_GROUP_,numCols:5,width:"300px",colSizes:["80px","auto","80px","auto","80px"],cssStyle:"margin: 10px; padding-bottom: 0px; ",items:[{
type:_DWT_BUTTON_,label:ZaMsg.TBB_Delete,width:"100px",onActivate:"ZaDomainXFormView.deleteFeatureAlButtonListener.call(this, ZaDomain.A_zimbraDomainFeatureMaxAccounts);",enableDisableChecks:[[ZaDomainXFormView.isDeleteFeatureAlEnabled,ZaDomain.A_zimbraDomainFeatureMaxAccounts]]}
,{
type:_CELLSPACER_,height:"5px"}
,{
type:_DWT_BUTTON_,label:ZaMsg.TBB_Edit,width:"100px",onActivate:"ZaDomainXFormView.editFeatureAlButtonListener.call(this);",enableDisableChecks:[[ZaDomainXFormView.isEditFeatureAlEnabled,ZaDomain.A_zimbraDomainFeatureMaxAccounts]]}
,{
type:_CELLSPACER_,height:"5px"}
,{
type:_DWT_BUTTON_,label:ZaMsg.NAD_Add,width:"100px",onActivate:"ZaDomainXFormView.addFeatureAlButtonListener.call(this);"}
]}
]}
}
if(x&&d){
ZaGrant.load.call(o,{
target:{
by:"id",type:o.type,val:o.id}}
);
if(ZaTabView.isTAB_ENABLED(o,[ZaDomain.A_domainMaxAccounts,ZaDomain.A_zimbraDomainCOSMaxAccounts],[])||ZaSettings.ENABLED_UI_COMPONENTS[ZaSettings.CARTE_BLANCHE_UI]){
var c=++this.TAB_INDEX;
x.choices.push({
value:c,label:com_zimbra_delegatedadmin.TT_account_limits}
);
this.helpMap[c]=[location.pathname,ZaUtil.HELP_URL,"managing_domains_account_limits.htm","?locid=",AjxEnv.DEFAULT_LOCALE].join("");
var f={
type:_ZATABCASE_,id:"account_form_account_limits_tab",numCols:1,colSizes:["*"],caseKey:c,items:[t,{
type:_ZA_TOP_GROUPER_,id:"account_form_account_limits_group",items:[n,e]}
]};
d.items.push(f)
}
var v=null;
for(var b=0;
b<d.items.length;
b++){
if(d.items[b].id=="domain_form_skin_tab"){
v=d.items[b];
break
}}
if(v){
var g={
type:_ZA_TOP_GROUPER_,label:com_zimbra_delegatedadmin.NAD_Skin_Logo_Settings,colSizes:["275px","100%"],items:[{
ref:ZaDomain.A_zimbraSkinLogoURL,type:ZaSettings.isDomainAdmin?_TEXTFIELD_:_SUPER_TEXTFIELD_,textFieldWidth:"200px",label:com_zimbra_delegatedadmin.NAD_zimbraSkinLogoURL,labelLocation:_LEFT_,resetToSuperLabel:ZaMsg.NAD_ResetToGlobal}
,{
ref:ZaDomain.A_zimbraSkinLogoAppBanner,type:ZaSettings.isDomainAdmin?_TEXTFIELD_:_SUPER_TEXTFIELD_,textFieldWidth:"200px",label:com_zimbra_delegatedadmin.NAD_zimbraSkinLogoAppBanner,labelLocation:_LEFT_,resetToSuperLabel:ZaMsg.NAD_ResetToGlobal,onChange:ZaDomainXFormView.onAppLogoURLChange}
,{
type:_OUTPUT_,id:ZaDomainXFormView.LogoAppBannerPreviewId,labelWrap:true,cssStyle:"padding: 0px",label:com_zimbra_delegatedadmin.NAD_zimbraLogoAppBannerPreview,getDisplayValue:ZaDomainXFormView.getAppLogoPreview,labelLocation:_LEFT_}
,{
ref:ZaDomain.A_zimbraSkinLogoLoginBanner,type:ZaSettings.isDomainAdmin?_TEXTFIELD_:_SUPER_TEXTFIELD_,textFieldWidth:"200px",label:com_zimbra_delegatedadmin.NAD_zimbraSkinLogoLoginBanner,labelLocation:_LEFT_,resetToSuperLabel:ZaMsg.NAD_ResetToGlobal,onChange:ZaDomainXFormView.onLoginLogoURLChange}
,{
type:_OUTPUT_,id:ZaDomainXFormView.LogoLoginBannerPreviewId,labelWrap:true,cssStyle:"padding: 0px",label:com_zimbra_delegatedadmin.NAD_zimbraLogoLoginBannerPreview,getDisplayValue:ZaDomainXFormView.getLoginLogoPreview,labelLocation:_LEFT_}
,{
type:_GROUP_,colSpan:2,cssStyle:"margin-top: 10px; margin-left: 200px",items:[{
type:_DWT_BUTTON_,label:com_zimbra_delegatedadmin.bt_ResetAllSkinLogo,onActivate:ZaDomainXFormView.resetAllLogoThemes}
]}
]};
v.items.push(g)
}}};
ZaTabView.XFormModifiers.ZaDomainXFormView.push(ZaDomainAdmin.domainXFormModifer);
ZaDomainXFormView.resetAllLogoThemes=function(){
var t=this.getForm();
this.setInstanceValue("",ZaDomain.A_zimbraSkinLogoURL);
this.setInstanceValue("",ZaDomain.A_zimbraSkinLogoAppBanner);
this.setInstanceValue("",ZaDomain.A_zimbraSkinLogoLoginBanner);
var e=t.getItemsById(ZaDomainXFormView.LogoAppBannerPreviewId)[0];
e.updateElement(ZaDomainXFormView.getAppLogoPreview.call(this));
var o=t.getItemsById(ZaDomainXFormView.LogoLoginBannerPreviewId)[0];
o.updateElement(ZaDomainXFormView.getLoginLogoPreview.call(this));
t.parent.setDirty(true);
t.refresh()
}
}
if(ZaXDialog.XFormModifiers.ZaNewDomainXWizard){
ZaDomainAdmin.domainWizardModifer=function(s){
var r={
ref:ZaDomain.A_domainMaxAccounts,type:_TEXTFIELD_,label:com_zimbra_delegatedadmin.NAD_DomainMaxAccounts,labelLocation:_LEFT_,width:"50px"};
var t={
ref:ZaDomain.A_zimbraAdminConsoleDNSCheckEnabled,type:_SUPER_WIZ_CHECKBOX_,resetToSuperLabel:ZaMsg.NAD_ResetToGlobal,colSizes:["200px","250px","*"],checkBoxLabel:com_zimbra_delegatedadmin.ENABLE_DOM_CONSOLE_DNS_CHECK,trueValue:"TRUE",falseValue:"FALSE"};
var e=s.items[3].items[0].items;
var n=0;
if(ZaSettings.DOMAINS_ARE_READONLY){
n++
}
for(var o=0;
o<e.length;
o++){
if(e[o].ref==ZaDomain.A_description){
e.splice(o+1,0,r);
n++
}else{
if(e[o].id=="dns_check_group"){
if(!ZaSettings.DOMAINS_ARE_READONLY){
e[o].items.push(t)
}
n++
}}
if(n==2){
break
}}};
ZaXDialog.XFormModifiers.ZaNewDomainXWizard.push(ZaDomainAdmin.domainWizardModifer)
}
if(GlobalConfigXFormView){
GlobalConfigXFormView.LogoAppBannerPreviewId=Dwt.getNextId();
GlobalConfigXFormView.onAppLogoURLChange=function(n,o,t){
this.setInstanceValue(n);
var e=t.getItemsById(GlobalConfigXFormView.LogoAppBannerPreviewId)[0];
e.updateElement(ZaDomainXFormView.getAppLogoPreview.call(this))
};
GlobalConfigXFormView.LogoLoginBannerPreviewId=Dwt.getNextId();
GlobalConfigXFormView.onLoginLogoURLChange=function(n,t,e){
this.setInstanceValue(n);
var o=e.getItemsById(GlobalConfigXFormView.LogoLoginBannerPreviewId)[0];
o.updateElement(ZaDomainXFormView.getLoginLogoPreview.call(this))
}
}
ZaDomainAdmin.GlobalConfigXFormModifier=function(l){
var d={
ref:ZaGlobalConfig.A_zimbraAdminConsoleDNSCheckEnabled,type:_CHECKBOX_,label:com_zimbra_delegatedadmin.ENABLE_GLOB_CONSOLE_DNS_CHECK,trueValue:"TRUE",falseValue:"FALSE"};
var c=l.items[2].items;
var t=c.length;
var n=null;
var s=null;
for(var o=0;
o<t;
o++){
if(c[o].id=="global_mta_tab"){
n=c[o]
}else{
if(c[o].id=="global_skin_tab"){
s=c[o]
}}}
if(n){
var e=n.items;
var r=e.length;
for(var o=0;
o<r;
o++){
if(e[o].id=="mta_network_group"&&e[o].items){
e[o].items.push(d);
break
}}}
if(s){
var u={
type:_ZA_TOP_GROUPER_,label:com_zimbra_delegatedadmin.NAD_Skin_Logo_Settings,colSizes:["275px","100%"],items:[{
ref:ZaGlobalConfig.A_zimbraSkinLogoURL,type:_TEXTFIELD_,label:com_zimbra_delegatedadmin.NAD_zimbraSkinLogoURL,labelLocation:_LEFT_,width:"200px"}
,{
ref:ZaGlobalConfig.A_zimbraSkinLogoAppBanner,type:_TEXTFIELD_,label:com_zimbra_delegatedadmin.NAD_zimbraSkinLogoAppBanner,labelLocation:_LEFT_,width:"200px",onChange:GlobalConfigXFormView.onAppLogoURLChange}
,{
type:_OUTPUT_,id:GlobalConfigXFormView.LogoAppBannerPreviewId,cssStyle:"padding: 0px",label:com_zimbra_delegatedadmin.NAD_zimbraLogoAppBannerPreview,labelWrap:true,getDisplayValue:ZaDomainXFormView.getAppLogoPreview,labelLocation:_LEFT_}
,{
ref:ZaGlobalConfig.A_zimbraSkinLogoLoginBanner,type:_TEXTFIELD_,label:com_zimbra_delegatedadmin.NAD_zimbraSkinLogoLoginBanner,labelLocation:_LEFT_,width:"200px",onChange:GlobalConfigXFormView.onLoginLogoURLChange}
,{
type:_OUTPUT_,id:GlobalConfigXFormView.LogoLoginBannerPreviewId,labelWrap:true,cssStyle:"padding: 0px",label:com_zimbra_delegatedadmin.NAD_zimbraLogoLoginBannerPreview,getDisplayValue:ZaDomainXFormView.getLoginLogoPreview,labelLocation:_LEFT_}
]};
s.items.push(u)
}};
if(ZaTabView.XFormModifiers.GlobalConfigXFormView){
ZaTabView.XFormModifiers.GlobalConfigXFormView.push(ZaDomainAdmin.GlobalConfigXFormModifier)
}}
if(window.console&&window.console.log){
console.log("Loaded domainadmin.js")
}
ZaZimbraRights={};
ZaZimbraRights.type=["preset","getAttrs","setAttrs","combo"];
ZaZimbraRights.type_dl=ZaItem.DL;
ZaItem.UC_SERVICE="ucservice";
ZaZimbraRights.inlineTargetType=[ZaItem.ACCOUNT,ZaItem.DL,ZaItem.RESOURCE,ZaItem.DOMAIN,ZaItem.COS,ZaItem.SERVER,ZaItem.UC_SERVICE,ZaItem.GLOBAL_CONFIG];
ZaZimbraRights.targetType=ZaZimbraRights.inlineTargetType.concat([ZaItem.ZIMLET,ZaItem.GLOBAL_GRANT]);
ZaZimbraRights.definedBy=["system","custom"];
ZaZimbraRights.preset={};
ZaZimbraRights.preset["accounts"]=[];
ZaZimbraRights.preset["accounts"]=ZaZimbraRights.JSON=[{
name:"invite",attrs:{
name:"invite",userRights:"1",desc:com_zimbra_delegatedadmin.rights_desc_invite}}
,{
name:"createAccount",attrs:{
name:"createAccount",type:"preset",targetType:"domain",definedBy:"system",desc:com_zimbra_delegatedadmin.rights_desc_createAccount}}
,{
name:"renameServer",attrs:{
name:"renameServer",type:"preset",targetType:"server",definedBy:"system",desc:com_zimbra_delegatedadmin.rights_desc_renameServer}}
,{
name:"deleteAccount",attrs:{
name:"deleteAccount",type:"preset",targetType:"domain",definedBy:"system",desc:com_zimbra_delegatedadmin.rights_desc_createAccount}}
,{
name:"createDomain",attrs:{
name:"createDomain",type:"preset",targetType:"domain",definedBy:"system",desc:com_zimbra_delegatedadmin.rights_desc_renameServer}}
];
ZaZimbraRights.getAllRights=function(){
if(!ZaZimbraRights._ALL_RIGHTS_CACHE){
ZaZimbraRights._ALL_RIGHTS_CACHE=ZaZimbraRights.JSON.concat(ZaRight.getCustomRightsList().getArray())
}
return ZaZimbraRights._ALL_RIGHTS_CACHE
};
ZaZimbraRights.getRights=function(l){
var r=ZaZimbraRights.getAllRights();
if(!l||l.length<=0){
return r
}
var t=[];
for(var s=0;
s<r.length;
s++){
var c=true;
for(var e in l){
var d=r[s].attrs[e];
if(d==null){
c=false;
break
}
var u=l[e];
if((u==null)||(u.length<=0)){
continue
}else{
if((e==ZaRight.A_name||e==ZaRight.A_type)&&(d.indexOf(u)>=0)){
continue
}else{
if(e==ZaRight.A_targetType){
for(var o=0;
o<u.length;
o++){
if(d.join("").indexOf(u[o])>=0){
continue
}}}else{
c=false;
break
}}}}
if(c){
t.push(r[s].attrs[ZaRight.A_name])
}}
return t
};
ZaRight=function(){
ZaItem.call(this,"ZaRight");
this._init();
this.type=ZaItem.RIGHT;
this.attrs={}
};
ZaRight.prototype=new ZaItem;
ZaRight.prototype.constructor=ZaRight;
ZaItem.loadMethods.ZaRight=new Array();
ZaItem.initMethods.ZaRight=new Array();
ZaItem.modifyMethods.ZaRight=new Array();
ZaRight.A_id="id";
ZaRight.A_name="name";
ZaRight.A_desc="desc";
ZaRight.A_attrs="attrs";
ZaRight.A_rights="rights";
ZaRight.A_type="type";
ZaRight.A_targetType="targetType";
ZaRight.A_definedBy="definedBy";
ZaRight.A2_selected_rights="selected_rights";
ZaRight.RIGHT_TYPES=["preset","setAttrs","getAttrs","combo"];
ZaRight.CONFIG_GRANTS_RIGHT="viewGrants";
ZaRight.VIEW_RIGHTS_USR_RIGHT="checkRightUsr";
ZaRight.VIEW_RIGHTS_GRP_RIGHT="checkRightGrp";
ZaRight.CROSS_DOMAIN_ADMIN="crossDomainAdmin";
ZaRight.A2_allRightsList="allRightsList";
ZaRight.A2_searchRightQuery="searchRightQuery";
ZaRight.A2_filteredRightsList="filteredRightsList";
ZaRight.A2_filterType="filterType";
ZaRight.A2_filterCaseSensitiveEnabled="filterCaseSensitiveEnabled";
ZaRight.FILTER_TYPE_CHOICES=[{
value:"all",label:com_zimbra_delegatedadmin.LBL_searchAllRights}
,{
value:"combo",label:com_zimbra_delegatedadmin.LBL_searchComboRights}
,{
value:"preset",label:com_zimbra_delegatedadmin.LBL_searchPresetRights}
,{
value:"getAttrs",label:com_zimbra_delegatedadmin.LBL_searchGetAttrRights}
,{
value:"setAttrs",label:com_zimbra_delegatedadmin.LBL_searchSetAttrRights}
];
ZaRight.getCustomRightsList=function(){
var l=[];
for(var o=0;
o<10;
o++){
var t=new ZaRight();
var n;
var e=o%ZaZimbraRights.type.length;
if(e==0){
n="combo"
}else{
n=ZaZimbraRights.type[e]
}
t.name="CustomRight"+o;
t.attrs={
name:"CustomRight"+o,type:n,desc:"Prototype Custom Right "+o};
var r;
if(n=="getAttrs"){
r=["account","cos"];
t.attrs.attrs=["zimbraMailQuota","zimbraQuotaWarnPercent","zimbraQuotaWarnInterval","zimbraQuotaWarnMessage"]
}else{
if(n=="setAttrs"){
r=["domain"];
t.attrs.attrs=["zimbraFeatureIMEnabled","zimbraFeatureCalendarEnabled","zimbraFeatureMailEnabled"]
}else{
if(n=="combo"){
t.attrs.rights=["createAccount","renameAccount","configureQuotaWithinLimit"]
}}}
if(r){
t.attrs.targetType=r
}
l.push(t)
}
var s=new ZaItemList(ZaRight);
s._vector=AjxVector.fromArray(l);
return s
};
ZaRight.rightsOvTreeModifier=function(e){
var t=this;
if(!t){
throw new Exception("ZaRight.rightsOvTreeModifier: Overview Panel Controller is not set.")
}
if(ZaSettings.ENABLED_UI_COMPONENTS[ZaSettings.RIGHT_LIST_VIEW]||ZaSettings.ENABLED_UI_COMPONENTS[ZaSettings.CARTE_BLANCHE_UI]){
var o=ZaTree.getPathByArray([ZaMsg.OVP_home,ZaMsg.OVP_configure]);
var n=new ZaTreeItemData({
parent:o,id:ZaId.getTreeItemId(ZaId.PANEL_APP,ZaId.PANEL_CONFIGURATION,null,"RighHV"),text:com_zimbra_delegatedadmin.OVP_rights,canShowOnRoot:false,forceNode:false,mappingId:ZaZimbraAdmin._RIGHTS_LIST_VIEW}
);
e.addTreeItemData(n);
if(ZaOverviewPanelController.overviewTreeListeners){
ZaOverviewPanelController.overviewTreeListeners[ZaZimbraAdmin._RIGHTS_LIST_VIEW]=ZaRight.customRightsListTreeListener
}}};
ZaRight.customRightsListTreeListener=function(e){
if(window.console&&window.console.log){
console.log("Show the custom rigths lists ...")
}
if(ZaApp.getInstance().getCurrentController()){
ZaApp.getInstance().getCurrentController().switchToNextView(ZaApp.getInstance().getRightsListController(),ZaRightsListViewController.prototype.show,ZaRight.getAll())
}else{
ZaApp.getInstance().getRightsListController().show(ZaRight.getAll())
}};
ZaRight.myXModel={
items:[{
id:ZaRight.A_id,ref:ZaRight.A_id,type:_STRING_}
,{
id:ZaRight.A_name,ref:ZaRight.A_name,type:_STRING_,required:true}
,{
id:ZaRight.A_type,ref:"attrs/"+ZaRight.A_type,type:_ENUM_,choices:ZaZimbraRights.type}
,{
id:ZaRight.A_targetType,ref:"attrs/"+ZaRight.A_targetType,type:_LIST_,listItems:{
type:_ENUM_,choices:ZaZimbraRights.targetType}}
,{
id:ZaRight.A_desc,ref:"attrs/"+ZaRight.A_desc,type:_STRING_}
,{
id:ZaRight.A_definedBy,ref:"attrs/"+ZaRight.A_definedBy,type:_ENUM_,choices:ZaZimbraRights.definedBy}
,{
id:ZaRight.A_attrs,ref:"attrs/"+ZaRight.A_attrs,type:_LIST_,listItem:{
type:_STRING_}}
,{
id:ZaRight.A_rights,ref:"attrs/"+ZaRight.A_rights,type:_LIST_,listItem:{
type:_STRING_}}
,{
id:ZaRight.A2_allRightsList,ref:ZaRight.A2_allRightsList,type:_LIST_}
,{
id:ZaRight.A2_filteredRightsList,ref:ZaRight.A2_filteredRightsList,type:_LIST_}
,{
id:ZaRight.A2_searchRightQuery,ref:ZaRight.A2_searchRightQuery,type:_STRING_}
,{
id:ZaRight.A2_filterCaseSensitiveEnabled,type:_ENUM_,ref:ZaRight.A2_filterCaseSensitiveEnabled,choices:ZaModel.BOOLEAN_CHOICES}
,{
id:ZaRight.A2_filterType,type:_ENUM_,ref:ZaRight.A2_filterType,choices:ZaRight.FILTER_TYPE_CHOICES}
]};
ZaRight.prototype.toString=function(){
return this.name
};
ZaRight.getRights=function(r,t,e){
var n=AjxSoapDoc.create("GetAllRightsRequest",ZaZimbraAdmin.URN,null);
if(r){
n.setMethodAttribute("targetType",r)
}
if(t){
n.setMethodAttribute("expandAllAttrs",t)
}
if(e){
n.setMethodAttribute("rightClass",e)
}
var c=new Object();
c.soapDoc=n;
c.asyncMode=false;
var o={
controller:ZaApp.getInstance().getCurrentController(),busyMsg:com_zimbra_delegatedadmin.BUSY_GET_ALL_RIGHT};
var l=ZaRequestMgr.invoke(c,o).Body.GetAllRightsResponse;
var s=new ZaItemRightList(ZaRight);
s.loadFromJS(l);
return s
};
ZaRight.initSystemRights=function(t){
if(!t){
return
}
ZaRight.SYSTEM_RIGHTS=[];
var e=t.getArray();
for(var o=0;
o<e.length;
o++){
ZaRight.SYSTEM_RIGHTS.push(e[o].name)
}};
ZaRight.getAll=function(){
var e=ZaRight.getRights();
ZaRight.initSystemRights(e);
return e
};
ZaRight.getSystemRightsByTargetType=function(r,n,o){
if(!r){
return
}
if(!ZaRight.SYSTEM_RIGHTS_BY_TARGET_TYPE){
ZaRight.SYSTEM_RIGHTS_BY_TARGET_TYPE={}
}
if(!ZaRight.SYSTEM_RIGHTS_BY_TARGET_TYPE[r]||!ZaRight.SYSTEM_RIGHTS_BY_TARGET_TYPE[r][o]){
if(!ZaRight.SYSTEM_RIGHTS_BY_TARGET_TYPE[r]){
ZaRight.SYSTEM_RIGHTS_BY_TARGET_TYPE[r]=[]
}
ZaRight.SYSTEM_RIGHTS_BY_TARGET_TYPE[r][o]=[];
var t=ZaRight.getRights(r,n,o);
var e=t.getArray();
for(var s=0;
s<e.length;
s++){
ZaRight.SYSTEM_RIGHTS_BY_TARGET_TYPE[r][o].push(e[s].name)
}}
return ZaRight.SYSTEM_RIGHTS_BY_TARGET_TYPE[r][o]
};
ZaRight.prototype.dynSelectRightNames=function(l){
try{
var u=l.value||"";
var m=l.callback;
var o=l.form;
var e=o.getInstance()[ZaGrant.A_target_type];
var s=o.getInstance()[ZaGrant.A_grantee_type];
var d=o.getInstance()[ZaGrant.A2_isAdmin];
var f=null;
var n=null;
if((e==ZaItem.ACCOUNT||e==ZaItem.DOMAIN||e==ZaItem.GLOBAL_GRANT||e==ZaItem.DL)){
if(s=="usr"&&d=="1"){
f="ALL"
}else{
if(s=="usr"&&d=="0"){
f="USER"
}else{
if(s=="dom"||s=="grp"){
f="USER"
}}}}
if(!f){
f="ADMIN"
}
var t=ZaRight.getSystemRightsByTargetType(e,null,f);
if(e==ZaItem.DL&&d=="0"){
if(!n){
n=["sendToDistList","viewDistList"]
}}else{
n=t
}
var p=[];
if(n){
for(var r=0;
r<n.length;
r++){
if(n[r].toLowerCase().indexOf(u.toLowerCase())>=0){
p.push(n[r])
}}}
if(m){
m.run(p)
}}
catch(c){
ZaApp.getInstance().getCurrentController()._handleException(c,"ZaRight.prototype.dynSelectRightNames")
}};
ZaRight.modifyMethod=function(e){};
ZaItem.modifyMethods.ZaRight.push(ZaRight.modifyMethod);
ZaRight.prototype.getToolTip=function(){
if(!this._toolTip){
var t=new Array(20);
var e=0;
t[e++]="<table cellpadding='0' cellspacing='0' border='0'>";
t[e++]="<tr valign='center'><td colspan='2' align='left'>";
t[e++]="<div style='border-bottom: 1px solid black; white-space:nowrap; overflow:hidden;width:350'>";
t[e++]="<table cellpadding='0' cellspacing='0' border='0' style='width:100%;'>";
t[e++]="<tr valign='center'>";
t[e++]="<td><b>"+AjxStringUtil.htmlEncode(this.name)+"</b></td>";
t[e++]="<td align='right'>";
t[e++]=AjxImg.getImageHtml("Right");
t[e++]="</td>";
t[e++]="</table></div></td></tr>";
t[e++]="<tr></tr>";
e=this._addAttrRow(ZaRight.A_desc,com_zimbra_delegatedadmin.Label_right_desc,t,e);
t[e++]="</table>";
this._toolTip=t.join("")
}
return this._toolTip
};
ZaRight.prototype._addAttrRow=function(o,t,n,e){
var s=this.attrs[o];
if(s!=null){
n[e++]="<tr valign='top'><td align='left' style='padding-right: 5px;'><b>";
n[e++]=AjxStringUtil.htmlEncode(t);
n[e++]="</b></td><td align='left'><div style='white-space:nowrap; overflow:hidden;'>";
n[e++]=AjxStringUtil.htmlEncode(s);
n[e++]="</div></td></tr>"
}
return e
};
ZaRight.prototype.remove=function(){
var t=AjxSoapDoc.create("DeleteRightRequest",ZaZimbraAdmin.URN,null);
t.set("id",this.id);
var n=new Object();
n.soapDoc=t;
var e={
controller:ZaApp.getInstance().getCurrentController(),busyMsg:ZaMsg.BUSY_DELETE_RIGHT};
var o=ZaRequestMgr.invoke(n,e)
};
ZaRight.prototype.refresh=function(){
this.load()
};
ZaRight.loadMethod=function(s,c,e){
var n=AjxSoapDoc.create("GetRightRequest",ZaZimbraAdmin.URN,null);
n.getMethod().setAttribute("expandAllAttrs","1");
var t=n.set("right",this.name);
var l=new Object();
l.soapDoc=n;
l.asyncMode=false;
var o={
controller:ZaApp.getInstance().getCurrentController(),busyMsg:com_zimbra_delegatedadmin.BUSY_GET_RIGHT};
var r=ZaRequestMgr.invoke(l,o);
this.initFromJS(r.Body.GetRightResponse.right[0])
};
ZaItem.loadMethods.ZaRight.push(ZaRight.loadMethod);
ZaRight.prototype.initFromJS=function(n){
if(!n){
return
}
for(var e in n){
if(e=="name"){
this.name=n.name;
this.attrs.name=n.name
}else{
if(e=="desc"){
if(n[e]&&n[e][0]){
this.attrs[e]=n[e][0]._content
}}else{
if(e=="rights"||e=="attrs"){
this.attrs[e]=[];
if(n[e]&&n[e][0]){
var o;
if(e=="rights"){
o=n[e][0].r;
for(var t=0;
t<o.length;
t++){
var r=new ZaRight();
r.name=o[t].n;
r.attrs[ZaRight.A_type]=o[t][ZaRight.A_type];
r.attrs[ZaRight.A_targetType]=o[t][ZaRight.A_targetType];
this.attrs[e].push(r)
}}else{
if(e=="attrs"){
o=n[e][0];
for(var s in o){
this.attrs[e].push(s)
}}}}}else{
this.attrs[e]=n[e]
}}}}};
ZaRight.initMethod=function(){
this.attrs=new Object();
this.id="";
this.name=""
};
ZaItem.initMethods.ZaRight.push(ZaRight.initMethod);
ZaRight.compareTargetTypeAsc=function(t,e){
return ZaItem.compareAttrAsc(t,e,ZaRight.A_targetType)
};
ZaRight.compareTargetTypeDesc=function(t,e){
return ZaItem.compareAttrDesc(t,e,ZaRight.A_targetType)
};
ZaRight.compareTypeAsc=function(t,e){
return ZaItem.compareAttrAsc(t,e,ZaRight.A_type)
};
ZaRight.compareTypeDesc=function(t,e){
return ZaItem.compareAttrDesc(t,e,ZaRight.A_type)
};
ZaRightView=function(e){
ZaTabView.call(this,e,"ZaRightView");
this.setScrollStyle(Dwt.SCROLL);
this.TAB_INDEX=0;
this.initForm(ZaRight.myXModel,this.getMyXForm());
this._localXForm.setController(ZaApp.getInstance())
};
ZaRightView.prototype=new ZaTabView();
ZaRightView.prototype.constructor=ZaRightView;
ZaTabView.XFormModifiers.ZaRightView=new Array();
ZaRightView.onFormFieldChanged=function(o,t,e){
e.parent.setDirty(true);
this.setInstanceValue(o);
return o
};
ZaRightView.prototype.getTabIcon=function(){
return"RightObject"
};
ZaRightView.prototype.setObject=function(e){
this._containedObject=e;
this._containedObject.id=e.name;
this._localXForm.setInstance(this._containedObject)
};
ZaRightView.deleteRightButtonListener=function(){
var t=this.getInstance();
if(t[ZaRight.A2_rights_selection_cache]!=null){
var s=t[ZaRight.A2_rights_selection_cache].length;
if(s&&t.attrs[ZaRight.A_rights]){
var e=t.attrs[ZaRight.A_rights];
for(var n=0;
n<s;
n++){
var r=e.length-1;
for(var o=r;
o>=0;
o--){
if(e[o]==t.A2_rights_selection_cache[n]){
e.splice(o,1);
break
}}}
this.getModel().setInstanceValue(t,ZaRight.A_rights,e);
this.getModel().setInstanceValue(t,ZaRight.A2_rights_selection_cache,[])
}}
this.getForm().parent.setDirty(true)
};
ZaRightView.addRightButtonListener=function(){
var e=this.getInstance();
var o=this.getForm().parent;
if(!o.addRightDlg){
o.addRightDlg=new ZaRightSelectionDialog(ZaApp.getInstance().getAppCtxt().getShell(),ZaApp.getInstance(),com_zimbra_delegatedadmin.Title_add_rights);
o.addRightDlg.registerCallback(DwtDialog.OK_BUTTON,ZaRightView.addRights,this.getForm(),null)
}
var t={};
t[ZaRight.A_name]="";
o.addRightDlg.setObject(t);
o.addRightDlg.popup()
};
ZaRightView.addRights=function(){
if(this.parent.addRightDlg){
this.parent.addRightDlg.popdown();
var t=this.parent.addRightDlg.getObject();
if(t[ZaRight.A_selected_rights]&&t[ZaRight.A_selected_rights].length>1){
var e=this.getInstance().attrs[ZaRight.A_rights]||[];
e=e.concat(t[ZaRight.A_selected_rights]);
this.getModel().setInstanceValue(this.getInstance(),ZaRight.A_rights,e);
this.getModel().setInstanceValue(this.getInstance(),ZaRight.A2_selected_rights,[]);
this.parent.setDirty(true)
}}};
ZaRightView.myXFormModifier=function(e){
e.tableCssStyle="width:100%;position:static;overflow:visible;";
e.items=[{
type:_GROUP_,colSpan:"*",numCols:2,colSizes:[200,"*"],width:"100%",items:[{
ref:ZaRight.A_name,type:_OUTPUT_,label:com_zimbra_delegatedadmin.Label_right_name}
,{
ref:ZaRight.A_desc,type:_OUTPUT_,label:com_zimbra_delegatedadmin.Label_right_desc}
,{
ref:ZaRight.A_type,type:_OUTPUT_,label:com_zimbra_delegatedadmin.Label_right_type}
,{
ref:ZaRight.A_targetType,type:_OUTPUT_,visibilityChecks:[ZaRightView.isShowTargetType],visibilityChangeEventSources:[ZaRight.A_type],label:com_zimbra_delegatedadmin.Label_target_type}
,{
type:_SPACER_,height:"10px"}
,{
type:_GROUP_,colSpan:"*",colSizes:["200px","*"],numCols:2,visibilityChecks:[ZaRightView.isShowRights],visibilityChangeEventSources:[ZaRight.A_type],items:[{
type:_OUTPUT_,value:com_zimbra_delegatedadmin.Label_rights,valign:_CENTER_,align:_RIGHT_}
,{
ref:ZaRight.A_rights,type:_DWT_LIST_,height:Dwt.DEFAULT,width:"300px",forceUpdate:true,cssClass:"DLSource",widgetClass:ZaRightsMiniListView,hideHeader:false}
,{
type:_SPACER_,height:10}
]}
,{
type:_GROUP_,colSpan:"*",colSizes:["200px","*"],numCols:2,visibilityChecks:[ZaRightView.isShowGetAttrs],visibilityChangeEventSources:[ZaRight.A_type],items:[{
type:_OUTPUT_,value:com_zimbra_delegatedadmin.Label_getAttr,valign:_CENTER_,align:_RIGHT_}
,{
ref:ZaRight.A_attrs,type:_DWT_LIST_,height:Dwt.DEFAULT,width:"300px",forceUpdate:true,cssClass:"DLSource",widgetClass:ZaRightsAttrsListView,hideHeader:false}
,{
type:_SPACER_,height:10}
]}
,{
type:_GROUP_,colSpan:"*",colSizes:["200px","*"],numCols:2,visibilityChecks:[ZaRightView.isShowSetAttrs],visibilityChangeEventSources:[ZaRight.A_type],items:[{
type:_OUTPUT_,value:com_zimbra_delegatedadmin.Label_setAttr,valign:_CENTER_,align:_RIGHT_}
,{
ref:ZaRight.A_attrs,type:_DWT_LIST_,height:Dwt.DEFAULT,width:"300px",forceUpdate:true,cssClass:"DLSource",widgetClass:ZaRightsAttrsListView,hideHeader:false}
,{
type:_SPACER_,height:10}
]}
]}
]
};
ZaTabView.XFormModifiers.ZaRightView.push(ZaRightView.myXFormModifier);
ZaRightView.isShowTargetType=function(){
var e=this.getInstanceValue(ZaRight.A_type);
return(e!="combo")
};
ZaRightView.isShowGetAttrs=function(){
var e=this.getInstanceValue(ZaRight.A_type);
return(e=="getAttrs")
};
ZaRightView.isShowSetAttrs=function(){
var e=this.getInstanceValue(ZaRight.A_type);
return(e=="setAttrs")
};
ZaRightView.isShowRights=function(){
var e=this.getInstanceValue(ZaRight.A_type);
return(e=="combo")
};
ZaRightView.prototype.getTabChoices=function(){
this.tabChoices=new Array();
this.tabChoices.push({
value:1,label:ZaMsg.TABT_GeneralPage}
);
return this.tabChoices
};
ZaRightsListView=function(n){
if(arguments.length==0){
return
}
var o=null;
var t=DwtControl.ABSOLUTE_STYLE;
var e=ZaRightsListView._getHeaderList();
this._listType="RIGHTS";
ZaListView.call(this,n,o,t,e,this._listType);
this._appCtxt=this.shell.getData(ZaAppCtxt.LABEL)
};
ZaRightsListView.prototype=new ZaListView;
ZaRightsListView.prototype.constructor=ZaRightsListView;
ZaRightsListView.prototype.toString=function(){
return"ZaRightsListView"
};
ZaRightsListView.prototype.getTitle=function(){
return com_zimbra_delegatedadmin.manage_rights_title
};
ZaRightsListView.prototype.getTabIcon=function(){
return"RightObject"
};
ZaRightsListView.prototype._createItemHtml=function(m,t,s){
var l=new Array(50);
var e=document.createElement("div");
e[DwtListView._STYLE_CLASS]="Row";
e[DwtListView._SELECTED_STYLE_CLASS]=e[DwtListView._STYLE_CLASS]+"-"+DwtCssStyle.SELECTED;
e.className=e[DwtListView._STYLE_CLASS];
this.associateItemWithElement(m,e,DwtListView.TYPE_LIST_ITEM);
var u=0;
l[u++]="<table width='100%' cellspacing='0' cellpadding='0'>";
l[u++]="<tr>";
var o=this._headerList.length;
var c=Dwt.getNextId();
for(var r=0;
r<o;
r++){
var d=this._headerList[r]._field;
var n=this._getCellWidth(r,{}
);
l[u++]="<td align='left' width="+n+' id="'+this._listType+"_"+d+"_"+c+'"><nobr>';
l[u++]=AjxStringUtil.htmlEncode(m.attrs[d]);
l[u++]="</nobr></td>"
}
l[u++]="</tr></table>";
e.innerHTML=l.join("");
return e
};
ZaRightsListView._getHeaderList=function(){
var e=[];
var t=1;
e[0]=new ZaListHeaderItem(ZaRight.A_name,com_zimbra_delegatedadmin.Col_right_name,null,200,t++,ZaRight.A_name,true,true);
e[1]=new ZaListHeaderItem(ZaRight.A_targetType,com_zimbra_delegatedadmin.Col_target_type,null,150,t++,ZaRight.A_targetType,true,true);
e[2]=new ZaListHeaderItem(ZaRight.A_type,com_zimbra_delegatedadmin.Col_right_type,null,100,t++,ZaRight.A_type,true,true);
e[3]=new ZaListHeaderItem(ZaRight.A_desc,com_zimbra_delegatedadmin.Col_right_desc,null,"auto",null,ZaRight.A_desc,true,true);
return e
};
ZaRightsListView.prototype._sortColumn=function(t,o){
var e=t.getSortField();
var n;
if(e==ZaRight.A_name){
if(o){
n=ZaItem.compareNamesAsc
}else{
n=ZaItem.compareNamesDesc
}}else{
if(e==ZaRight.A_targetType){
if(o){
n=ZaRight.compareTargetTypeAsc
}else{
n=ZaRight.compareTargetTypeDesc
}}else{
if(e==ZaRight.A_type){
if(o){
n=ZaRight.compareTypeAsc
}else{
n=ZaRight.compareTypeDesc
}}}}
this._list.sort(n);
this.setUI()
};
ZaRightsMiniListView=function(s,n,o,t){
var n=null;
var o=null;
var t=ZaRightsMiniListView._getHeaderList();
ZaListView.call(this,s,n,o,t);
var e=ZaApp.getInstance().getRightsListController();
this.addSelectionListener(new AjxListener(e,e._listSelectionListener));
this._appCtxt=this.shell.getData(ZaAppCtxt.LABEL)
};
ZaRightsMiniListView.prototype=new ZaListView;
ZaRightsMiniListView.prototype.constructor=ZaRightsMiniListView;
ZaRightsMiniListView.prototype.toString=function(){
return"ZaRightsMiniListView"
};
ZaRightsMiniListView._getHeaderList=function(){
var e=[];
e[0]=new ZaListHeaderItem(ZaRight.A_name,com_zimbra_delegatedadmin.Col_right_name,null,200,null,null,true,true);
e[1]=new ZaListHeaderItem(ZaRight.A_type,com_zimbra_delegatedadmin.Col_right_type,null,null,null,null,true,true);
return e
};
ZaRightsMiniListView.prototype._createItemHtml=function(s){
var n=new Array(50);
var c=document.createElement("div");
c[DwtListView._STYLE_CLASS]="Row";
c[DwtListView._SELECTED_STYLE_CLASS]=c[DwtListView._STYLE_CLASS]+"-"+DwtCssStyle.SELECTED;
c.className=c[DwtListView._STYLE_CLASS];
this.associateItemWithElement(s,c,DwtListView.TYPE_LIST_ITEM);
var e=0;
n[e++]="<table width='100%' cellspacing='0' cellpadding='0'>";
n[e++]="<tr>";
var o=this._headerList.length;
for(var t=0;
t<o;
t++){
var r=this._headerList[t]._field;
if(r=="name"||r==ZaRight.A_type){
n[e++]="<td align='left' width="+this._headerList[t]._width+"><nobr>";
var l="";
if(r=="name"){
l=s[r]
}else{
if(r==ZaRight.A_type){
l=s.attrs[r]
}}
n[e++]=AjxStringUtil.htmlEncode(l);
n[e++]="</nobr></td>"
}}
n[e++]="</tr></table>";
c.innerHTML=n.join("");
return c
};
ZaRightsAttrsListView=function(n,o,t,e){
if(arguments.length==0){
return
}
var o=null;
var t=null;
var e=ZaRightsAttrsListView._getHeaderList();
ZaListView.call(this,n,o,t,e);
this._appCtxt=this.shell.getData(ZaAppCtxt.LABEL)
};
ZaRightsAttrsListView.prototype=new ZaListView;
ZaRightsAttrsListView.prototype.constructor=ZaRightsAttrsListView;
ZaRightsAttrsListView.prototype.toString=function(){
return"ZaRightsAttrsListView"
};
ZaRightsAttrsListView._getHeaderList=function(){
var e=[];
e[0]=new ZaListHeaderItem(ZaRight.A_attrs,com_zimbra_delegatedadmin.Col_right_attr_name,null,200,null,null,true,true);
return e
};
ZaRightsAttrsListView.prototype._createItemHtml=function(o){
var t=new Array(50);
var n=document.createElement("div");
n[DwtListView._STYLE_CLASS]="Row";
n[DwtListView._SELECTED_STYLE_CLASS]=n[DwtListView._STYLE_CLASS]+"-"+DwtCssStyle.SELECTED;
n.className=n[DwtListView._STYLE_CLASS];
this.associateItemWithElement(o,n,DwtListView.TYPE_LIST_ITEM);
var e=0;
t[e++]="<table width='100%' cellspacing='0' cellpadding='0'>";
t[e++]="<tr>";
t[e++]="<td align='left'><nobr>";
t[e++]=AjxStringUtil.htmlEncode(o);
t[e++]="</nobr></td>";
t[e++]="</tr></table>";
n.innerHTML=t.join("");
return n
};
ZaRightViewController=function(t,e){
ZaXFormViewController.call(this,t,e,"ZaRightViewController");
this._UICreated=false;
this._helpURL=location.pathname+ZaUtil.HELP_URL+"managing_rights/managing_rights.htm?locid="+AjxEnv.DEFAULT_LOCALE;
this._toolbarOperations=new Array();
this.deleteMsg=ZaMsg.Q_DELETE_RIGHT;
this.objType=ZaEvent.S_RIGHT;
this.tabConstructor=ZaRightView
};
ZaRightViewController.prototype=new ZaXFormViewController();
ZaRightViewController.prototype.constructor=ZaRightViewController;
ZaController.setViewMethods.ZaRightViewController=new Array();
ZaXFormViewController.preSaveValidationMethods.ZaRightViewController=new Array();
ZaRightViewController.prototype.show=function(e){
if(!this.selectExistingTabByItemId(e.name)){
this._setView(e,true)
}};
ZaRightViewController.prototype.getAppBarAction=function(){
if(AjxUtil.isEmpty(this._appbarOperation)){
this._appbarOperation[ZaOperation.HELP]=new ZaOperation(ZaOperation.HELP,ZaMsg.TBB_Help,ZaMsg.TBB_Help_tt,"Help","Help",new AjxListener(this,this._helpButtonListener));
this._appbarOperation[ZaOperation.CLOSE]=new ZaOperation(ZaOperation.CLOSE,ZaMsg.TBB_Close,ZaMsg.ALTBB_Close_tt,"","",new AjxListener(this,this.closeButtonListener))
}
return this._appbarOperation
};
ZaRightViewController.prototype.getAppBarOrder=function(){
if(AjxUtil.isEmpty(this._appbarOrder)){
this._appbarOrder.push(ZaOperation.HELP);
this._appbarOrder.push(ZaOperation.CLOSE)
}
return this._appbarOrder
};
ZaRightViewController.prototype.addRightChangeListener=function(e){
this._evtMgr.addListener(ZaEvent.E_MODIFY,e)
};
ZaRightViewController.prototype.removeRightChangeListener=function(e){
this._evtMgr.removeListener(ZaEvent.E_MODIFY,e)
};
ZaRightViewController.prototype.switchToNextView=function(e,o,n){
if(this._view.isDirty()){
var t=new Object();
t.params=n;
t.obj=e;
t.func=o;
ZaApp.getInstance().dialogs.confirmMessageDialog.setMessage(ZaMsg.Q_SAVE_CHANGES,DwtMessageDialog.INFO_STYLE);
ZaApp.getInstance().dialogs.confirmMessageDialog.registerCallback(DwtDialog.YES_BUTTON,this.validateChanges,this,t);
ZaApp.getInstance().dialogs.confirmMessageDialog.registerCallback(DwtDialog.NO_BUTTON,this.discardAndGoAway,this,t);
ZaApp.getInstance().dialogs.confirmMessageDialog.popup()
}else{
ZaController.prototype.switchToNextView.call(this,e,o,n)
}};
ZaRightViewController.setViewMethod=function(e){
e.load(null,null,true);
if(!this._UICreated){
this._createUI()
}
ZaApp.getInstance().pushView(this.getContentViewId());
this._view.setDirty(false);
this._view.setObject(e);
this._currentObject=e
};
ZaController.setViewMethods.ZaRightViewController.push(ZaRightViewController.setViewMethod);
ZaRightViewController.prototype._createUI=function(){
this._contentView=this._view=new this.tabConstructor(this._container);
var e=new Object();
e[ZaAppViewMgr.C_APP_CONTENT]=this._view;
ZaApp.getInstance().getAppViewMgr().createView(this.getContentViewId(),e);
this._UICreated=true;
ZaApp.getInstance()._controllers[this.getContentViewId()]=this
};
ZaRightViewController.prototype._saveChanges=function(){
var e=this._view.getObject();
this._currentObject.modify(e);
this._view.setDirty(false);
this.fireChangeEvent(this._currentObject);
return true
};
ZaRightViewController.prototype.saveButtonListener=function(t){
try{
this.validateChanges()
}
catch(e){
this._handleException(e,"ZaRightViewController.prototype.saveButtonListener",null,false)
}};
ZaRightsListViewController=function(t,e){
ZaListViewController.call(this,t,e,"ZaRightsListViewController");
this._toolbarOperations=new Array();
this._popupOperations=new Array();
this._helpURL=location.pathname+ZaUtil.HELP_URL+"da_process/rights.htm?locid="+AjxEnv.DEFAULT_LOCALE
};
ZaRightsListViewController.prototype=new ZaXFormViewController();
ZaRightsListViewController.prototype.constructor=ZaRightsListViewController;
ZaController.initPopupMenuMethods.ZaRightsListViewController=new Array();
ZaController.changeActionsStateMethods.ZaRightsListViewController=new Array();
ZaController.setViewMethods.ZaRightsListViewController=new Array();
ZaRightsListViewController.prototype.show=function(t,e){
this._setView(t.getVector());
this.setDirty(false);
this.changeActionsState()
};
ZaRightsListViewController.initPopupMenuMethod=function(){
this._popupOperations[ZaOperation.VIEW]=new ZaOperation(ZaOperation.VIEW,ZaMsg.TBB_View,com_zimbra_delegatedadmin.RIGHT_View_tt,"Properties","PropertiesDis",new AjxListener(this,ZaRightsListViewController.prototype._editButtonListener))
};
ZaController.initPopupMenuMethods.ZaRightsListViewController.push(ZaRightsListViewController.initPopupMenuMethod);
ZaRightsListViewController.prototype._createUI=function(){
try{
var t=new Object();
this._contentView=new ZaRightsSearchXFormView(this._container);
this._initPopupMenu();
this._actionMenu=new ZaPopupMenu(this._contentView,"ActionMenu",null,this._popupOperations);
t[ZaAppViewMgr.C_APP_CONTENT]=this._contentView;
ZaApp.getInstance().getAppViewMgr().createView(this.getContentViewId(),t);
this._removeConfirmMessageDialog=new ZaMsgDialog(ZaApp.getInstance().getAppCtxt().getShell(),null,[DwtDialog.YES_BUTTON,DwtDialog.NO_BUTTON]);
this._UICreated=true;
ZaApp.getInstance()._controllers[this.getContentViewId()]=this
}
catch(e){
this._handleException(e,"ZaRightsListViewController.prototype._createUI",null,false);
return
}};
ZaRightsListViewController.setViewMethod=function(e){
if(!this._UICreated){
this._createUI()
}
ZaApp.getInstance().pushView(this.getContentViewId());
this._contentView.setDirty(false);
this._contentView.setObject(e);
this._currentObject=e
};
ZaController.setViewMethods.ZaRightsListViewController.push(ZaRightsListViewController.setViewMethod);
ZaRightsListViewController.prototype.set=function(e){
this.show(e)
};
ZaRightsListViewController.prototype.getAppBarAction=function(){
if(AjxUtil.isEmpty(this._appbarOperation)){
this._appbarOperation[ZaOperation.HELP]=new ZaOperation(ZaOperation.HELP,ZaMsg.TBB_Help,ZaMsg.TBB_Help_tt,"Help","Help",new AjxListener(this,this._helpButtonListener))
}
return this._appbarOperation
};
ZaRightsListViewController.prototype.getAppBarOrder=function(){
if(AjxUtil.isEmpty(this._appbarOrder)){
this._appbarOrder.push(ZaOperation.HELP)
}
return this._appbarOrder
};
ZaRightsListViewController.prototype.handleRightChange=function(t){
if(t){
var e=t.getDetails();
if(e){
if(this._list){
this._list.replace(e)
}
if(this._contentView){
this._contentView.setUI()
}
if(ZaApp.getInstance().getCurrentController()==this){
this.show()
}
this.changeActionsState()
}}};
ZaRightsListViewController.prototype.handleRightCreation=function(e){
if(e){
if(e.getDetails()){
if(this._list){
this._list.add(e.getDetails())
}
if(this._contentView){
this._contentView.setUI()
}
if(ZaApp.getInstance().getCurrentController()==this){
this.show()
}}}};
ZaRightsListViewController.prototype.handleRightRemoval=function(e){
if(e){
if(e.getDetails()){
if(this._list){
this._list.remove(e.getDetails())
}
if(this._contentView){
this._contentView.setUI()
}
if(ZaApp.getInstance().getCurrentController()==this){
this.show()
}}}};
ZaRightsListViewController.prototype.addRightRemovalListener=function(e){
this._evtMgr.addListener(ZaEvent.E_REMOVE,e)
};
ZaRightsListViewController.prototype._fireRightRemovalEvent=function(o){
try{
if(this._evtMgr.isListenerRegistered(ZaEvent.E_REMOVE)){
var e=new ZaEvent(ZaEvent.S_SERVER);
e.set(ZaEvent.E_REMOVE,this);
e.setDetails(o);
this._evtMgr.notifyListeners(ZaEvent.E_REMOVE,e)
}}
catch(t){
this._handleException(t,ZaRightsListViewController.prototype._fireRightRemovalEvent,o,false)
}};
ZaRightsListViewController.prototype._newButtonListener=function(t){
var e=new ZaRight();
ZaApp.getInstance().getRightViewController().show(e)
};
ZaRightsListViewController.prototype._listSelectionListener=function(e){
if(e.detail==DwtListView.ITEM_DBL_CLICKED){
if(e.item){
this._selectedItem=e.item;
ZaApp.getInstance().getRightViewController().show(e.item)
}}else{
this.changeActionsState()
}};
ZaRightsListViewController.prototype._listActionListener=function(e){
this.changeActionsState();
this._actionMenu.popup(0,e.docX,e.docY)
};
ZaRightsListViewController.prototype._editButtonListener=function(n){
var o=this._contentView.getMyForm();
if(o){
var r=o.getItemsById(ZaRight.A2_filteredRightsList);
var s=r[0].widget;
var t=s.getSelection();
if(t.length>0){
ZaApp.getInstance().getRightViewController().show(t[0]);
var e=ZaTree.getPathByArray([ZaMsg.OVP_home,ZaMsg.OVP_configure,com_zimbra_delegatedadmin.OVP_rights]);
ZaZimbraAdmin.getInstance().getOverviewPanelController().addObjectItem(e,t[0].name,null,false,false,t[0])
}}};
ZaRightsListViewController.prototype._deleteButtonListener=function(s){
this._removeList=new Array();
var e=this._contentView.getMyForm();
if(!e){
return
}
var o=e.getItemsById(ZaRight.A2_filteredRightsList);
var r=o[0].widget;
var l=r.getSelection();
if(l.length>0){
var c=l;
var t=c.length;
for(var d=0;
d<t;
d++){
if(c[d]){
this._removeList.push(c[d])
}}}
if(this._removeList.length){
dlgMsg=ZaMsg.Q_DELETE_SERVERS;
dlgMsg+="<br>";
for(var d in this._removeList){
if(i>19){
dlgMsg+="<li>...</li>";
break
}
dlgMsg+="<li>";
if(this._removeList[d].name.length>50){
var n=49;
var u=0;
while(n<this._removeList[d].name.length){
dlgMsg+=this._removeList[d].name.slice(u,n);
u=n+1;
if(u>=(this._removeList[d].name.length)){
break
}
n=(this._removeList[d].name.length<=(n+50))?this._removeList[d].name.length-1:(n+50);
dlgMsg+="<br>"
}}else{
dlgMsg+=this._removeList[d].name
}
dlgMsg+="</li>";
i++
}
this._removeConfirmMessageDialog.setMessage(dlgMsg,DwtMessageDialog.INFO_STYLE);
this._removeConfirmMessageDialog.registerCallback(DwtDialog.YES_BUTTON,ZaRightsListViewController.prototype._deleteRightsCallback,this);
this._removeConfirmMessageDialog.registerCallback(DwtDialog.NO_BUTTON,ZaRightsListViewController.prototype._donotDeleteRightsCallback,this);
this._removeConfirmMessageDialog.popup()
}};
ZaRightsListViewController.prototype._deleteRightsCallback=function(){
var o=new Array();
for(var t in this._removeList){
if(this._removeList[t]){
try{
this._removeList[t].remove();
o.push(this._removeList[t])
}
catch(e){
this._removeConfirmMessageDialog.popdown();
this._handleException(e,ZaRightsListViewController.prototype._deleteRightsCallback,null,false);
return
}}
if(this._list){
this._list.remove(this._removeList[t])
}}
this._fireRightRemovalEvent(o);
this._removeConfirmMessageDialog.popdown();
if(this._contentView){
this._contentView.setUI()
}
this.show()
};
ZaRightsListViewController.prototype._donotDeleteRightsCallback=function(){
this._removeList=new Array();
this._removeConfirmMessageDialog.popdown()
};
ZaRightsListViewController.changeActionsStateMethod=function(){
if(this._contentView){
var t=this._contentView.getMyForm();
if(!t){
return
}
var n=t.getItemsById(ZaRight.A2_filteredRightsList);
var o=n[0].widget;
var e=o.getSelection().length;
if(e>1){
if(this._popupOperations[ZaOperation.VIEW]){
this._popupOperations[ZaOperation.VIEW].enabled=false
}}else{
if(e<1){
if(this._popupOperations[ZaOperation.VIEW]){
this._popupOperations[ZaOperation.VIEW].enabled=false
}}}}};
ZaController.changeActionsStateMethods.ZaRightsListViewController.push(ZaRightsListViewController.changeActionsStateMethod);
ZaRightSelectionDialog=function(e,o,t){
if(arguments.length==0){
return
}
this._standardButtons=[DwtDialog.CANCEL_BUTTON,DwtDialog.OK_BUTTON];
ZaXDialog.call(this,e,null,t,"400px","400px");
this._containedObject={};
this.initForm(ZaRightSelectionDialog.myXModel,this.getMyXForm())
};
ZaRightSelectionDialog.prototype=new ZaXDialog;
ZaRightSelectionDialog.prototype.constructor=ZaRightSelectionDialog;
ZaRightSelectionDialog.myXModel={
items:[{
id:ZaRight.A_id,ref:ZaRight.A_id,type:_STRING_}
,{
id:ZaRight.A_name,ref:ZaRight.A_name,type:_STRING_}
,{
id:ZaRight.A_type,ref:ZaRight.A_type,type:_ENUM_,choices:ZaZimbraRights.type}
,{
id:ZaRight.A_targetType,ref:ZaRight.A_targetType,type:_LIST_,choices:ZaZimbraRights.targetType}
,{
id:ZaRight.A_definedBy,ref:ZaRight.A_definedBy,type:_ENUM_,choices:ZaZimbraRights.definedBy}
,{
id:ZaRight.A_rights,ref:ZaRight.A_rights,type:_LIST_,listItem:{
type:_STRING_}}
,{
id:ZaRight.A2_selected_rights,ref:ZaRight.A2_selected_rights,type:_LIST_,listItem:{
type:_STRING_}}
]};
ZaRightSelectionDialog.prototype.getMyXForm=function(){
var e={
numCols:1,items:[{
type:_GROUP_,isTabGroup:true,numCols:2,colSizes:[100,"*"],items:[{
type:_SPACER_}
,{
ref:ZaRight.A_name,type:_TEXTFIELD_,label:com_zimbra_delegatedadmin.Label_right_name}
,{
ref:ZaRight.A_type,type:_OSELECT1_,label:com_zimbra_delegatedadmin.Label_right_type,labelLocation:_LEFT_,choices:ZaZimbraRights.type,onChange:ZaRightSelectionDialog.filterChanged}
,{
type:_GROUP_,label:com_zimbra_delegatedadmin.Label_target_type,nowrap:true,labelLocation:_LEFT_,colSpan:"*",numCols:4,colSizes:[20,100,20,"*"],items:[{
type:_CHECKBOX_,label:"Account",labelLocation:_RIGHT_}
,{
type:_CHECKBOX_,label:"Calendar Resource",labelLocation:_RIGHT_}
,{
type:_CHECKBOX_,label:"Cos",labelLocation:_RIGHT_}
,{
type:_CHECKBOX_,label:"Distribution List",labelLocation:_RIGHT_}
,{
type:_CHECKBOX_,label:"Domain",labelLocation:_RIGHT_}
,{
type:_CHECKBOX_,label:"Global Config",labelLocation:_RIGHT_}
,{
type:_CHECKBOX_,label:"Global Grant",labelLocation:_RIGHT_}
,{
type:_CHECKBOX_,label:"Right",labelLocation:_RIGHT_}
,{
type:_CHECKBOX_,label:"Server",labelLocation:_RIGHT_}
,{
type:_CHECKBOX_,label:"XMPP Component",labelLocation:_RIGHT_}
,{
type:_CHECKBOX_,label:"Zimlet",labelLocation:_RIGHT_}
]}
,{
type:_SPACER_,height:"10px"}
,{
type:_GROUP_,colSpan:"*",colSizes:["100px","*"],numCols:2,items:[{
type:_OUTPUT_,value:com_zimbra_delegatedadmin.Label_rights_to_add,width:100,valign:_CENTER_,align:_RIGHT_}
,{
ref:ZaRight.A_rights,type:_DWT_LIST_,height:200,width:"300px",forceUpdate:true,cssClass:"DLSource",widgetClass:ZaRightsMiniListView,onSelection:ZaRightSelectionDialog.getSelectedRights,hideHeader:false}
]}
]}
]};
return e
};
ZaRightSelectionDialog.filterChanged=function(r,s,n){
var e=n.getInstance();
this.setInstanceValue(r);
var t=e;
var o=ZaZimbraRights.getRights(t);
this.setInstanceValue(o,ZaRight.A_rights)
};
ZaRightSelectionDialog.getSelectedRights=function(t){
var e=this.widget.getSelection();
this.setInstanceValue(e,ZaRight.A2_selected_rights)
};
function ZaRightsSearchXFormView(e){
ZaTabView.call(this,e,"ZaRightsSearchXFormView","DwtTabView ZaXFormListView",ZaId.TAB_VIEWRIGHTS);
this.initForm(ZaRight.myXModel,this.getMyXForm());
this._localXForm.removeListener(DwtEvent.XFORMS_VALUE_CHANGED,this.formChangeListener);
this._localXForm.setController(ZaApp.getInstance())
}
ZaRightsSearchXFormView.prototype=new ZaTabView();
ZaRightsSearchXFormView.prototype.constructor=ZaRightsSearchXFormView;
ZaTabView.XFormModifiers.ZaRightsSearchXFormView=new Array();
ZaRightsSearchXFormView.prototype.toString=function(){
return"ZaRightsSearchXFormView"
};
ZaRightsSearchXFormView.prototype.getTabTitle=function(){
return com_zimbra_delegatedadmin.manage_rights_title
};
ZaRightsSearchXFormView.prototype.getTabIcon=function(){
return"RightObject"
};
ZaRightsSearchXFormView.prototype.setObject=function(t){
var e=this._localXForm.getInstance();
if(!e){
e={}
}
if(!t){
e[ZaRight.A2_allRightsList]=[]
}else{
e[ZaRight.A2_allRightsList]=t.getArray()
}
if(!e[ZaRight.A2_searchRightQuery]){
e[ZaRight.A2_filteredRightsList]=e[ZaRight.A2_allRightsList]
}
e[ZaRight.A2_filterType]="all";
this._localXForm.setInstance(e)
};
ZaRightsSearchXFormView.getCustomHeight=function(){
try{
var s=this.getForm();
var r=this.getForm().parent.getHtmlElement();
var o=parseInt(r.style.height);
if(isNaN(o)){
o=r.clientHeight?r.clientHeight:r.offsetHeight
}
var l=s.getItemsById("xform_header");
var e=0;
if(l){
var n=l[0];
if(n){
e=n.getElement().clientHeight?n.getElement().clientHeight:n.getElement().offsetHeight
}}
if(o<=0){
return"100%"
}else{
return o-e-2
}}
catch(t){}
return"100%"
};
ZaRightsSearchXFormView.getCustomWidth=function(){
try{
var o=this.getForm();
var n=this.getForm().parent.getHtmlElement();
var e=parseInt(n.style.width);
if(isNaN(e)){
e=n.clientWidth?n.clientWidth:n.offsetWidth
}
if(e<=0){
return"100%"
}else{
return e
}}
catch(t){}
return"100%"
};
ZaRightsSearchXFormView.onSelectionListener=function(t){
if(t.detail==DwtListView.ITEM_DBL_CLICKED){
if(t.item){
this._selectedItem=t.item;
ZaApp.getInstance().getRightViewController().show(t.item);
var e=ZaTree.getPathByArray([ZaMsg.OVP_home,ZaMsg.OVP_configure,com_zimbra_delegatedadmin.OVP_rights]);
ZaZimbraAdmin.getInstance().getOverviewPanelController().addObjectItem(e,t.item.name,null,false,false,t.item)
}}else{
ZaApp.getInstance().getRightsListController().changeActionsState()
}};
ZaRightsSearchXFormView.rightsFilter=function(s,t,l,r){
var u=[];
if(!s){
return u
}
if(!t&&!l){
return s
}
for(var o=0;
o<s.length;
o++){
var c=true;
var n=true;
var d=s[o];
var e=r?r:"FALSE";
if(t){
if(e=="TRUE"&&d.attrs[ZaRight.A_name].indexOf(t)<0){
c=false
}else{
if(e=="FALSE"&&d.attrs[ZaRight.A_name].toLowerCase().indexOf(t.toLowerCase())<0){
c=false
}}}
if(l&&d.attrs[ZaRight.A_type]!=l){
n=false
}
if(c&&n){
u.push(d)
}}
return u
};
ZaRightsSearchXFormView.querySearch=function(s){
var t=this.getInstance();
if(!t){
return
}
var r=t[ZaRight.A2_searchRightQuery];
var n=t[ZaRight.A2_filterType];
var o=t[ZaRight.A2_filterCaseSensitiveEnabled];
var l=t[ZaRight.A2_allRightsList];
var e=ZaRightsSearchXFormView.rightsFilter(l,r,(n=="all"?null:n),o);
this.getModel().setInstanceValue(t,ZaRight.A2_filteredRightsList,e)
};
ZaRightsSearchXFormView.createPopupMenu=function(e){
popupOperations=[new ZaOperation(ZaOperation.EDIT,ZaMsg.TBB_View,com_zimbra_delegatedadmin.RIGHT_View_tt,"Properties","PropertiesDis",new AjxListener(this,ZaRightsSearchXFormView.viewRightsListener))];
e.actionMenu=new ZaPopupMenu(e,"ActionMenu",null,popupOperations);
e.addActionListener(new AjxListener(e,ZaRightsSearchXFormView.listActionListener));
e.xFormItem=this
};
ZaRightsSearchXFormView.listActionListener=function(e){
this.actionMenu.popup(0,e.docX,e.docY)
};
ZaRightsSearchXFormView.viewRightsListener=function(t){
var e=this.getSelection();
if(e.length>0){
ZaApp.getInstance().getRightViewController().show(e[0])
}};
ZaRightsSearchXFormView.myXFormModifier=function(e){
e.tableCssStyle="width:100%;overflow:auto;";
e.items=[{
type:_GROUP_,visibilityChecks:[],colSizes:["100px","120px","3px","*","80px","30px","100px"],numCols:7,width:"100%",id:"xform_header",items:[{
type:_OSELECT1_,ref:ZaRight.A2_filterType,label:com_zimbra_delegatedadmin.LBL_searchRights,labelLocation:_LEFT_,choices:ZaRight.FILTER_TYPE_CHOICES,align:_RIGHT_}
,{
type:_TEXTFIELD_,width:"100%",ref:ZaRight.A2_searchRightQuery,containerCssClass:"search_field_container",label:"",cssClass:"search_input",visibilityChecks:[],enableDisableChecks:[],elementChanged:function(s,n,o){
var t=o.charCode;
if(t==13||t==3){
ZaRightsSearchXFormView.querySearch.call(this)
}else{
this.getForm().itemChanged(this,s,o)
}}}
,{
type:_DWT_BUTTON_,label:com_zimbra_delegatedadmin.BTL_searchButton,id:"searchRightButton",onActivate:ZaRightsSearchXFormView.querySearch,visibilityChecks:[],enableDisableChecks:[]}
,{
ref:ZaRight.A2_filterCaseSensitiveEnabled,type:_CHECKBOX_,subLabel:"",msgName:com_zimbra_delegatedadmin.LBL_searchCaseSensitive,labelLocation:_RIGHT_,label:com_zimbra_delegatedadmin.LBL_searchCaseSensitive,trueValue:"TRUE",falseValue:"FALSE"}
]}
,{
type:_SPACER_,colSpan:3}
,{
ref:ZaRight.A2_filteredRightsList,colSpan:3,cssClass:"ZaFullPageXFormListView",onSelection:ZaRightsSearchXFormView.onSelectionListener,type:_DWT_LIST_,forceUpdate:true,createPopupMenu:ZaRightsSearchXFormView.createPopupMenu,multiselect:false,widgetClass:ZaRightsListView,headerList:ZaRightsListView._getHeaderList(),getCustomHeight:ZaRightsSearchXFormView.getCustomHeight,getCustomWidth:ZaRightsSearchXFormView.getCustomWidth,visibilityChecks:[],enableDisableChecks:[]}
]
};
ZaTabView.XFormModifiers.ZaRightsSearchXFormView.push(ZaRightsSearchXFormView.myXFormModifier);
ZaGrant=function(){
ZaItem.call(this,"ZaGrant");
this._init();
this.type=ZaItem.GRANT
};
ZaGrant.prototype=new ZaItem;
ZaGrant.prototype.constructor=ZaGrant;
ZaItem.loadMethods.ZaGrant=[];
ZaItem.initMethods.ZaGrant=[];
ZaGrant.A_id="id";
ZaGrant.A_by="by";
ZaGrant.A_grantee="grantee";
ZaGrant.A_grantee_id="grantee_id";
ZaGrant.A_grantee_type="grantee_type";
ZaGrant.A_right="right";
ZaGrant.A_deny="deny";
ZaGrant.A_allow="allow";
ZaGrant.A_canDelegate="canDelegate";
ZaGrant.A_canInheritBySubDomain="subDomain";
ZaGrant.A_disinheritSubGroups="disinheritSubGroups";
ZaGrant.A_target="target";
ZaGrant.A_target_id="target_id";
ZaGrant.A_target_type="target_type";
ZaGrant.A_right_type="right_type";
ZaGrant.A_inline_right="inline_right";
ZaGrant.A_inline_verb="verb";
ZaGrant.A_inline_target_type="inline_target_type";
ZaGrant.A_inline_attr="inline_attr";
ZaGrant.A2_grantsList="grantsList";
ZaGrant.A2_grantsListSelectedItems="grantsListSelectedItems";
ZaGrant.A2_grantStatus="grantStatus";
ZaGrant.A2_showGrantStatus="showGrantStatus";
ZaGrant.A2_isAdmin="isAdmin";
ZaGrant.A2_grantee_email="grantee_email";
ZaGrant.A2_extDomainName="extDomainName";
ZaGrant.A2_extGroupName="extGroupName";
ZaGrant.A2_extEgp="isExtEgp";
ZaGrant.A2_grantee_old_type="grantee_old_type";
ZaGrant.A3_directGrantsList=ZaGrant.A2_grantsList;
ZaGrant.A3_indirectGrantsList="indirectGrantsList";
ZaGrant.GRANTEE_TYPE={
usr:"usr",grp:"grp"};
ZaGrant.GRANTEE_TYPE_CHOICES=["usr","grp"];
ZaGrant.RIGHT_TYPE_CHOICES=[{
value:"system",label:com_zimbra_delegatedadmin.Col_system_right}
,{
value:"inline",label:com_zimbra_delegatedadmin.Col_inline_right}
];
ZaGrant.GLOBAL_TARGET_NAME="globalacltarget";
ZaGrant.GLOBAL_CONFIG_TARGET_NAME="globalconfig";
ZaGrant.INLINE_VERB_TYPE_CHOICES=[{
value:"set",label:com_zimbra_delegatedadmin.Col_inline_verb_set}
,{
value:"get",label:com_zimbra_delegatedadmin.Col_inline_verb_get}
];
ZaGrant.getGlobalGrantsList=function(){
var e=new ZaItemRightList(ZaRight);
e._vector=AjxVector.fromArray(ZaGrant.loadMethod(null,null,"global"));
return e
};
ZaGrant.loadMethod=function(t,n,e){
var o={
target:{}};
if(!e){
e=this.type
}
if(e==ZaItem.GLOBAL_GRANT||e==ZaItem.GLOBAL_CONFIG){
o.target.val=""
}else{
if(n==null||n.length<=0){
return
}
o.target.val=n;
o.target.by=t
}
o.target.type=e;
return ZaGrant.load.call(this,o)
};
ZaGrant.load=function(c){
if(!ZaItem.hasReadPermission(ZaItem.A_zimbraACE,this)){
return
}
var p=AjxSoapDoc.create("GetGrantsRequest",ZaZimbraAdmin.URN,null);
var n,l;
if(c.target!=null){
if((c.target.type==ZaItem.GLOBAL_GRANT)||(c.target.type==ZaItem.GLOBAL_CONFIG)){
n=p.set(ZaGrant.A_target,"")
}else{
n=p.set(ZaGrant.A_target,c.target.val);
n.setAttribute("by",c.target.by)
}
n.setAttribute("type",c.target.type)
}
if(c.grantee!=null){
l=p.set(ZaGrant.A_grantee,c.grantee.val);
l.setAttribute("by",c.grantee.by);
l.setAttribute("type",c.grantee.type);
if(c.grantee.all!=null){
l.setAttribute("all",c.grantee.all)
}}
var m=ZaApp.getInstance().getCurrentController();
try{
var y=new Object();
y.soapDoc=p;
var s={
controller:m,busyMsg:com_zimbra_delegatedadmin.BUSY_GET_GRANTS};
var d=ZaRequestMgr.invoke(y,s).Body.GetGrantsResponse;
var b=d.grant;
var r=[];
if(b!=null){
for(var u=0;
u<b.length;
u++){
var t=new ZaGrant();
var g=b[u].target[0];
t[ZaGrant.A_target]=g.name;
t[ZaGrant.A_target_id]=g.id;
t[ZaGrant.A_target_type]=g.type;
var o=b[u].right[0];
t[ZaGrant.A_deny]=o[ZaGrant.A_deny]?"1":"0";
t[ZaGrant.A_allow]=o[ZaGrant.A_deny]?"0":"1";
t[ZaGrant.A_canDelegate]=o[ZaGrant.A_canDelegate]?"1":"0";
t[ZaGrant.A_disinheritSubGroups]=o[ZaGrant.A_disinheritSubGroups]?"1":"0";
t[ZaGrant.A_canInheritBySubDomain]=o[ZaGrant.A_canInheritBySubDomain]?"1":"0";
t[ZaGrant.A_right]=o._content;
var e=b[u].grantee[0];
t[ZaGrant.A_grantee]=e.name;
t[ZaGrant.A_grantee_type]=e.type;
if(t[ZaGrant.A_grantee_type]=="egp"){
t[ZaGrant.A_grantee]=t[ZaGrant.A_target]+":"+t[ZaGrant.A_grantee]
}
t[ZaGrant.A_grantee_id]=e.id;
r.push(t)
}}
if((c.target&&c.target.type==ZaItem.GLOBAL_GRANT)||c.isAllGrants){
return r
}else{
this[ZaGrant.A2_grantsList]=r
}}
catch(f){
if(m){
m.popupErrorDialog(com_zimbra_delegatedadmin.error_get_permission+f.msg,f)
}}};
ZaGrant.assignMultiGrants=function(o){
if(o.resultObj==null){
o.resultObj={
msg:[],status:0}
}
if(o.rightsArr==null||o.rightsArr.length<=0){
o.resultObj.msg.push(com_zimbra_delegatedadmin.no_rights_to_assign)
}else{
if(o.currentIndex==null||o.currentIndex<0){
o.currentIndex=0
}
if(o.currentIndex<o.rightsArr.length){
var e=o.rightsArr[o.currentIndex];
var n=new AjxCallback(this,ZaGrant.assignMultiGrantsCallback,[o]);
o.resultObj.msg.push(AjxMessageFormat.format(com_zimbra_delegatedadmin.msg_proposed_grants_start,[ZaNewAdminWizard.getProposedGrantMsg(e,o)]));
ZaGrant.grantMethod(e,n)
}else{
o.resultObj.msg.push(com_zimbra_delegatedadmin.msg_proposed_grants_done)
}}
if(!ZaApp.getInstance().dialogs.createProposedGrantsListStatusDialog){
ZaApp.getInstance().dialogs.createProposedGrantsListStatusDialog=new ZaMsgDialog(ZaApp.getInstance().getAppCtxt().getShell())
}
var t=ZaApp.getInstance().dialogs.createProposedGrantsListStatusDialog;
t.setSize(400,100);
if(o.showStatus==1){
if(!t.isPoppedUp()){
t.popup()
}
t.setMessage(o.resultObj.msg.join(""))
}else{
if((o.showStatus==-1)&&(o.currentIndex>=o.rightsArr.length)){
if(o.resultObj.status<0){
if(!t.isPoppedUp()){
t.popup()
}
t.setMessage(o.resultObj.msg.join(""))
}}}};
ZaGrant.assignMultiGrantsCallback=function(t,e){
if(!e||e.isException()){
t.resultObj.status=-1;
t.resultObj.msg.push("<font color='red'>"+com_zimbra_delegatedadmin.msg_proposed_grants_failed+"</font>")
}else{
t.resultObj.msg.push(com_zimbra_delegatedadmin.msg_proposed_grants_granted)
}
t.currentIndex++;
ZaGrant.assignMultiGrants.call(this,t)
};
ZaGrant.revokeMultiGrants=function(o){
if(o.resultObj==null){
o.resultObj={
msg:[],status:0,}
}
if(o.rightsArr==null||o.rightsArr.length<=0){
o.resultObj.msg.push(com_zimbra_delegatedadmin.no_rights_to_assign)
}else{
if(o.currentIndex==null||o.currentIndex<0){
o.currentIndex=0
}
if(o.currentIndex<o.rightsArr.length){
var e=o.rightsArr[o.currentIndex];
var n=new AjxCallback(this,ZaGrant.revokeMultiGrantsCallback,[o]);
o.resultObj.msg.push(AjxMessageFormat.format(com_zimbra_delegatedadmin.msg_proposed_grants_start,[ZaNewAdminWizard.getProposedGrantMsg(e,o)]));
ZaGrant.revokeMethod(e,n)
}else{
o.resultObj.msg.push(com_zimbra_delegatedadmin.msg_proposed_grants_done)
}}
if(!ZaApp.getInstance().dialogs.createProposedGrantsListStatusDialog){
ZaApp.getInstance().dialogs.createProposedGrantsListStatusDialog=new ZaMsgDialog(ZaApp.getInstance().getAppCtxt().getShell())
}
var t=ZaApp.getInstance().dialogs.createProposedGrantsListStatusDialog;
t.setSize(400,100);
if(o.showStatus==1){
if(!t.isPoppedUp()){
t.popup()
}
t.setMessage(o.resultObj.msg.join(""))
}else{
if(o.showStatus==-1&&o.currentIndex>=o.rightsArr.length){
if(o.resultObj.status<0){
if(!t.isPoppedUp()){
t.popup()
}
t.setMessage(o.resultObj.msg.join(""))
}}}};
ZaGrant.revokeMultiGrantsCallback=function(t,e){
if(!e||e.isException()){
t.resultObj.status=-1;
t.resultObj.msg.push("<font color='red'>"+com_zimbra_delegatedadmin.msg_proposed_grants_failed+"</font>")
}else{
t.resultObj.msg.push(com_zimbra_delegatedadmin.msg_proposed_grants_granted)
}
t.currentIndex++;
ZaGrant.revokeMultiGrants.call(this,t)
};
ZaGrant.getGranteeTypeByItemType=function(t){
var e=null;
if(t!=null){
if(t==ZaItem.ACCOUNT){
e=ZaGrant.GRANTEE_TYPE.usr
}else{
if(t==ZaItem.DL){
e=ZaGrant.GRANTEE_TYPE.grp
}}}
return e
};
ZaGrant.grantMethod=function(s,u){
if(window.console&&window.console.log){
console.log("Grant Rights ...")
}
var d=AjxSoapDoc.create("GrantRightRequest",ZaZimbraAdmin.URN,null);
var e=d.set(ZaGrant.A_target,s[ZaGrant.A_target]);
e.setAttribute("by","name");
e.setAttribute("type",s[ZaGrant.A_target_type]);
var o=d.set(ZaGrant.A_grantee,s[ZaGrant.A_grantee]);
o.setAttribute("by","name");
o.setAttribute("type",s[ZaGrant.A_grantee_type]);
var c=d.set("right",s[ZaGrant.A_right]);
if(s[ZaGrant.A_deny]=="1"){
c.setAttribute("deny","1")
}
if(s[ZaGrant.A_canDelegate]=="1"){
c.setAttribute(ZaGrant.A_canDelegate,"1")
}
if(s[ZaGrant.A_disinheritSubGroups]=="1"){
c.setAttribute(ZaGrant.A_disinheritSubGroups,"1")
}
if(s[ZaGrant.A_canInheritBySubDomain]=="1"){
c.setAttribute(ZaGrant.A_canInheritBySubDomain,"1")
}
var r=ZaApp.getInstance().getCurrentController();
try{
var n=new Object();
n.soapDoc=d;
if(u){
n.asyncMode=true;
n.callback=u
}
var t={
controller:r,busyMsg:com_zimbra_delegatedadmin.BUSY_GRANTING_RIGHT};
ZaRequestMgr.invoke(n,t);
return true
}
catch(l){
r.popupErrorDialog(com_zimbra_delegatedadmin.error_grant_right+" "+l.msg,l);
return false
}};
ZaGrant.revokeMethod=function(r,m){
if(window.console&&window.console.log){
console.log("Revoke Rights ...")
}
var u=AjxSoapDoc.create("RevokeRightRequest",ZaZimbraAdmin.URN,null);
var e=r[ZaGrant.A_target_type];
if(e==ZaItem.GLOBAL_GRANT||e==ZaItem.GLOBAL_CONFIG){
var t=u.set(ZaGrant.A_target,"")
}else{
if(e==ZaItem.ZIMLET){
var t=u.set(ZaGrant.A_target,r[ZaGrant.A_target]);
t.setAttribute("by","name")
}else{
var t;
if(r[ZaGrant.A_target_id]){
t=u.set(ZaGrant.A_target,r[ZaGrant.A_target_id]);
t.setAttribute("by","id")
}else{
if(r[ZaGrant.A_target]){
t=u.set(ZaGrant.A_target,r[ZaGrant.A_target]);
t.setAttribute("by","name")
}}}}
t.setAttribute("type",e);
var s;
if(r[ZaGrant.A_grantee_id]){
s=u.set(ZaGrant.A_grantee,r[ZaGrant.A_grantee_id]);
s.setAttribute("by","id")
}else{
if(r[ZaGrant.A_grantee]){
s=u.set(ZaGrant.A_grantee,r[ZaGrant.A_grantee]);
s.setAttribute("by","name")
}}
s.setAttribute("type",r[ZaGrant.A_grantee_type]);
var d=u.set("right",r[ZaGrant.A_right]);
if(r[ZaGrant.A_deny]=="1"){
d.setAttribute("deny","1")
}
if(r[ZaGrant.A_canDelegate]=="1"){
d.setAttribute(ZaGrant.A_canDelegate,"1")
}
if(r[ZaGrant.A_disinheritSubGroups]=="1"){
d.setAttribute(ZaGrant.A_disinheritSubGroups,"1")
}
if(r[ZaGrant.A_canInheritBySubDomain]=="1"){
d.setAttribute(ZaGrant.A_canInheritBySubDomain,"1")
}
var l=ZaApp.getInstance().getCurrentController();
try{
var n=new Object();
n.soapDoc=u;
if(m){
n.asyncMode=true;
n.callback=m
}
var o={
controller:l,busyMsg:com_zimbra_delegatedadmin.BUSY_DELETE_RIGHT,};
ZaRequestMgr.invoke(n,o);
return true
}
catch(c){
l.popupErrorDialog(com_zimbra_delegatedadmin.error_revoke_right+" "+c.msg,c);
return false
}};
ZaGrant.myXModel={
items:[{
id:ZaGrant.A_grantee,type:_STRING_,ref:ZaGrant.A_grantee,required:true}
,{
id:ZaGrant.A2_grantee_email,type:_STRING_,ref:ZaGrant.A2_grantee_email}
,{
id:ZaGrant.A2_extDomainName,type:_STRING_,ref:ZaGrant.A2_extDomainName}
,{
id:ZaGrant.A2_extGroupName,type:_STRING_,ref:ZaGrant.A2_extGroupName}
,{
id:ZaGrant.A2_extEgp,type:_ENUM_,ref:ZaGrant.A2_extEgp,choices:ZaModel.BOOLEAN_CHOICES1}
,{
id:ZaGrant.A_grantee_id,type:_STRING_,ref:ZaGrant.A_grantee_id}
,{
id:ZaGrant.A_grantee_type,type:_STRING_,ref:ZaGrant.A_grantee_type,required:true,choices:ZaGrant.GRANT_TYPE}
,{
id:ZaGrant.A2_grantee_old_type,type:_STRING_,ref:ZaGrant.A2_grantee_old_type}
,{
id:ZaGrant.A_right,type:_STRING_,ref:ZaGrant.A_right,required:true}
,{
id:ZaGrant.A_deny,type:_ENUM_,ref:ZaGrant.A_deny,choices:ZaModel.BOOLEAN_CHOICES2}
,{
id:ZaGrant.A_allow,type:_ENUM_,ref:ZaGrant.A_allow,choices:ZaModel.BOOLEAN_CHOICES2}
,{
id:ZaGrant.A_canDelegate,type:_ENUM_,ref:ZaGrant.A_canDelegate,choices:ZaModel.BOOLEAN_CHOICES2}
,{
id:ZaGrant.A_disinheritSubGroups,type:_ENUM_,ref:ZaGrant.A_disinheritSubGroups,choices:ZaModel.BOOLEAN_CHOICES2}
,{
id:ZaGrant.A_canInheritBySubDomain,type:_ENUM_,ref:ZaGrant.A_canInheritBySubDomain,choices:ZaModel.BOOLEAN_CHOICES2}
,{
id:ZaGrant.A_target_type,ref:ZaGrant.A_target_type,type:_STRING_,choices:ZaZimbraRights.targetType}
,{
id:ZaGrant.A_target,type:_STRING_,ref:ZaGrant.A_target,required:true}
,{
id:ZaGrant.A_right_type,type:_ENUM_,ref:ZaGrant.A_right_type,required:true,choices:ZaGrant.RIGHT_TYPE_CHOICES}
,{
id:ZaGrant.A2_grantsList,type:_LIST_,ref:ZaGrant.A2_grantsList}
,{
id:ZaGrant.A2_grantsListSelectedItems,type:_LIST_,ref:ZaGrant.A2_grantsListSelectedItems}
,{
id:ZaGrant.A2_grantStatus,type:_ENUM_,ref:ZaGrant.A2_grantStatus,choices:ZaModel.BOOLEAN_CHOICES}
,{
id:ZaGrant.A2_showGrantStatus,type:_ENUM_,ref:ZaGrant.A2_showGrantStatus,choices:ZaModel.BOOLEAN_CHOICES}
,{
id:ZaGrant.A2_isAdmin,type:_ENUM_,ref:ZaGrant.A2_isAdmin,choices:ZaModel.BOOLEAN_CHOICES2}
,{
id:ZaGrant.A_inline_right,ref:ZaGrant.A_inline_right,type:_OBJECT_,items:[{
id:ZaGrant.A_inline_verb,type:_STRING_,ref:ZaGrant.A_inline_verb,choices:ZaGrant.INLINE_VERB_TYPE_CHOICES}
,{
id:ZaGrant.A_inline_target_type,type:_STRING_,ref:ZaGrant.A_inline_target_type,choices:ZaZimbraRights.inlineTargetType}
,{
id:ZaGrant.A_inline_attr,type:_STRING_,ref:ZaGrant.A_inline_attr}
]}
]};
ZaGrant.globalGrantsListTreeListener=function(e){
if(window.console&&window.console.log){
console.log("Show the global grants lists ...")
}
if(ZaApp.getInstance().getCurrentController()){
ZaApp.getInstance().getCurrentController().switchToNextView(ZaApp.getInstance().getGlobalGrantListController(),ZaGlobalGrantListViewController.prototype.show,ZaGrant.getGlobalGrantsList())
}else{
ZaApp.getInstance().getGlobalGrantListController().show(ZaGrant.getGlobalGrantsList())
}};
ZaGrant.grantsOvTreeModifier=function(e){
var t=this;
if(!t){
throw new Exception("ZaGrant.grantsOvTreeModifier: Overview Panel Controller is not set.")
}
if(ZaSettings.ENABLED_UI_COMPONENTS[ZaSettings.GLOBAL_PERMISSION_VIEW]||ZaSettings.ENABLED_UI_COMPONENTS[ZaSettings.CARTE_BLANCHE_UI]){
var o=ZaTree.getPathByArray([ZaMsg.OVP_home,ZaMsg.OVP_configure]);
var n=new ZaTreeItemData({
parent:o,id:ZaId.getTreeItemId(ZaId.PANEL_APP,ZaId.PANEL_CONFIGURATION,null,"GrantsHV"),text:com_zimbra_delegatedadmin.OVP_global_grants,mappingId:ZaZimbraAdmin._GLOBAL_GRANTS_LIST_VIEW}
);
e.addTreeItemData(n);
if(ZaOverviewPanelController.overviewTreeListeners){
ZaOverviewPanelController.overviewTreeListeners[ZaZimbraAdmin._GLOBAL_GRANTS_LIST_VIEW]=ZaGrant.globalGrantsListTreeListener
}}};
ZaGrant.getGrant=function(t,e,s,n){
if(t!=null){
for(var o=0;
o<t.length;
o++){
if(t[o].grantee===e&&t[o].target_id===s&&t[o].right===n){
return t[o].type
}}}
return null
};
if(ZaSettings&&ZaSettings.EnabledZimlet.com_zimbra_delegatedadmin){
ZaTargetPermission=function(){};
ZaGrantsListView=function(n,o,t,e){
if(arguments.length==0){
return
}
var o=o||null;
var t=t||DwtControl.STATIC_STYLE;
var e=e||ZaGrantsListView._getHeaderList();
ZaListView.call(this,n,o,t,e);
this._appCtxt=this.shell.getData(ZaAppCtxt.LABEL);
this.setMultiSelect(true)
};
ZaGrantsListView.prototype=new ZaListView;
ZaGrantsListView.prototype.constructor=ZaGrantsListView;
ZaGrantsListView.prototype.toString=function(){
return"ZaGrantsListView"
};
ZaGrantsListView.prototype.getTitle=function(){
return com_zimbra_delegatedadmin.GlobalGrants_view_title
};
ZaGrantsListView.prototype.getTabIcon=function(){
return"GlobalPermission"
};
ZaGrantsListView.prototype._createItemHtml=function(t,o,r){
if(t==null){
return
}
var c=new Array(50);
var e=document.createElement("div");
e[DwtListView._STYLE_CLASS]="Row";
e[DwtListView._SELECTED_STYLE_CLASS]=e[DwtListView._STYLE_CLASS]+"-"+DwtCssStyle.SELECTED;
e.className=e[DwtListView._STYLE_CLASS];
this.associateItemWithElement(t,e,DwtListView.TYPE_LIST_ITEM);
var m=0;
c[m++]="<table width='100%' cellspacing='0' cellpadding='0'>";
c[m++]="<tr>";
var n=this._headerList.length;
for(var l=0;
l<n;
l++){
var d=this._headerList[l]._field;
var s=this._getCellWidth(l,{}
);
c[m++]="<td align='left' width="+s+"><nobr>";
if(d==ZaGrant.A_right){
if(t[ZaGrant.A_deny]&&t[ZaGrant.A_deny]=="1"){
c[m++]="-"
}
if(t[ZaGrant.A_canDelegate]&&t[ZaGrant.A_canDelegate]=="1"){
c[m++]="+"
}
c[m++]=t[d]
}else{
if(d==ZaGrant.A_deny||d==ZaGrant.A_canDelegate){
continue
}else{
if(d!=null){
var u=t[d];
if(d==ZaGrant.A_grantee){
if(u==null||u.length<0){
u=t[ZaGrant.A_grantee_id]
}}
c[m++]=AjxStringUtil.htmlEncode(u)
}}}
c[m++]="</nobr></td>"
}
c[m++]="</tr></table>";
e.innerHTML=c.join("");
return e
};
ZaGrantsListView._getHeaderList=function(o,n){
var t=[];
var s=1;
if(!o){
o=1230
}
if(!n){
n=ZaGrant.A_target
}
var e=0;
if(n==ZaGrant.A_target){
t[e++]=new ZaListHeaderItem(ZaGrant.A_grantee,com_zimbra_delegatedadmin.Col_grantee_name,null,o/4+50,null,ZaGrant.A_grantee,true,true);
t[e++]=new ZaListHeaderItem(ZaGrant.A_grantee_type,com_zimbra_delegatedadmin.Col_grantee_type,null,o/4-10,null,ZaGrant.A_grantee_type,true,true)
}else{
if(n==ZaGrant.A_grantee){
t[e++]=new ZaListHeaderItem(ZaGrant.A_target,com_zimbra_delegatedadmin.Col_target_name,null,o/4+50,null,ZaGrant.A_target,true,true);
t[e++]=new ZaListHeaderItem(ZaGrant.A_target_type,com_zimbra_delegatedadmin.Col_target_type,null,100,null,ZaGrant.A_target_type,true,true)
}else{
if(n=="all"){
t[e++]=new ZaListHeaderItem(ZaGrant.A_grantee,com_zimbra_delegatedadmin.Col_grantee_name,null,200,null,ZaGrant.A_grantee,true,true);
t[e++]=new ZaListHeaderItem(ZaGrant.A_target,com_zimbra_delegatedadmin.Col_target_name,null,200,null,ZaGrant.A_target,true,true);
t[e++]=new ZaListHeaderItem(ZaGrant.A_target_type,com_zimbra_delegatedadmin.Col_target_type,null,100,null,ZaGrant.A_target_type,true,true)
}}}
t[e++]=new ZaListHeaderItem(ZaGrant.A_right,com_zimbra_delegatedadmin.Col_grant_right_name,null,"auto",null,ZaGrant.A_right,true,true);
return t
};
ZaGrantsListView.isDeleteEnabled=function(){
var e=this.getForm().getItemsById(ZaGrant.A2_grantsList)[0];
if(e&&e.getSelection()&&e.getSelection().length>0){
return true
}else{
return false
}};
ZaGrantsListView.isEditEnabled=ZaGrantsListView.isDeleteEnabled;
ZaGrantsListView.revokeRight=function(){
var t=this.getItemsById(ZaGrant.A2_grantsList)[0].getSelection();
if(t&&t.length>0){
var e=this.getInstance();
var r=e[ZaGrant.A2_grantsList];
var c={};
c[ZaGrant.A_target]=e.name;
c[ZaGrant.A_target_type]=e.type;
var n,l;
for(var s=0;
s<t.length;
s++){
n=ZaGrant.revokeMethod(t[s]);
if(n){
for(var o=0;
o<r.length;
o++){
if(t[s]==r[o]){
r.splice(o,1)
}}}else{
break
}}
if(n){
l=com_zimbra_delegatedadmin.GrantStatus_Revoke
}else{
l=com_zimbra_delegatedadmin.GrantStatus_Revoke_Failed
}
this.getModel().setInstanceValue(e,ZaGrant.A2_grantsList,r);
this.getModel().setInstanceValue(e,ZaGrant.A2_grantStatus,l);
this.setInstanceValue("TRUE",ZaGrant.A2_showGrantStatus);
this.refresh();
this.setInstanceValue("FALSE",ZaGrant.A2_showGrantStatus)
}
this.parent.revokeRightDlg.popdown()
};
ZaGrantsListView.revokeGlobalGrant=function(){
var e=this._contentView.getSelection();
if(e&&e.length>0){
var o={};
o[ZaGrant.A_target]="";
o[ZaGrant.A_target_type]="global";
for(var t=0;
t<e.length;
t++){
if(ZaGrant.revokeMethod(e[t])){
this.fireRemovalEvent(e[t])
}else{
break
}}}
this.revokeRightDlg.popdown()
};
ZaGrantsListView.grantSelectionListener=function(){
var e=this.getForm().getInstance();
var t=this.widget.getSelection();
this.getModel().setInstanceValue(e,ZaGrant.A2_grantsListSelectedItems,t)
};
ZaTargetPermission.grantListItem={
id:ZaGrant.A2_grantsList,ref:ZaGrant.A2_grantsList,type:_LIST_,listItems:{
type:_OBJECT_,items:[{
id:ZaGrant.A_target,type:_STRING_,ref:ZaGrant.A_target}
,{
id:ZaGrant.A_target_type,ref:ZaGrant.A_target_type,type:_STRING_,choices:ZaZimbraRights.targetType}
,{
id:ZaGrant.A_grantee,type:_STRING_,ref:ZaGrant.A_grantee,required:true}
,{
id:ZaGrant.A_grantee_type,type:_LIST_,ref:ZaGrant.A_grantee_type,required:true,choices:ZaGrant.GRANT_TYPE}
,{
id:ZaGrant.A_right,type:_STRING_,ref:ZaGrant.A_right,required:true}
,{
id:ZaGrant.A_canDelegate,type:_ENUM_,ref:ZaGrant.A_canDelegate,choices:ZaModel.BOOLEAN_CHOICES2}
,{
id:ZaGrant.A_deny,type:_ENUM_,ref:ZaGrant.A_allow,choices:ZaModel.BOOLEAN_CHOICES2}
,{
id:ZaGrant.A_deny,type:_ENUM_,ref:ZaGrant.A_deny,choices:ZaModel.BOOLEAN_CHOICES2}
]}};
ZaTargetPermission.getGrantsListXFormItem=function(c){
if(!c){
c={}
}
var t=c.width?c.width:620;
var n=c.height?c.height:200;
var l=c.by?c.by:ZaGrant.A_target;
var e={
ref:ZaGrant.A2_grantStatus,id:ZaGrant.A2_grantStatus,type:_DWT_ALERT_,width:"180px",style:DwtAlert.INFORMATION,iconVisible:false,bmolsnr:true,visibilityChangeEventSources:[ZaGrant.A2_grantsList,ZaGrant.A2_grantStatus,ZaGrant.A2_showGrantStatus],visibilityChecks:[[XForm.checkInstanceValue,ZaGrant.A2_showGrantStatus,"TRUE"]]};
var r={
ref:ZaGrant.A2_grantsList,id:ZaGrant.A2_grantsList,type:_DWT_LIST_,width:t,height:n,cssClass:"DLSource",widgetClass:ZaGrantsListView,headerList:ZaGrantsListView._getHeaderList(t,l),hideHeader:false,onSelection:ZaGrantsListView.grantSelectionListener,multiselect:true};
var s=(t-340)/2;
var o={
type:_GROUP_,numCols:5,colSizes:["100px","20px","100px","20px","100px"],height:30,cssStyle:"margin-bottom:10px;padding-bottom:0px;margin-top:10px;margin-left: "+s+"; margin-right:auto;",items:[{
type:_DWT_BUTTON_,label:com_zimbra_delegatedadmin.Bt_grant,width:"100px",enableDisableChecks:[[ZaItem.hasWritePermission,ZaItem.A_zimbraACE]],onActivate:"ZaTargetPermission.grantButtonListener.call (this, '"+l+"');"}
,{
type:_CELLSPACER_}
,{
type:_DWT_BUTTON_,label:ZaMsg.TBB_Edit,width:"100px",enableDisableChangeEventSources:[ZaGrant.A2_grantsListSelectedItems,ZaGrant.A2_grantsList],enableDisableChecks:[[ZaItem.hasWritePermission,ZaItem.A_zimbraACE],[ZaGrantsListView.isEditEnabled]],onActivate:"ZaTargetPermission.editButtonListener.call (this, '"+l+"');"}
,{
type:_CELLSPACER_}
,{
type:_DWT_BUTTON_,label:com_zimbra_delegatedadmin.Bt_revoke,width:"100px",enableDisableChangeEventSources:[ZaGrant.A2_grantsListSelectedItems,ZaGrant.A2_grantsList],enableDisableChecks:[[ZaItem.hasWritePermission,ZaItem.A_zimbraACE],[ZaGrantsListView.isDeleteEnabled]],onActivate:"ZaTargetPermission.revokeButtonListener.call(this);"}
]};
return[e,r,o]
};
ZaTargetPermission.targetXFormModifier=function(c,r){
var t=ZaTabView.isTAB_ENABLED(r,[ZaItem.A_zimbraACE],[]);
if(!t){
return
}
var s,e,n;
for(var o=0;
o<c.items.length;
o++){
if(c.items[o].type==_TAB_BAR_){
e=c.items[o]
}
if(c.items[o].type==_SWITCH_){
n=c.items[o]
}}
if(e&&n){
s=++this.TAB_INDEX;
e.choices.push({
value:s,label:com_zimbra_delegatedadmin.Tab_permission}
);
if(this.helpMap){
this.helpMap[s]=[location.pathname,ZaUtil.HELP_URL,"da_process/acl_tab.htm","?locid=",AjxEnv.DEFAULT_LOCALE].join("")
}}
var l={
type:_SUPER_TABCASE_,id:"target_form_permission_tab",numCols:1,colSizes:["650px"],paddingStyle:"padding-left:15px;",width:"98%",cellpadding:2,caseKey:s,loadDataMethods:[[ZaTargetPermission.myLoadDataMethods,r]],items:[{
type:_SPACER_,height:10}
,{
type:_DWT_ALERT_,width:"98%",style:DwtAlert.INFORMATION,iconVisible:false,content:com_zimbra_delegatedadmin.HELP_NOTES_ACL}
,{
type:_GROUPER_,label:com_zimbra_delegatedadmin.Label_permission,id:"permission_grouper",colSizes:["auto"],width:"100%",numCols:1,items:ZaTargetPermission.getGrantsListXFormItem()}
]};
n.items.push(l)
};
ZaTargetPermission.permissionViewMethod=function(o){
if(o[ZaGrant.A2_grantsList]){
this._view._containedObject[ZaGrant.A2_grantsList]=o[ZaGrant.A2_grantsList];
var t=this._view._localXForm;
var e=t.getInstance();
t.getModel().setInstanceValue(e,ZaGrant.A2_grantsList,o[ZaGrant.A2_grantsList])
}};
ZaTargetPermission.grantListSelectItem={
ref:ZaGrant.A2_grantsListSelectedItems,id:ZaGrant.A2_grantsListSelectedItems,type:_LIST_};
ZaTargetPermission.myLoadDataMethods=function(o){
if(!o){
return
}
if(o.id){
if(o.type!=ZaItem.ZIMLET){
ZaGrant.load.call(o,{
target:{
by:"id",type:o.type,val:o.id}}
)
}else{
ZaGrant.load.call(o,{
target:{
by:"name",type:o.type,val:o.name}}
)
}}else{
o[ZaGrant.A2_grantsList]=[]
}
if(o[ZaGrant.A2_grantsList]){
var t=this.getInstance();
var e=this.getForm();
e.getModel().setInstanceValue(t,ZaGrant.A2_grantsList,o[ZaGrant.A2_grantsList])
}};
if(ZaDomain){
ZaDomain.myXModel.items.push(ZaTargetPermission.grantListItem);
ZaDomain.myXModel.items.push(ZaTargetPermission.grantListSelectItem)
}
if(ZaTabView.XFormModifiers.ZaDomainXFormView){
ZaSettings.DOMAIN_PERM_TAB="domainPermissionTab";
ZaTabView.XFormModifiers.ZaDomainXFormView.push(ZaTargetPermission.targetXFormModifier)
}
if(ZaController.setViewMethods.ZaDomainController){
ZaController.setViewMethods.ZaDomainController.push(ZaTargetPermission.permissionViewMethod)
}
if(ZaAccount){
ZaAccount.myXModel.items.push(ZaTargetPermission.grantListItem);
ZaAccount.myXModel.items.push(ZaTargetPermission.grantListSelectItem)
}
if(ZaTabView.XFormModifiers.ZaAccountXFormView){
ZaSettings.ACCOUNTS_PERM_TAB="accountsPermissionTab";
ZaTabView.XFormModifiers.ZaAccountXFormView.push(ZaTargetPermission.targetXFormModifier)
}
if(ZaController.setViewMethods.ZaAccountViewController){
ZaController.setViewMethods.ZaAccountViewController.push(ZaTargetPermission.permissionViewMethod)
}
if(ZaDistributionList){
ZaDistributionList.myXModel.items.push(ZaTargetPermission.grantListItem);
ZaDistributionList.myXModel.items.push(ZaTargetPermission.grantListSelectItem)
}
if(ZaTabView.XFormModifiers.ZaDLXFormView){
ZaSettings.DL_PERM_TAB="dlPermissionTab";
ZaTabView.XFormModifiers.ZaDLXFormView.push(ZaTargetPermission.targetXFormModifier)
}
if(ZaController.setViewMethods.ZaDLController){
ZaController.setViewMethods.ZaDLController.push(ZaTargetPermission.permissionViewMethod)
}
if(ZaResource){
ZaResource.myXModel.items.push(ZaTargetPermission.grantListSelectItem);
ZaResource.myXModel.items.push(ZaTargetPermission.grantListItem)
}
if(ZaTabView.XFormModifiers.ZaResourceXFormView){
ZaSettings.RESOURCE_PERM_TAB="resourcePermissionTab";
ZaTabView.XFormModifiers.ZaResourceXFormView.push(ZaTargetPermission.targetXFormModifier)
}
if(ZaController.setViewMethods.ZaResourceController){
ZaController.setViewMethods.ZaResourceController.push(ZaTargetPermission.permissionViewMethod)
}
if(ZaCos){
ZaCos.myXModel.items.push(ZaTargetPermission.grantListItem);
ZaCos.myXModel.items.push(ZaTargetPermission.grantListSelectItem)
}
if(ZaTabView.XFormModifiers.ZaCosXFormView){
ZaSettings.COS_PERM_TAB="cosPermissionTab";
ZaTabView.XFormModifiers.ZaCosXFormView.push(ZaTargetPermission.targetXFormModifier)
}
if(ZaController.setViewMethods.ZaCosController){
ZaController.setViewMethods.ZaCosController.push(ZaTargetPermission.permissionViewMethod)
}
if(ZaGlobalConfig){
ZaGlobalConfig.myXModel.items.push(ZaTargetPermission.grantListItem);
ZaGlobalConfig.myXModel.items.push(ZaTargetPermission.grantListSelectItem)
}
if(ZaTabView.XFormModifiers.GlobalConfigXFormView){
ZaSettings.CONFIG_PERM_TAB="configPermissionTab";
ZaTabView.XFormModifiers.GlobalConfigXFormView.push(ZaTargetPermission.targetXFormModifier)
}
if(ZaController.setViewMethods.ZaGlobalConfigViewController){
ZaController.setViewMethods.ZaGlobalConfigViewController.push(ZaTargetPermission.permissionViewMethod)
}
if(ZaServer){
ZaServer.myXModel.items.push(ZaTargetPermission.grantListItem);
ZaServer.myXModel.items.push(ZaTargetPermission.grantListSelectItem)
}
if(ZaTabView.XFormModifiers.ZaServerXFormView){
ZaSettings.SERVER_PERM_TAB="serverPermissionTab";
ZaTabView.XFormModifiers.ZaServerXFormView.push(ZaTargetPermission.targetXFormModifier)
}
if(ZaController.setViewMethods.ZaServerController){
ZaController.setViewMethods.ZaServerController.push(ZaTargetPermission.permissionViewMethod)
}
if(ZaZimlet){
ZaZimlet.myXModel.items.push(ZaTargetPermission.grantListItem);
ZaZimlet.myXModel.items.push(ZaTargetPermission.grantListSelectItem)
}
if(ZaTabView.XFormModifiers.ZaZimletXFormView){
ZaSettings.ZIMLET_PERM_TAB="zimletPermissionTab";
ZaTabView.XFormModifiers.ZaZimletXFormView.push(ZaTargetPermission.targetXFormModifier)
}
if(ZaController.setViewMethods.ZaZimletViewController){
ZaController.setViewMethods.ZaZimletViewController.push(ZaTargetPermission.permissionViewMethod)
}
if(ZaItem.loadMethods.ZaZimlet){
ZaItem.loadMethods.ZaZimlet.push(ZaGrant.loadMethod)
}
ZaTargetPermission.grantButtonListener=function(s){
var e=this.getInstance();
e._uuid="target"+e.id;
var n=this.getForm().parent;
if(!n.grantRightDlg){
n.grantRightDlg=new ZaGrantDialog(ZaApp.getInstance().getAppCtxt().getShell(),e,ZaApp.getInstance(),com_zimbra_delegatedadmin.Title_grant_rights+" ("+AjxStringUtil.htmlEncode(e.name)+")",s,false);
n.grantRightDlg.registerCallback(ZaGrantDialog.ADD_FINISH_BUTTON,ZaGrantDialog.prototype.grantRight,n.grantRightDlg,[this.getForm(),false]);
n.grantRightDlg.registerCallback(ZaGrantDialog.ADD_MORE_BUTTON,ZaGrantDialog.prototype.grantRight,n.grantRightDlg,[this.getForm(),true])
}
var o={};
o._uuid=e._uuid;
if(s==null||s==ZaGrant.A_target){
var t=e.type;
o[ZaGrant.A_target_type]=t;
if(t==ZaItem.GLOBAL_CONFIG){
o[ZaGrant.A_target]=ZaGrant.GLOBAL_CONFIG_TARGET_NAME
}else{
o[ZaGrant.A_target]=e.name;
o[ZaGrant.A_target_id]=e.id
}}else{
if(s==ZaGrant.A_grantee){
var r=e[ZaNewAdmin.A_admin_type];
if(r==ZaItem.ACCOUNT){
r="usr"
}else{
if(r==ZaItem.DL){
r="grp"
}}
o[ZaGrant.A_grantee_type]=r;
o[ZaGrant.A_grantee]=e.name;
o[ZaGrant.A_grantee_id]=e.id
}}
o[ZaGrant.A2_isAdmin]="1";
o.setAttrs={};
o.setAttrs.all=true;
n.grantRightDlg.setObject(o);
n.grantRightDlg.popup();
n.grantRightDlg.refresh()
};
ZaTargetPermission.revokeButtonListener=function(){
var e=this.getInstance();
var o=this.getForm();
var n=o.parent;
var s=o.getItemsById(ZaGrant.A2_grantsList)[0].getSelection();
if(s&&s.length>0){
if(!n.revokeRightDlg){
n.revokeRightDlg=new ZaMsgDialog(ZaApp.getInstance().getAppCtxt().getShell(),null,[DwtDialog.YES_BUTTON,DwtDialog.NO_BUTTON])
}
n.revokeRightDlg.registerCallback(DwtDialog.YES_BUTTON,ZaGrantsListView.revokeRight,o,null);
var t=com_zimbra_delegatedadmin.confirm_delete_grants+ZaTargetPermission.getDlMsgFromGrant(s);
n.revokeRightDlg.setMessage(t,DwtMessageDialog.INFO_STYLE);
n.revokeRightDlg.popup()
}else{
ZaApp.getInstance().getCurrentController().popupMsgDialog(com_zimbra_delegatedadmin.no_grant_selected_msg)
}};
ZaTargetPermission.editButtonListener=function(c,f){
var u=this.getInstance();
var e=this.getForm();
var n=e.parent;
var d=e.getItemsById(ZaGrant.A2_grantsList)[0].getSelection();
if(d&&d.length==1){
var o=ZaUtil.deepCloneObject(d[0],["_evtMgr"]);
if(o[ZaGrant.A_right].indexOf("get.")==0||o[ZaGrant.A_right].indexOf("set.")==0){
o[ZaGrant.A_right_type]="inline";
o[ZaGrant.A_inline_right]=ZaGrantDialog.getInlineRightAttrsByName(o[ZaGrant.A_right])
}else{
o[ZaGrant.A_right_type]="system"
}
u._uuid="target_"+o[ZaGrant.A_right]+"_"+u.id;
n.editRightDlg=new ZaGrantDialog(ZaApp.getInstance().getAppCtxt().getShell(),u,ZaApp.getInstance(),com_zimbra_delegatedadmin.Title_edit_rights+" ("+AjxStringUtil.htmlEncode(u.name)+")",c,true);
n.editRightDlg.registerCallback(ZaGrantDialog.EDIT_FINISH_BUTTON,ZaGrantDialog.prototype.editRightAndFinish,n.editRightDlg,[e,d[0],f]);
var s=ZaApp.getInstance().getCurrentController();
var l=null;
if(s instanceof ZaDLController){
var r=d[0].grantee;
if(s.granteeList&&s.granteeList.length>0){
var m=false;
for(var t=0;
t<s.granteeList.length&&!m;
t++){
l=s.granteeList[t];
if(l.name==r){
m=true
}}}else{
l=ZaTargetPermission.getAllGrantees(r)
}
if(l&&(l.attrs[ZaAccount.A_zimbraIsDelegatedAdminAccount]=="TRUE"||l.attrs[ZaAccount.A_zimbraIsAdminAccount]=="TRUE")){
o[ZaGrant.A2_isAdmin]="1"
}else{
o[ZaGrant.A2_isAdmin]="0"
}}else{
var r=d[0].grantee;
l=ZaTargetPermission.getAllGrantees(r);
if(l&&(l.attrs[ZaAccount.A_zimbraIsDelegatedAdminAccount]=="TRUE"||l.attrs[ZaAccount.A_zimbraIsAdminAccount]=="TRUE")){
o[ZaGrant.A2_isAdmin]="1"
}else{
o[ZaGrant.A2_isAdmin]="0"
}}
o.setAttrs={};
o.setAttrs.all=true;
o._uuid=u._uuid;
n.editRightDlg.setObject(o);
n.editRightDlg.popup();
n.editRightDlg.refresh()
}else{
ZaApp.getInstance().getCurrentController().popupMsgDialog(com_zimbra_delegatedadmin.no_grant_selected_msg)
}};
ZaTargetPermission.getAllGrantees=function(r){
var l=new Object();
l.types=[ZaSearch.ACCOUNTS,ZaSearch.DLS,ZaSearch.ALIASES];
var s=ZaSearch.getSearchByNameQuery(r,l.types);
var t=ZaApp.getInstance().getCurrentController();
l.sortBy=ZaAccount.A_name;
l.query=s;
l.controller=t;
try{
var e=ZaSearch.searchDirectory(l).Body.SearchDirectoryResponse;
if(e&&e.account){
var n=new ZaItemList(ZaAccount);
n.loadFromJS(e);
return n.getArray()[0]
}}
catch(o){}
return null
};
ZaTargetPermission.getDlMsgFromGrant=function(s){
var r="<br><table>";
var u=[ZaGrant.A_target,ZaGrant.A_grantee,ZaGrant.A_right,ZaGrant.A_deny,ZaGrant.A_canDelegate];
for(var n=0;
n<s.length;
n++){
var e=s[n];
r+="<tr><td colspan=2>-----<strong>"+AjxMessageFormat.format(com_zimbra_delegatedadmin.Label_ACE,[n+1])+"</strong>-----</td></tr>";
for(var t=0;
t<u.length;
t++){
var d=u[t];
r+="<tr>";
if(d==ZaGrant.A_target){
r+="<td>"+com_zimbra_delegatedadmin.Label_target_name+"</td>";
var o=e[ZaGrant.A_target];
if(e[ZaGrant.A_target_type]==ZaItem.GLOBAL_GRANT){
o=ZaGrant.GLOBAL_TARGET_NAME
}else{
if(e[ZaGrant.A_target_type]==ZaItem.GLOBAL_CONFIG){
o=ZaGrant.GLOBAL_CONFIG_TARGET_NAME
}}
r+="<td>"+AjxStringUtil.htmlEncode(o)+"</td>"
}else{
if(d==ZaGrant.A_grantee){
var l=com_zimbra_delegatedadmin.Label_grantee_name;
var c=e[ZaGrant.A_grantee];
if(c==null||c.length<=0){
l=com_zimbra_delegatedadmin.Label_grantee_id;
c=e[ZaGrant.A_grantee_id]
}
r+="<td>"+l+"</td>";
r+="<td>"+AjxStringUtil.htmlEncode(c)+"</td>"
}else{
if(d==ZaGrant.A_right){
r+="<td>"+com_zimbra_delegatedadmin.Label_right_name+"</td>";
r+="<td>"+(e[ZaGrant.A_canDelegate]=="1"?"+":"")+(e[ZaGrant.A_deny]=="1"?"-":"")+AjxStringUtil.htmlEncode(e[ZaGrant.A_right])+"</td>"
}}}
r+="</tr>"
}}
r+="</table>";
return r
};
ZaItemRightList=function(e){
ZaItemList.call(this,e)
};
ZaItemRightList.prototype=new ZaItemList;
ZaItemRightList.prototype.constructor=ZaItemRightList;
ZaItemRightList.prototype.toString=function(){
return"ZaItemRightList"
};
ZaItemRightList.prototype.loadFromJS=function(o){
if(!o||!o.right){
return
}
for(i=0;
i<o.right.length;
i++){
var e=o.right[i];
if(e!=null){
if(e.name==ZaRight.CROSS_DOMAIN_ADMIN){
continue
}
var t;
if(this._constructor){
t=new this._constructor()
}
t.type=ZaItem.RIGHT;
t.initFromJS(o.right[i]);
this.add(t)
}}};
if(ZaSearch){
ZaSearch.prototype.dynSelectGrantees=function(s){
try{
var d=s.value;
var e=s.event;
var u=s.callback;
var t=s.form;
var o=new Object();
o.types=[ZaSearch.ACCOUNTS,ZaSearch.DLS,ZaSearch.ALIASES];
var c=ZaSearch.getSearchByNameQuery(d,o.types);
var r=ZaApp.getInstance().getCurrentController();
var n="(|("+ZaDistributionList.A_isAdminGroup+"=TRUE)("+ZaAccount.A_zimbraIsAdminAccount+"=TRUE)("+ZaAccount.A_zimbraIsDelegatedAdminAccount+"=TRUE))";
if(t.instance[ZaGrant.A_target_type]!=ZaItem.ACCOUNT&&t.instance[ZaGrant.A_target_type]!=ZaItem.DOMAIN&&t.instance[ZaGrant.A_target_type]!=ZaItem.GLOBAL_GRANT&&t.instance[ZaGrant.A_target_type]!=ZaItem.DL){
c="(&"+c+n+")"
}else{
if(t.instance[ZaGrant.A_target_type]==ZaItem.DOMAIN||t.instance[ZaGrant.A_target_type]==ZaItem.ACCOUNT||t.instance[ZaGrant.A_target_type]==ZaItem.GLOBAL_GRANT||t.instance[ZaGrant.A_target_type]==ZaItem.DL){
d=ZaSearch.escapeLdapQuery(d);
c="(|"+c+"("+ZaDomain.A_domainName+"=*"+d+"*))";
o.types.push(ZaSearch.DOMAINS)
}}
dataCallback=new AjxCallback(this,this.dynSelectGranteeCallback,{
callback:u,controller:r}
);
o.callback=dataCallback;
o.sortBy=ZaAccount.A_name;
o.query=c;
o.controller=r;
ZaSearch.searchDirectory(o)
}
catch(l){
ZaApp.getInstance().getCurrentController()._handleException(l,"ZaSearch.prototype.dynSelectDataFetcher")
}};
ZaSearch.prototype.dynSelectGranteeCallback=function(r,s){
var l=r.callback;
var e=r.controller;
if(!l){
return
}
try{
if(!s){
throw (new AjxException(ZaMsg.ERROR_EMPTY_RESPONSE_ARG,AjxException.UNKNOWN,"ZaListViewController.prototype.dynSelectDataCallback"))
}
if(s.isException()){
throw (s.getException())
}else{
var t=s.getResponse().Body.SearchDirectoryResponse;
var n=new ZaItemList(null);
n.loadFromJS(t);
if(e instanceof ZaDLController){
e.granteeList=n.getArray()
}
l.run(n.getArray(),t.more,t.searchTotal)
}}
catch(o){
ZaApp.getInstance().getCurrentController()._handleException(o,"ZaSearch.prototype.dynSelectDataCallback")
}};
ZaSearch.prototype.dynSelectTargets=function(l){
try{
var f=l.value;
var e=l.event;
var g=l.callback;
var t=l.form;
var n=new Object();
if(t.instance[ZaGrant.A_target_type]==ZaItem.ACCOUNT){
n.types=[ZaSearch.ACCOUNTS,ZaSearch.ALIASES]
}else{
if(t.instance[ZaGrant.A_target_type]==ZaItem.DOMAIN){
n.types=[ZaSearch.DOMAINS]
}else{
if(t.instance[ZaGrant.A_target_type]==ZaItem.COS){
n.types=[ZaSearch.COSES]
}else{
if(t.instance[ZaGrant.A_target_type]==ZaItem.DL){
n.types=[ZaSearch.DLS]
}else{
if(t.instance[ZaGrant.A_target_type]==ZaItem.SERVER){
var p=ZaServer.getAll().getArray();
var y=[];
for(var s=0;
s<p.length;
s++){
if(!f||p[s].name.indexOf(f)!=-1){
y.push(p[s])
}}
g.run(y,false,y.length);
return
}else{
if(t.instance[ZaGrant.A_target_type]==ZaItem.ZIMLET){
var o=ZaSearch.getAllZimlets().getArray();
var c=[];
for(var s=0;
s<o.length;
s++){
if(!f||o[s].name.indexOf(f)!=-1){
c.push(o[s])
}}
g.run(c,false,c.length);
return
}else{
if(t.instance[ZaGrant.A_target_type]==ZaItem.UC_SERVICE){
var m=ZaUCService.getAll().getArray();
var y=[];
for(var s=0;
s<m.length;
s++){
if(!f||m[s].name.indexOf(f)!=-1){
y.push(m[s])
}}
g.run(y,false,y.length);
return
}}}}}}}
var u=ZaSearch.getSearchByNameQuery(f,n.types);
var r=ZaApp.getInstance().getCurrentController();
dataCallback=new AjxCallback(this,this.dynSelectTargetCallback,{
callback:g,controller:r}
);
n.callback=dataCallback;
n.sortBy=ZaAccount.A_name;
n.query=u;
n.controller=r;
ZaSearch.searchDirectory(n)
}
catch(d){
ZaApp.getInstance().getCurrentController()._handleException(d,"ZaSearch.prototype.dynSelectTargets")
}};
ZaSearch.prototype.dynSelectTargetCallback=function(s,n){
var r=s.callback;
if(!r){
return
}
try{
if(!n){
throw (new AjxException(ZaMsg.ERROR_EMPTY_RESPONSE_ARG,AjxException.UNKNOWN,"ZaSearch.prototype.dynSelectTargetCallback"))
}
if(n.isException()){
throw (n.getException())
}else{
var e=n.getResponse().Body.SearchDirectoryResponse;
var o=new ZaItemList(null);
o.loadFromJS(e);
r.run(o.getArray(),e.more,e.searchTotal)
}}
catch(t){
ZaApp.getInstance().getCurrentController()._handleException(t,"ZaSearch.prototype.dynSelectTargetCallback")
}};
ZaSearch.getAllZimlets=function(){
var t=AjxSoapDoc.create("GetAllZimletsRequest",ZaZimbraAdmin.URN,null);
t.getMethod().setAttribute("exclude","none");
var s={};
s.soapDoc=t;
var e={
controller:ZaApp.getInstance().getCurrentController(),busyMsg:ZaMsg.BUSY_GET_ZIMLET};
var n=ZaRequestMgr.invoke(s,e);
var o=new ZaItemList(ZaZimlet);
if(n&&n.Body.GetAllZimletsResponse){
o.loadFromJS(n.Body.GetAllZimletsResponse)
}
return o
}
}}
if(ZaSettings&&ZaSettings.EnabledZimlet.com_zimbra_delegatedadmin){
function ZaUIComponent(){}
ZaUIComponent.A_inheritedUIComponents="inheritedUIComponents";
ZaUIComponent.accountTargetXFormModifier=function(c,r){
var t=ZaTabView.isTAB_ENABLED(r,[ZaAccount.A_zimbraAdminConsoleUIComponents],[]);
t=(t&&ZaDelegatedAdmin.isDelegatedAdmin(r));
if(!t){
return
}
var e,s,n;
for(var o=0;
o<c.items.length;
o++){
if(c.items[o].type==_TAB_BAR_){
e=c.items[o]
}
if(c.items[o].type==_SWITCH_){
s=c.items[o]
}}
if(e&&s){
n=++this.TAB_INDEX;
e.choices.push({
value:n,label:com_zimbra_delegatedadmin.Tab_ui_components}
)
}
var l={
type:_ZATABCASE_,id:"target_form_ui_comp_tab",numCols:1,colSizes:["800px"],caseKey:n,items:[{
type:_SPACER_,height:10}
,{
type:_DWT_ALERT_,width:"98%",style:DwtAlert.INFORMATION,iconVisible:false,content:com_zimbra_delegatedadmin.HELP_NOTES_UI_COMP}
,{
type:_DWT_ALERT_,width:"98%",style:DwtAlert.INFORMATION,iconVisible:true,visibilityChecks:[ZaUIComponent.isCartBlancheUISet],content:com_zimbra_delegatedadmin.CartBlacheUIEnabled}
,{
type:_TOP_GROUPER_,label:com_zimbra_delegatedadmin.Label_ui_comp,id:"ui_comp_grouper",colSizes:["800px"],numCols:1,items:ZaUIComponent.getUIComponentsXFormItem()}
]};
s.items.push(l);
return
};
ZaUIComponent.UIComponentsItem={
id:ZaAccount.A_zimbraAdminConsoleUIComponents,ref:"attrs/"+ZaAccount.A_zimbraAdminConsoleUIComponents,outputType:_LIST_,type:_LIST_,listItems:{
type:_STRING_}};
ZaUIComponent.InheritedUIComponentsItem={
id:ZaUIComponent.A_inheritedUIComponents,ref:ZaUIComponent.A_inheritedUIComponents,outputType:_LIST_,type:_LIST_,listItems:{
type:_STRING_}};
ZaUIComponent.isCartBlancheUISet=function(){
var t=this.getInstanceValue(ZaAccount.A_zimbraAdminConsoleUIComponents);
if(t!=null){
for(var e=0;
e<t.length;
e++){
if(t[e]==ZaSettings.CARTE_BLANCHE_UI){
return true
}}}
return false
};
ZaUIComponent.isCartBlancheUINotSet=function(){
return !ZaUIComponent.isCartBlancheUISet.call(this)
};
ZaUIComponent.getUIComponentsXFormItem=function(t){
var e=t||400;
var o={
type:_GROUP_,colSpan:"*",numCols:2,colSize:[e,e],items:[{
type:_OUTPUT_,value:com_zimbra_delegatedadmin.tLabel_direct_ui_comp,cssStyle:"font-size:12px;",align:_LEFT_}
,{
type:_OUTPUT_,value:com_zimbra_delegatedadmin.tLabel_indirect_ui_comp,cssStyle:"font-size:12px;",align:_LEFT_}
,{
type:_ZA_CHECKBOX_LIST_,numCols:1,colSizes:[e],choicesWidth:e,selectRef:ZaAccount.A_zimbraAdminConsoleUIComponents,ref:ZaAccount.A_zimbraAdminConsoleUIComponents,enableDisableChecks:[ZaUIComponent.isCartBlancheUINotSet],choices:ZaSettings.ALL_UI_COMPONENTS}
,{
type:_ZA_CHECKBOX_LIST_,numCols:1,colSizes:[e],choicesWidth:e,selectRef:ZaUIComponent.A_inheritedUIComponents,enableDisableChecks:false,choices:ZaSettings.ALL_UI_COMPONENTS}
]};
return[o]
};
ZaUIComponent.accountObjectModifer=function(){
var n=[];
var s=[];
var e="";
if(ZaItem.DL==this._containedObject.type){
e=ZaDistributionList.RIGHT_VIEW_ADMINUI_COMPONENTS
}else{
if(ZaItem.ACCOUNT==this._containedObject.type){
e=ZaAccount.RIGHT_VIEW_ADMINUI_COMPONENTS
}}
if(e!=""&&ZaItem.hasRight(e,this._containedObject)){
s=ZaSettings.getUIComponents(this._containedObject)
}
for(var o=0;
o<s.length;
o++){
if(s[o].inherited){
n.push(s[o]._content)
}}
this._containedObject[ZaUIComponent.A_inheritedUIComponents]=n;
var t=ZaApp.getInstance().getCurrentController();
if(t._currentObject){
if(t._currentObject[ZaAccount.A2_isAssignDefaultDARights]=="TRUE"){
this._containedObject[ZaAccount.A2_isAssignDefaultDARights]="TRUE"
}else{
this._containedObject[ZaAccount.A2_isAssignDefaultDARights]="FALSE"
}
if(t._currentObject[ZaAccount.A2_resetPasswordsRight]=="TRUE"){
this._containedObject[ZaAccount.A2_resetPasswordsRight]="TRUE"
}else{
this._containedObject[ZaAccount.A2_resetPasswordsRight]="FALSE"
}
if(t._currentObject[ZaAccount.A2_editContactInfoRight]=="TRUE"){
this._containedObject[ZaAccount.A2_editContactInfoRight]="TRUE"
}else{
this._containedObject[ZaAccount.A2_editContactInfoRight]="FALSE"
}
if(t._currentObject[ZaAccount.A2_domainAdminRight]=="TRUE"){
this._containedObject[ZaAccount.A2_domainAdminRight]="TRUE"
}else{
this._containedObject[ZaAccount.A2_domainAdminRight]="FALSE"
}}};
ZaUIComponent.uiCompObjectModifer=function(){
if(this.attrs[ZaAccount.A_zimbraAdminConsoleUIComponents]){
if(!(this.attrs[ZaAccount.A_zimbraAdminConsoleUIComponents] instanceof Array)){
this.attrs[ZaAccount.A_zimbraAdminConsoleUIComponents]=[this.attrs[ZaAccount.A_zimbraAdminConsoleUIComponents]]
}}};
if(ZaAccount){
ZaAccount.myXModel.items.push(ZaUIComponent.UIComponentsItem);
ZaAccount.myXModel.items.push(ZaUIComponent.InheritedUIComponentsItem)
}
if(ZaItem.ObjectModifiers.ZaAccount){
ZaItem.ObjectModifiers.ZaAccount.push(ZaUIComponent.uiCompObjectModifer)
}
if(ZaTabView.ObjectModifiers.ZaAccountXFormView){
ZaTabView.ObjectModifiers.ZaAccountXFormView.push(ZaUIComponent.accountObjectModifer)
}
if(ZaTabView.ObjectModifiers.ZaDLXFormView){
ZaTabView.ObjectModifiers.ZaDLXFormView.push(ZaUIComponent.accountObjectModifer)
}
if(ZaTabView.XFormModifiers.ZaAccountXFormView){
ZaSettings.ACCOUNT_UI_COMP_TAB="accountUIComponentsTab";
ZaTabView.XFormModifiers.ZaAccountXFormView.push(ZaUIComponent.accountTargetXFormModifier)
}
if(ZaDistributionList){
ZaDistributionList.myXModel.items.push(ZaUIComponent.UIComponentsItem);
ZaDistributionList.myXModel.items.push(ZaUIComponent.InheritedUIComponentsItem)
}
if(ZaItem.ObjectModifiers.ZaDistributionList){
ZaItem.ObjectModifiers.ZaDistributionList.push(ZaUIComponent.uiCompObjectModifer)
}
if(ZaTabView.XFormModifiers.ZaDLXFormView){
ZaSettings.DL_UI_COMP_TAB="dlUIComponentsTab";
ZaTabView.XFormModifiers.ZaDLXFormView.push(ZaUIComponent.accountTargetXFormModifier)
}}
ZaGrantDialog=function(u,d,t,l,r,o){
if(arguments.length==0){
return
}
this._standardButtons=[DwtDialog.CANCEL_BUTTON];
var n=new DwtDialog_ButtonDescriptor(ZaXWizardDialog.HELP_BUTTON,ZaMsg.TBB_Help,DwtDialog.ALIGN_LEFT,new AjxCallback(this,this._helpButtonListener));
var c=new DwtDialog_ButtonDescriptor(ZaGrantDialog.ADD_MORE_BUTTON,com_zimbra_delegatedadmin.btAddMore,DwtDialog.ALIGN_RIGHT,null);
var s=new DwtDialog_ButtonDescriptor(ZaGrantDialog.ADD_FINISH_BUTTON,com_zimbra_delegatedadmin.btAddFinish,DwtDialog.ALIGN_RIGHT,null);
var e=new DwtDialog_ButtonDescriptor(ZaGrantDialog.EDIT_FINISH_BUTTON,com_zimbra_delegatedadmin.btEditFinish,DwtDialog.ALIGN_RIGHT,null);
this._isEditDialog=o;
if(o){
this._extraButtons=[n,e]
}else{
this._extraButtons=[n,c,s]
}
ZaXDialog.call(this,u,null,l,"500px","200px","ZaGrantDialog_"+d.id,ZaId.DLG_EDIT_ACL+d.id);
this.setButtonListener(DwtDialog.CANCEL_BUTTON,new AjxListener(this,this._handleCancelButton));
if(!r){
r=ZaGrant.A_target
}
this.by=r;
if(this.by==ZaGrant.A_target){
this.grantListPropertyName=ZaGrant.A2_grantsList
}else{
if(this.by==ZaGrant.A_grantee){
this.grantListPropertyName=ZaGrant.A3_directGrantsList
}}
this._containedObject={};
this.systemRightsChoices=new XFormChoices([],XFormChoices.SIMPLE_LIST);
this.granteeNameChoices=new XFormChoices([],XFormChoices.OBJECT_LIST,"name","name");
this.targetNameChoices=new XFormChoices([],XFormChoices.OBJECT_LIST,"name","name");
this.targetTypeChoices=new XFormChoices(["null type"],XFormChoices.SIMPLE_LIST);
this.targetTypeChoices.setChoices(ZaZimbraRights.targetType);
this.initForm(ZaGrant.myXModel,this.getMyXForm());
this._localXForm.setController();
this._localXForm.addListener(DwtEvent.XFORMS_FORM_DIRTY_CHANGE,new AjxListener(this,ZaGrantDialog.prototype.handleXFormChange));
this._localXForm.addListener(DwtEvent.XFORMS_VALUE_ERROR,new AjxListener(this,ZaGrantDialog.prototype.handleXFormChange));
this._helpURL=location.pathname+ZaUtil.HELP_URL+"da_process/manage_delegated_admin_grants.htm?locid="+AjxEnv.DEFAULT_LOCALE;
this._cacheName="ZaGrantDialog_"+d._uuid;
ZaApp.getInstance().dialogs[this._cacheName]=this
};
ZaId.DLG_EDIT_ACL="EDIT_ACL";
ZaGrantDialog.prototype=new ZaXDialog;
ZaGrantDialog.prototype.constructor=ZaGrantDialog;
ZaGrantDialog.prototype.supportMinimize=true;
ZaGrantDialog.ADD_FINISH_BUTTON=++DwtDialog.LAST_BUTTON;
ZaGrantDialog.ADD_MORE_BUTTON=++DwtDialog.LAST_BUTTON;
ZaGrantDialog.EDIT_FINISH_BUTTON=++DwtDialog.LAST_BUTTON;
ZaGrantDialog.prototype.handleXFormChange=function(){
if(this._localXForm.hasErrors()){
if(this._isEditDialog){
this._button[ZaGrantDialog.EDIT_FINISH_BUTTON].setEnabled(false)
}else{
this._button[ZaGrantDialog.ADD_MORE_BUTTON].setEnabled(false);
this._button[ZaGrantDialog.ADD_FINISH_BUTTON].setEnabled(false)
}}else{
if(!this._isEditDialog){
var e=false;
if(this._containedObject[ZaGrant.A_target]&&(this._containedObject[ZaGrant.A_target_type]==ZaItem.DL||this._containedObject[ZaGrant.A_grantee])&&this._containedObject[ZaGrant.A_target_type]&&this._containedObject[ZaGrant.A_right]&&this._containedObject[ZaGrant.A_right_type]){
if(this._containedObject[ZaGrant.A_right_type]=="inline"&&(!this._containedObject[ZaGrant.A_inline_right][ZaGrant.A_inline_verb]||!this._containedObject[ZaGrant.A_inline_right][ZaGrant.A_inline_target_type]||!this._containedObject[ZaGrant.A_inline_right][ZaGrant.A_inline_attr])){
e=false
}else{
e=true
}}
if(e){
this._button[ZaGrantDialog.ADD_MORE_BUTTON].setEnabled(true);
this._button[ZaGrantDialog.ADD_FINISH_BUTTON].setEnabled(true)
}else{
this._button[ZaGrantDialog.ADD_MORE_BUTTON].setEnabled(false);
this._button[ZaGrantDialog.ADD_FINISH_BUTTON].setEnabled(false)
}}else{
if(this._isEditDialog){
this._button[ZaGrantDialog.EDIT_FINISH_BUTTON].setEnabled(true);
this._containedObject[ZaGrant.A_right]=this._containedObject[ZaGrant.A_right]
}else{
this._button[ZaGrantDialog.ADD_MORE_BUTTON].setEnabled(true);
this._button[ZaGrantDialog.ADD_FINISH_BUTTON].setEnabled(true)
}}}};
ZaGrantDialog.prototype.getCacheName=function(){
return this._cacheName
};
ZaGrantDialog.dialogAllItemId="dialog_grant_item_"+Dwt.getNextId();
ZaGrantDialog.prototype._handleCancelButton=function(){
var s=this._localXForm;
if(s.hasErrors()){
s.clearErrors()
}
var e=s.getItemsById(ZaGrantDialog.dialogAllItemId)[0];
var o=(e&&e.items instanceof Array)?e.items.length:0;
for(var t=0;
t<o;
t++){
var n=e.items[t];
if(n instanceof OSelect1_XFormItem||n instanceof DynSelect_XFormItem){
n.noteUp=true;
n.hideNote()
}}
this.popdown()
};
ZaGrantDialog.prototype.setObject=function(o){
if(o){
if(o[ZaGrant.A_target_type]==ZaItem.DOMAIN){
o[ZaGrant.A2_extDomainName]=o.target;
if(o[ZaGrant.A_grantee_type]=="egp"){
o[ZaGrant.A2_extEgp]=true;
var e=o[ZaGrant.A_grantee];
var t=e.lastIndexOf(":");
o[ZaGrant.A2_extGroupName]=e.substring(t+1)
}else{
o[ZaGrant.A2_grantee_email]=o[ZaGrant.A_grantee]
}}else{
o[ZaGrant.A2_grantee_email]=o[ZaGrant.A_grantee]
}}
ZaXDialog.prototype.setObject.call(this,o)
};
ZaGrantDialog.prototype.getMyXForm=function(){
var e={
numCols:1,items:[{
type:_GROUP_,isTabGroup:true,numCols:2,colSizes:[150,"*"],id:ZaGrantDialog.dialogAllItemId,items:[{
type:_SPACER_}
,{
type:_GROUP_,colSpan:"*",numCols:2,colSizes:[150,"*"],visibilityChecks:["this.getForm().parent.by == 'target'"],items:[{
ref:ZaGrant.A_target,type:_OUTPUT_,label:com_zimbra_delegatedadmin.Label_target_name,getDisplayValue:AjxUtil.htmlEncode}
,{
ref:ZaGrant.A_grantee_type,type:_TEXTFIELD_,label:com_zimbra_delegatedadmin.Label_grantee_type,visibilityChecks:["this.getForm().instance[ZaGrant.A_target_type] == ZaItem.DL"],labelLocation:_LEFT_}
,{
ref:ZaGrant.A2_grantee_email,type:_DYNSELECT_,label:com_zimbra_delegatedadmin.Label_grantee_name,labelLocation:_LEFT_,inputWidth:"200px",visibilityChecks:[[XForm.checkInstanceValueNot,ZaGrant.A2_extEgp,true]],visibilityChangeEventSources:[ZaGrant.A2_extEgp],emptyText:com_zimbra_delegatedadmin.searchTermGrantee,choices:this.targetNameChoices,enableDisableChecks:[ZaGrantDialog.granteeTypeListener],enableDisableChangeEventSources:[ZaGrant.A_grantee_type],onChange:ZaGrantDialog.setGranteeChanged,dataFetcherClass:ZaSearch,dataFetcherMethod:ZaSearch.prototype.dynSelectGrantees,editable:true}
,{
type:_OUTPUT_,value:com_zimbra_delegatedadmin.Label_grantee_name,align:_RIGHT_,visibilityChecks:[[XForm.checkInstanceValue,ZaGrant.A2_extEgp,true]],visibilityChangeEventSources:[ZaGrant.A2_extEgp]}
,{
type:_GROUP_,colSpan:"1",numCols:3,visibilityChecks:[[XForm.checkInstanceValue,ZaGrant.A2_extEgp,true]],visibilityChangeEventSources:[ZaGrant.A2_extEgp],items:[{
type:_OUTPUT_,ref:ZaGrant.A2_extDomainName}
,{
type:_OUTPUT_,value:":"}
,{
type:_TEXTFIELD_,ref:ZaGrant.A2_extGroupName,onChange:ZaGrantDialog.extGroupChanged}
]}
,{
type:_CHECKBOX_,ref:ZaGrant.A2_extEgp,label:com_zimbra_delegatedadmin.LBL_grantExtGrpRight,onChange:ZaGrantDialog.egpChanged,labelLocation:_RIGHT_,align:_RIGHT_,subLabel:"",visibilityChecks:[ZaGrantDialog.showAssignExtLDAPRight]}
]}
,{
type:_GROUP_,colSpan:"*",numCols:2,colSizes:[150,"*"],visibilityChecks:["this.getForm().parent.by == 'grantee'"],items:[{
ref:ZaGrant.A_grantee,type:_OUTPUT_,label:com_zimbra_delegatedadmin.Label_grantee_name,getDisplayValue:AjxUtil.htmlEncode}
,{
ref:ZaGrant.A_target_type,type:_OSELECT1_,choices:this.targetTypeChoices,label:com_zimbra_delegatedadmin.Label_target_type,onChange:ZaGrantDialog.setTargetTypeChanged,visibilityChecks:[]}
,{
ref:ZaGrant.A_target,type:_DYNSELECT_,label:com_zimbra_delegatedadmin.Label_target_name,enableDisableChecks:[ZaGrantDialog.targetTypeListener],enableDisableChangeEventSources:[ZaGrant.A_target_type],visibilityChecks:[],labelLocation:_LEFT_,inputWidth:"200px",emptyText:com_zimbra_delegatedadmin.searchTermTarget,choices:this.targetNameChoices,onChange:ZaGrantDialog.setTargetChanged,dataFetcherClass:ZaSearch,dataFetcherMethod:ZaSearch.prototype.dynSelectTargets,editable:true,autoCompleteEnabled:true}
]}
,{
ref:ZaGrant.A_right_type,type:_OSELECT1_,label:com_zimbra_delegatedadmin.Label_right_type,visibilityChecks:[],enableDisableChecks:[ZaGrantDialog.isOnlyUserRight],enableDisableChangeEventSources:[ZaGrant.A2_isAdmin,ZaGrant.A_grantee],labelLocation:_LEFT_,choices:ZaGrant.RIGHT_TYPE_CHOICES}
,{
type:_GROUP_,colSpan:"*",numCols:2,colSizes:[150,"*"],visibilityChecks:[[ZaGrantDialog.rightTypeListener,"inline"]],visibilityChangeEventSources:[ZaGrant.A_right_type],items:[{
ref:ZaGrant.A_inline_right+"/"+ZaGrant.A_inline_verb,type:_OSELECT1_,visibilityChecks:[],onChange:ZaGrantDialog.composeInlineRight,label:com_zimbra_delegatedadmin.Label_inline_verb,required:true}
,{
ref:ZaGrant.A_inline_right+"/"+ZaGrant.A_inline_target_type,visibilityChecks:[],onChange:ZaGrantDialog.composeInlineRight,required:true,type:_OSELECT1_,label:com_zimbra_delegatedadmin.Label_inline_target_type}
,{
ref:ZaGrant.A_inline_right+"/"+ZaGrant.A_inline_attr,visibilityChecks:[],onChange:ZaGrantDialog.composeInlineRight,required:true,width:200,type:_TEXTFIELD_,label:com_zimbra_delegatedadmin.Label_inline_attr}
]}
,{
ref:ZaGrant.A_right,id:ZaGrant.A_right,type:_DYNSELECT_,label:com_zimbra_delegatedadmin.Label_right_name,autoCompleteEnabled:true,visibilityChecks:[],enableDisableChecks:[[ZaGrantDialog.rightTypeListener,"system"]],enableDisableChangeEventSources:[ZaGrant.A_right_type],labelLocation:_LEFT_,inputWidth:"200px",emptyText:com_zimbra_delegatedadmin.searchTermRight,choices:this.systemRightsChoices,dataFetcherClass:ZaRight,dataFetcherMethod:ZaRight.prototype.dynSelectRightNames,editable:true}
,{
ref:ZaGrant.A_allow,id:ZaGrant.A_allow,type:_RADIO_,label:com_zimbra_delegatedadmin.Col_allow,groupname:"radio_grp_deny_delegate",onChange:ZaGrantDialog.changeDenyAllow,visibilityChecks:[],labelLocation:_RIGHT_}
,{
type:_GROUP_,colSpan:"*",numCols:3,colSizes:[130,20,"*"],items:[{
type:_CELL_SPACER_,visibilityChangeEventSources:[ZaGrant.A_allow],visibilityChecks:[[XForm.checkInstanceValue,ZaGrant.A_allow,"1"]]}
,{
ref:ZaGrant.A_canDelegate,id:ZaGrant.A_canDelegate,type:_CHECKBOX_,subLabel:"",label:com_zimbra_delegatedadmin.Col_can_grant,visibilityChangeEventSources:[ZaGrant.A_allow,ZaGrant.A_grantee_type,ZaGrant.A_target_type],visibilityChecks:[[XForm.checkInstanceValue,ZaGrant.A_allow,"1"],[ZaGrantDialog.enableByGranteeType]],labelLocation:_RIGHT_,trueValue:"1",falseValue:"0"}
,{
type:_CELL_SPACER_,visibilityChangeEventSources:[ZaGrant.A_target_type,ZaGrant.A_allow],visibilityChecks:[[XForm.checkInstanceValue,ZaGrant.A_target_type,ZaItem.DL],[XForm.checkInstanceValue,ZaGrant.A_allow,"1"]]}
,{
ref:ZaGrant.A_disinheritSubGroups,id:ZaGrant.A_disinheritSubGroups,type:_CHECKBOX_,label:com_zimbra_delegatedadmin.Col_can_not_inherited,visibilityChangeEventSources:[ZaGrant.A_target_type,ZaGrant.A_allow],visibilityChecks:[[XForm.checkInstanceValue,ZaGrant.A_target_type,ZaItem.DL],[XForm.checkInstanceValue,ZaGrant.A_allow,"1"]],labelLocation:_RIGHT_,trueValue:"1",falseValue:"0"}
,{
type:_CELL_SPACER_,visibilityChangeEventSources:[ZaGrant.A_target_type,ZaGrant.A_allow],visibilityChecks:[[XForm.checkInstanceValue,ZaGrant.A_target_type,ZaItem.DOMAIN],[XForm.checkInstanceValue,ZaGrant.A_allow,"1"]]}
,{
ref:ZaGrant.A_canInheritBySubDomain,id:ZaGrant.A_canInheritBySubDomain,type:_CHECKBOX_,label:com_zimbra_delegatedadmin.Col_canInheritedBySubDomain,visibilityChangeEventSources:[ZaGrant.A_target_type,ZaGrant.A_allow],visibilityChecks:[[XForm.checkInstanceValue,ZaGrant.A_target_type,ZaItem.DOMAIN],[XForm.checkInstanceValue,ZaGrant.A_allow,"1"]],labelLocation:_RIGHT_,trueValue:"1",falseValue:"0"}
]}
,{
ref:ZaGrant.A_deny,id:ZaGrant.A_deny,type:_RADIO_,label:com_zimbra_delegatedadmin.Col_deny,groupname:"radio_grp_deny_delegate",onChange:ZaGrantDialog.changeDenyAllow,visibilityChecks:[],labelLocation:_RIGHT_}
]}
]};
return e
};
ZaGrantDialog.setTargetChanged=function(s,n,o){
var t=this.getInstanceValue();
if(t==s){
return
}
this.setInstanceValue(s);
var e=this.getInstance();
if(e[ZaGrant.A_target_type]==ZaItem.ACCOUNT||e[ZaGrant.A_target_type]==ZaItem.DL){
if((s.lastIndexOf("@")==s.indexOf("@"))&&(s.indexOf("@")>0)){
if(e[ZaGrant.A_target_type]==ZaItem.ACCOUNT){
o.parent.updateTargetType(s,this)
}}else{
this.setError(AjxMessageFormat.format(AjxMsg.invalidEmailAddr));
var n=new DwtXFormsEvent(o,this,s);
o.notifyListeners(DwtEvent.XFORMS_VALUE_ERROR,n);
return
}}};
ZaGrantDialog.enableByGranteeType=function(){
var e=this.getInstance();
var o=e[ZaGrant.A_grantee_type];
var t=e[ZaGrant.A2_isAdmin];
if(!o){
return true
}else{
if(o=="dom"){
return false
}else{
if(o=="grp"){
return false
}else{
if(o=="egp"){
return false
}else{
if(o=="usr"){
return(t=="1")
}}}}}
return true
};
ZaGrantDialog.setGranteeChanged=function(r,s,n){
var t=this.getInstanceValue();
if(t==r){
return
}
var o=this.getForm().getItemsById(ZaGrant.A_grantee_type)[0].getElement().value;
this.setInstanceValue(r);
this.setInstanceValue(r,ZaGrant.A_grantee);
var e=this.getInstance();
if(!r&&e[ZaGrant.A_target_type]==ZaItem.DL){
return
}
if(o==="gst"){
return
}
if((r.lastIndexOf("@")==r.indexOf("@"))&&(r.indexOf("@")>0)||e[ZaGrant.A_target_type]==ZaItem.DOMAIN||e[ZaGrant.A_target_type]==ZaItem.DL||e[ZaGrant.A_target_type]==ZaItem.ACCOUNT||e[ZaGrant.A_target_type]==ZaItem.GLOBAL_GRANT){
n.parent.updateGranteeType(r,this)
}else{
this.setError(AjxMessageFormat.format(AjxMsg.invalidEmailAddr));
var s=new DwtXFormsEvent(n,this,r);
n.notifyListeners(DwtEvent.XFORMS_VALUE_ERROR,s);
return
}};
ZaGrantDialog.setTargetTypeChanged=function(c,e,t){
var d=this.getInstanceValue();
if(d==c){
return
}
this.setInstanceValue(c);
var o;
if(c==ZaItem.GLOBAL_CONFIG){
o=ZaGrant.GLOBAL_CONFIG_TARGET_NAME
}else{
if(c==ZaItem.GLOBAL_GRANT){
o=ZaGrant.GLOBAL_TARGET_NAME
}else{
o=""
}}
this.setInstanceValue(o,ZaGrant.A_target);
var r=this.getForm().getItemsById(ZaGrant.A_target);
for(var n=0;
n<r.length;
n++){
if(r[n].getIsVisible){
r[n].updateElement(o)
}}
var u=this.getInstance();
if(u[ZaGrant.A_grantee_type]==ZaGrant.GRANTEE_TYPE.usr&&u[ZaGrant.A2_isAdmin]=="0"||u[ZaGrant.A_grantee_type]==ZaGrant.GRANTEE_TYPE.grp||u[ZaGrant.A_grantee_type]=="dom"){
this.setInstanceValue("system",ZaGrant.A_right_type)
}
var l=this.getForm().parent;
var s=new XFormChoices([],XFormChoices.OBJECT_LIST,"name","name");
l.targetNameChoices.setChoices(s);
l.targetNameChoices.dirtyChoices()
};
ZaGrantDialog.prototype.updateGranteeType=function(t,e){
try{
var n=new Object();
t=ZaSearch.escapeLdapQuery(t);
query="(|("+ZaAccount.A_mail+"="+t+")("+ZaAccount.A_zimbraMailAlias+"="+t+")("+ZaDomain.A_domainName+"="+t+"))";
dataCallback=new AjxCallback(this,this.setGranteeType,{
xform:e}
);
n.types=[ZaSearch.ACCOUNTS,ZaSearch.DLS,ZaSearch.DOMAINS];
n.callback=dataCallback;
n.query=query;
n.controller=ZaApp.getInstance().getCurrentController();
ZaSearch.searchDirectory(n)
}
catch(o){
ZaApp.getInstance().getCurrentController()._handleException(o,"ZaGrantDialog.updateGranteeType")
}};
ZaGrantDialog.prototype.setGranteeType=function(n,s){
try{
if(!s){
throw (new AjxException(ZaMsg.ERROR_EMPTY_RESPONSE_ARG,AjxException.UNKNOWN,"ZaGrantDialog.setGranteeType"))
}
if(s.isException()){
throw (s.getException())
}else{
var r=s.getResponse().Body.SearchDirectoryResponse;
var d=new ZaItemList(null);
d.loadFromJS(r);
var c=d.getArray();
if(c.length!=1){
if(n.xform){
var f=n.xform;
f.setError(ZaMsg.ERROR_INVALID_VALUE);
var t=new DwtXFormsEvent(this._localXForm,f);
this._localXForm.notifyListeners(DwtEvent.XFORMS_VALUE_ERROR,t)
}}else{
var m=c[0].type;
var o="";
var e=this._localXForm.getInstanceValue(ZaGrant.A2_isAdmin);
if(m==ZaItem.ACCOUNT){
o="usr";
if(c[0].attrs[ZaAccount.A_zimbraIsAdminAccount]!="TRUE"&&c[0].attrs[ZaAccount.A_zimbraIsDelegatedAdminAccount]!="TRUE"){
this._localXForm.setInstanceValue("0",ZaGrant.A2_isAdmin)
}else{
this._localXForm.setInstanceValue("1",ZaGrant.A2_isAdmin)
}}else{
if(m==ZaItem.DL){
o="grp";
if(e!="0"){
this._localXForm.setInstanceValue("0",ZaGrant.A2_isAdmin)
}}else{
if(m==ZaItem.DOMAIN){
o="dom";
if(e!="0"){
this._localXForm.setInstanceValue("0",ZaGrant.A2_isAdmin)
}}}}
if(this._localXForm.getInstanceValue(ZaGrant.A2_isAdmin)!=e){
if(this._localXForm.getInstanceValue(ZaGrant.A2_isAdmin)=="0"){
this._localXForm.setInstanceValue("system",ZaGrant.A_right_type)
}
var l=new XFormChoices([],XFormChoices.OBJECT_LIST,"name","name");
this.systemRightsChoices.setChoices(l);
this.systemRightsChoices.dirtyChoices()
}
this._localXForm.setInstanceValue(o,ZaGrant.A_grantee_type)
}}}
catch(u){
ZaApp.getInstance().getCurrentController()._handleException(u,"ZaSearch.prototype.dynSelectDataCallback")
}};
ZaGrantDialog.prototype.updateTargetType=function(r,d){
try{
var t=new Object();
query="("+ZaAccount.A_mail+"="+r+")";
t.types=[ZaSearch.ACCOUNTS];
t.query=query;
t.attrs=[ZaAccount.A_uid,ZaAccount.A_zimbraIsAdminAccount,ZaAccount.A_zimbraIsDelegatedAdminAccount];
t.controller=ZaApp.getInstance().getCurrentController();
var o=ZaSearch.searchDirectory(t);
if(o&&o.Body.SearchDirectoryResponse){
var n=o.Body.SearchDirectoryResponse;
var l=new ZaItemList(ZaAccount);
l.loadFromJS(n);
var s=l.getArray();
if(s.length!=1){
if(d){
d.setError(ZaMsg.ERROR_INVALID_VALUE);
var e=new DwtXFormsEvent(this._localXForm,d);
this._localXForm.notifyListeners(DwtEvent.XFORMS_VALUE_ERROR,e)
}}}}
catch(c){
ZaApp.getInstance().getCurrentController()._handleException(c,"ZaGrantDialog.updateGranteeType")
}};
ZaGrantDialog.egpChanged=function(n,t,e){
this.setInstanceValue(n);
if(n){
var o=this.getInstanceValue(ZaGrant.A_grantee_type);
this.setInstanceValue(o,ZaGrant.A2_grantee_old_type);
this.setInstanceValue("egp",ZaGrant.A_grantee_type)
}else{
var o=this.getInstanceValue(ZaGrant.A2_grantee_old_type);
this.setInstanceValue(o,ZaGrant.A_grantee_type)
}};
ZaGrantDialog.extGroupChanged=function(n,o,t){
this.setInstanceValue(n);
var s=this.getInstanceValue(ZaGrant.A2_extDomainName);
var e=s+":"+n;
this.setInstanceValue(e,ZaGrant.A_grantee)
};
ZaGrantDialog.showAssignExtLDAPRight=function(){
var e=ZaZimbraAdmin.isGlobalAdmin();
var t=(this.getInstanceValue(ZaGrant.A_target_type)==ZaItem.DOMAIN);
return e&&t
};
ZaGrantDialog.prototype.grantRightMethod=function(r,s,n){
var l=this.getObject();
var t={
newGrant:l,isGlobalGrant:n,isMoreGrants:s,parent:r};
var o;
if(n){
o=r.getList().getArray()
}else{
var e=r.getInstance();
o=e[this.grantListPropertyName]||[]
}
t.grantList=o;
if(this.isGrantExists(t)<0){
if(ZaGrant.grantMethod(l)){
if(n){
r.fireCreationEvent(ZaUtil.deepCloneObject(l))
}else{
o.push(ZaUtil.deepCloneObject(l));
r.getModel().setInstanceValue(e,this.grantListPropertyName,o);
r.getModel().setInstanceValue(e,ZaGrant.A2_grantStatus,com_zimbra_delegatedadmin.GrantStatus_Grant);
r.setInstanceValue("TRUE",ZaGrant.A2_showGrantStatus);
r.refresh();
r.setInstanceValue("FALSE",ZaGrant.A2_showGrantStatus)
}
return true
}}};
ZaGrantDialog.prototype.grantRight=function(o,t,e){
if(this.grantRightMethod(o,t,e)){
if(t){
var n=this.getObject();
n[ZaGrant.A_right]="";
this.setObject(n);
this.refresh()
}else{
this.popdown()
}}};
ZaGrantDialog.prototype.editRightAndFinish=function(n,s,o){
var e={
isEditAndFinish:true,parent:n,isGlobalGrant:o};
if(o){
e.grantList=n.getList().getArray()
}else{
e.grantList=n.getInstance()[this.grantListPropertyName]
}
e.newGrant=this.getObject();
if(!ZaApp.getInstance().dialogs.EditGrantConfirmDialog){
ZaApp.getInstance().dialogs.EditGrantConfirmDialog=new ZaMsgDialog(ZaApp.getInstance().getAppCtxt().getShell(),null,[DwtDialog.YES_BUTTON,DwtDialog.NO_BUTTON])
}
ZaApp.getInstance().dialogs.EditGrantConfirmDialog.registerCallback(DwtDialog.YES_BUTTON,ZaGrantDialog.prototype.editRightAndFinishCallback,this,[n,s,e]);
var t=com_zimbra_delegatedadmin.confirm_edit_grants+"<br /><br />"+com_zimbra_delegatedadmin.confirm_edit_grants_existing_acl+ZaTargetPermission.getDlMsgFromGrant([s])+com_zimbra_delegatedadmin.confirm_edit_grants_new_acl+ZaTargetPermission.getDlMsgFromGrant([e.newGrant]);
ZaApp.getInstance().dialogs.EditGrantConfirmDialog.setMessage(t,DwtMessageDialog.INFO_STYLE);
ZaApp.getInstance().dialogs.EditGrantConfirmDialog.popup()
};
ZaGrantDialog.prototype.editRightAndFinishCallback=function(r,l,o){
var n=o.grantList;
var s=o.isGlobalGrant;
var t=o.newGrant;
if(ZaGrant.revokeMethod(l)){
if(s){
r.fireRemovalEvent(l)
}else{
for(var e=0;
e<n.length;
e++){
if(l==n[e]){
n.splice(e,1)
}}
r.getModel().setInstanceValue(r.getInstance(),this.grantListPropertyName,n)
}
ZaApp.getInstance().dialogs.EditGrantConfirmDialog.popdown();
if(this.isGrantExists(o)<0){
if(ZaGrant.grantMethod(t)){
if(o.isGlobalGrant){
r.fireCreationEvent(ZaUtil.deepCloneObject(t))
}else{
n.push(ZaUtil.deepCloneObject(t));
r.getModel().setInstanceValue(r.getInstance(),this.grantListPropertyName,n)
}}else{
if(ZaGrant.grantMethod(l)){
if(o.isGlobalGrant){
r.fireCreationEvent(ZaUtil.deepCloneObject(l))
}else{
n.push(ZaUtil.deepCloneObject(l));
r.getModel().setInstanceValue(r.getInstance(),this.grantListPropertyName,n)
}}}}
if(!s){
r.setInstanceValue(com_zimbra_delegatedadmin.GrantStatus_Update,ZaGrant.A2_grantStatus);
r.setInstanceValue("TRUE",ZaGrant.A2_showGrantStatus);
r.refresh();
r.setInstanceValue("FALSE",ZaGrant.A2_showGrantStatus)
}
this.popdown()
}};
ZaGrantDialog.prototype.editRightMethod=function(s){
var c=s.grantList;
var e=s.currentGrantIndex;
var o=s.newGrant;
var r=s.isMoreGrants;
var d=s.isGlobalGrant;
var t=s.isEditAndFinish;
var l=s.parent;
if(ZaGrant.revokeMethod(c[e])){
if(d){
l.fireRemovalEvent(c[e])
}else{
c.splice(e,1);
l.getModel().setInstanceValue(l.getInstance(),this.grantListPropertyName,c)
}
if(ZaGrant.grantMethod(o)){
if(d){
l.fireCreationEvent(ZaUtil.deepCloneObject(o))
}else{
c.push(ZaUtil.deepCloneObject(o));
l.getModel().setInstanceValue(l.getInstance(),this.grantListPropertyName,c)
}}}
ZaApp.getInstance().dialogs.EditGrantConfirmDialog.popdown();
if(r){
var n=this.getObject();
n[ZaGrant.A_right]="";
this.setObject(n);
this.refresh()
}else{
this.popdown()
}};
ZaGrantDialog.isDL=function(){
var e=ZaApp.getInstance().getCurrentController();
var t=(e instanceof ZaDLController);
return t
};
ZaGrantDialog.checkedAdmin=function(r,s,o){
if(r==s){
return
}
var e=ZaApp.getInstance().getCurrentController();
var l=(e instanceof ZaDLController);
if(l){
if(r=="0"){
this.setInstanceValue("system",ZaGrant.A_right_type)
}
if(r!=s){
var t=this.getForm().parent;
var n=new XFormChoices([],XFormChoices.OBJECT_LIST,"name","name");
t.granteeNameChoices.setChoices(n);
t.granteeNameChoices.dirtyChoices();
t.systemRightsChoices.setChoices(n);
t.systemRightsChoices.dirtyChoices()
}}
this.setInstanceValue(r,ZaGrant.A2_isAdmin)
};
ZaGrantDialog.isOnlyUserRight=function(){
var e=this.getInstanceValue(ZaGrant.A2_isAdmin);
return(e=="1")
};
ZaGrantDialog.rightTypeListener=function(t){
var e=this.getInstanceValue(ZaGrant.A_right_type);
return(e==t)
};
ZaGrantDialog.targetTypeListener=function(){
var t=this.getInstanceValue(ZaGrant.A_target_type);
var e=true;
if(t==null||t==ZaItem.GLOBAL_GRANT||t==ZaItem.GLOBAL_CONFIG){
e=false
}
return e
};
ZaGrantDialog.granteeTypeListener=function(){
var t=this.getForm().getItemsById(ZaGrant.A_grantee_type)[0];
if(!t.getIsVisible()){
return true
}
var e=t.getElement().value;
return(e.trim().length!==0)
};
ZaGrantDialog.composeInlineRight=function(o,t,e){
this.setInstanceValue(o);
var n=ZaGrantDialog.getInlineRightName.call(this);
this.setInstanceValue(n,ZaGrant.A_right);
e.getItemsById(ZaGrant.A_right)[0].updateElement(n)
};
ZaGrantDialog.getInlineRightName=function(t){
var n=this.getInstanceValue(ZaGrant.A_inline_right+"/"+ZaGrant.A_inline_verb)||"";
var o=this.getInstanceValue(ZaGrant.A_inline_right+"/"+ZaGrant.A_inline_target_type)||"";
var e=this.getInstanceValue(ZaGrant.A_inline_right+"/"+ZaGrant.A_inline_attr)||"";
return n+"."+o+"."+e
};
ZaGrantDialog.getInlineRightAttrsByName=function(o){
var e=o.split(".");
if(e.length==3){
var t={};
t[ZaGrant.A_inline_verb]=e[0];
t[ZaGrant.A_inline_target_type]=e[1];
t[ZaGrant.A_inline_attr]=e[2]
}else{
ZaApp.getInstance().getCurrentController().popupErrorDialog(com_zimbra_delegatedadmin.error_invalid_inline_right)
}
return t
};
ZaGrantDialog.prototype.isGrantExists=function(g){
var b=g.grantList;
var u=g.newGrant;
for(var m=0;
m<b.length;
m++){
var t=b[m];
var r=[ZaGrant.A_grantee,ZaGrant.A_grantee_type,ZaGrant.A_target,ZaGrant.A_target_type,ZaGrant.A_right];
var p=m;
for(var l=0;
l<r.length;
l++){
var s=r[l];
var d=t[s];
var y=u[s];
if(d!=y){
p=-1;
break
}}
if(p>=0){
var f=false;
var r=[ZaGrant.A_canDelegate,ZaGrant.A_disinheritSubGroups,ZaGrant.A_deny,ZaGrant.A_canInheritBySubDomain];
for(var l=0;
l<r.length;
l++){
var s=r[l];
var d=t[s];
var y=u[s];
var n=(d=="1");
var o=(y=="1");
if(n!=o){
f=true;
break
}}
if(f){
if(!ZaApp.getInstance().dialogs.EditGrantConfirmDialog){
ZaApp.getInstance().dialogs.EditGrantConfirmDialog=new ZaMsgDialog(ZaApp.getInstance().getAppCtxt().getShell(),null,[DwtDialog.YES_BUTTON,DwtDialog.NO_BUTTON])
}
g.currentGrantIndex=m;
ZaApp.getInstance().dialogs.EditGrantConfirmDialog.registerCallback(DwtDialog.YES_BUTTON,ZaGrantDialog.prototype.editRightMethod,this,[g]);
var c=com_zimbra_delegatedadmin.confirm_edit_grants+"<br /><br />"+com_zimbra_delegatedadmin.confirm_edit_grants_existing_acl+ZaTargetPermission.getDlMsgFromGrant([b[m]])+com_zimbra_delegatedadmin.confirm_edit_grants_new_acl+ZaTargetPermission.getDlMsgFromGrant([u]);
ZaApp.getInstance().dialogs.EditGrantConfirmDialog.setMessage(c,DwtMessageDialog.INFO_STYLE);
ZaApp.getInstance().dialogs.EditGrantConfirmDialog.popup();
return m
}else{
var e=ZaApp.getInstance()._appCtxt.getMsgDialog();
e.setMessage(com_zimbra_delegatedadmin.grant_exist_msg+ZaTargetPermission.getDlMsgFromGrant([u]));
e.popup();
return p
}}}
return -1
};
ZaGrantDialog.changeDenyAllow=function(n,o,t){
var e=this.getRef();
if(e==ZaGrant.A_allow){
this.setInstanceValue("1");
this.setInstanceValue("0",ZaGrant.A_deny)
}else{
if(e==ZaGrant.A_deny){
this.setInstanceValue("1");
this.setInstanceValue("0",ZaGrant.A_allow);
this.setInstanceValue("0",ZaGrant.A_canDelegate);
this.setInstanceValue("0",ZaGrant.A_disinheritSubGroups);
this.setInstanceValue("0",ZaGrant.A_canInheritBySubDomain)
}}};
ZaGrantDialog.prototype.refresh=function(){
var r=this._localXForm;
r.refresh();
var o=r.getInstance();
var t=o[ZaGrant.A_deny];
var s=o[ZaGrant.A_canDelegate];
if(t=="1"){
var e=r.getItemsById(ZaGrant.A_deny)[0];
e.getElement().checked=true;
r.setInstanceValue("0",ZaGrant.A_allow)
}else{
var n=r.getItemsById(ZaGrant.A_allow)[0];
n.getElement().checked=true;
r.setInstanceValue("1",ZaGrant.A_allow)
}};
ZaGrantView=function(e){
ZaTabView.call(this,e,"ZaGrantView");
this.setScrollStyle(Dwt.SCROLL);
this.TAB_INDEX=0;
this.initForm(ZaGrant.myXModel,this.getMyXForm());
this._localXForm.setController(ZaApp.getInstance())
};
ZaGrantView.prototype=new ZaTabView();
ZaGrantView.prototype.constructor=ZaGrantView;
ZaTabView.XFormModifiers.ZaGrantView=new Array();
ZaGrantView.onFormFieldChanged=function(o,t,e){
e.parent.setDirty(true);
this.setInstanceValue(o);
return o
};
ZaGrantView.prototype.setObject=function(e){
this._containedObject=e;
this._containedObject.setAttrs={};
this._containedObject.setAttrs.all=true;
this._localXForm.setInstance(this._containedObject)
};
ZaGrantView.myXFormModifier=function(e){
e.tableCssStyle="width:100%;position:static;overflow:visible;";
e.items=[{
type:_GROUP_,colSpan:"*",numCols:2,colSizes:[200,"*"],items:[{
type:_SPACER_}
,{
type:_OUTPUT_,value:ZaGrant.GLOBAL_TARGET_NAME,label:com_zimbra_delegatedadmin.Label_target_name}
,{
ref:ZaGrant.A_grantee,type:_TEXTFIELD_,label:com_zimbra_delegatedadmin.Label_grantee_name,visibilityChecks:[],labelLocation:_LEFT_}
,{
ref:ZaGrant.A_grantee_type,type:_OSELECT1_,label:com_zimbra_delegatedadmin.Label_grantee_type,visibilityChecks:[],labelLocation:_LEFT_,choices:ZaGrant.GRANTEE_TYPE_CHOICES}
,{
ref:ZaGrant.A_right,type:_TEXTFIELD_,label:com_zimbra_delegatedadmin.Label_right_name,visibilityChecks:[],labelLocation:_LEFT_}
,{
ref:ZaGrant.A_allow,type:_RADIO_,label:com_zimbra_delegatedadmin.Col_allow,groupname:"radio_grp_deny_delegate",onChange:ZaGrantDialog.changeDenyAllow,visibilityChecks:[],bmol:true,labelLocation:_RIGHT_}
,{
ref:ZaGrant.A_canDelegate,type:_CHECKBOX_,label:com_zimbra_delegatedadmin.Col_can_grant,subLabel:"",visibilityChangeEventSources:[ZaGrant.A_allow],visibilityChecks:[[XForm.checkInstanceValue,ZaGrant.A_allow,"1"]],labelLocation:_RIGHT_,trueValue:"1",falseValue:"0"}
,{
ref:ZaGrant.A_deny,type:_RADIO_,label:com_zimbra_delegatedadmin.Col_deny,groupname:"radio_grp_deny_delegate",onChange:ZaGrantDialog.changeDenyAllow,visibilityChecks:[],bmol:true,labelLocation:_RIGHT_}
]}
]
};
ZaTabView.XFormModifiers.ZaGrantView.push(ZaGrantView.myXFormModifier);
ZaGrantViewController=function(t,e){
ZaXFormViewController.call(this,t,e,"ZaGrantViewController");
this._UICreated=false;
this._helpURL=location.pathname+ZaUtil.HELP_URL+"managing_grants/managing_grants.htm?locid="+AjxEnv.DEFAULT_LOCALE;
this._toolbarOperations=new Array();
this.objType=ZaEvent.S_GRANT;
this.tabConstructor=ZaGrantView
};
ZaGrantViewController.prototype=new ZaXFormViewController();
ZaGrantViewController.prototype.constructor=ZaGrantViewController;
ZaController.setViewMethods.ZaGrantViewController=new Array();
ZaXFormViewController.preSaveValidationMethods.ZaGrantViewController=new Array();
ZaGrantViewController.prototype.show=function(e){
if(!this.selectExistingTabByItemId(e.id)){
this._setView(e,true)
}};
ZaGrantViewController.prototype.addGrantChangeListener=function(e){
this._evtMgr.addListener(ZaEvent.E_MODIFY,e)
};
ZaGrantViewController.prototype.removeGrantChangeListener=function(e){
this._evtMgr.removeListener(ZaEvent.E_MODIFY,e)
};
ZaGrantViewController.prototype.switchToNextView=function(e,o,n){
if(this._view.isDirty()){
var t=new Object();
t.params=n;
t.obj=e;
t.func=o;
ZaApp.getInstance().dialogs.confirmMessageDialog.setMessage(ZaMsg.Q_SAVE_CHANGES,DwtMessageDialog.INFO_STYLE);
ZaApp.getInstance().dialogs.confirmMessageDialog.registerCallback(DwtDialog.YES_BUTTON,this.validateChanges,this,t);
ZaApp.getInstance().dialogs.confirmMessageDialog.registerCallback(DwtDialog.NO_BUTTON,this.discardAndGoAway,this,t);
ZaApp.getInstance().dialogs.confirmMessageDialog.popup()
}else{
ZaController.prototype.switchToNextView.call(this,e,o,n)
}};
ZaGrantViewController.setViewMethod=function(e){
e.load();
if(!this._UICreated){
this._createUI()
}
ZaApp.getInstance().pushView(this.getContentViewId());
this._view.setDirty(false);
this._view.setObject(e);
this._currentObject=e
};
ZaController.setViewMethods.ZaGrantViewController.push(ZaGrantViewController.setViewMethod);
ZaGrantViewController.prototype._createUI=function(){
this._contentView=this._view=new this.tabConstructor(this._container);
var e=new Object();
e[ZaAppViewMgr.C_APP_CONTENT]=this._view;
ZaApp.getInstance().getAppViewMgr().createView(this.getContentViewId(),e);
this._UICreated=true;
ZaApp.getInstance()._controllers[this.getContentViewId()]=this
};
ZaGrantViewController.prototype._saveChanges=function(){
var e=this._view.getObject();
this._currentObject.modify(e);
this._view.setDirty(false);
this.fireChangeEvent(this._currentObject);
return true
};
ZaGrantViewController.prototype.saveButtonListener=function(t){
try{
this.validateChanges()
}
catch(e){
this._handleException(e,"ZaGrantViewController.prototype.saveButtonListener",null,false)
}};
ZaGlobalGrantListViewController=function(t,e){
ZaListViewController.call(this,t,e,"ZaGlobalGrantListViewController");
this._toolbarOperations=new Array();
this._popupOperations=new Array();
this._helpURL=location.pathname+ZaUtil.HELP_URL+"da_process/manage_delegated_admin_grants.htm?locid="+AjxEnv.DEFAULT_LOCALE;
this.addCreationListener(new AjxListener(this,this.handleGrantCreation));
this.addRemovalListener(new AjxListener(this,this.handleGrantRemoval))
};
ZaGlobalGrantListViewController.prototype=new ZaListViewController();
ZaGlobalGrantListViewController.prototype.constructor=ZaGlobalGrantListViewController;
ZaController.initPopupMenuMethods.ZaGlobalGrantListViewController=new Array();
ZaController.changeActionsStateMethods.ZaGlobalGrantListViewController=new Array();
ZaGlobalGrantListViewController.prototype.show=function(t,e){
if(!this._UICreated){
this._createUI()
}
ZaApp.getInstance().pushView(this.getContentViewId());
if(t!=null){
this._list=t;
this._updateUI()
}};
ZaGlobalGrantListViewController.prototype._updateUI=function(){
if(!this._list){
return
}
this.numPages=this._list.getVector().size()/this.RESULTSPERPAGE;
var n=(this._currentPageNum-1)*this.RESULTSPERPAGE+1;
var o=this._currentPageNum*this.RESULTSPERPAGE;
var t=new Array();
for(var e=n-1;
e<o;
e++){
t.push(this._list.getVector().getArray()[e])
}
this._contentView._bSortAsc=(this._currentSortOrder=="1");
this._contentView.set(AjxVector.fromArray(t),this._contentView._defaultColumnSortable);
this._removeList=new Array();
this.changeActionsState()
};
ZaGlobalGrantListViewController.prototype._nextPageListener=function(e){
if(this._currentPageNum<this.numPages){
this._currentPageNum++
}
this._updateUI()
};
ZaGlobalGrantListViewController.prototype._prevPageListener=function(e){
if(this._currentPageNum>1){
this._currentPageNum--
}
this._updateUI()
};
ZaGlobalGrantListViewController.initPopupMenuMethod=function(){
this._popupOperations[ZaOperation.NEW]=new ZaOperation(ZaOperation.NEW,com_zimbra_delegatedadmin.Bt_grant,com_zimbra_delegatedadmin.Grant_New_tt,"GlobalPermission","GlobalPermissionDis",new AjxListener(this,ZaGlobalGrantListViewController.prototype._newButtonListener));
this._popupOperations[ZaOperation.DELETE]=new ZaOperation(ZaOperation.DELETE,com_zimbra_delegatedadmin.Bt_revoke,com_zimbra_delegatedadmin.Grant_Delete_tt,"Delete","DeleteDis",new AjxListener(this,ZaGlobalGrantListViewController.prototype._deleteButtonListener));
this._popupOperations[ZaOperation.EDIT]=new ZaOperation(ZaOperation.EDIT,ZaMsg.TBB_Edit,com_zimbra_delegatedadmin.Grant_Edit_tt,"Edit","Edit",new AjxListener(this,ZaGlobalGrantListViewController.prototype._editButtonListener))
};
ZaController.initPopupMenuMethods.ZaGlobalGrantListViewController.push(ZaGlobalGrantListViewController.initPopupMenuMethod);
ZaGlobalGrantListViewController.prototype._createUI=function(){
try{
var t=new Object();
this._contentView=new ZaGrantsListView(this._container,null,DwtControl.ABSOLUTE_STYLE);
this._initPopupMenu();
this._actionMenu=new ZaPopupMenu(this._contentView,"ActionMenu",null,this._popupOperations);
t[ZaAppViewMgr.C_APP_CONTENT]=this._contentView;
ZaApp.getInstance().getAppViewMgr().createView(this.getContentViewId(),t);
this._contentView.addSelectionListener(new AjxListener(this,this._listSelectionListener));
this._contentView.addActionListener(new AjxListener(this,this._listActionListener));
this._removeConfirmMessageDialog=new ZaMsgDialog(ZaApp.getInstance().getAppCtxt().getShell(),null,[DwtDialog.YES_BUTTON,DwtDialog.NO_BUTTON]);
this._UICreated=true;
ZaApp.getInstance()._controllers[this.getContentViewId()]=this
}
catch(e){
this._handleException(e,"ZaGlobalGrantListViewController.prototype._createUI",null,false);
return
}};
ZaGlobalGrantListViewController.prototype.set=function(e){
this.show(e)
};
ZaGlobalGrantListViewController.prototype.handleGrantChange=function(t){
if(t){
var e=t.getDetails();
if(e){
if(this._list){
this._list.replace(e)
}
if(ZaApp.getInstance().getCurrentController()==this){
this.show(this._list)
}}}};
ZaGlobalGrantListViewController.prototype.handleGrantCreation=function(e){
if(e){
if(e.getDetails()){
if(this._list){
this._list.add(e.getDetails())
}
this._currentPageNum=1;
if(ZaApp.getInstance().getCurrentController()==this){
this.show(this._list)
}}}};
ZaGlobalGrantListViewController.prototype.handleGrantRemoval=function(e){
if(e){
if(e.getDetails()){
if(this._list){
this._list.remove(e.getDetails())
}
this._currentPageNum=1;
if(ZaApp.getInstance().getCurrentController()==this){
this.show(this._list)
}}}};
ZaGlobalGrantListViewController.prototype._newButtonListener=function(t){
var e=new ZaGrant();
var o={};
o._uuid=o.name=o[ZaGrant.A_target]=ZaGrant.GLOBAL_TARGET_NAME;
o[ZaGrant.A_target_type]="global";
o.setAttrs={};
o.setAttrs.all=true;
if(!this.grantRightDlg){
this.grantRightDlg=new ZaGrantDialog(ZaApp.getInstance().getAppCtxt().getShell(),o,ZaApp.getInstance(),com_zimbra_delegatedadmin.Title_grant_rights+" ("+ZaGrant.GLOBAL_TARGET_NAME+")",null,false)
}
this.grantRightDlg.registerCallback(ZaGrantDialog.ADD_FINISH_BUTTON,ZaGrantDialog.prototype.grantRight,this.grantRightDlg,[this,false,true]);
this.grantRightDlg.registerCallback(ZaGrantDialog.ADD_MORE_BUTTON,ZaGrantDialog.prototype.grantRight,this.grantRightDlg,[this,true,true]);
this.grantRightDlg.setObject(o);
this.grantRightDlg.popup();
this.grantRightDlg.refresh()
};
ZaGlobalGrantListViewController.prototype._editButtonListener=function(t){
if(this._contentView.getSelectionCount()==1){
var e=this._contentView.getSelection()[0];
var o=ZaUtil.deepCloneObject(e,["_evtMgr"]);
if(o[ZaGrant.A_right].indexOf("get.")==0||o[ZaGrant.A_right].indexOf("set.")==0){
o[ZaGrant.A_right_type]="inline";
o[ZaGrant.A_inline_right]=ZaGrantDialog.getInlineRightAttrsByName(o[ZaGrant.A_right])
}else{
o[ZaGrant.A_right_type]="system"
}
o._uuid=o.name=o[ZaGrant.A_target]=ZaGrant.GLOBAL_TARGET_NAME;
o[ZaGrant.A_target_type]="global";
if(!this.editRigthDlg){
this.editRigthDlg=new ZaGrantDialog(ZaApp.getInstance().getAppCtxt().getShell(),o,ZaApp.getInstance(),com_zimbra_delegatedadmin.Title_edit_rights,ZaGrant.A_target,true)
}
this.editRigthDlg.registerCallback(ZaGrantDialog.EDIT_FINISH_BUTTON,ZaGrantDialog.prototype.editRightAndFinish,this.editRigthDlg,[this,e,true]);
this.editRigthDlg.setObject(o);
this.editRigthDlg.popup();
this.editRigthDlg.refresh()
}};
ZaGlobalGrantListViewController.prototype._deleteButtonListener=function(o){
var s=this._contentView.getSelection();
if(s&&s.length>0){
if(!this.revokeRightDlg){
this.revokeRightDlg=new ZaMsgDialog(ZaApp.getInstance().getAppCtxt().getShell(),null,[DwtDialog.YES_BUTTON,DwtDialog.NO_BUTTON])
}
this.revokeRightDlg.registerCallback(DwtDialog.YES_BUTTON,ZaGrantsListView.revokeGlobalGrant,this,null);
var t=com_zimbra_delegatedadmin.confirm_delete_grants+ZaTargetPermission.getDlMsgFromGrant(s);
this.revokeRightDlg.setMessage(t,DwtMessageDialog.INFO_STYLE);
var n=s.length;
var e=(n>=3?3*80:n*80);
this.revokeRightDlg.setSize(400,e+30);
this.revokeRightDlg.popup()
}else{
ZaApp.getInstance().getCurrentController().popupMsgDialog(com_zimbra_delegatedadmin.no_grant_selected_msg)
}};
ZaGlobalGrantListViewController.prototype._listSelectionListener=function(e){
if(e.detail==DwtListView.ITEM_DBL_CLICKED){
if(e.item){
this._selectedItem=e.item;
this._editButtonListener(e)
}}else{
this.changeActionsState()
}};
ZaGlobalGrantListViewController.prototype._listActionListener=function(e){
this.changeActionsState();
this._actionMenu.popup(0,e.docX,e.docY)
};
ZaGlobalGrantListViewController.changeActionsStateMethod=function(){
if(this._contentView){
var e=this._contentView.getSelectionCount();
if(e>=1){
if(this._popupOperations[ZaOperation.DELETE]){
this._popupOperations[ZaOperation.DELETE].enabled=true
}
if(e==1){
if(this._popupOperations[ZaOperation.EDIT]){
this._popupOperations[ZaOperation.EDIT].enabled=true
}}else{
if(this._popupOperations[ZaOperation.EDIT]){
this._popupOperations[ZaOperation.EDIT].enabled=false
}}}else{
if(this._popupOperations[ZaOperation.DELETE]){
this._popupOperations[ZaOperation.DELETE].enabled=false
}
if(this._popupOperations[ZaOperation.EDIT]){
this._popupOperations[ZaOperation.EDIT].enabled=false
}}}};
ZaController.changeActionsStateMethods.ZaGlobalGrantListViewController.push(ZaGlobalGrantListViewController.changeActionsStateMethod);
if(ZaSettings&&ZaSettings.EnabledZimlet.com_zimbra_delegatedadmin){
ZaItem.NEW_ADMIN="newAdmin";
ZaNewAdmin=function(){
ZaItem.call(this,"ZaNewAdmin");
this._init();
this.type=ZaItem.NEW_ADMIN;
this.attrs={};
this.attrs[ZaAccount.A_zimbraIsDelegatedAdminAccount]="TRUE"
};
ZaNewAdmin.prototype=new ZaItem;
ZaNewAdmin.prototype.constructor=ZaNewAdmin;
ZaNewAdmin.A_admin_type="new_admin_type";
ZaNewAdmin.A_default_domain_admin_grp="default_da_grp";
ZaNewAdmin.A_default_domain_admin="default_da";
ZaNewAdmin.A_proposedGrantsList="proposedGrantsList";
ZaNewAdmin.getMyXModel=function(){
var t=[{
id:ZaNewAdmin.A_admin_type,type:_STRING_,ref:ZaNewAdmin.A_admin_type}
,{
id:"id",type:_STRING_,ref:"id"}
,{
id:"type",type:_STRING_,ref:"type"}
,{
id:ZaAccount.A_name,type:_STRING_,ref:ZaAccount.A_name,constraints:{
type:"method",value:function(r,n,s,o){
if(!ZaAccount.isValidName(r)){
throw ZaMsg.ErrorInvalidEmailAddress
}else{
return r
}}}}
,{
id:ZaAccount.A_password,type:_STRING_,ref:"attrs/"+ZaAccount.A_password,constraints:{
type:"method",value:function(u,s,d,f){
var m=u;
var r=s.getInstanceValue(ZaAccount.A2_confirmPassword);
var o=ZaNewAdminWizard.getDefaultAccount()._defaultValues;
var g=parseInt(o.attrs[ZaAccount.A_zimbraMaxPwdLength]);
var p=parseInt(o.attrs[ZaAccount.A_zimbraMinPwdLength]);
var n=AjxUtil.isEmpty(m)&&AjxUtil.isEmpty(r);
var l=null;
if(g&&p&&p<=g&&!n){
var c=AjxUtil.isEmpty(m)?0:m.length;
if(c>g){
l=(g==1)?ZaMsg.NAD_passMaxLengthMsg_s:ZaMsg.NAD_passMaxLengthMsg_p;
l=ZaMsg.ERROR_PASSWORD_TOOLONG+"<br/>"+AjxMessageFormat.format(l,g)
}else{
if(c<p){
l=(p==1)?ZaMsg.NAD_passMinLengthMsg_s:ZaMsg.NAD_passMinLengthMsg_p;
l=ZaMsg.ERROR_PASSWORD_TOOSHORT+"<br/>"+AjxMessageFormat.format(l,p)
}}}
if(l!=null){
s.setInstanceValue(m,ZaAccount.A_password);
throw l
}else{
return m
}}}}
,{
id:ZaAccount.A2_confirmPassword,type:_STRING_,ref:ZaAccount.A2_confirmPassword,constraints:{
type:"method",value:function(u,c,d,o){
var r=c.getInstanceValue(ZaAccount.A_password);
var s=u;
var n=AjxUtil.isEmpty(s);
var l=null;
if(r!=s&&!n){
l=ZaMsg.ERROR_PASSWORD_MISMATCH
}
if(l!=null){
c.setInstanceValue(s,ZaAccount.A2_confirmPassword);
throw l
}else{
return s
}}}}
,{
id:ZaAccount.A_zimbraPasswordMustChange,type:_ENUM_,choices:ZaModel.BOOLEAN_CHOICES,ref:"attrs/"+ZaAccount.A_zimbraPasswordMustChange}
,{
id:ZaAccount.A_zimbraIsAdminAccount,type:_ENUM_,choices:ZaModel.BOOLEAN_CHOICES,ref:"attrs/"+ZaAccount.A_zimbraIsAdminAccount}
,{
id:ZaAccount.A_zimbraIsDelegatedAdminAccount,type:_ENUM_,choices:ZaModel.BOOLEAN_CHOICES,ref:"attrs/"+ZaAccount.A_zimbraIsDelegatedAdminAccount}
,ZaAccount.adminRolesModelItem,ZaAccount.adminAccountModelItem,{
id:ZaDistributionList.A_isAdminGroup,type:_ENUM_,choices:ZaModel.BOOLEAN_CHOICES,ref:"attrs/"+ZaDistributionList.A_isAdminGroup}
,{
id:ZaNewAdmin.A_default_domain_admin_grp,type:_ENUM_,choices:ZaModel.BOOLEAN_CHOICES,ref:ZaNewAdmin.A_default_domain_admin_grp}
,{
id:ZaNewAdmin.A_default_domain_admin,type:_ENUM_,choices:ZaModel.BOOLEAN_CHOICES,ref:ZaNewAdmin.A_default_domain_admin}
,ZaNewAdmin.getProposedGrantsListItem(),ZaTargetPermission.grantListItem,ZaTargetPermission.grantListSelectItem,ZaUIComponent.UIComponentsItem,ZaUIComponent.InheritedUIComponentsItem];
try{
if(ZaPosixAccount){
t.push({
id:ZaPosixAccount.A_gidNumber,type:_NUMBER_,ref:"attrs/"+ZaPosixAccount.A_gidNumber,required:true}
);
t.push({
id:ZaPosixAccount.A_homeDirectory,type:_STRING_,ref:"attrs/"+ZaPosixAccount.A_homeDirectory,required:true}
);
t.push({
id:ZaPosixAccount.A_uidNumber,type:_NUMBER_,defaultValue:1000,ref:"attrs/"+ZaPosixAccount.A_uidNumber,required:true}
);
t.push({
id:ZaPosixAccount.A_loginShell,type:_STRING_,ref:"attrs/"+ZaPosixAccount.A_loginShell,required:true}
);
t.push({
id:ZaPosixAccount.A_gecos,type:_STRING_,ref:"attrs/"+ZaPosixAccount.A_gecos}
)
}
if(ZaSamAccount){
t.push({
id:ZaSamAccount.A_isSpecialNTAccount,type:_NUMBER_,defaultValue:0,ref:ZaSamAccount.A_isSpecialNTAccount}
);
t.push({
id:ZaSamAccount.A_sambaDomainSID,type:_STRING_,ref:ZaSamAccount.A_sambaDomainSID}
);
t.push({
id:ZaSamAccount.A_sambaSID,type:_STRING_,ref:"attrs/"+ZaSamAccount.A_sambaSID,required:true}
);
t.push({
id:ZaSamAccount.A_sambaAcctFlags,type:_STRING_,defaultValue:0,ref:"attrs/"+ZaSamAccount.A_sambaAcctFlags}
);
t.push({
id:ZaSamAccount.A_sambaBadPasswordCount,type:_NUMBER_,defaultValue:0,ref:"attrs/"+ZaSamAccount.A_sambaBadPasswordCount}
);
t.push({
id:ZaSamAccount.A_sambaBadPasswordTime,type:_NUMBER_,defaultValue:0,ref:"attrs/"+ZaSamAccount.A_sambaBadPasswordTime}
);
t.push({
id:ZaSamAccount.A_sambaDomainName,type:_STRING_,ref:"attrs/"+ZaSamAccount.A_sambaDomainName}
);
t.push({
id:ZaSamAccount.A_sambaHomeDrive,type:_STRING_,ref:"attrs/"+ZaSamAccount.A_sambaHomeDrive}
);
t.push({
id:ZaSamAccount.A_sambaHomePath,type:_STRING_,ref:"attrs/"+ZaSamAccount.A_sambaHomePath}
);
t.push({
id:ZaSamAccount.A_sambaKickoffTime,type:_NUMBER_,ref:"attrs/"+ZaSamAccount.A_sambaKickoffTime}
);
t.push({
id:ZaSamAccount.A_sambaLMPassword,type:_STRING_,ref:"attrs/"+ZaSamAccount.A_sambaLMPassword}
);
t.push({
id:ZaSamAccount.A_sambaLogoffTime,type:_NUMBER_,ref:"attrs/"+ZaSamAccount.A_sambaLogoffTime}
);
t.push({
id:ZaSamAccount.A_sambaLogonHours,type:_STRING_,ref:"attrs/"+ZaSamAccount.A_sambaLogonHours}
);
t.push({
id:ZaSamAccount.A_sambaLogonScript,type:_STRING_,ref:"attrs/"+ZaSamAccount.A_sambaLogonScript}
);
t.push({
id:ZaSamAccount.A_sambaLogonTime,type:_NUMBER_,ref:"attrs/"+ZaSamAccount.A_sambaLogonTime}
);
t.push({
id:ZaSamAccount.A_sambaMungedDial,type:_STRING_,ref:"attrs/"+ZaSamAccount.A_sambaMungedDial}
);
t.push({
id:ZaSamAccount.A_sambaNTPassword,type:_STRING_,ref:"attrs/"+ZaSamAccount.A_sambaNTPassword}
);
t.push({
id:ZaSamAccount.A_sambaPasswordHistory,type:_STRING_,ref:"attrs/"+ZaSamAccount.A_sambaPasswordHistory}
);
t.push({
id:ZaSamAccount.A_sambaPrimaryGroupSID,type:_STRING_,ref:"attrs/"+ZaSamAccount.A_sambaPrimaryGroupSID}
);
t.push({
id:ZaSamAccount.A_sambaProfilePath,type:_STRING_,ref:"attrs/"+ZaSamAccount.A_sambaProfilePath}
);
t.push({
id:ZaSamAccount.A_sambaPwdCanChange,type:_NUMBER_,ref:"attrs/"+ZaSamAccount.A_sambaPwdCanChange}
);
t.push({
id:ZaSamAccount.A_sambaPwdLastSet,type:_NUMBER_,ref:"attrs/"+ZaSamAccount.A_sambaPwdLastSet}
);
t.push({
id:ZaSamAccount.A_sambaPwdMustChange,type:_NUMBER_,ref:"attrs/"+ZaSamAccount.A_sambaPwdMustChange}
);
t.push({
id:ZaSamAccount.A_sambaUserWorkstations,type:_STRING_,ref:"attrs/"+ZaSamAccount.A_sambaUserWorkstations}
)
}}
catch(e){}
return{
items:t}
};
ZaNewAdmin.getProposedGrantsListItem=function(){
var e=ZaUtil.deepCloneObject(ZaTargetPermission.grantListItem);
e.id=ZaNewAdmin.A_proposedGrantsList;
e.ref=ZaNewAdmin.A_proposedGrantsList;
return e
};
ZaNewAdmin.createAdmin=function(t){
var u;
var s=ZaApp.getInstance().getCurrentController();
if(t[ZaNewAdmin.A_admin_type]==ZaItem.ACCOUNT){
u=AjxSoapDoc.create("CreateAccountRequest",ZaZimbraAdmin.URN,null);
u.set(ZaAccount.A_name,t.name);
if(t.attrs[ZaAccount.A_password]&&t.attrs[ZaAccount.A_password].length>0){
u.set(ZaAccount.A_password,t.attrs[ZaAccount.A_password])
}
if(t.attrs[ZaAccount.A_zimbraPasswordMustChange]&&t.attrs[ZaAccount.A_zimbraPasswordMustChange]=="TRUE"){
var r=u.set("a",t.attrs[ZaAccount.A_zimbraPasswordMustChange]);
r.setAttribute("n",ZaAccount.A_zimbraPasswordMustChange)
}
for(var d in t.attrs){
if(d==ZaAccount.A_zimbraIsAdminAccount||d==ZaAccount.A_zimbraIsDelegatedAdminAccount||d==ZaAccount.A_password||d==ZaAccount.A_zimbraMailAlias||d==ZaItem.A_objectClass||d==ZaAccount.A2_mbxsize||d==ZaAccount.A_mail||d==ZaAccount.A_zimbraPasswordMustChange){
continue
}
var r=u.set("a",t.attrs[d]);
r.setAttribute("n",d)
}
if(t.attrs[ZaAccount.A_zimbraIsAdminAccount]&&t.attrs[ZaAccount.A_zimbraIsAdminAccount]=="TRUE"){
var r=u.set("a",t.attrs[ZaAccount.A_zimbraIsAdminAccount]);
r.setAttribute("n",ZaAccount.A_zimbraIsAdminAccount)
}else{
var r=u.set("a","TRUE");
r.setAttribute("n",ZaAccount.A_zimbraIsDelegatedAdminAccount)
}}else{
if(t[ZaNewAdmin.A_admin_type]==ZaItem.DL){
u=AjxSoapDoc.create("CreateDistributionListRequest",ZaZimbraAdmin.URN,null);
u.set(ZaAccount.A_name,t.name);
var r=u.set("a","TRUE");
r.setAttribute("n",ZaDistributionList.A_isAdminGroup)
}else{
s.popupErrorDialog(com_zimbra_delegatedadmin.ERROR_INVALID_ADMIN_TYPE);
return false
}}
var o=new Object();
o.soapDoc=u;
var e={};
e.controller=s;
e.busyMsg=com_zimbra_delegatedadmin.BUSY_CREATE_ADMIN;
try{
var c=ZaRequestMgr.invoke(o,e).Body;
var n;
if(t[ZaNewAdmin.A_admin_type]==ZaItem.ACCOUNT){
n=c.CreateAccountResponse.account[0]
}else{
if(t[ZaNewAdmin.A_admin_type]==ZaItem.DL){
n=c.CreateDistributionListResponse.dl[0]
}else{
throw (new AjxException(com_zimbra_delegatedadmin.ERROR_CREATE_ADMIN,AjxException.SERVER_ERROR,"ZaNewAdmin.createAdmin","Unknow object type"))
}}
if(n.name&&t.name&&n.name.toLowerCase()==t.name.toLowerCase()){
t.name=n.name;
t.id=n.id;
t.type=t[ZaNewAdmin.A_admin_type]
}else{
throw (new AjxException(com_zimbra_delegatedadmin.ERROR_CREATE_ADMIN,AjxException.SERVER_ERROR,"ZaNewAdmin.createAdmin"))
}
if(t[ZaAccount.A2_memberOf]&&t[ZaAccount.A2_memberOf][ZaAccount.A2_directMemberList]&&t[ZaAccount.A2_memberOf][ZaAccount.A2_directMemberList].length>0){
ZaAccountMemberOfListView.addMemberList(t,n)
}
t.loadEffectiveRights("id",t.id,false);
return true
}
catch(l){
s._handleException(l,"ZaNewAdmin.createAdmin",null,false)
}
return false
};
ZaNewAdmin.modifyAdmin=function(t){
if(!t||!t.id){
return false
}
var d;
var s=ZaApp.getInstance().getCurrentController();
if(t[ZaNewAdmin.A_admin_type]==ZaItem.ACCOUNT){
d=AjxSoapDoc.create("ModifyAccountRequest",ZaZimbraAdmin.URN,null)
}else{
if(t[ZaNewAdmin.A_admin_type]==ZaItem.DL){
d=AjxSoapDoc.create("ModifyDistributionListRequest",ZaZimbraAdmin.URN,null)
}else{
s.popupErrorDialog(com_zimbra_delegatedadmin.ERROR_INVALID_ADMIN_TYPE);
return false
}}
d.set("id",t.id);
if(t.attrs[ZaAccount.A_zimbraAdminConsoleUIComponents]){
var u=AjxUtil.uniq(t.attrs[ZaAccount.A_zimbraAdminConsoleUIComponents]);
for(var n=0;
n<u.length;
n++){
var r=d.set("a",u[n]);
r.setAttribute("n",ZaAccount.A_zimbraAdminConsoleUIComponents)
}}
var o=new Object();
o.soapDoc=d;
var e={};
e.controller=s;
e.busyMsg=com_zimbra_delegatedadmin.BUSY_SETTING_UI_COMP;
try{
var c=ZaRequestMgr.invoke(o,e).Body;
if(t[ZaNewAdmin.A_admin_type]==ZaItem.ACCOUNT){
if(c.ModifyAccountResponse.account[0].name.toLowerCase()==t.name.toLowerCase()){
return true
}}else{
if(t[ZaNewAdmin.A_admin_type]==ZaItem.DL){
if(c.ModifyDistributionListResponse.dl[0].name.toLowerCase()==t.name.toLowerCase()){
return true
}}}
s.popupErrorDialog(com_zimbra_delegatedadmin.ERROR_SETTING_UI_COMP)
}
catch(l){
s._handleException(l,"ZaNewAdmin.modifyAdmin",null,false)
}
return false
};
ZaNewAdminWizard=function(n){
var t=new DwtDialog_ButtonDescriptor(ZaXWizardDialog.HELP_BUTTON,ZaMsg.TBB_Help,DwtDialog.ALIGN_LEFT,new AjxCallback(this,this._helpButtonListener));
var c=new DwtDialog_ButtonDescriptor(ZaXWizardDialog.NEXT_BUTTON,AjxMsg._next,DwtDialog.ALIGN_RIGHT,new AjxCallback(this,this.goNext));
var s=new DwtDialog_ButtonDescriptor(ZaXWizardDialog.PREV_BUTTON,AjxMsg._prev,DwtDialog.ALIGN_RIGHT,new AjxCallback(this,this.goPrev));
var l=new DwtDialog_ButtonDescriptor(ZaXWizardDialog.FINISH_BUTTON,AjxMsg._finish,DwtDialog.ALIGN_RIGHT,new AjxCallback(this,this.finishWizard));
var d=new DwtDialog_ButtonDescriptor(ZaNewAdminWizard.SKIP_BUTTON,com_zimbra_delegatedadmin.btSkip,DwtDialog.ALIGN_RIGHT,new AjxCallback(this,this.skipWizard));
var o=[t,s,c,d,l];
var e,r;
e=(AjxEnv.isIE?"625x":"600px");
r=(AjxEnv.isIE?"340px":"330px");
ZaXWizardDialog.call(this,n,null,com_zimbra_delegatedadmin.title_new_admin_wizard,e,r,"ZaNewAdminWizard",o,ZaId.DLG_NEW_ADMIN);
this.newAdminTypesChoices=[];
if(ZaNewAdminWizard.canCreateAdminGroup){
this.newAdminTypesChoices.push({
value:ZaItem.DL,label:com_zimbra_delegatedadmin.IsAdminGroup}
)
}
if(ZaNewAdminWizard.canCreateAdminAccount){
this.newAdminTypesChoices.push({
value:ZaItem.ACCOUNT,label:com_zimbra_delegatedadmin.type_account}
)
}
this.stepChoices=[{
label:com_zimbra_delegatedadmin.NA_Wizard_pick_admin_type,value:ZaNewAdminWizard.STEP_START}
,{
label:com_zimbra_delegatedadmin.NA_Wizard_new_admin_acct,value:ZaNewAdminWizard.STEP_NEW_ACCOUNT}
,{
label:com_zimbra_delegatedadmin.NA_Wizard_new_admin_dl,value:ZaNewAdminWizard.STEP_NEW_GROUP}
,{
label:com_zimbra_delegatedadmin.NA_Wizard_config_ui,value:ZaNewAdminWizard.STEP_UI_COMPONENTS}
,{
label:com_zimbra_delegatedadmin.NA_Wizard_set_proposed_permission,value:ZaNewAdminWizard.STEP_PROPOSED_GRANTS}
,{
label:com_zimbra_delegatedadmin.NA_Wizard_set_permission,value:ZaNewAdminWizard.STEP_PERMISSION}
,{
label:com_zimbra_delegatedadmin.NA_Wizard_finish_summary,value:ZaNewAdminWizard.STEP_FINISH}
];
this.initForm(ZaNewAdmin.getMyXModel(),this.getMyXForm());
this._localXForm.setController(ZaApp.getInstance());
this._helpURL=location.pathname+ZaUtil.HELP_URL+"da_process/admin_wizard.htm?locid="+AjxEnv.DEFAULT_LOCALE;
this._localXForm.addListener(DwtEvent.XFORMS_FORM_DIRTY_CHANGE,new AjxListener(this,ZaNewAdminWizard.prototype.handleXFormChange));
this._localXForm.addListener(DwtEvent.XFORMS_VALUE_ERROR,new AjxListener(this,ZaNewAdminWizard.prototype.handleXFormChange))
};
ZaNewAdminWizard.prototype=new ZaXWizardDialog;
ZaNewAdminWizard.prototype.constructor=ZaNewAdminWizard;
ZaXDialog.XFormModifiers.ZaNewAdminWizard=[];
ZaNewAdminWizard.SKIP_BUTTON=++DwtDialog.LAST_BUTTON;
ZaNewAdminWizard.STEP_INDEX=1;
ZaNewAdminWizard.STEP_START=ZaNewAdminWizard.STEP_INDEX++;
ZaNewAdminWizard.STEP_NEW_ACCOUNT=ZaNewAdminWizard.STEP_INDEX++;
ZaNewAdminWizard.STEP_NEW_GROUP=ZaNewAdminWizard.STEP_INDEX++;
ZaNewAdminWizard.STEP_UI_COMPONENTS=ZaNewAdminWizard.STEP_INDEX++;
ZaNewAdminWizard.STEP_PROPOSED_GRANTS=ZaNewAdminWizard.STEP_INDEX++;
ZaNewAdminWizard.STEP_PERMISSION=ZaNewAdminWizard.STEP_INDEX++;
ZaNewAdminWizard.STEP_FINISH=ZaNewAdminWizard.STEP_INDEX++;
ZaNewAdminWizard.initPopupMethod=function(){
var o=new ZaDistributionList();
o.loadNewObjectDefaults("name",ZaSettings.myDomainName);
var e=new ZaAccount();
e.loadNewObjectDefaults("name",ZaSettings.myDomainName);
ZaNewAdminWizard.canCreateAdminGroup=ZaItem.hasWritePermission(ZaDistributionList.A_isAdminGroup,o);
ZaNewAdminWizard.canCreateAdminAccount=ZaItem.hasWritePermission(ZaAccount.A_zimbraIsDelegatedAdminAccount,e);
if(ZaZimbraAdmin.canCreateAccount()&&(ZaNewAdminWizard.canCreateAdminGroup||ZaNewAdminWizard.canCreateAdminAccount)){
this._popupOperations[ZaOperation.NEW_ADMIN]=new ZaOperation(ZaOperation.NEW_ADMIN,com_zimbra_delegatedadmin.ADMINBB_New_menuItem,com_zimbra_delegatedadmin.ADMINBB_New_tt,"DomainAdminUser","DomainAdminUserDis",new AjxListener(this,ZaAccountListController.prototype._newAdminListener))
}
for(var t=0;
t<this._popupOrder.length;
t++){
if(this._popupOrder[t]==ZaOperation.NEW_MENU){
break
}}
if(t!=this._popupOrder.length){
this._popupOrder.splice(t+1,0,ZaOperation.NEW_ADMIN)
}else{
this._popupOrder.push(ZaOperation.NEW_ADMIN)
}};
ZaController.initPopupMenuMethods.ZaAccountListController.push(ZaNewAdminWizard.initPopupMethod);
ZaController.initPopupMenuMethods.ZaAccountViewController.push(ZaNewAdminWizard.initPopupMethod);
ZaNewAdminWizard._defaultAccount=null;
ZaNewAdminWizard.getDefaultAccount=function(){
if(ZaNewAdminWizard._defaultAccount==null){
ZaNewAdminWizard._defaultAccount=new ZaAccount();
ZaNewAdminWizard._defaultAccount.loadNewObjectDefaults("name",ZaSettings.myDomainName);
ZaNewAdminWizard._defaultAccount.rights[ZaAccount.GET_ACCOUNT_MEMBERSHIP_RIGHT]=true
}
return ZaNewAdminWizard._defaultAccount
};
ZaAccountListController.prototype._newAdminListener=function(o){
try{
EmailAddr_XFormItem.resetDomainLists.call(this);
var e=new ZaNewAdmin();
e.getAttrs={
all:true};
ZaApp.getInstance().dialogs.newAdminWizard=new ZaNewAdminWizard(this._container);
ZaApp.getInstance().dialogs.newAdminWizard.setObject(e);
ZaApp.getInstance().dialogs.newAdminWizard.popup()
}
catch(t){
this._handleException(t,"ZaAccountListController.prototype._newAdminListener",null,false)
}};
ZaNewAdminWizard.prototype.popup=function(){
ZaXDialog.prototype.popup.call(this);
this.goPage(ZaNewAdminWizard.STEP_START)
};
ZaNewAdminWizard.prototype.goPage=function(c){
ZaXWizardDialog.prototype.goPage.call(this,c);
var l=true;
var n=true;
var o=true;
var r=true;
var s=false;
if(c==ZaNewAdminWizard.STEP_START){
l=false;
o=false
}else{
if(c==ZaNewAdminWizard.STEP_NEW_ACCOUNT){
var t=this._containedObject[ZaAccount.A_name];
if(!ZaAccount.isValidName(t)){
n=false;
o=false
}
if(n){
var e=this._containedObject.attrs[ZaAccount.A_zimbraIsAdminAccount];
if(e=="TRUE"){
n=false
}}}else{
if(c==ZaNewAdminWizard.STEP_NEW_GROUP){
var t=this._containedObject[ZaAccount.A_name];
if(!ZaAccount.isValidName(t)){
n=false
}
o=false
}else{
if(c==ZaNewAdminWizard.STEP_UI_COMPONENTS){
l=false
}else{
if(c==ZaNewAdminWizard.STEP_FINISH){
n=false
}else{
if(c==ZaNewAdminWizard.STEP_PROPOSED_GRANTS){
s=true;
this._localXForm.setInstanceValue(this._containedObject[ZaNewAdmin.A_proposedGrantsList],ZaNewAdmin.A_proposedGrantsList)
}}}}}}
this._button[DwtWizardDialog.PREV_BUTTON].setEnabled(l);
this._button[DwtWizardDialog.NEXT_BUTTON].setEnabled(n);
this._button[DwtWizardDialog.FINISH_BUTTON].setEnabled(o);
this._button[DwtDialog.CANCEL_BUTTON].setEnabled(r);
this._button[ZaNewAdminWizard.SKIP_BUTTON].setVisible(s);
this._button[ZaNewAdminWizard.SKIP_BUTTON].setEnabled(s)
};
ZaNewAdminWizard.prototype.configProposedGrants=function(o){
var t=ZaNewAdminWizard.getCreateGrantStatusDialog();
if(!o){
var o={
index:0,msgs:[com_zimbra_delegatedadmin.msg_proposed_grants_created]};
t.setMessage(o.msgs.join(""));
t.popup()
}
var e=this._containedObject[ZaNewAdmin.A_proposedGrantsList][o.index];
o.msgs.push(AjxMessageFormat.format(com_zimbra_delegatedadmin.msg_proposed_grants_start,[ZaNewAdminWizard.getProposedGrantMsg(e,o)]));
if(this.isGrantGranted(e)){
o.msgs.push(com_zimbra_delegatedadmin.msg_proposed_grants_skipped);
o.index++;
if(o.index>=this._containedObject[ZaNewAdmin.A_proposedGrantsList].length){
o.msgs.push(com_zimbra_delegatedadmin.msg_proposed_grants_done)
}else{
this.configProposedGrants(o)
}}else{
var n=new AjxCallback(this,this.configProposedGrantsCallback,[o]);
ZaGrant.grantMethod(e,n)
}
t.setMessage(o.msgs.join(""))
};
ZaNewAdminWizard.prototype.configProposedGrantsCallback=function(o,t){
var e=ZaNewAdminWizard.getCreateGrantStatusDialog();
if(!t||t.isException()){
o.msgs.push("<font color='red'>"+com_zimbra_delegatedadmin.msg_proposed_grants_failed+"</font>")
}else{
o.msgs.push(com_zimbra_delegatedadmin.msg_proposed_grants_granted);
if(!this._containedObject[ZaGrant.A2_grantsList]){
this._containedObject[ZaGrant.A2_grantsList]=[]
}
this._containedObject[ZaGrant.A2_grantsList].push(ZaUtil.deepCloneObject(this._containedObject[ZaNewAdmin.A_proposedGrantsList][o.index]));
this._localXForm.setInstanceValue(this._containedObject[ZaGrant.A2_grantsList],ZaGrant.A2_grantsList)
}
o.index++;
if(o.index>=this._containedObject[ZaNewAdmin.A_proposedGrantsList].length){
o.msgs.push(com_zimbra_delegatedadmin.msg_proposed_grants_done);
e.setMessage(o.msgs.join(""))
}else{
e.setMessage(o.msgs.join(""));
this.configProposedGrants(o)
}};
ZaNewAdminWizard.getProposedGrantMsg=function(e,n){
if(!n.index){
n.index=0
}
var t=n.index+1;
var o=t+") "+e[ZaGrant.A_target]+"/"+e[ZaGrant.A_target_type]+"/";
if(e[ZaGrant.A_deny]){
o+="-"
}
if(e[ZaGrant.A_canDelegate]){
o+="+"
}
o+=e[ZaGrant.A_right];
return o
};
ZaNewAdminWizard.prototype.goPrev=function(){
var t=this._containedObject[ZaModel.currentStep];
var e;
if(t==ZaNewAdminWizard.STEP_NEW_ACCOUNT||t==ZaNewAdminWizard.STEP_NEW_GROUP){
e=ZaNewAdminWizard.STEP_START
}else{
if(t==ZaNewAdminWizard.STEP_PERMISSION){
if(this._containedObject[ZaNewAdmin.A_proposedGrantsList]&&this._containedObject[ZaNewAdmin.A_proposedGrantsList].length>0){
e=ZaNewAdminWizard.STEP_PROPOSED_GRANTS
}else{
e=ZaNewAdminWizard.STEP_UI_COMPONENTS
}}else{
if(t==ZaNewAdminWizard.STEP_PROPOSED_GRANTS){
e=ZaNewAdminWizard.STEP_UI_COMPONENTS
}else{
if(t==ZaNewAdminWizard.STEP_FINISH){
e=ZaNewAdminWizard.STEP_PERMISSION
}}}}
this.goPage(e)
};
ZaNewAdminWizard.prototype.goNext=function(){
var t=this._containedObject[ZaModel.currentStep];
var e;
if(t==ZaNewAdminWizard.STEP_START){
if(this._containedObject[ZaNewAdmin.A_admin_type]==ZaItem.ACCOUNT){
e=ZaNewAdminWizard.STEP_NEW_ACCOUNT;
this._containedObject[ZaNewAdmin.A_default_domain_admin_grp]="FALSE";
this._containedObject[ZaNewAdmin.A_default_domain_admin]="TRUE"
}else{
if(this._containedObject[ZaNewAdmin.A_admin_type]==ZaItem.DL){
e=ZaNewAdminWizard.STEP_NEW_GROUP;
this._containedObject[ZaNewAdmin.A_default_domain_admin_grp]="TRUE";
this._containedObject[ZaNewAdmin.A_default_domain_admin]="FALSE"
}}
this._button[ZaNewAdminWizard.SKIP_BUTTON].setVisible(false);
this._button[ZaNewAdminWizard.SKIP_BUTTON].setEnabled(false);
this._button[DwtWizardDialog.FINISH_BUTTON].setEnabled(false)
}else{
if(t==ZaNewAdminWizard.STEP_NEW_ACCOUNT||t==ZaNewAdminWizard.STEP_NEW_GROUP){
if(this.createNewAdmin()){
e=ZaNewAdminWizard.STEP_UI_COMPONENTS;
ZaUIComponent.accountObjectModifer.call(this);
if((this._containedObject[ZaNewAdmin.A_default_domain_admin_grp]=="TRUE")||(this._containedObject[ZaNewAdmin.A_default_domain_admin]=="TRUE")){
this._containedObject.attrs[ZaAccount.A_zimbraAdminConsoleUIComponents]=ZaUtil.cloneArray(ZaNewAdminWizard.LEGACY_DA_VIEW)
}else{
this._containedObject.attrs[ZaAccount.A_zimbraAdminConsoleUIComponents]=[]
}}else{
return false
}}else{
if(t==ZaNewAdminWizard.STEP_UI_COMPONENTS){
if(ZaNewAdmin.modifyAdmin(this._containedObject)){
this.setProposedGrants();
if(this._containedObject[ZaNewAdmin.A_proposedGrantsList]&&this._containedObject[ZaNewAdmin.A_proposedGrantsList].length>0){
e=ZaNewAdminWizard.STEP_PROPOSED_GRANTS
}else{
e=ZaNewAdminWizard.STEP_PERMISSION
}}else{
return false
}}else{
if(t==ZaNewAdminWizard.STEP_PROPOSED_GRANTS){
e=ZaNewAdminWizard.STEP_PERMISSION;
if(this._containedObject[ZaNewAdmin.A_proposedGrantsList]&&this._containedObject[ZaNewAdmin.A_proposedGrantsList].length>0){
this.configProposedGrants()
}}else{
if(t==ZaNewAdminWizard.STEP_PERMISSION){
e=ZaNewAdminWizard.STEP_FINISH
}}}}}
this.goPage(e)
};
ZaNewAdminWizard.prototype.isLegacyDAView=function(){
var t=this._containedObject.attrs[ZaAccount.A_zimbraAdminConsoleUIComponents];
if(t&&t.length==ZaNewAdminWizard.LEGACY_DA_VIEW.length){
for(var e=0;
e<t.length;
e++){
if(ZaUtil.findValueInArray(ZaNewAdminWizard.LEGACY_DA_VIEW,t[e])<0){
return false
}}
return true
}
return false
};
ZaNewAdminWizard.LEGACY_DA_VIEW=[ZaSettings.ACCOUNT_LIST_VIEW,ZaSettings.DOWNLOADS_VIEW,ZaSettings.DL_LIST_VIEW,ZaSettings.ALIAS_LIST_VIEW,ZaSettings.RESOURCE_LIST_VIEW,ZaSettings.SAVE_SEARCH,];
ZaNewAdminWizard.LEGACY_DA_MIN_VIEWS=[ZaSettings.SAVE_SEARCH,ZaSettings.DOWNLOADS_VIEW];
ZaNewAdminWizard.LEGACY_DOMAIN_VIEW=[ZaSettings.ACCOUNT_LIST_VIEW,ZaSettings.DOWNLOADS_VIEW,ZaSettings.DL_LIST_VIEW,ZaSettings.ALIAS_LIST_VIEW,ZaSettings.RESOURCE_LIST_VIEW,ZaSettings.SAVE_SEARCH,ZaSettings.CERTS_VIEW,ZaSettings.DOMAIN_LIST_VIEW,];
ZaNewAdminWizard.getDefaultDARights=function(e){
var s=[];
if(e!=null){
var t={};
t[ZaGrant.A_grantee]=e[ZaAccount.A_name];
t[ZaGrant.A_grantee_id]=e.id;
t[ZaGrant.A_grantee_type]=ZaGrant.getGranteeTypeByItemType(e.type);
t[ZaGrant.A_right]="domainAdminConsoleRights";
t[ZaGrant.A_right_type]="combo";
t[ZaGrant.A_target]=ZaAccount.getDomain(e.name);
t[ZaGrant.A_target_type]=ZaItem.DOMAIN;
s.push(t);
var n={};
n[ZaGrant.A_grantee]=e[ZaAccount.A_name];
n[ZaGrant.A_grantee_id]=e.id;
n[ZaGrant.A_grantee_type]=ZaGrant.getGranteeTypeByItemType(e.type);
n[ZaGrant.A_right]="domainAdminZimletRights";
n[ZaGrant.A_right_type]="combo";
n[ZaGrant.A_target]=ZaGrant.GLOBAL_TARGET_NAME;
n[ZaGrant.A_target_type]=ZaItem.GLOBAL_GRANT;
s.push(n);
var o={};
o[ZaGrant.A_grantee]=e[ZaAccount.A_name];
o[ZaGrant.A_grantee_id]=e.id;
o[ZaGrant.A_grantee_type]=ZaGrant.getGranteeTypeByItemType(e.type);
o[ZaGrant.A_right]="adminLoginCalendarResourceAs";
o[ZaGrant.A_right_type]="combo";
o[ZaGrant.A_target]=ZaGrant.GLOBAL_TARGET_NAME;
o[ZaGrant.A_target_type]=ZaItem.GLOBAL_GRANT;
s.push(o)
}
return s
};
ZaNewAdminWizard.getCommonRCRights=function(r){
var d=[];
if(r!=null){
var l={};
l[ZaGrant.A_grantee]=r[ZaAccount.A_name];
l[ZaGrant.A_grantee_id]=r.id;
l[ZaGrant.A_grantee_type]=ZaGrant.getGranteeTypeByItemType(r.type);
l[ZaGrant.A_right]="listDomain";
l[ZaGrant.A_right_type]="combo";
l[ZaGrant.A_target]=ZaAccount.getDomain(r.name);
l[ZaGrant.A_target_type]=ZaItem.DOMAIN;
d.push(l);
var u={};
u[ZaGrant.A_grantee]=r[ZaAccount.A_name];
u[ZaGrant.A_grantee_id]=r.id;
u[ZaGrant.A_grantee_type]=ZaGrant.getGranteeTypeByItemType(r.type);
u[ZaGrant.A_right]="listAccount";
u[ZaGrant.A_right_type]="combo";
u[ZaGrant.A_target]=ZaAccount.getDomain(r.name);
u[ZaGrant.A_target_type]=ZaItem.DOMAIN;
d.push(u);
var c={};
c[ZaGrant.A_grantee]=r[ZaAccount.A_name];
c[ZaGrant.A_grantee_id]=r.id;
c[ZaGrant.A_grantee_type]=ZaGrant.getGranteeTypeByItemType(r.type);
c[ZaGrant.A_right]="countAccount";
c[ZaGrant.A_right_type]="combo";
c[ZaGrant.A_target]=ZaAccount.getDomain(r.name);
c[ZaGrant.A_target_type]=ZaItem.DOMAIN;
d.push(c);
var s={};
s[ZaGrant.A_grantee]=r[ZaAccount.A_name];
s[ZaGrant.A_grantee_id]=r.id;
s[ZaGrant.A_grantee_type]=ZaGrant.getGranteeTypeByItemType(r.type);
s[ZaGrant.A_right]="countAlias";
s[ZaGrant.A_right_type]="combo";
s[ZaGrant.A_target]=ZaAccount.getDomain(r.name);
s[ZaGrant.A_target_type]=ZaItem.DOMAIN;
d.push(s);
var o={};
o[ZaGrant.A_grantee]=r[ZaAccount.A_name];
o[ZaGrant.A_grantee_id]=r.id;
o[ZaGrant.A_grantee_type]=ZaGrant.getGranteeTypeByItemType(r.type);
o[ZaGrant.A_right]="countCalendarResource";
o[ZaGrant.A_right_type]="combo";
o[ZaGrant.A_target]=ZaAccount.getDomain(r.name);
o[ZaGrant.A_target_type]=ZaItem.DOMAIN;
d.push(o);
var e={};
e[ZaGrant.A_grantee]=r[ZaAccount.A_name];
e[ZaGrant.A_grantee_id]=r.id;
e[ZaGrant.A_grantee_type]=ZaGrant.getGranteeTypeByItemType(r.type);
e[ZaGrant.A_right]="countDistributionList";
e[ZaGrant.A_right_type]="combo";
e[ZaGrant.A_target]=ZaAccount.getDomain(r.name);
e[ZaGrant.A_target_type]=ZaItem.DOMAIN;
d.push(e);
var n={};
n[ZaGrant.A_grantee]=r[ZaAccount.A_name];
n[ZaGrant.A_grantee_id]=r.id;
n[ZaGrant.A_grantee_type]=ZaGrant.getGranteeTypeByItemType(r.type);
n[ZaGrant.A_right]="listDistributionList";
n[ZaGrant.A_right_type]="combo";
n[ZaGrant.A_target]=ZaAccount.getDomain(r.name);
n[ZaGrant.A_target_type]=ZaItem.DOMAIN;
d.push(n);
var t={};
t[ZaGrant.A_grantee]=r[ZaAccount.A_name];
t[ZaGrant.A_grantee_id]=r.id;
t[ZaGrant.A_grantee_type]=ZaGrant.getGranteeTypeByItemType(r.type);
t[ZaGrant.A_right]="listAlias";
t[ZaGrant.A_right_type]="combo";
t[ZaGrant.A_target]=ZaAccount.getDomain(r.name);
t[ZaGrant.A_target_type]=ZaItem.DOMAIN;
d.push(t)
}
return d
};
ZaNewAdminWizard.getContactInfoRights=function(t,n){
var o=[];
if(t!=null){
if(!n){
var s={};
s[ZaGrant.A_grantee]=t[ZaAccount.A_name];
s[ZaGrant.A_grantee_id]=t.id;
s[ZaGrant.A_grantee_type]=ZaGrant.getGranteeTypeByItemType(t.type);
s[ZaGrant.A_right]="getAccountInfo";
s[ZaGrant.A_right_type]="combo";
s[ZaGrant.A_target]=ZaAccount.getDomain(t.name);
s[ZaGrant.A_target_type]=ZaItem.DOMAIN;
o.push(s)
}
var e={};
e[ZaGrant.A_grantee]=t[ZaAccount.A_name];
e[ZaGrant.A_grantee_id]=t.id;
e[ZaGrant.A_grantee_type]=ZaGrant.getGranteeTypeByItemType(t.type);
e[ZaGrant.A_right]="domainAdminConsoleAccountsContactTabRights";
e[ZaGrant.A_right_type]="combo";
e[ZaGrant.A_target]=ZaAccount.getDomain(t.name);
e[ZaGrant.A_target_type]=ZaItem.DOMAIN;
o.push(e)
}
return o
};
ZaNewAdminWizard.getResetPasswordsRights=function(e){
var o=[];
if(e!=null){
var t={};
t[ZaGrant.A_grantee]=e[ZaAccount.A_name];
t[ZaGrant.A_grantee_id]=e.id;
t[ZaGrant.A_grantee_type]=ZaGrant.getGranteeTypeByItemType(e.type);
t[ZaGrant.A_right]="changeAccountPassword";
t[ZaGrant.A_right_type]="combo";
t[ZaGrant.A_target]=ZaAccount.getDomain(e.name);
t[ZaGrant.A_target_type]=ZaItem.DOMAIN;
o.push(t)
}
return o
};
ZaNewAdminWizard.getDomainRights=function(e,s){
var o=[];
if(e!=null){
if(!s){
var t={};
t[ZaGrant.A_grantee]=e[ZaAccount.A_name];
t[ZaGrant.A_grantee_id]=e.id;
t[ZaGrant.A_grantee_type]=ZaGrant.getGranteeTypeByItemType(e.type);
t[ZaGrant.A_right]="domainAdminRights";
t[ZaGrant.A_right_type]="combo";
t[ZaGrant.A_target]=ZaAccount.getDomain(e.name);
t[ZaGrant.A_target_type]=ZaItem.DOMAIN;
o.push(t)
}
var n={};
n[ZaGrant.A_grantee]=e[ZaAccount.A_name];
n[ZaGrant.A_grantee_id]=e.id;
n[ZaGrant.A_grantee_type]=ZaGrant.getGranteeTypeByItemType(e.type);
n[ZaGrant.A_right]="getDomainQuotaUsage";
n[ZaGrant.A_right_type]="combo";
n[ZaGrant.A_target]=ZaAccount.getDomain(e.name);
n[ZaGrant.A_target_type]=ZaItem.DOMAIN;
o.push(n)
}
return o
};
ZaNewAdminWizard.prototype.setProposedGrants=function(){
var s=this._containedObject[ZaNewAdmin.A_proposedGrantsList]=[];
var o=[];
if(((this._containedObject[ZaNewAdmin.A_default_domain_admin_grp]=="TRUE")||(this._containedObject[ZaNewAdmin.A_default_domain_admin]=="TRUE"))&&this.isLegacyDAView()){
o=ZaNewAdminWizard.getDefaultDARights(this._containedObject)
}else{
var n=this._containedObject.attrs[ZaAccount.A_zimbraAdminConsoleUIComponents];
if(n&&n.length>0){
for(var t=0;
t<n.length;
t++){
if(ZaSettings.VIEW_RIGHTS[n[t]]!=null){
var e={};
e[ZaGrant.A_right]=ZaSettings.VIEW_RIGHTS[n[t]];
if(e[ZaGrant.A_right]==null){
continue
}
e[ZaGrant.A_grantee]=this._containedObject[ZaAccount.A_name];
e[ZaGrant.A_grantee_id]=this._containedObject.id;
if(this._containedObject.type==ZaItem.ACCOUNT){
e[ZaGrant.A_grantee_type]=ZaGrant.GRANTEE_TYPE.usr
}else{
if(this._containedObject.type==ZaItem.DL){
e[ZaGrant.A_grantee_type]=ZaGrant.GRANTEE_TYPE.grp
}}
e[ZaGrant.A_right_type]="combo";
if(n[t]==ZaSettings.ACCOUNT_LIST_VIEW||n[t]==ZaSettings.DL_LIST_VIEW||n[t]==ZaSettings.ALIAS_LIST_VIEW||n[t]==ZaSettings.RESOURCE_LIST_VIEW||n[t]==ZaSettings.DOMAIN_LIST_VIEW||n[t]==ZaSettings.SAVE_SEARCH){
e[ZaGrant.A_target]=ZaAccount.getDomain(this._containedObject.name);
e[ZaGrant.A_target_type]=ZaItem.DOMAIN
}else{
if(n[t]==ZaSettings.COS_LIST_VIEW||n[t]==ZaSettings.SERVER_LIST_VIEW||n[t]==ZaSettings.ZIMLET_LIST_VIEW||n[t]==ZaSettings.ADMIN_ZIMLET_LIST_VIEW||n[t]==ZaSettings.GLOBAL_CONFIG_VIEW||n[t]==ZaSettings.GLOBAL_STATUS_VIEW||n[t]==ZaSettings.MAILQ_VIEW||n[t]==ZaSettings.CERTS_VIEW||n[t]==ZaSettings.XMBX_SEARCH_VIEW||n[t]==ZaSettings.BACKUP_VIEW||n[t]==ZaSettings.SOFTWARE_UPDATES_VIEW||n[t]==ZaSettings.SERVER_STATS_VIEW||n[t]==ZaSettings.Client_UPLOAD_VIEW||n[t]==ZaSettings.UC_SERVICE_VIEW){
e[ZaGrant.A_target]=ZaGrant.GLOBAL_TARGET_NAME;
e[ZaGrant.A_target_type]=ZaItem.GLOBAL_GRANT
}else{
continue
}}
o.push(e)
}}}}
for(var t=0;
t<o.length;
t++){
if(!this.isGrantGranted(o[t])){
s.push(o[t])
}}};
ZaNewAdminWizard.prototype.isGrantGranted=function(e){
var u=this._containedObject[ZaGrant.A2_grantsList];
if(u&&u.length>0){
for(var l=0;
l<u.length;
l++){
var t=u[l];
var n=[ZaGrant.A_grantee,ZaGrant.A_target,ZaGrant.A_target_type,ZaGrant.A_right];
var c=l;
for(var s=0;
s<n.length;
s++){
var o=n[s];
var r=t[o];
var d=e[o];
if(r!=d){
c=-1;
break
}}
if(c>=0){
return true
}}}
return false
};
ZaNewAdminWizard.prototype.createNewAdmin=function(){
if(ZaSearch.isAccountExist.call(this,{
name:this._containedObject[ZaAccount.A_name],popupError:true}
)){
return false
}
if(this._containedObject.attrs[ZaAccount.A_password]){
if(this._containedObject.attrs[ZaAccount.A_password]!=this._containedObject[ZaAccount.A2_confirmPassword]){
ZaApp.getInstance().getCurrentController().popupErrorDialog(ZaMsg.ERROR_PASSWORD_MISMATCH);
return false
}}
return ZaNewAdmin.createAdmin(this._containedObject)
};
ZaNewAdminWizard.prototype.finishWizard=function(){
var e=this._containedObject[ZaModel.currentStep];
var o=false;
if(e==ZaNewAdminWizard.STEP_NEW_ACCOUNT||e==ZaNewAdminWizard.STEP_NEW_GROUP){
o=this.createNewAdmin();
if(o&&this._containedObject.attrs[ZaAccount.A_zimbraIsAdminAccount]!="TRUE"){
if(this._containedObject[ZaNewAdmin.A_default_domain_admin_grp]=="TRUE"||this._containedObject[ZaNewAdmin.A_default_domain_admin]=="TRUE"){
this._containedObject.attrs[ZaAccount.A_zimbraAdminConsoleUIComponents]=ZaUtil.cloneArray(ZaNewAdminWizard.LEGACY_DA_VIEW);
ZaNewAdmin.modifyAdmin(this._containedObject);
this.setProposedGrants();
this.configProposedGrants()
}}}else{
if(e==ZaNewAdminWizard.STEP_PERMISSION){
o=true
}else{
if(e==ZaNewAdminWizard.STEP_UI_COMPONENTS){
o=true;
ZaNewAdmin.modifyAdmin(this._containedObject)
}else{
if(e==ZaNewAdminWizard.STEP_FINISH){
o=true
}else{
if(e==ZaNewAdminWizard.STEP_PROPOSED_GRANTS){
o=true
}}}}}
if(o){
var t="";
if(this._containedObject.type==ZaItem.ACCOUNT){
ZaApp.getInstance().getAccountListController().fireCreationEvent(this._containedObject);
t=AjxMessageFormat.format(ZaMsg.AccountCreated,[this._containedObject.name])
}else{
if(this._containedObject.type==ZaItem.DL){
ZaApp.getInstance().getDistributionListController().fireChangeEvent(this._containedObject);
t=AjxMessageFormat.format(ZaMsg.DLCreated,[this._containedObject.name])
}}
this.popdown();
ZaApp.getInstance().getAppCtxt().getAppController().setActionStatusMsg(t)
}};
ZaNewAdminWizard.prototype.skipWizard=function(){
var t=this._containedObject[ZaModel.currentStep];
var e;
if(t==ZaNewAdminWizard.STEP_PROPOSED_GRANTS){
e=ZaNewAdminWizard.STEP_PERMISSION;
this.goPage(e)
}};
ZaNewAdminWizard.prototype.setObject=function(t){
this._containedObject={};
this._containedObject.attrs={};
for(var e in t){
if(e=="attrs"){
for(var e in t.attrs){
this._containedObject.attrs[e]=t.attrs[e]
}}else{
this._containedObject[e]=t[e]
}}
if(!this._containedObject[ZaNewAdmin.A_admin_type]){
this._containedObject[ZaNewAdmin.A_admin_type]=this.newAdminTypesChoices[0].value
}
this._containedObject[ZaModel.currentStep]=ZaNewAdminWizard.STEP_START;
this._localXForm.setInstance(this._containedObject)
};
ZaNewAdminWizard.prototype.handleXFormChange=function(){
var t=this._localXForm;
if(!t||!t.getInstance()){
return
}
var s=t.getInstanceValue(ZaModel.currentStep);
if(s==ZaNewAdminWizard.STEP_NEW_ACCOUNT){
if(t.hasErrors()){
this._button[ZaXWizardDialog.PREV_BUTTON].setEnabled(false);
this._button[DwtWizardDialog.NEXT_BUTTON].setEnabled(false);
this._button[DwtWizardDialog.FINISH_BUTTON].setEnabled(false);
return
}
var n=t.getInstanceValue(ZaAccount.A_name);
var o=t.getInstanceValue(ZaAccount.A_zimbraIsAdminAccount)=="TRUE";
var r=ZaAccount.isValidName(n);
var e=r&&!o;
this._button[ZaXWizardDialog.PREV_BUTTON].setEnabled(true);
this._button[DwtWizardDialog.NEXT_BUTTON].setEnabled(e);
this._button[DwtWizardDialog.FINISH_BUTTON].setEnabled(r)
}else{
if(s==ZaNewAdminWizard.STEP_NEW_GROUP){
if(t.hasErrors()){
this._button[ZaXWizardDialog.PREV_BUTTON].setEnabled(false);
this._button[DwtWizardDialog.NEXT_BUTTON].setEnabled(false);
this._button[DwtWizardDialog.FINISH_BUTTON].setEnabled(false)
}else{
this._button[ZaXWizardDialog.PREV_BUTTON].setEnabled(true);
this._button[DwtWizardDialog.NEXT_BUTTON].setEnabled(true);
this._button[DwtWizardDialog.FINISH_BUTTON].setEnabled(true)
}}}};
ZaNewAdminWizard.showMoreStepLabel=function(){
if((this.getInstanceValue(ZaNewAdmin.A_admin_type)==ZaItem.DL)){
return true
}else{
if(this.getInstanceValue(ZaAccount.A_zimbraIsAdminAccount)!="TRUE"){
return true
}else{
return false
}}};
ZaNewAdminWizard.getCreateGrantStatusDialog=function(){
var t=ZaApp.getInstance().dialogs;
var e=t.createProposedGrantsListStatusDialog;
if(!e){
e=t.createProposedGrantsListStatusDialog=new ZaMsgDialog(ZaApp.getInstance().getAppCtxt().getShell());
e.setSize(600,120)
}
return e
};
ZaNewAdminWizard.myXFormModifier=function(s){
var t={};
t[ZaNewAdminWizard.STEP_NEW_ACCOUNT]={
checks:[[XForm.checkInstanceValue,ZaNewAdmin.A_admin_type,ZaItem.ACCOUNT]],sources:[ZaNewAdmin.A_admin_type]};
t[ZaNewAdminWizard.STEP_NEW_GROUP]={
checks:[[XForm.checkInstanceValue,ZaNewAdmin.A_admin_type,ZaItem.DL]],sources:[ZaNewAdmin.A_admin_type]};
var o={
checks:[[ZaNewAdminWizard.showMoreStepLabel]],sources:[ZaAccount.A_zimbraIsAdminAccount,ZaNewAdmin.A_admin_type]};
t[ZaNewAdminWizard.STEP_PERMISSION]=o;
t[ZaNewAdminWizard.STEP_UI_COMPONENTS]=o;
t[ZaNewAdminWizard.STEP_PROPOSED_GRANTS]=o;
t[ZaNewAdminWizard.STEP_FINISH]=o;
var p=[];
var c={
type:_CASE_,numCols:2,colSizes:["200px","300px"],tabGroupKey:ZaNewAdminWizard.STEP_START,caseKey:ZaNewAdminWizard.STEP_START,items:[{
ref:ZaNewAdmin.A_admin_type,type:_OSELECT1_,label:com_zimbra_delegatedadmin.Label_admin_type,labelLocation:_LEFT_,visibilityChecks:[],enableDisableChecks:[],choices:this.newAdminTypesChoices}
,{
type:_SPACER_,height:20}
,{
type:_OUTPUT_,colSpan:2,value:com_zimbra_delegatedadmin.Help_new_administrator}
]};
p.push(c);
var r={
type:_CASE_,numCols:1,align:_LEFT_,tabGroupKey:ZaNewAdminWizard.STEP_NEW_ACCOUNT,caseKey:ZaNewAdminWizard.STEP_NEW_ACCOUNT,items:[{
type:_ZAWIZGROUP_,items:[{
type:_GROUP_,width:"450px",colSpan:"*",label:ZaMsg.NAD_AccountName,labelLocation:_LEFT_,required:true,items:[{
ref:ZaAccount.A_name,type:_EMAILADDR_,required:true,colSpan:2,msgName:ZaMsg.NAD_AccountName,label:null,domainPartWidth:"100%",forceUpdate:true,visibilityChecks:[],enableDisableChecks:[]}
]}
,{
type:_SPACER_,height:10,colSpan:"*"}
,{
ref:ZaAccount.A_password,type:_SECRET_,label:ZaMsg.NAD_Password,labelLocation:_LEFT_,visibilityChecks:[],enableDisableChecks:[],cssClass:"admin_xform_name_input",elementChanged:function(q,v,b){
var y=this.getForm();
var x=q;
var g=y.getInstanceValue(ZaAccount.A_password);
y.setInstanceValue(x,ZaAccount.A_password);
var k=y.getItemsById(ZaAccount.A2_confirmPassword);
if(k){
k=k[0];
y.itemChanged(k.getId(),k.getInstanceValue(),b)
}
y.setInstanceValue(g,ZaAccount.A_password);
y.itemChanged(this,x,b)
}}
,{
type:_SPACER_,height:10,colSpan:"*"}
,{
ref:ZaAccount.A2_confirmPassword,type:_SECRET_,label:ZaMsg.NAD_ConfirmPassword,labelLocation:_LEFT_,visibilityChecks:[],enableDisableChecks:[],cssClass:"admin_xform_name_input"}
,{
type:_SPACER_,height:10,colSpan:"*"}
,{
ref:ZaAccount.A_zimbraPasswordMustChange,type:_WIZ_CHECKBOX_,visibilityChecks:[],enableDisableChecks:[],msgName:ZaMsg.NAD_MustChangePwd,label:ZaMsg.NAD_MustChangePwd,trueValue:"TRUE",falseValue:"FALSE"}
,{
ref:ZaAccount.A_zimbraIsAdminAccount,type:_WIZ_CHECKBOX_,msgName:ZaMsg.NAD_IsSystemAdminAccount,label:ZaMsg.NAD_IsSystemAdminAccount,visibilityChecks:[ZaZimbraAdmin.isGlobalAdmin],enableDisableChecks:[],elementChanged:function(b,y,g){
if(b=="TRUE"){
this.setInstanceValue("FALSE",ZaAccount.A_zimbraIsDelegatedAdminAccount)
}else{
this.setInstanceValue("TRUE",ZaAccount.A_zimbraIsDelegatedAdminAccount)
}
this.getForm().itemChanged(this,b,g);
this.getForm().parent._button[DwtWizardDialog.NEXT_BUTTON].setEnabled(!(b&&b=="TRUE"))
}
,bmolsnr:true,trueValue:"TRUE",falseValue:"FALSE"}
,{
ref:ZaNewAdmin.A_default_domain_admin,type:_WIZ_CHECKBOX_,visibilityChecks:[[XForm.checkInstanceValue,ZaAccount.A_zimbraIsDelegatedAdminAccount,"TRUE"],],visibilityChangeEventSources:[ZaAccount.A_zimbraIsDelegatedAdminAccount],enableDisableChecks:[],label:com_zimbra_delegatedadmin.NAD_IsAssignDefaultDARights,trueValue:"TRUE",falseValue:"FALSE"}
]}
]};
var m=ZaAccount.getAdminRolesItem();
m.visibilityChecks=[[XForm.checkInstanceValue,ZaAccount.A_zimbraIsDelegatedAdminAccount,"TRUE"]];
m.enableDisableChecks=[];
r.items[0].items.push(m);
try{
if(ZaPosixAccount&&zimbra_posixaccount_ext&&zimbra_posixaccount_ext){
zimbra_posixaccount_ext.ACC_WIZ_GROUP.items[0].choices=ZaApp.getInstance().getPosixGroupIdListChoices(true);
r.items.push(zimbra_posixaccount_ext.ACC_WIZ_GROUP)
}
if(ZaSamAccount&&Zambra&&ZaSamAccount.ACC_WIZ_GROUP){
ZaSamAccount.ACC_WIZ_GROUP.items[0].choices=ZaApp.getInstance().getSambaDomainSIDListChoices();
r.items.push(ZaSamAccount.ACC_WIZ_GROUP)
}}
catch(l){}
p.push(r);
var d={
type:_CASE_,tabGroupKey:ZaNewAdminWizard.STEP_NEW_GROUP,caseKey:ZaNewAdminWizard.STEP_NEW_GROUP,items:[{
ref:ZaAccount.A_name,type:_EMAILADDR_,label:ZaMsg.LBL_LabelListName,domainPartWidth:"100%",labelLocation:_LEFT_,forceUpdate:true,visibilityChecks:[],enableDisableChecks:[]}
,{
ref:ZaNewAdmin.A_default_domain_admin_grp,type:_WIZ_CHECKBOX_,visibilityChecks:[],enableDisableChecks:[],label:com_zimbra_delegatedadmin.LB_Default_admin_group,trueValue:"TRUE",falseValue:"FALSE"}
,ZaAccount.getAdminRolesItem()]};
p.push(d);
var u={
type:_CASE_,numCols:1,tabGroupKey:ZaNewAdminWizard.STEP_PERMISSION,caseKey:ZaNewAdminWizard.STEP_PERMISSION,items:[{
type:_GROUP_,numCols:2,width:"530px",colSizes:[90,"*"],items:[{
type:_OUTPUT_,ref:ZaAccount.A_name,label:com_zimbra_delegatedadmin.Label_grantee_name,getDisplayValue:AjxUtil.htmlEncode,labelCssStyle:"text-align:left;width:16%;",cssStyle:"word-wrap:break-word;"}
]}
]};
u.items=u.items.concat(ZaTargetPermission.getGrantsListXFormItem({
width:530,height:200,by:ZaGrant.A_grantee}
));
p.push(u);
var e={
type:_CASE_,numCols:1,tabGroupKey:ZaNewAdminWizard.STEP_UI_COMPONENTS,caseKey:ZaNewAdminWizard.STEP_UI_COMPONENTS,items:[{
type:_GROUP_,numCols:1,colSizes:[200,"*"],items:[{
type:_DWT_ALERT_,content:com_zimbra_delegatedadmin.msg_admin_created,colSpan:2,visibilityChecks:[],containerCssStyle:"width:500px;",style:DwtAlert.INFORMATION,iconVisible:false}
,{
type:_OUTPUT_,colSpan:"*",width:"450px",ref:ZaAccount.A_name,label:ZaMsg.NAD_AccountName,labelCssStyle:"text-align:left;width:16%;",cssStyle:"word-wrap:break-word;",getDisplayValue:AjxUtil.htmlEncode}
,{
type:_SPACER_,height:10}
]}
]};
e.items=e.items.concat(ZaUIComponent.getUIComponentsXFormItem(AjxEnv.isIE?290:230));
p.push(e);
var n={
type:_CASE_,numCols:2,tabGroupKey:ZaNewAdminWizard.STEP_PROPOSED_GRANTS,caseKey:ZaNewAdminWizard.STEP_PROPOSED_GRANTS,items:[{
type:_OUTPUT_,ref:ZaAccount.A_name,valueChangeEventSources:[ZaAccount.A_name],colSpan:2,width:546,cssStyle:"word-wrap:break-word;",getDisplayValue:function(g){
g=AjxStringUtil.htmlEncode(g);
return AjxMessageFormat.format(com_zimbra_delegatedadmin.Help_proposed_grantsList,[g])
}}
,{
type:_SPACER_,height:10}
,{
ref:ZaNewAdmin.A_proposedGrantsList,id:ZaNewAdmin.A_proposedGrantsList,type:_DWT_LIST_,width:580,height:200,colSpan:2,cssClass:"DLSource",widgetClass:ZaGrantsListView,headerList:ZaGrantsListView._getHeaderList(580,ZaGrant.A_grantee),hideHeader:false,multiselect:true}
]};
p.push(n);
var f={
type:_CASE_,tabGroupKey:ZaNewAdminWizard.STEP_FINISH,caseKey:ZaNewAdminWizard.STEP_FINISH,items:[{
ref:ZaNewAdmin.A_admin_type,type:_OUTPUT_,valueChangeEventSources:[ZaNewAdmin.A_admin_type],getDisplayValue:function(b){
var g=this.getInstance();
var y=AjxStringUtil.htmlEncode(g.name);
var v;
if(g[ZaNewAdmin.A_admin_type]==ZaItem.ACCOUNT){
v=com_zimbra_delegatedadmin.Help_new_admin_summary_account
}else{
if(g[ZaNewAdmin.A_admin_type]==ZaItem.DL){
v=com_zimbra_delegatedadmin.Help_new_admin_summary_dl
}}
return AjxMessageFormat.format(com_zimbra_delegatedadmin.Help_new_admin_summary,[y,v])
}}
]};
p.push(f);
s.items=[{
type:_OUTPUT_,colSpan:2,valign:_TOP_,cssStyle:"white-space: normal",ref:ZaModel.currentStep,choices:this.stepChoices,valueChangeEventSources:[ZaModel.currentStep],labelClickMethod:function(y){
var g=this.getInheritedProperty("sourceValue");
if(g<ZaNewAdminWizard.STEP_UI_COMPONENTS){
return 0
}else{
var b=this.getInstanceValue();
if(g<b){
this.getForm().parent.goPage(g)
}}}
,labelVisibility:t}
,{
type:_SEPARATOR_,align:_CENTER_,valign:_TOP_}
,{
type:_SPACER_,align:_CENTER_,valign:_TOP_}
,{
type:_SWITCH_,width:(AjxEnv.isIE?580:550),align:_LEFT_,valign:_TOP_,cssStyle:"white-space: normal; overflow-x: hidden",items:p}
]
};
ZaXDialog.XFormModifiers.ZaNewAdminWizard.push(ZaNewAdminWizard.myXFormModifier)
}
ZaEffectiveRights=function(e){
ZaItem.call(this,"ZaEffectiveRights");
this.type="ZaEffectiveRights";
if(!e){
return
}
this.grantee={
id:e.id,name:e.name};
if(e.type==ZaItem.ACCOUNT){
this.grantee.type=ZaGrant.GRANTEE_TYPE.usr
}else{
if(e.type==ZaItem.DL){
this.grantee.type=ZaGrant.GRANTEE_TYPE.grp
}else{
throw new AjxException("Invalid Grantee Type");
return
}}};
ZaEffectiveRights.prototype=new ZaItem;
ZaEffectiveRights.prototype.constructor=ZaEffectiveRights;
ZaEffectiveRights.A_grantee="grantee";
ZaEffectiveRights.A_targets="targets";
ZaEffectiveRights.prototype.load=function(){
var t=AjxSoapDoc.create("GetAllEffectiveRightsRequest",ZaZimbraAdmin.URN,null);
var s=t.set("grantee",this.grantee.id);
s.setAttribute("type",this.grantee.type);
s.setAttribute("by","id");
var n={};
n.soapDoc=t;
n.asyncMode=false;
var e={
controller:ZaApp.getInstance().getCurrentController(),busyMsg:com_zimbra_delegatedadmin.BUSY_GET_ALL_EFFECTIVE_RIGHTS};
var o=ZaRequestMgr.invoke(n,e);
this.targets=o.Body.GetAllEffectiveRightsResponse.target;
this.grantee=o.Body.GetAllEffectiveRightsResponse.grantee[0]
};
ZaEffectiveRights.effectiveRightsItem=[{
id:"getAttrs",ref:"getAttrs",type:_LIST_}
,{
id:"setAttrs",ref:"setAttrs",type:_LIST_}
,{
id:"right",ref:"right",type:_LIST_}
];
ZaEffectiveRights.er_target_item=[{
id:"all",ref:"all",type:_OBJECT_,items:ZaEffectiveRights.effectiveRightsItem}
,{
id:"inDomains",ref:"inDomains",type:_OBJECT_,items:ZaEffectiveRights.effectiveRightsItem}
,{
id:"entries",ref:"all",type:_OBJECT_,items:ZaEffectiveRights.effectiveRightsItem}
];
ZaEffectiveRights.myXModel={
items:[{
id:ZaEffectiveRights.A_grantee,ref:ZaEffectiveRights.A_grantee,type:_OBJECT_,items:[{
id:"id",type:_STRING_,ref:"id"}
,{
id:"name",type:_STRING_,ref:"name"}
,{
id:"type",type:_STRING_,ref:"type"}
]}
,{
id:ZaEffectiveRights.A_targets,ref:ZaEffectiveRights.A_targets,type:_OBJECT_}
]};
ZaEffectiveRights.changeTab=function(c,l,r){
var e=r.getInstance();
var s=this.getRef();
var t=s.split("_").length;
var n,o;
if(t==1){
n=s+"_"+c;
o=n+"_1";
this.setInstanceValue("1",n);
this.setInstanceValue("1",o)
}else{
if(t==2){
o=s+"_"+c;
this.setInstanceValue("1",o)
}else{
if(t==3){}}}
this.setInstanceValue(c);
r.refresh()
};
ZaEffectiveRights.getTargetLabel=function(e){
if(e==ZaItem.ACCOUNT){
return ZaMsg.OVP_accounts
}else{
if(e==ZaItem.DL){
return ZaMsg.OVP_distributionLists
}else{
if(e==ZaItem.RESOURCE){
return ZaMsg.OVP_resources
}else{
if(e==ZaItem.DOMAIN){
return ZaMsg.OVP_domains
}else{
if(e==ZaItem.COS){
return ZaMsg.OVP_cos
}else{
if(e==ZaItem.SERVER){
return ZaMsg.OVP_servers
}else{
if(e==ZaItem.RIGHT){
return com_zimbra_delegatedadmin.OVP_rights
}else{
if(e==ZaItem.ZIMLET){
return ZaMsg.OVP_zimlets
}else{
if(e==ZaItem.GLOBAL_CONFIG){
return ZaMsg.OVP_global
}else{
if(e==ZaItem.GLOBAL_GRANT){
return com_zimbra_delegatedadmin.OVP_global_grants
}else{
return false
}}}}}}}}}}};
ZaEffectiveRightsXFormView=function(o,n){
ZaTabView.call(this,o,"ZaEffectiveRightsXFormView");
var e=n.targets;
var t=n.grantee.name;
this.initForm(ZaEffectiveRights.myXModel,this.getMyXForm(e,t))
};
ZaEffectiveRightsXFormView.prototype=new ZaTabView();
ZaEffectiveRightsXFormView.prototype.constructor=ZaEffectiveRightsXFormView;
ZaTabView.XFormModifiers.ZaEffectiveRightsXFormView=new Array();
ZaEffectiveRightsXFormView.prototype.setObject=function(e){
this._containedObject={};
this._containedObject=e;
this._containedObject.id=e.grantee.id;
this._localXForm.setInstance(this._containedObject)
};
ZaEffectiveRightsXFormView.getEffectiveRightsHTML=function(t,u,m,f,o){
var l=ZaEffectiveRights.getTargetLabel(f);
if(m=="all"){
if(f!=ZaItem.GLOBAL_CONFIG||f!=ZaItem.GLOBAL_GRANT){
l=AjxMessageFormat.format(com_zimbra_delegatedadmin.lb_all,[l])
}}else{
if(o){
l=AjxMessageFormat.format(com_zimbra_delegatedadmin.lb_targets_by_domain,[l,ZaUtil.join(m,"name",",")])
}else{
l+=" - "+ZaUtil.join(m,"name",", ")
}}
var c=[];
var n=[];
var e=[];
if(t!=null){
for(var y in t){
if(t[y]!=null){
var p;
if(y=="getAttrs"){
p=c
}else{
if(y=="setAttrs"){
p=n
}}
for(var r=0;
r<t[y].length;
r++){
if(y=="right"){
e.push(t[y][r]["n"])
}else{
var g=t[y][0];
if(g.a){
for(var s=0;
s<g.a.length;
s++){
p.push(g.a[s].n)
}}
if(g.all==true){
p.push(com_zimbra_delegatedadmin.all_attributes)
}}}}}}
var d=[];
d.push("<table><colgroup><col width=150/><col width=500/></colgroup><tbody>");
d.push("<tr><td style='font-weight: bold; vertical-align: top ;'>"+com_zimbra_delegatedadmin.lb_grantee+"</td><td style='white-space: wrap; background-color: #ACC0DD !important;'>"+AjxStringUtil.htmlEncode(u)+"</td></tr>");
d.push("<tr><td style='font-weight: bold; vertical-align: top ;'>"+com_zimbra_delegatedadmin.lb_targets+"</td><td style='background-color: #ACC0DD !important;'>"+l+"</td></tr>");
if(e.length>0){
d.push("<tr><td style='font-weight: bold; vertical-align: top ;'>"+com_zimbra_delegatedadmin.lb_rights+"</td><td style='background-color: #ACC0DD !important;'>"+e.join(", ")+"</td></tr>")
}
if(c.length>0){
d.push("<tr><td style='font-weight: bold; vertical-align: top ;'>"+com_zimbra_delegatedadmin.lb_readable_attrs+"</td><td style='background-color: #ACC0DD !important;'>"+c.join(", ")+"</td></tr>")
}
if(n.length>0){
d.push("<tr><td style='font-weight: bold; vertical-align: top ;'>"+com_zimbra_delegatedadmin.lb_modifiable_attrs+"</td><td style='background-color: #ACC0DD !important;'>"+n.join(", ")+"</td></tr>")
}
d.push("</tbody></table>");
return d.join("")
};
ZaEffectiveRightsXFormView.prototype.getMyXForm=function(S,x){
var A={};
var c=[];
c.push({
type:_OUTPUT_,ref:ZaEffectiveRights.A_grantee+"/name",labelLocation:_LEFT_,label:com_zimbra_delegatedadmin.Label_grantee_name,visibilityChecks:[ZaItem.hasReadPermission],getDisplayValue:AjxUtil.htmlEncode}
);
c.push({
type:_OUTPUT_,ref:ZaEffectiveRights.A_grantee+"/id",labelLocation:_LEFT_,label:com_zimbra_delegatedadmin.Label_grantee_id,visibilityChecks:[ZaItem.hasReadPermission]}
);
var F=[];
var B=[];
var n=0;
var l=[];
for(var W=0;
W<S.length;
W++){
var s=S[W].type;
l[W]=ZaEffectiveRights.getTargetLabel(s);
if(!l[W]){
continue
}
n++;
B.push({
value:n,label:l[W]}
);
var T=ZaModel.currentTab+"_"+n;
F[W]={
type:_ZATABCASE_,caseKey:n,numCols:1,overflow:"hidden",tabLevel:1,headerLevel:1,items:[{
type:_GROUP_,cssClass:"ZmSelectedHeaderBg",colSpan:"*",id:"xform_header",items:[{
type:_OUTPUT_,value:AjxMessageFormat.format(com_zimbra_delegatedadmin.er_of_target,[AjxStringUtil.htmlEncode(x),s])}
],cssStyle:"padding-left: 10px; padding-top:5px; padding-bottom:5px"}
,{
type:_TAB_BAR_,ref:T,choices:[],onChange:ZaEffectiveRights.changeTab,cssClass:"ZaTabBar",id:"_tabbar"}
,{
type:_SWITCH_,align:_LEFT_,valign:_TOP_,items:[]}
]};
var t=F[W].items[2].items;
var C=F[W].items[1].choices;
var d=0;
for(var O in S[W]){
if(!(O=="all"||O=="inDomains"||O=="entries")){
continue
}
var g=S[W][O];
var u=com_zimbra_delegatedadmin.Tab_All;
var o=com_zimbra_delegatedadmin.Tab_InDomains;
var r=com_zimbra_delegatedadmin.Tab_ByEntries;
d++;
var M={
type:_ZATABCASE_,caseVarRef:T,overflow:"hidden",tabLevel:2,headerLevel:2,caseKey:d,numCols:1,items:[]};
var b=T+"_"+d;
if(g.length>1){
M.items=[{
type:_TAB_BAR_,ref:b,choices:[],onChange:ZaEffectiveRights.changeTab,cssClass:"ZaTabBar",id:"_tabbar"}
,{
type:_SWITCH_,align:_LEFT_,valign:_TOP_,items:[]}
];
var q=M.items[0].choices;
var p=M.items[1].items;
var j=0
}else{
if(O=="inDomains"){
o+=": "+ZaUtil.join(g[0].domain,"name",",")
}else{
if(O=="entries"){
r+=": "+ZaUtil.join(g[0].entry,"name",",")
}}}
if(O=="all"){
C.push({
value:d,label:u}
)
}else{
if(O=="inDomains"){
C.push({
value:d,label:o}
)
}else{
if(O=="entries"){
C.push({
value:d,label:r}
)
}}}
t.push(M);
for(var z=0;
z<g.length;
z++){
var D;
var R=null;
var f="";
var y=false;
if(O=="all"){
D=g[z];
R="all"
}else{
if(O=="inDomains"){
D=g[z].rights[0];
R=g[z].domain;
y=true
}else{
if(O=="entries"){
D=g[z].rights[0];
R=g[z].entry
}}}
var e=[];
if(R!=null&&R!="all"){
f=ZaUtil.join(R,"name",", ")
}
var v=ZaEffectiveRightsXFormView.getEffectiveRightsHTML(D,x,R,s,y);
if(g.length==1){
M.items.push({
type:_OUTPUT_,value:v}
)
}else{
j++;
q.push({
value:j,label:f}
);
p.push({
type:_ZATABCASE_,caseVarRef:b,tabLevel:3,headerLevel:2,caseKey:j,numCols:1,items:[{
type:_OUTPUT_,value:v}
]}
)
}}}
if(t.length==0){
t.push({
type:_OUTPUT_,value:AjxMessageFormat.format(com_zimbra_delegatedadmin.er_no_rights,[AjxStringUtil.htmlEncode(x),s])}
)
}}
A.tableCssStyle="width:100%;";
A.items=[{
type:_GROUP_,cssClass:"ZmSelectedHeaderBg",colSpan:"*",id:"xform_header",items:[{
type:_GROUP_,numCols:4,colSizes:["90px","350px","100px","*"],items:c}
],cssStyle:"padding-top:5px; padding-bottom:5px"}
,{
type:_TAB_BAR_,ref:ZaModel.currentTab,choices:B,onChange:ZaEffectiveRights.changeTab,cssClass:"ZaTabBar",id:"xform_tabbar"}
,{
type:_SWITCH_,align:_LEFT_,valign:_TOP_,items:F}
];
return A
};
ZaEffectiveRightsXFormView.prototype.getTabToolTip=function(){
if(this._containedObject&&this._containedObject.grantee&&this._containedObject.grantee.name){
return AjxMessageFormat.format(com_zimbra_delegatedadmin.tt_tab_view_effective_rights,[this._containedObject.grantee.name])
}else{
return""
}};
ZaEffectiveRightsXFormView.prototype.getTabIcon=function(){
return"RightObject"
};
ZaEffectiveRightsXFormView.prototype.getTabTitle=function(){
if(this._containedObject&&this._containedObject.grantee&&this._containedObject.grantee.name){
return this._containedObject.grantee.name
}else{
return""
}};
ZaEffectiveRightsViewController=function(t,e){
ZaXFormViewController.call(this,t,e,"ZaEffectiveRightsViewController");
this._UICreated=false;
this._helpURL=ZaEffectiveRightsViewController.helpURL;
this.tabConstructor=ZaEffectiveRightsXFormView
};
ZaEffectiveRightsViewController.prototype=new ZaXFormViewController();
ZaEffectiveRightsViewController.prototype.constructor=ZaEffectiveRightsViewController;
ZaEffectiveRightsViewController.helpURL=location.pathname+ZaUtil.HELP_URL+"viewing_rights_granted_to_administrators.htm?locid="+AjxEnv.DEFAULT_LOCALE;
ZaController.setViewMethods.ZaEffectiveRightsViewController=new Array();
ZaEffectiveRightsViewController.prototype.show=function(o,t,e){
if(!this.selectExistingTabByItemId(o.grantee.id)){
this._setView(o,t,e)
}};
ZaEffectiveRightsViewController.initToolbarMethod=function(){
this._toolbarOrder.push(ZaOperation.REFRESH);
this._toolbarOrder.push(ZaOperation.SEP);
this._toolbarOrder.push(ZaOperation.CLOSE);
this._toolbarOperations[ZaOperation.REFRESH]=new ZaOperation(ZaOperation.REFRESH,ZaMsg.TBB_Refresh,ZaMsg.TBB_Refresh_tt,"Refresh","Refresh",new AjxListener(this,this.refreshListener));
this._toolbarOperations[ZaOperation.CLOSE]=new ZaOperation(ZaOperation.CLOSE,ZaMsg.TBB_Close,ZaMsg.ALTBB_Close_tt,"Close","CloseDis",new AjxListener(this,this.closeButtonListener));
this._toolbarOperations[ZaOperation.SEP]=new ZaOperation(ZaOperation.SEP)
};
ZaEffectiveRightsViewController.prototype.refreshListener=function(){};
ZaEffectiveRightsViewController.prototype.getAppBarAction=function(){
if(AjxUtil.isEmpty(this._appbarOperation)){
this._appbarOperation[ZaOperation.HELP]=new ZaOperation(ZaOperation.HELP,ZaMsg.TBB_Help,ZaMsg.TBB_Help_tt,"Help","Help",new AjxListener(this,this._helpButtonListener));
this._appbarOperation[ZaOperation.CLOSE]=new ZaOperation(ZaOperation.CLOSE,ZaMsg.TBB_Close,ZaMsg.ALTBB_Close_tt,"","",new AjxListener(this,this.closeButtonListener))
}
return this._appbarOperation
};
ZaEffectiveRightsViewController.prototype.getAppBarOrder=function(){
if(AjxUtil.isEmpty(this._appbarOrder)){
this._appbarOrder.push(ZaOperation.HELP);
this._appbarOrder.push(ZaOperation.CLOSE)
}
return this._appbarOrder
};
ZaEffectiveRightsViewController.setViewMethod=function(t){
try{
if(!this._UICreated){
this._contentView=this._view=new this.tabConstructor(this._container,t);
var o=new Object();
o[ZaAppViewMgr.C_APP_CONTENT]=this._view;
ZaApp.getInstance().getAppViewMgr().createView(this.getContentViewId(),o);
this._UICreated=true;
ZaApp.getInstance()._controllers[this.getContentViewId()]=this
}
ZaApp.getInstance().pushView(this.getContentViewId());
t[ZaModel.currentTab]="1";
t[ZaModel.currentTab+"_1"]="1";
t[ZaModel.currentTab+"_1_1"]="1";
this._currentObject=t;
this._view.setObject(t)
}
catch(e){
this._handleException(e,"ZaEffectiveRightsViewController.setViewMethod",null,false)
}};
ZaController.setViewMethods.ZaEffectiveRightsViewController.push(ZaEffectiveRightsViewController.setViewMethod);
ZaAllGrantsViewController=function(t,e){
ZaXFormViewController.call(this,t,e,"ZaAllGrantsViewController");
this._UICreated=false;
this._helpURL=ZaAllGrantsViewController.helpURL;
this.tabConstructor=ZaAllGrantsXFormView;
this.addCreationListener(new AjxListener(this,this.handleGrantCreation));
this.addRemovalListener(new AjxListener(this,this.handleGrantRemoval))
};
ZaAllGrantsViewController.prototype=new ZaXFormViewController();
ZaAllGrantsViewController.prototype.constructor=ZaAllGrantsViewController;
ZaAllGrantsViewController.helpURL=location.pathname+ZaUtil.HELP_URL+"manage_delegated_admin_grants.htm?locid="+AjxEnv.DEFAULT_LOCALE;
ZaController.setViewMethods.ZaAllGrantsViewController=new Array();
ZaController.initPopupMenuMethods.ZaAllGrantsViewController=new Array();
ZaController.changeActionsStateMethods.ZaAllGrantsViewController=new Array();
ZaAllGrantsViewController.prototype.show=function(o,t,e){
if(!this.selectExistingTabByItemId(o[ZaGrant.A_grantee_id])){
this._setView(o,t,e)
}};
ZaAllGrantsViewController.initPopupMenuMethod=function(){
this._popupOrder.push(ZaOperation.NEW);
this._popupOrder.push(ZaOperation.EDIT);
this._popupOrder.push(ZaOperation.DELETE);
this._popupOrder.push(ZaOperation.CLOSE);
this._popupOperations[ZaOperation.NEW]=new ZaOperation(ZaOperation.NEW,com_zimbra_delegatedadmin.Bt_grant,com_zimbra_delegatedadmin.Grant_New_tt,"Permission","PermissionDis",new AjxListener(this,this.addGrantsListener));
this._popupOperations[ZaOperation.EDIT]=new ZaOperation(ZaOperation.EDIT,ZaMsg.TBB_Edit,com_zimbra_delegatedadmin.Grant_Edit_tt,"Properties","PropertiesDis",new AjxListener(this,this.editGrantsListener));
this._popupOperations[ZaOperation.DELETE]=new ZaOperation(ZaOperation.DELETE,com_zimbra_delegatedadmin.Bt_revoke,com_zimbra_delegatedadmin.Grant_Delete_tt,"Delete","DeleteDis",new AjxListener(this,this.deleteGrantsListener));
this._popupOperations[ZaOperation.CLOSE]=new ZaOperation(ZaOperation.CLOSE,ZaMsg.TBB_Close,ZaMsg.ALTBB_Close_tt,"Close","CloseDis",new AjxListener(this,this.closeButtonListener))
};
ZaController.initPopupMenuMethods.ZaAllGrantsViewController.push(ZaAllGrantsViewController.initPopupMenuMethod);
ZaAllGrantsViewController.changeActionsStateMethod=function(){
if(this._contentView.getObject().currentTab==1){
var e=this._contentView.getSelectedDirectGrant();
if(!e||!e instanceof Array||e.length==0){
this._popupOperations[ZaOperation.DELETE].setEnabled(false);
this._popupOperations[ZaOperation.EDIT].setEnabled(false)
}else{
if(e.length==1){
this._popupOperations[ZaOperation.DELETE].setEnabled(true);
this._popupOperations[ZaOperation.EDIT].setEnabled(true)
}else{
if(e.length>1){
this._popupOperations[ZaOperation.DELETE].setEnabled(true);
this._popupOperations[ZaOperation.EDIT].setEnabled(false)
}}}}else{
this._popupOperations[ZaOperation.DELETE].setEnabled(false);
this._popupOperations[ZaOperation.EDIT].setEnabled(false)
}};
ZaController.changeActionsStateMethods.ZaAllGrantsViewController.push(ZaAllGrantsViewController.changeActionsStateMethod);
ZaAllGrantsViewController.prototype.getAppBarAction=function(){
if(AjxUtil.isEmpty(this._appbarOperation)){
this._appbarOperation={};
this._appbarOperation[ZaOperation.CLOSE]=new ZaOperation(ZaOperation.CLOSE,ZaMsg.TBB_Close,ZaMsg.ALTBB_Close_tt,"","",new AjxListener(this,this.closeButtonListener))
}
return this._appbarOperation
};
ZaAllGrantsViewController.prototype.closeButtonListener=function(){
var e=ZaZimbraAdmin.getInstance().getOverviewPanelController().getOverviewPanel().getFolderTree();
var t=e.getCurrentRootItem();
var o=e.getABPath(t.getData("dataItem"));
e.setSelectionByPath(o,undefined,undefined,undefined,undefined,undefined,true)
};
ZaAllGrantsViewController.prototype.getPopUpOperation=function(){
return this._popupOperations
};
ZaAllGrantsViewController.prototype.editGrantsListener=function(){
var n=this._contentView._localXForm;
var t=n.getItemsById(ZaGrant.A3_directGrantsList)[0];
var e=t.getSelection();
this._currentObject._uuid="grantee"+this._currentObject.id;
if(e&&e.length==1){
var o=e[0];
var s=ZaUtil.deepCloneObject(o,["_evtMgr"]);
this._currentObject._uuid=s._uuid="grantee_"+s[ZaGrant.A_right]+"_"+this._currentObject.id;
s.name=this._currentObject.grantee;
this.editRigthDlg=new ZaGrantDialog(ZaApp.getInstance().getAppCtxt().getShell(),this._currentObject,ZaApp.getInstance(),com_zimbra_delegatedadmin.Title_edit_rights+" ("+AjxStringUtil.htmlEncode(this._currentObject.grantee)+")",ZaGrant.A_grantee,true);
this.editRigthDlg.registerCallback(ZaGrantDialog.EDIT_FINISH_BUTTON,ZaGrantDialog.prototype.editRightAndFinish,this.editRigthDlg,[n,o,false]);
if(s[ZaGrant.A_right].indexOf("get.")==0||s[ZaGrant.A_right].indexOf("set.")==0){
s[ZaGrant.A_right_type]="inline";
s[ZaGrant.A_inline_right]=ZaGrantDialog.getInlineRightAttrsByName(s[ZaGrant.A_right])
}else{
s[ZaGrant.A_right_type]="system"
}
s[ZaGrant.A2_isAdmin]=this._currentObject[ZaGrant.A2_isAdmin];
if((s[ZaGrant.A_grantee_type]==ZaGrant.GRANTEE_TYPE.usr||s[ZaGrant.A_grantee_type]==ZaGrant.GRANTEE_TYPE.grp)&&s[ZaGrant.A2_isAdmin]=="1"){
this.editRigthDlg.targetTypeChoices.setChoices(ZaZimbraRights.targetType)
}else{
this.editRigthDlg.targetTypeChoices.setChoices([ZaItem.ACCOUNT,ZaItem.DL,ZaItem.DOMAIN,ZaItem.GLOBAL_GRANT])
}
this.editRigthDlg.targetTypeChoices.dirtyChoices();
this.editRigthDlg.setObject(s);
this.editRigthDlg.popup();
this.editRigthDlg.refresh()
}};
ZaAllGrantsViewController.prototype.addGrantsListener=function(){
var e=new ZaGrant();
var t={};
t._uuid="grantee"+this._currentObject.id;
t.name=this._currentObject.grantee;
t[ZaGrant.A_grantee]=this._currentObject[ZaGrant.A_grantee];
t[ZaGrant.A_grantee_type]=this._currentObject[ZaGrant.A_grantee_type];
t[ZaGrant.A2_isAdmin]=this._currentObject[ZaGrant.A2_isAdmin];
t.setAttrs={};
t.setAttrs.all=true;
this.grantRightDlg=new ZaGrantDialog(ZaApp.getInstance().getAppCtxt().getShell(),t,ZaApp.getInstance(),com_zimbra_delegatedadmin.Title_grant_rights+" ("+AjxStringUtil.htmlEncode(t.name)+")",ZaGrant.A_grantee,false);
this.grantRightDlg.registerCallback(ZaGrantDialog.ADD_FINISH_BUTTON,ZaGrantDialog.prototype.grantRight,this.grantRightDlg,[this._contentView._localXForm,false]);
this.grantRightDlg.registerCallback(ZaGrantDialog.ADD_MORE_BUTTON,ZaGrantDialog.prototype.grantRight,this.grantRightDlg,[this._contentView._localXForm,true]);
if((t[ZaGrant.A_grantee_type]==ZaGrant.GRANTEE_TYPE.usr||t[ZaGrant.A_grantee_type]==ZaGrant.GRANTEE_TYPE.grp)&&t[ZaGrant.A2_isAdmin]=="1"){
this.grantRightDlg.targetTypeChoices.setChoices(ZaZimbraRights.targetType)
}else{
this.grantRightDlg.targetTypeChoices.setChoices([ZaItem.ACCOUNT,ZaItem.DL,ZaItem.DOMAIN,ZaItem.GLOBAL_GRANT])
}
this.grantRightDlg.targetTypeChoices.dirtyChoices();
this.grantRightDlg.setObject(t);
this.grantRightDlg.popup();
this.grantRightDlg.refresh()
};
ZaAllGrantsViewController.prototype.revokeGrant=function(){
var n=this._contentView._localXForm;
var o=n.getItemsById(ZaGrant.A3_directGrantsList)[0];
var e=o.getSelection();
if(e&&e.length>0){
for(var t=0;
t<e.length;
t++){
if(ZaGrant.revokeMethod(e[t])){
this.fireRemovalEvent(e[t])
}else{
break
}}}
this.revokeRightDlg.popdown()
};
ZaAllGrantsViewController.prototype.deleteGrantsListener=function(){
var o=this._contentView._localXForm;
var t=o.getItemsById(ZaGrant.A3_directGrantsList)[0];
var n=t.getSelection();
if(n&&n.length>=1){
if(!this.revokeRightDlg){
this.revokeRightDlg=new ZaMsgDialog(ZaApp.getInstance().getAppCtxt().getShell(),null,[DwtDialog.YES_BUTTON,DwtDialog.NO_BUTTON])
}
this.revokeRightDlg.registerCallback(DwtDialog.YES_BUTTON,this.revokeGrant,this,null);
var e=com_zimbra_delegatedadmin.confirm_delete_grants+ZaTargetPermission.getDlMsgFromGrant(n);
this.revokeRightDlg.setMessage(e,DwtMessageDialog.INFO_STYLE);
this.revokeRightDlg.popup()
}else{
ZaApp.getInstance().getCurrentController().popupMsgDialog(com_zimbra_delegatedadmin.no_grant_selected_msg)
}};
ZaAllGrantsViewController.setViewMethod=function(t){
try{
if(!this._UICreated){
this._initPopupMenu();
this._contentView=this._view=new this.tabConstructor(this._container,t);
var o=new Object();
o[ZaAppViewMgr.C_APP_CONTENT]=this._view;
ZaApp.getInstance().getAppViewMgr().createView(this.getContentViewId(),o);
this._UICreated=true;
ZaApp.getInstance()._controllers[this.getContentViewId()]=this
}
ZaApp.getInstance().pushView(this.getContentViewId());
t[ZaModel.currentTab]="1";
this._currentObject=t;
this._currentObject._uuid=t.id;
this._view.setObject(t)
}
catch(e){
this._handleException(e,"ZaAllGrantsViewController.prototype._setView",null,false)
}};
ZaController.setViewMethods.ZaAllGrantsViewController.push(ZaAllGrantsViewController.setViewMethod);
ZaAllGrantsViewController.prototype.handleGrantCreation=function(n){
if(n){
var o=n.getDetails();
if(o!=null){
var t=this._currentObject[ZaGrant.A3_directGrantsList];
t.push(o);
if(this._contentView){
var e=this._contentView._localXForm;
e.setInstanceValue(t,ZaGrant.A3_directGrantsList)
}}}};
ZaAllGrantsViewController.prototype.handleGrantRemoval=function(n){
if(n){
var o=n.getDetails();
if(o!=null){
var t=this._currentObject[ZaGrant.A3_directGrantsList];
AjxUtil.arrayRemove(t,o);
if(this._contentView){
var e=this._contentView._localXForm;
e.setInstanceValue(t,ZaGrant.A3_directGrantsList)
}}}};
ZaAllGrantsXFormView=function(e,t){
ZaTabView.call(this,e,"ZaAllGrantsXFormView");
this.initForm(ZaAllGrantsXFormView.getXModel(),this.getMyXForm())
};
ZaAllGrantsXFormView.prototype=new ZaTabView();
ZaAllGrantsXFormView.prototype.constructor=ZaAllGrantsXFormView;
ZaTabView.XFormModifiers.ZaAllGrantsXFormView=new Array();
ZaAllGrantsXFormView.prototype.setObject=function(e){
if(e!=null){
this._containedObject=e;
this._containedObject.id=e[ZaGrant.A_grantee_id];
this._localXForm.setInstance(this._containedObject)
}};
ZaAllGrantsXFormView.grantSelectionListener=function(o){
var e=this.getForm().getInstance();
var t=this.widget.getSelection();
this.getModel().setInstanceValue(e,ZaGrant.A2_grantsListSelectedItems,t);
if(t.length>=1){
if(t.length==1){
this.getForm().parent._actionMenu.enable(ZaOperation.EDIT,true)
}else{
this.getForm().parent._actionMenu.enable(ZaOperation.EDIT,false)
}
ZaApp.getInstance().getCurrentController().changeActionsState()
}
if(o.detail==DwtListView.ITEM_DBL_CLICKED){
ZaApp.getInstance().getCurrentController().editGrantsListener(o)
}};
ZaAllGrantsXFormView.prototype.getSelectedDirectGrant=function(){
if(this._localXForm.getItemsById(ZaGrant.A3_directGrantsList)&&this._localXForm.getItemsById(ZaGrant.A3_directGrantsList)[0]&&this._localXForm.getItemsById(ZaGrant.A3_directGrantsList)[0].getWidget()){
return this._localXForm.getItemsById(ZaGrant.A3_directGrantsList)[0].getWidget().getSelection()
}
return null
};
ZaAllGrantsXFormView.prototype._grantListActionListener=function(e){
this._actionMenu.popup(0,e.docX,e.docY)
};
ZaAllGrantsXFormView.createPopupMenu=function(o){
var e=ZaApp.getInstance().getCurrentController();
if(e._popupOperations){
var t=this.getForm().parent;
t._actionMenu=new ZaPopupMenu(o,"ActionMenu",null,t._getPopupOperations());
o.addActionListener(new AjxListener(t,t._grantListActionListener))
}};
ZaAllGrantsXFormView.prototype._getPopupOperations=function(){
if(!(this._popupOperations)){
this._popupOperations={};
var e=ZaApp.getInstance().getCurrentController()._popupOperations;
if(e){
for(var t in e){
if(e.hasOwnProperty(t)&&t!=ZaOperation.CLOSE){
this._popupOperations[t]=e[t]
}}}}
return this._popupOperations
};
ZaAllGrantsXFormView.getXModel=function(){
return{
items:[{
id:ZaGrant.A_grantee,type:_EMAIL_ADDRESS_,ref:ZaGrant.A_grantee,required:true}
,{
id:ZaGrant.A_grantee_id,type:_STRING_,ref:ZaGrant.A_grantee_id}
,{
id:ZaGrant.A_grantee_type,type:_STRING_,ref:ZaGrant.A_grantee_type,required:true,choices:ZaGrant.GRANT_TYPE}
,{
id:ZaGrant.A2_grantsListSelectedItems,ref:ZaGrant.A2_grantsListSelectedItems,type:_LIST_}
,{
id:ZaGrant.A3_directGrantsList,type:_LIST_,ref:ZaGrant.A3_directGrantsList,listItems:{
type:_OBJECT_,items:[{
id:ZaGrant.A_target,type:_STRING_,ref:ZaGrant.A_target}
,{
id:ZaGrant.A_target_type,ref:ZaGrant.A_target_type,type:_STRING_,choices:ZaZimbraRights.targetType}
,{
id:ZaGrant.A_grantee,type:_STRING_,ref:ZaGrant.A_grantee,required:true}
,{
id:ZaGrant.A_grantee_type,type:_LIST_,ref:ZaGrant.A_grantee_type,required:true,choices:ZaGrant.GRANT_TYPE}
,{
id:ZaGrant.A_right,type:_STRING_,ref:ZaGrant.A_right,required:true}
,{
id:ZaGrant.A_canDelegate,type:_ENUM_,ref:ZaGrant.A_canDelegate,choices:ZaModel.BOOLEAN_CHOICES2}
,{
id:ZaGrant.A_allow,type:_ENUM_,ref:ZaGrant.A_allow,choices:ZaModel.BOOLEAN_CHOICES2}
,{
id:ZaGrant.A_deny,type:_ENUM_,ref:ZaGrant.A_deny,choices:ZaModel.BOOLEAN_CHOICES2}
]}}
,{
id:ZaGrant.A3_indirectGrantsList,type:_LIST_,ref:ZaGrant.A3_indirectGrantsList,listItems:{
type:_OBJECT_,items:[{
id:ZaGrant.A_target,type:_STRING_,ref:ZaGrant.A_target}
,{
id:ZaGrant.A_target_type,ref:ZaGrant.A_target_type,type:_STRING_,choices:ZaZimbraRights.targetType}
,{
id:ZaGrant.A_grantee,type:_STRING_,ref:ZaGrant.A_grantee,required:true}
,{
id:ZaGrant.A_grantee_type,type:_LIST_,ref:ZaGrant.A_grantee_type,required:true,choices:ZaGrant.GRANT_TYPE}
,{
id:ZaGrant.A_right,type:_STRING_,ref:ZaGrant.A_right,required:true}
,{
id:ZaGrant.A_canDelegate,type:_ENUM_,ref:ZaGrant.A_canDelegate,choices:ZaModel.BOOLEAN_CHOICES2}
,{
id:ZaGrant.A_allow,type:_ENUM_,ref:ZaGrant.A_allow,choices:ZaModel.BOOLEAN_CHOICES2}
,{
id:ZaGrant.A_deny,type:_ENUM_,ref:ZaGrant.A_deny,choices:ZaModel.BOOLEAN_CHOICES2}
]}}
]}
};
ZaAllGrantsXFormView.prototype.getMyXForm=function(){
var s={};
var o=[];
o.push({
type:_OUTPUT_,ref:ZaGrant.A_grantee,labelLocation:_LEFT_,label:com_zimbra_delegatedadmin.LBL_admin_name,visibilityChecks:[ZaItem.hasReadPermission],getDisplayValue:AjxUtil.htmlEncode}
);
o.push({
type:_OUTPUT_,ref:ZaGrant.A_grantee_id,labelLocation:_LEFT_,label:com_zimbra_delegatedadmin.LBL_admin_id,visibilityChecks:[ZaItem.hasReadPermission]}
);
var t=0;
this.directGrantsTabId=++t;
var r=[{
value:this.directGrantsTabId,label:com_zimbra_delegatedadmin.lb_tab_directGrants}
,{
value:++t,label:com_zimbra_delegatedadmin.lb_tab_indirectGrants}
];
t=0;
var n=[{
type:_ZATABCASE_,caseKey:++t,numCols:1,id:"direct_all_grants_tab",items:[{
ref:ZaGrant.A3_directGrantsList,id:ZaGrant.A3_directGrantsList,type:_DWT_LIST_,width:"100%",widgetClass:ZaGrantsListView,headerList:ZaGrantsListView._getHeaderList(null,"all"),hideHeader:false,onSelection:ZaAllGrantsXFormView.grantSelectionListener,createPopupMenu:ZaAllGrantsXFormView.createPopupMenu,multiselect:true}
]}
,{
type:_ZATABCASE_,caseKey:++t,numCols:1,id:"indirect_all_grants_tab",items:[{
ref:ZaGrant.A3_indirectGrantsList,id:ZaGrant.A3_indirectGrantsList,type:_DWT_LIST_,width:"100%",widgetClass:ZaGrantsListView,headerList:ZaGrantsListView._getHeaderList(null,"all"),hideHeader:false,multiselect:false}
]}
];
var e="width:100%;overflow:visible;position:absolute;";
s.tableCssStyle=e;
s.items=[{
type:_GROUP_,cssClass:"ZmSelectedHeaderBg",colSpan:"*",id:"xform_header",items:[{
type:_GROUP_,numCols:4,colSizes:["90px","350px","100px","*"],items:o}
],cssStyle:"padding-top:5px; padding-bottom:5px"}
,{
type:_TAB_BAR_,ref:ZaModel.currentTab,onChange:ZaAllGrantsXFormView.changeTab,choices:r,cssClass:"ZaTabBar",id:"xform_tabbar"}
,{
type:_SWITCH_,align:_LEFT_,valign:_TOP_,items:n}
];
return s
};
ZaAllGrantsXFormView.prototype.getTabToolTip=function(){
if(this._containedObject&&this._containedObject.grantee){
return AjxMessageFormat.format(com_zimbra_delegatedadmin.tt_tab_config_grants,[AjxStringUtil.htmlEncode(this._containedObject.grantee)])
}else{
return""
}};
ZaAllGrantsXFormView.prototype.getTabIcon=function(){
return"Permission"
};
ZaAllGrantsXFormView.prototype.getTabTitle=function(){
if(this._containedObject&&this._containedObject.grantee){
return AjxStringUtil.htmlEncode(this._containedObject.grantee)
}else{
return""
}};
ZaAllGrantsXFormView.changeTab=function(n,o,t){
var e=ZaApp.getInstance().getCurrentController();
this.setInstanceValue(n);
e.changeActionsState()
};
if(ZaSettings&&ZaSettings.EnabledZimlet.com_zimbra_delegatedadmin){
if(window.console&&window.console.log){
console.log("Loaded ZaDelegatedAdminExt.js")
}
function ZaDelegatedAdminExt(){}
ZaEvent.S_RIGHT=ZaEvent.EVENT_SOURCE_INDEX++;
ZaEvent.S_GRANT=ZaEvent.EVENT_SOURCE_INDEX++;
ZaItem.RIGHT="right";
ZaItem.GRANT="grant";
ZaZimbraAdmin._RIGHTS=ZaZimbraAdmin.VIEW_INDEX++;
ZaZimbraAdmin._RIGHTS_LIST_VIEW=ZaZimbraAdmin.VIEW_INDEX++;
ZaZimbraAdmin._GRANTS=ZaZimbraAdmin.VIEW_INDEX++;
ZaZimbraAdmin._GLOBAL_GRANTS_LIST_VIEW=ZaZimbraAdmin.VIEW_INDEX++;
ZaSettings.RIGHT_LIST_VIEW="rightListView";
ZaSettings.ALL_UI_COMPONENTS.push({
value:ZaSettings.RIGHT_LIST_VIEW,label:com_zimbra_delegatedadmin.UI_Comp_RightListView}
);
ZaSettings.OVERVIEW_CONFIG_ITEMS.push(ZaSettings.RIGHT_LIST_VIEW);
ZaSettings.GLOBAL_PERMISSION_VIEW="globalPermissionView";
ZaSettings.ALL_UI_COMPONENTS.push({
value:ZaSettings.GLOBAL_PERMISSION_VIEW,label:com_zimbra_delegatedadmin.UI_Comp_GlobalPermView}
);
ZaSettings.OVERVIEW_CONFIG_ITEMS.push(ZaSettings.GLOBAL_PERMISSION_VIEW);
ZaSettings.DOMAIN_ACCT_LIMIT_TAB="viewAdminConsoleDomainLimitsTab";
if(ZaOverviewPanelController.treeModifiers){
ZaOverviewPanelController.treeModifiers.push(ZaRight.rightsOvTreeModifier);
ZaOverviewPanelController.treeModifiers.push(ZaGrant.grantsOvTreeModifier)
}
ZaApp.prototype.getRightViewController=function(e){
if(e&&this._controllers[e]!=null){
return this._controllers[e]
}else{
var t=this._controllers[e]=new ZaRightViewController(this._appCtxt,this._container,this);
return t
}};
ZaApp.prototype.getRightsListController=function(){
if(this._controllers[ZaZimbraAdmin._RIGHTS_LIST_VIEW]==null){
this._controllers[ZaZimbraAdmin._RIGHTS_LIST_VIEW]=new ZaRightsListViewController(this._appCtxt,this._container,this)
}
return this._controllers[ZaZimbraAdmin._RIGHTS_LIST_VIEW]
};
ZaApp.prototype.getGrantViewController=function(e){
if(e&&this._controllers[e]!=null){
return this._controllers[e]
}else{
var t=this._controllers[e]=new ZaGrantViewController(this._appCtxt,this._container,this);
return t
}};
ZaApp.prototype.getGlobalGrantListController=function(){
if(this._controllers[ZaZimbraAdmin._GLOBAL_GRANTS_LIST_VIEW]==null){
this._controllers[ZaZimbraAdmin._GLOBAL_GRANTS_LIST_VIEW]=new ZaGlobalGrantListViewController(this._appCtxt,this._container,this)
}
return this._controllers[ZaZimbraAdmin._GLOBAL_GRANTS_LIST_VIEW]
};
ZaOperation.VIEW_EFFECTIVE_RIGHTS=++ZA_OP_INDEX;
ZaOperation.CONFIG_GRANTS=++ZA_OP_INDEX;
if(ZaController.initPopupMenuMethods.ZaAccountListController){
ZaAccountListController.initExtraPopupMethod=function(){
this._popupOperations[ZaOperation.CONFIG_GRANTS]=new ZaOperation(ZaOperation.CONFIG_GRANTS,com_zimbra_delegatedadmin.bt_config_grants,com_zimbra_delegatedadmin.bt_config_grants_tt,"Permission","PermissionDis",new AjxListener(this,ZaDelegatedAdminExt._configGrantsListener));
this._popupOperations[ZaOperation.VIEW_EFFECTIVE_RIGHTS]=new ZaOperation(ZaOperation.VIEW_EFFECTIVE_RIGHTS,com_zimbra_delegatedadmin.ACTBB_ViewRights,com_zimbra_delegatedadmin.ACTBB_ViewRights_tt,"RightObject","RightObjectDis",new AjxListener(this,ZaDelegatedAdminExt._viewRightsListener))
};
ZaController.initPopupMenuMethods.ZaAccountListController.push(ZaAccountListController.initExtraPopupMethod)
}
if(ZaController.initPopupMenuMethods.ZaDomainListController){
ZaDomainListController.initExtraPopupMethod=function(){
this._popupOperations[ZaOperation.CONFIG_GRANTS]=new ZaOperation(ZaOperation.CONFIG_GRANTS,com_zimbra_delegatedadmin.bt_config_grants,com_zimbra_delegatedadmin.bt_config_grants_tt,"Permission","PermissionDis",new AjxListener(this,ZaDelegatedAdminExt._configGrantsListener))
};
ZaController.initPopupMenuMethods.ZaDomainListController.push(ZaDomainListController.initExtraPopupMethod)
}
ZaDelegatedAdminExt._viewRightsListener=function(n){
var o;
if(this instanceof ZaAccountListController){
var s=this._contentView.getSelection();
if(s&&s.length==1){
o=s[0]
}}else{
if(this instanceof ZaAccountViewController||this instanceof ZaDLController){
o=this._currentObject
}}
if(o!=null){
var e=new ZaEffectiveRights(o);
e.load();
var t=new ZaEffectiveRightsViewController(this._appCtxt,this._container);
t.show(e,true)
}};
ZaDelegatedAdminExt._configGrantsListener=function(c){
var d;
var e={};
if(this instanceof ZaAccountListController){
var n=this._contentView.getSelection();
if(n&&n.length==1){
d=n[0];
if(d.attrs[ZaAccount.A_zimbraIsAdminAccount]=="TRUE"||d.attrs[ZaAccount.A_zimbraIsDelegatedAdminAccount]=="TRUE"||d.attrs[ZaDistributionList.A_isAdminGroup]=="TRUE"){
e[ZaGrant.A2_isAdmin]="1"
}else{
e[ZaGrant.A2_isAdmin]="0"
}}}else{
if(this instanceof ZaDomainListController){
var n=this._contentView.getSelection();
d=n[0];
e[ZaGrant.A2_isAdmin]="0"
}else{
if(this instanceof ZaAccountViewController){
d=this._currentObject;
if(d.attrs[ZaAccount.A_zimbraIsAdminAccount]=="TRUE"||d.attrs[ZaAccount.A_zimbraIsDelegatedAdminAccount]=="TRUE"){
e[ZaGrant.A2_isAdmin]="1"
}else{
e[ZaGrant.A2_isAdmin]="0"
}}else{
if(this instanceof ZaDLController||this instanceof ZaDomainController){
d=this._currentObject;
if(d.attrs[ZaDistributionList.A_isAdminGroup]=="TRUE"){
e[ZaGrant.A2_isAdmin]="1"
}else{
e[ZaGrant.A2_isAdmin]="0"
}}}}}
if(d!=null){
e[ZaGrant.A_grantee]=d.name;
e[ZaGrant.A_grantee_id]=d.id;
e[ZaGrant.A2_grantsListSelectedItems]=[];
e[ZaGrant.A3_directGrantsList]=[];
e[ZaGrant.A3_indirectGrantsList]=[];
var t;
if(d.type==ZaItem.ACCOUNT){
t=ZaGrant.GRANTEE_TYPE.usr
}else{
if(d.type==ZaItem.DL){
t=ZaGrant.GRANTEE_TYPE.grp
}else{
if(d.type==ZaItem.DOMAIN){
t="dom"
}}}
e[ZaGrant.A_grantee_type]=t;
var o={
isAllGrants:true,grantee:{
type:t,all:"1",val:d.name,by:"name"}};
var l=ZaGrant.load.call(d,o);
for(var s=0;
s<l.length;
s++){
if(l[s][ZaGrant.A_grantee]==e[ZaGrant.A_grantee]){
e[ZaGrant.A3_directGrantsList].push(l[s])
}else{
e[ZaGrant.A3_indirectGrantsList].push(l[s])
}}
var r=new ZaAllGrantsViewController(this._appCtxt,this._container);
r.show(e,true)
}};
ZaDelegatedAdminExt.changeActionsStateMethod=function(){
if(!this._contentView){
return
}
var e=this._contentView.getSelectionCount();
if(e==1){
var t=this._contentView.getSelection()[0];
if(t){
if(t.type!=ZaItem.ACCOUNT&&t.type!=ZaItem.DL&&t.type!=ZaItem.DOMAIN){
if(this._popupOperations[ZaOperation.VIEW_EFFECTIVE_RIGHTS]){
this._popupOperations[ZaOperation.VIEW_EFFECTIVE_RIGHTS].enabled=false
}
if(this._popupOperations[ZaOperation.CONFIG_GRANTS]){
this._popupOperations[ZaOperation.CONFIG_GRANTS].enabled=false
}}else{
ZaDelegatedAdminExt.checkRights.call(this,t)
}}else{
if(this._popupOperations[ZaOperation.VIEW_EFFECTIVE_RIGHTS]){
this._popupOperations[ZaOperation.VIEW_EFFECTIVE_RIGHTS].enabled=false
}
if(this._popupOperations[ZaOperation.CONFIG_GRANTS]){
this._popupOperations[ZaOperation.CONFIG_GRANTS].enabled=false
}}}else{
if(this._popupOperations[ZaOperation.VIEW_EFFECTIVE_RIGHTS]){
this._popupOperations[ZaOperation.VIEW_EFFECTIVE_RIGHTS].enabled=false
}
if(this._popupOperations[ZaOperation.CONFIG_GRANTS]){
this._popupOperations[ZaOperation.CONFIG_GRANTS].enabled=false
}}};
ZaController.changeActionsStateMethods.ZaAccountListController.push(ZaDelegatedAdminExt.changeActionsStateMethod);
ZaController.changeActionsStateMethods.ZaDomainListController.push(ZaDelegatedAdminExt.changeActionsStateMethod);
if(ZaController.initPopupMenuMethods.ZaAccountViewController){
ZaAccountViewController.initExtraPopupMethod=function(){
this._popupOperations[ZaOperation.VIEW_EFFECTIVE_RIGHTS]=new ZaOperation(ZaOperation.VIEW_EFFECTIVE_RIGHTS,com_zimbra_delegatedadmin.ACTBB_ViewRights,com_zimbra_delegatedadmin.ACTBB_ViewRights_tt,"RightObject","RightObjectDis",new AjxListener(this,ZaDelegatedAdminExt._viewRightsListener));
this._popupOperations[ZaOperation.CONFIG_GRANTS]=new ZaOperation(ZaOperation.CONFIG_GRANTS,com_zimbra_delegatedadmin.bt_config_grants,com_zimbra_delegatedadmin.bt_config_grants_tt,"Permission","PermissionDis",new AjxListener(this,ZaDelegatedAdminExt._configGrantsListener))
};
ZaController.initPopupMenuMethods.ZaAccountViewController.push(ZaAccountViewController.initExtraPopupMethod)
}
if(ZaController.initPopupMenuMethods.ZaDLController){
ZaDLController.initExtraPopupMethod=function(){
this._popupOperations[ZaOperation.VIEW_EFFECTIVE_RIGHTS]=new ZaOperation(ZaOperation.VIEW_EFFECTIVE_RIGHTS,com_zimbra_delegatedadmin.ACTBB_ViewRights,com_zimbra_delegatedadmin.ACTBB_ViewRights_tt,"RightObject","RightObjectDis",new AjxListener(this,ZaDelegatedAdminExt._viewRightsListener));
this._popupOperations[ZaOperation.CONFIG_GRANTS]=new ZaOperation(ZaOperation.CONFIG_GRANTS,com_zimbra_delegatedadmin.bt_config_grants,com_zimbra_delegatedadmin.bt_config_grants_tt,"Permission","PermissionDis",new AjxListener(this,ZaDelegatedAdminExt._configGrantsListener))
};
ZaController.initPopupMenuMethods.ZaDLController.push(ZaDLController.initExtraPopupMethod)
}
if(ZaController.initPopupMenuMethods.ZaDomainController){
ZaDomainController.initExtraPopupMethod=function(){
this._popupOperations[ZaOperation.CONFIG_GRANTS]=new ZaOperation(ZaOperation.CONFIG_GRANTS,com_zimbra_delegatedadmin.bt_config_grants,com_zimbra_delegatedadmin.bt_config_grants_tt,"Permission","PermissionDis",new AjxListener(this,ZaDelegatedAdminExt._configGrantsListener))
};
ZaController.initPopupMenuMethods.ZaDomainController.push(ZaDomainController.initExtraPopupMethod)
}
ZaDelegatedAdminExt.changeViewActionStateMethod=function(){
if(!this._currentObject){
return
}
ZaDelegatedAdminExt.checkRights.call(this,this._currentObject)
};
ZaController.changeActionsStateMethods.ZaAccountViewController.push(ZaDelegatedAdminExt.changeViewActionStateMethod);
ZaController.changeActionsStateMethods.ZaDLController.push(ZaDelegatedAdminExt.changeViewActionStateMethod);
ZaController.changeActionsStateMethods.ZaDomainController.push(ZaDelegatedAdminExt.changeViewActionStateMethod);
ZaDelegatedAdminExt.checkRights=function(e){
if(!e){
return
}
if(AjxUtil.isEmpty(e.rights)&&e.id){
e.loadEffectiveRights("id",e.id,false)
}
if(e.attrs[ZaAccount.A_zimbraIsAdminAccount]=="TRUE"){
if(this._popupOperations!=null){
if(this._popupOperations[ZaOperation.VIEW_EFFECTIVE_RIGHTS]){
this._popupOperations[ZaOperation.VIEW_EFFECTIVE_RIGHTS].enabled=false
}}
if(this._popupOperations!=null){
if(this._popupOperations[ZaOperation.CONFIG_GRANTS]){
this._popupOperations[ZaOperation.CONFIG_GRANTS].enabled=false
}}
return
}else{
if(this._popupOperations!=null){
this._popupOperations[ZaOperation.CONFIG_GRANTS].enabled=ZaItem.hasReadPermission(ZaItem.A_zimbraACE,e)&&ZaZimbraAdmin.currentAdminAccount.attrs[ZaAccount.A_zimbraIsAdminAccount]=="TRUE"
}}
if(((e.type==ZaItem.ACCOUNT)&&ZaItem.hasRight(ZaRight.VIEW_RIGHTS_USR_RIGHT,e)&&(e.attrs[ZaAccount.A_zimbraIsAdminAccount]=="TRUE"||e.attrs[ZaAccount.A_zimbraIsDelegatedAdminAccount]=="TRUE"))||((e.type==ZaItem.DL)&&ZaItem.hasRight(ZaRight.VIEW_RIGHTS_GRP_RIGHT,e)&&e.attrs[ZaDistributionList.A_isAdminGroup]=="TRUE")){}else{
if(this._popupOperations!=null){
if(this._popupOperations[ZaOperation.VIEW_EFFECTIVE_RIGHTS]){
this._popupOperations[ZaOperation.VIEW_EFFECTIVE_RIGHTS].enabled=false
}}}}
}
if(window.console&&window.console.log){
console.log("Loading com_zimbra_mobilesync")
}
if(ZaSettings.EnabledZimlet.com_zimbra_mobilesync){
ZaMobileAccess=function(){
this._currentSortOrder=true
};
ZaMobileAccess.A2_registeredDevice="registeredDevice";
ZaMobileAccess.A2_registeredDevice_Selection="registeredDevice_Selection";
ZaMobileAccess.A_zimbraFeatureMobileSyncEnabled="zimbraFeatureMobileSyncEnabled";
ZaMobileAccess.A_zimbraFeatureMobilePolicyEnabled="zimbraFeatureMobilePolicyEnabled";
ZaMobileAccess.A_zimbraMobilePolicyAllowNonProvisionableDevices="zimbraMobilePolicyAllowNonProvisionableDevices";
ZaMobileAccess.A_zimbraMobilePolicyAllowPartialProvisioning="zimbraMobilePolicyAllowPartialProvisioning";
ZaMobileAccess.A_zimbraMobilePolicyRefreshInterval="zimbraMobilePolicyRefreshInterval";
ZaMobileAccess.A_zimbraMobilePolicyDevicePasswordEnabled="zimbraMobilePolicyDevicePasswordEnabled";
ZaMobileAccess.A_zimbraMobilePolicyAlphanumericDevicePasswordRequired="zimbraMobilePolicyAlphanumericDevicePasswordRequired";
ZaMobileAccess.A_zimbraMobilePolicyMinDevicePasswordLength="zimbraMobilePolicyMinDevicePasswordLength";
ZaMobileAccess.A_zimbraMobilePolicyMinDevicePasswordComplexCharacters="zimbraMobilePolicyMinDevicePasswordComplexCharacters";
ZaMobileAccess.A_zimbraMobilePolicyAllowSimpleDevicePassword="zimbraMobilePolicyAllowSimpleDevicePassword";
ZaMobileAccess.A_zimbraMobilePolicyPasswordRecoveryEnabled="zimbraMobilePolicyPasswordRecoveryEnabled";
ZaMobileAccess.A_zimbraMobilePolicyRequireStorageCardEncryption="zimbraMobilePolicyRequireStorageCardEncryption";
ZaMobileAccess.A_zimbraMobilePolicyRequireDeviceEncryption="zimbraMobilePolicyRequireDeviceEncryption";
ZaMobileAccess.A_zimbraMobilePolicyMaxInactivityTimeDeviceLock="zimbraMobilePolicyMaxInactivityTimeDeviceLock";
ZaMobileAccess.A_zimbraMobilePolicyMaxDevicePasswordFailedAttempts="zimbraMobilePolicyMaxDevicePasswordFailedAttempts";
ZaMobileAccess.A_zimbraMobilePolicyDevicePasswordExpiration="zimbraMobilePolicyDevicePasswordExpiration";
ZaMobileAccess.A_zimbraMobilePolicyDevicePasswordHistory="zimbraMobilePolicyDevicePasswordHistory";
ZaMobileAccess.A2_zimbraMobilePolicyEnableSMIMEEncryptionAndSigning="zimbraMobilePolicyEnableSMIMEEncryptionAndSigning";
ZaMobileAccess.A_zimbraMobilePolicyRequireSignedSMIMEMessages="zimbraMobilePolicyRequireSignedSMIMEMessages";
ZaMobileAccess.A_zimbraMobilePolicyRequireSignedSMIMEAlgorithm="zimbraMobilePolicyRequireSignedSMIMEAlgorithm";
ZaMobileAccess.A_zimbraMobilePolicyRequireEncryptedSMIMEMessages="zimbraMobilePolicyRequireEncryptedSMIMEMessages";
ZaMobileAccess.A_zimbraMobilePolicyRequireEncryptionSMIMEAlgorithm="zimbraMobilePolicyRequireEncryptionSMIMEAlgorithm";
ZaMobileAccess.A_zimbraMobilePolicyAllowSMIMEEncryptionAlgorithmNegotiation="zimbraMobilePolicyAllowSMIMEEncryptionAlgorithmNegotiation";
ZaMobileAccess.A_zimbraMobilePolicyAllowSMIMESoftCerts="zimbraMobilePolicyAllowSMIMESoftCerts";
ZaMobileAccess.A_zimbraMobilePolicyMaxCalendarAgeFilter="zimbraMobilePolicyMaxCalendarAgeFilter";
ZaMobileAccess.A_zimbraMobilePolicyMaxEmailAgeFilter="zimbraMobilePolicyMaxEmailAgeFilter";
ZaMobileAccess.A_zimbraMobilePolicyMaxEmailBodyTruncationSize="zimbraMobilePolicyMaxEmailBodyTruncationSize";
ZaMobileAccess.A_zimbraMobilePolicyRequireManualSyncWhenRoaming="zimbraMobilePolicyRequireManualSyncWhenRoaming";
ZaMobileAccess.A_zimbraMobilePolicyAllowHTMLEmail="zimbraMobilePolicyAllowHTMLEmail";
ZaMobileAccess.A_zimbraMobilePolicyMaxEmailHTMLBodyTruncationSize="zimbraMobilePolicyMaxEmailHTMLBodyTruncationSize";
ZaMobileAccess.A_zimbraMobilePolicyAllowStorageCard="zimbraMobilePolicyAllowStorageCard";
ZaMobileAccess.A_zimbraMobilePolicyAllowCamera="zimbraMobilePolicyAllowCamera";
ZaMobileAccess.A_zimbraMobilePolicyAllowWiFi="zimbraMobilePolicyAllowWiFi";
ZaMobileAccess.A_zimbraMobilePolicyAllowIrDA="zimbraMobilePolicyAllowIrDA";
ZaMobileAccess.A_zimbraMobilePolicyAllowInternetSharing="zimbraMobilePolicyAllowInternetSharing";
ZaMobileAccess.A_zimbraMobilePolicyAllowRemoteDesktop="zimbraMobilePolicyAllowRemoteDesktop";
ZaMobileAccess.A_zimbraMobilePolicyAllowDesktopSync="zimbraMobilePolicyAllowDesktopSync";
ZaMobileAccess.A_zimbraMobilePolicyAllowBluetooth="zimbraMobilePolicyAllowBluetooth";
ZaMobileAccess.A_zimbraMobilePolicyAllowBrowser="zimbraMobilePolicyAllowBrowser";
ZaMobileAccess.A_zimbraMobilePolicyAllowConsumerEmail="zimbraMobilePolicyAllowConsumerEmail";
ZaMobileAccess.A_zimbraMobilePolicyAllowPOPIMAPEmail="zimbraMobilePolicyAllowPOPIMAPEmail";
ZaMobileAccess.A_zimbraMobilePolicyAllowTextMessaging="zimbraMobilePolicyAllowTextMessaging";
ZaMobileAccess.A_zimbraMobilePolicyAllowUnsignedApplications="zimbraMobilePolicyAllowUnsignedApplications";
ZaMobileAccess.A_zimbraMobilePolicyAllowUnsignedInstallationPackages="zimbraMobilePolicyAllowUnsignedInstallationPackages";
ZaMobileAccess.A_zimbraMobilePolicyApprovedApplication="zimbraMobilePolicyApprovedApplication";
ZaMobileAccess.A_zimbraMobilePolicyApprovedApplicationList="zimbraMobilePolicyApprovedApplicationList";
ZaMobileAccess.A_zimbraMobilePolicyUnapprovedInROMApplication="zimbraMobilePolicyUnapprovedInROMApplication";
ZaMobileAccess.A2_ApprovedAppSelection="approved_app_selection";
ZaMobileAccess.A2_BlockedAppSelection="blocked_app_selection";
ZaMobileAccess.A2_ApprovedAppName="approved_app_name";
ZaMobileAccess.A2_ApprovedAppHash="approved_app_hash";
ZaMobileAccess.A2_BlockedAppName="blocked_app_name";
ZaMobileAccess.A2_zimbraMobileSync="zimbraMobileSync";
ZaMobileAccess.A2_zimbraMobileDeviceSelected="zimbraMobileDeviceSelected";
ZaMobileAccess.A2_resumeSyncEnabled="resumeSyncEnabled";
ZaMobileAccess.A2_wipeEnabled="wipeEnabled";
ZaMobileAccess.CALENDAR_AGE_FILTER_CHOICES=[{
label:com_zimbra_mobilesync.passAll,value:"0"}
,{
label:com_zimbra_mobilesync.twoWeek,value:"4"}
,{
label:com_zimbra_mobilesync.oneMonth,value:"5"}
,{
label:com_zimbra_mobilesync.threeMonth,value:"6"}
,{
label:com_zimbra_mobilesync.sixMonth,value:"7"}
];
ZaMobileAccess.EMAIL_AGE_FILTER_CHOICES=[{
label:com_zimbra_mobilesync.passAll,value:"0"}
,{
label:com_zimbra_mobilesync.oneDay,value:"1"}
,{
label:com_zimbra_mobilesync.threeDay,value:"2"}
,{
label:com_zimbra_mobilesync.oneWeek,value:"3"}
,{
label:com_zimbra_mobilesync.twoWeek,value:"4"}
,{
label:com_zimbra_mobilesync.oneMonth,value:"5"}
,];
ZaMobileAccess.SMIME_ALGORITHM_NEGOTIATION_CHOICES=[{
label:com_zimbra_mobilesync.blockNegotiation,value:"0"}
,{
label:com_zimbra_mobilesync.strongNegotiationOnly,value:"1"}
,{
label:com_zimbra_mobilesync.allowAllNegotiation,value:"2"}
];
ZaMobileAccess.BLUETOOTH_CHOICES=[{
label:com_zimbra_mobilesync.bluetoothDisable,value:"0"}
,{
label:com_zimbra_mobilesync.bluetoothHandsFreeOnly,value:"1"}
,{
label:com_zimbra_mobilesync.bluetoothAllow,value:"2"}
];
if(ZaCos&&ZaCos.myXModel){
ZaCos.myXModel.items.push({
id:ZaMobileAccess.A2_registeredDevice,type:_LIST_}
,{
id:ZaMobileAccess.A2_registeredDevice_Selection,type:_LIST_}
,{
id:ZaMobileAccess.A_zimbraFeatureMobileSyncEnabled,type:_ENUM_,ref:"attrs/"+ZaMobileAccess.A_zimbraFeatureMobileSyncEnabled,choices:ZaModel.BOOLEAN_CHOICES}
,{
id:ZaMobileAccess.A_zimbraFeatureMobilePolicyEnabled,type:_ENUM_,ref:"attrs/"+ZaMobileAccess.A_zimbraFeatureMobilePolicyEnabled,choices:ZaModel.BOOLEAN_CHOICES}
,{
id:ZaMobileAccess.A_zimbraMobilePolicyAllowNonProvisionableDevices,type:_ENUM_,ref:"attrs/"+ZaMobileAccess.A_zimbraMobilePolicyAllowNonProvisionableDevices,choices:ZaModel.BOOLEAN_CHOICES}
,{
id:ZaMobileAccess.A_zimbraMobilePolicyAllowPartialProvisioning,type:_ENUM_,ref:"attrs/"+ZaMobileAccess.A_zimbraMobilePolicyAllowPartialProvisioning,choices:ZaModel.BOOLEAN_CHOICES}
,{
id:ZaMobileAccess.A_zimbraMobilePolicyRefreshInterval,type:_INT_,ref:"attrs/"+ZaMobileAccess.A_zimbraMobilePolicyRefreshInterval,minInclusive:0}
,{
id:ZaMobileAccess.A_zimbraMobilePolicyDevicePasswordEnabled,type:_ENUM_,ref:"attrs/"+ZaMobileAccess.A_zimbraMobilePolicyDevicePasswordEnabled,choices:ZaModel.BOOLEAN_CHOICES}
,{
id:ZaMobileAccess.A_zimbraMobilePolicyMinDevicePasswordLength,type:_INT_,ref:"attrs/"+ZaMobileAccess.A_zimbraMobilePolicyMinDevicePasswordLength,minInclusive:1}
,{
id:ZaMobileAccess.A_zimbraMobilePolicyAlphanumericDevicePasswordRequired,type:_ENUM_,ref:"attrs/"+ZaMobileAccess.A_zimbraMobilePolicyAlphanumericDevicePasswordRequired,choices:ZaModel.BOOLEAN_CHOICES}
,{
id:ZaMobileAccess.A_zimbraMobilePolicyMinDevicePasswordComplexCharacters,type:_INT_,ref:"attrs/"+ZaMobileAccess.A_zimbraMobilePolicyMinDevicePasswordComplexCharacters,minInclusive:0}
,{
id:ZaMobileAccess.A_zimbraMobilePolicyAllowSimpleDevicePassword,type:_ENUM_,ref:"attrs/"+ZaMobileAccess.A_zimbraMobilePolicyAllowSimpleDevicePassword,choices:ZaModel.BOOLEAN_CHOICES}
,{
id:ZaMobileAccess.A_zimbraMobilePolicyPasswordRecoveryEnabled,type:_ENUM_,ref:"attrs/"+ZaMobileAccess.A_zimbraMobilePolicyPasswordRecoveryEnabled,choices:ZaModel.BOOLEAN_CHOICES}
,{
id:ZaMobileAccess.A_zimbraMobilePolicyRequireStorageCardEncryption,type:_ENUM_,ref:"attrs/"+ZaMobileAccess.A_zimbraMobilePolicyRequireStorageCardEncryption,choices:ZaModel.BOOLEAN_CHOICES}
,{
id:ZaMobileAccess.A_zimbraMobilePolicyRequireDeviceEncryption,type:_ENUM_,ref:"attrs/"+ZaMobileAccess.A_zimbraMobilePolicyRequireDeviceEncryption,choices:ZaModel.ALLOW_CHOICES}
,{
id:ZaMobileAccess.A_zimbraMobilePolicyMaxInactivityTimeDeviceLock,type:_INT_,ref:"attrs/"+ZaMobileAccess.A_zimbraMobilePolicyMaxInactivityTimeDeviceLock,minInclusive:0}
,{
id:ZaMobileAccess.A_zimbraMobilePolicyMaxDevicePasswordFailedAttempts,type:_INT_,ref:"attrs/"+ZaMobileAccess.A_zimbraMobilePolicyMaxDevicePasswordFailedAttempts,minInclusive:0}
,{
id:ZaMobileAccess.A_zimbraMobilePolicyDevicePasswordExpiration,type:_INT_,ref:"attrs/"+ZaMobileAccess.A_zimbraMobilePolicyDevicePasswordExpiration,minInclusive:0}
,{
id:ZaMobileAccess.A_zimbraMobilePolicyDevicePasswordHistory,type:_INT_,ref:"attrs/"+ZaMobileAccess.A_zimbraMobilePolicyDevicePasswordHistory,minInclusive:0}
,{
id:ZaMobileAccess.A2_zimbraMobilePolicyEnableSMIMEEncryptionAndSigning,type:_ENUM_,choices:ZaModel.BOOLEAN_CHOICES1}
,{
id:ZaMobileAccess.A_zimbraMobilePolicyRequireSignedSMIMEMessages,type:_INT_,ref:"attrs/"+ZaMobileAccess.A_zimbraMobilePolicyRequireSignedSMIMEMessages,choices:ZaModel.ALLOW_CHOICES}
,{
id:ZaMobileAccess.A_zimbraMobilePolicyRequireSignedSMIMEAlgorithm,type:_INT_,ref:"attrs/"+ZaMobileAccess.A_zimbraMobilePolicyRequireSignedSMIMEAlgorithm,choices:ZaModel.ALLOW_CHOICES}
,{
id:ZaMobileAccess.A_zimbraMobilePolicyRequireEncryptedSMIMEMessages,type:_INT_,ref:"attrs/"+ZaMobileAccess.A_zimbraMobilePolicyRequireEncryptedSMIMEMessages,choices:ZaModel.ALLOW_CHOICES}
,{
id:ZaMobileAccess.A_zimbraMobilePolicyRequireEncryptionSMIMEAlgorithm,type:_INT_,ref:"attrs/"+ZaMobileAccess.A_zimbraMobilePolicyRequireEncryptionSMIMEAlgorithm,choices:ZaModel.ALLOW_CHOICES}
,{
id:ZaMobileAccess.A_zimbraMobilePolicyAllowSMIMEEncryptionAlgorithmNegotiation,type:_INT_,ref:"attrs/"+ZaMobileAccess.A_zimbraMobilePolicyAllowSMIMEEncryptionAlgorithmNegotiation,choices:ZaMobileAccess.SMIME_ALGORITHM_NEGOTIATION_CHOICES}
,{
id:ZaMobileAccess.A_zimbraMobilePolicyAllowSMIMESoftCerts,type:_INT_,ref:"attrs/"+ZaMobileAccess.A_zimbraMobilePolicyAllowSMIMESoftCerts,choices:ZaModel.ALLOW_CHOICES}
,{
id:ZaMobileAccess.A_zimbraMobilePolicyMaxCalendarAgeFilter,type:_ENUM_,ref:"attrs/"+ZaMobileAccess.A_zimbraMobilePolicyMaxCalendarAgeFilter,choices:ZaMobileAccess.CALENDAR_AGE_FILTER_CHOICES}
,{
id:ZaMobileAccess.A_zimbraMobilePolicyMaxEmailAgeFilter,type:_ENUM_,ref:"attrs/"+ZaMobileAccess.A_zimbraMobilePolicyMaxEmailAgeFilter,choices:ZaMobileAccess.EMAIL_AGE_FILTER_CHOICES}
,{
id:ZaMobileAccess.A_zimbraMobilePolicyMaxEmailBodyTruncationSize,type:_INT_,ref:"attrs/"+ZaMobileAccess.A_zimbraMobilePolicyMaxEmailBodyTruncationSize,minInclusive:-1}
,{
id:ZaMobileAccess.A_zimbraMobilePolicyRequireManualSyncWhenRoaming,type:_ENUM_,ref:"attrs/"+ZaMobileAccess.A_zimbraMobilePolicyRequireManualSyncWhenRoaming,choices:ZaModel.ALLOW_CHOICES}
,{
id:ZaMobileAccess.A_zimbraMobilePolicyAllowHTMLEmail,type:_ENUM_,ref:"attrs/"+ZaMobileAccess.A_zimbraMobilePolicyAllowHTMLEmail,choices:ZaModel.ALLOW_CHOICES}
,{
id:ZaMobileAccess.A_zimbraMobilePolicyMaxEmailHTMLBodyTruncationSize,type:_INT_,ref:"attrs/"+ZaMobileAccess.A_zimbraMobilePolicyMaxEmailHTMLBodyTruncationSize,minInclusive:-1}
,{
id:ZaMobileAccess.A_zimbraMobilePolicyAllowStorageCard,type:_ENUM_,ref:"attrs/"+ZaMobileAccess.A_zimbraMobilePolicyAllowStorageCard,choices:ZaModel.ALLOW_CHOICES}
,{
id:ZaMobileAccess.A_zimbraMobilePolicyAllowCamera,type:_ENUM_,ref:"attrs/"+ZaMobileAccess.A_zimbraMobilePolicyAllowCamera,choices:ZaModel.ALLOW_CHOICES}
,{
id:ZaMobileAccess.A_zimbraMobilePolicyAllowWiFi,type:_ENUM_,ref:"attrs/"+ZaMobileAccess.A_zimbraMobilePolicyAllowWiFi,choices:ZaModel.ALLOW_CHOICES}
,{
id:ZaMobileAccess.A_zimbraMobilePolicyAllowIrDA,type:_ENUM_,ref:"attrs/"+ZaMobileAccess.A_zimbraMobilePolicyAllowIrDA,choices:ZaModel.ALLOW_CHOICES}
,{
id:ZaMobileAccess.A_zimbraMobilePolicyAllowInternetSharing,type:_ENUM_,ref:"attrs/"+ZaMobileAccess.A_zimbraMobilePolicyAllowInternetSharing,choices:ZaModel.ALLOW_CHOICES}
,{
id:ZaMobileAccess.A_zimbraMobilePolicyAllowRemoteDesktop,type:_ENUM_,ref:"attrs/"+ZaMobileAccess.A_zimbraMobilePolicyAllowRemoteDesktop,choices:ZaModel.ALLOW_CHOICES}
,{
id:ZaMobileAccess.A_zimbraMobilePolicyAllowDesktopSync,type:_ENUM_,ref:"attrs/"+ZaMobileAccess.A_zimbraMobilePolicyAllowDesktopSync,choices:ZaModel.ALLOW_CHOICES}
,{
id:ZaMobileAccess.A_zimbraMobilePolicyAllowBluetooth,type:_ENUM_,ref:"attrs/"+ZaMobileAccess.A_zimbraMobilePolicyAllowBluetooth,choices:ZaMobileAccess.BLUETOOTH_CHOICES}
,{
id:ZaMobileAccess.A_zimbraMobilePolicyAllowBrowser,type:_ENUM_,ref:"attrs/"+ZaMobileAccess.A_zimbraMobilePolicyAllowBrowser,choices:ZaModel.ALLOW_CHOICES}
,{
id:ZaMobileAccess.A_zimbraMobilePolicyAllowConsumerEmail,type:_ENUM_,ref:"attrs/"+ZaMobileAccess.A_zimbraMobilePolicyAllowConsumerEmail,choices:ZaModel.ALLOW_CHOICES}
,{
id:ZaMobileAccess.A_zimbraMobilePolicyAllowPOPIMAPEmail,type:_ENUM_,ref:"attrs/"+ZaMobileAccess.A_zimbraMobilePolicyAllowPOPIMAPEmail,choices:ZaModel.ALLOW_CHOICES}
,{
id:ZaMobileAccess.A_zimbraMobilePolicyAllowTextMessaging,type:_ENUM_,ref:"attrs/"+ZaMobileAccess.A_zimbraMobilePolicyAllowTextMessaging,choices:ZaModel.ALLOW_CHOICES}
,{
id:ZaMobileAccess.A_zimbraMobilePolicyAllowUnsignedApplications,type:_ENUM_,ref:"attrs/"+ZaMobileAccess.A_zimbraMobilePolicyAllowUnsignedApplications,choices:ZaModel.ALLOW_CHOICES}
,{
id:ZaMobileAccess.A_zimbraMobilePolicyAllowUnsignedInstallationPackages,type:_ENUM_,ref:"attrs/"+ZaMobileAccess.A_zimbraMobilePolicyAllowUnsignedInstallationPackages,choices:ZaModel.ALLOW_CHOICES}
,{
id:ZaMobileAccess.A_zimbraMobilePolicyApprovedApplication,type:_LIST_,dataType:_STRING_,ref:"attrs/"+ZaMobileAccess.A_zimbraMobilePolicyApprovedApplication}
,{
id:ZaMobileAccess.A_zimbraMobilePolicyApprovedApplicationList,type:_LIST_,dataType:_STRING_,ref:"attrs/"+ZaMobileAccess.A_zimbraMobilePolicyApprovedApplicationList}
,{
id:ZaMobileAccess.A_zimbraMobilePolicyUnapprovedInROMApplication,type:_LIST_,dataType:_STRING_,ref:"attrs/"+ZaMobileAccess.A_zimbraMobilePolicyUnapprovedInROMApplication}
,{
id:ZaMobileAccess.A2_ApprovedAppSelection,type:_LIST_,dataType:_STRING_}
,{
id:ZaMobileAccess.A2_BlockedAppSelection,type:_LIST_,dataType:_STRING_}
)
}
if(ZaAccount&&ZaAccount.myXModel){
ZaAccount.myXModel.items.push({
id:ZaMobileAccess.A2_registeredDevice,type:_LIST_}
,{
id:ZaMobileAccess.A2_registeredDevice_Selection,type:_LIST_}
,{
id:ZaMobileAccess.A_zimbraFeatureMobileSyncEnabled,type:_COS_ENUM_,ref:"attrs/"+ZaMobileAccess.A_zimbraFeatureMobileSyncEnabled,choices:ZaModel.BOOLEAN_CHOICES}
,{
id:ZaMobileAccess.A_zimbraFeatureMobilePolicyEnabled,type:_COS_ENUM_,ref:"attrs/"+ZaMobileAccess.A_zimbraFeatureMobilePolicyEnabled,choices:ZaModel.BOOLEAN_CHOICES}
,{
id:ZaMobileAccess.A_zimbraMobilePolicyAllowNonProvisionableDevices,type:_COS_ENUM_,ref:"attrs/"+ZaMobileAccess.A_zimbraMobilePolicyAllowNonProvisionableDevices,choices:ZaModel.BOOLEAN_CHOICES}
,{
id:ZaMobileAccess.A_zimbraMobilePolicyAllowPartialProvisioning,type:_COS_ENUM_,ref:"attrs/"+ZaMobileAccess.A_zimbraMobilePolicyAllowPartialProvisioning,choices:ZaModel.BOOLEAN_CHOICES}
,{
id:ZaMobileAccess.A_zimbraMobilePolicyRefreshInterval,type:_COS_INT_,ref:"attrs/"+ZaMobileAccess.A_zimbraMobilePolicyRefreshInterval,minInclusive:0}
,{
id:ZaMobileAccess.A_zimbraMobilePolicyDevicePasswordEnabled,type:_COS_ENUM_,ref:"attrs/"+ZaMobileAccess.A_zimbraMobilePolicyDevicePasswordEnabled,choices:ZaModel.BOOLEAN_CHOICES}
,{
id:ZaMobileAccess.A_zimbraMobilePolicyMinDevicePasswordLength,type:_COS_INT_,ref:"attrs/"+ZaMobileAccess.A_zimbraMobilePolicyMinDevicePasswordLength,minInclusive:1}
,{
id:ZaMobileAccess.A_zimbraMobilePolicyAlphanumericDevicePasswordRequired,type:_COS_ENUM_,ref:"attrs/"+ZaMobileAccess.A_zimbraMobilePolicyAlphanumericDevicePasswordRequired,choices:ZaModel.BOOLEAN_CHOICES}
,{
id:ZaMobileAccess.A_zimbraMobilePolicyMinDevicePasswordComplexCharacters,type:_COS_INT_,ref:"attrs/"+ZaMobileAccess.A_zimbraMobilePolicyMinDevicePasswordComplexCharacters,minInclusive:0}
,{
id:ZaMobileAccess.A_zimbraMobilePolicyAllowSimpleDevicePassword,type:_COS_ENUM_,ref:"attrs/"+ZaMobileAccess.A_zimbraMobilePolicyAllowSimpleDevicePassword,choices:ZaModel.BOOLEAN_CHOICES}
,{
id:ZaMobileAccess.A_zimbraMobilePolicyPasswordRecoveryEnabled,type:_COS_ENUM_,ref:"attrs/"+ZaMobileAccess.A_zimbraMobilePolicyPasswordRecoveryEnabled,choices:ZaModel.BOOLEAN_CHOICES}
,{
id:ZaMobileAccess.A_zimbraMobilePolicyRequireStorageCardEncryption,type:_COS_ENUM_,ref:"attrs/"+ZaMobileAccess.A_zimbraMobilePolicyRequireStorageCardEncryption,choices:ZaModel.BOOLEAN_CHOICES}
,{
id:ZaMobileAccess.A_zimbraMobilePolicyRequireDeviceEncryption,type:_COS_ENUM_,ref:"attrs/"+ZaMobileAccess.A_zimbraMobilePolicyRequireDeviceEncryption,choices:ZaModel.ALLOW_CHOICES}
,{
id:ZaMobileAccess.A_zimbraMobilePolicyMaxInactivityTimeDeviceLock,type:_COS_INT_,ref:"attrs/"+ZaMobileAccess.A_zimbraMobilePolicyMaxInactivityTimeDeviceLock,minInclusive:0}
,{
id:ZaMobileAccess.A_zimbraMobilePolicyMaxDevicePasswordFailedAttempts,type:_COS_INT_,ref:"attrs/"+ZaMobileAccess.A_zimbraMobilePolicyMaxDevicePasswordFailedAttempts,minInclusive:0}
,{
id:ZaMobileAccess.A_zimbraMobilePolicyDevicePasswordExpiration,type:_COS_INT_,ref:"attrs/"+ZaMobileAccess.A_zimbraMobilePolicyDevicePasswordExpiration,minInclusive:0}
,{
id:ZaMobileAccess.A_zimbraMobilePolicyDevicePasswordHistory,type:_COS_INT_,ref:"attrs/"+ZaMobileAccess.A_zimbraMobilePolicyDevicePasswordHistory,minInclusive:0}
,{
id:ZaMobileAccess.A2_zimbraMobilePolicyEnableSMIMEEncryptionAndSigning,type:_COS_ENUM_,choices:ZaModel.BOOLEAN_CHOICES1}
,{
id:ZaMobileAccess.A_zimbraMobilePolicyRequireSignedSMIMEMessages,type:_COS_INT_,ref:"attrs/"+ZaMobileAccess.A_zimbraMobilePolicyRequireSignedSMIMEMessages,choices:ZaModel.ALLOW_CHOICES}
,{
id:ZaMobileAccess.A_zimbraMobilePolicyRequireSignedSMIMEAlgorithm,type:_COS_INT_,ref:"attrs/"+ZaMobileAccess.A_zimbraMobilePolicyRequireSignedSMIMEAlgorithm,choices:ZaModel.ALLOW_CHOICES}
,{
id:ZaMobileAccess.A_zimbraMobilePolicyRequireEncryptedSMIMEMessages,type:_COS_INT_,ref:"attrs/"+ZaMobileAccess.A_zimbraMobilePolicyRequireEncryptedSMIMEMessages,choices:ZaModel.ALLOW_CHOICES}
,{
id:ZaMobileAccess.A_zimbraMobilePolicyRequireEncryptionSMIMEAlgorithm,type:_COS_INT_,ref:"attrs/"+ZaMobileAccess.A_zimbraMobilePolicyRequireEncryptionSMIMEAlgorithm,choices:ZaModel.ALLOW_CHOICES}
,{
id:ZaMobileAccess.A_zimbraMobilePolicyAllowSMIMEEncryptionAlgorithmNegotiation,type:_COS_INT_,ref:"attrs/"+ZaMobileAccess.A_zimbraMobilePolicyAllowSMIMEEncryptionAlgorithmNegotiation,choices:ZaMobileAccess.SMIME_ALGORITHM_NEGOTIATION_CHOICES}
,{
id:ZaMobileAccess.A_zimbraMobilePolicyAllowSMIMESoftCerts,type:_COS_INT_,ref:"attrs/"+ZaMobileAccess.A_zimbraMobilePolicyAllowSMIMESoftCerts,choices:ZaModel.ALLOW_CHOICES}
,{
id:ZaMobileAccess.A_zimbraMobilePolicyMaxCalendarAgeFilter,type:_COS_ENUM_,ref:"attrs/"+ZaMobileAccess.A_zimbraMobilePolicyMaxCalendarAgeFilter,choices:ZaMobileAccess.CALENDAR_AGE_FILTER_CHOICES}
,{
id:ZaMobileAccess.A_zimbraMobilePolicyMaxEmailAgeFilter,type:_COS_ENUM_,ref:"attrs/"+ZaMobileAccess.A_zimbraMobilePolicyMaxEmailAgeFilter,choices:ZaMobileAccess.EMAIL_AGE_FILTER_CHOICES}
,{
id:ZaMobileAccess.A_zimbraMobilePolicyMaxEmailBodyTruncationSize,type:_COS_INT_,ref:"attrs/"+ZaMobileAccess.A_zimbraMobilePolicyMaxEmailBodyTruncationSize,minInclusive:-1}
,{
id:ZaMobileAccess.A_zimbraMobilePolicyRequireManualSyncWhenRoaming,type:_COS_ENUM_,ref:"attrs/"+ZaMobileAccess.A_zimbraMobilePolicyRequireManualSyncWhenRoaming,choices:ZaModel.ALLOW_CHOICES}
,{
id:ZaMobileAccess.A_zimbraMobilePolicyAllowHTMLEmail,type:_COS_ENUM_,ref:"attrs/"+ZaMobileAccess.A_zimbraMobilePolicyAllowHTMLEmail,choices:ZaModel.ALLOW_CHOICES}
,{
id:ZaMobileAccess.A_zimbraMobilePolicyMaxEmailHTMLBodyTruncationSize,type:_COS_INT_,ref:"attrs/"+ZaMobileAccess.A_zimbraMobilePolicyMaxEmailHTMLBodyTruncationSize,minInclusive:-1}
,{
id:ZaMobileAccess.A_zimbraMobilePolicyAllowStorageCard,type:_COS_ENUM_,ref:"attrs/"+ZaMobileAccess.A_zimbraMobilePolicyAllowStorageCard,choices:ZaModel.ALLOW_CHOICES}
,{
id:ZaMobileAccess.A_zimbraMobilePolicyAllowCamera,type:_COS_ENUM_,ref:"attrs/"+ZaMobileAccess.A_zimbraMobilePolicyAllowCamera,choices:ZaModel.ALLOW_CHOICES}
,{
id:ZaMobileAccess.A_zimbraMobilePolicyAllowWiFi,type:_COS_ENUM_,ref:"attrs/"+ZaMobileAccess.A_zimbraMobilePolicyAllowWiFi,choices:ZaModel.ALLOW_CHOICES}
,{
id:ZaMobileAccess.A_zimbraMobilePolicyAllowIrDA,type:_COS_ENUM_,ref:"attrs/"+ZaMobileAccess.A_zimbraMobilePolicyAllowIrDA,choices:ZaModel.ALLOW_CHOICES}
,{
id:ZaMobileAccess.A_zimbraMobilePolicyAllowInternetSharing,type:_COS_ENUM_,ref:"attrs/"+ZaMobileAccess.A_zimbraMobilePolicyAllowInternetSharing,choices:ZaModel.ALLOW_CHOICES}
,{
id:ZaMobileAccess.A_zimbraMobilePolicyAllowRemoteDesktop,type:_COS_ENUM_,ref:"attrs/"+ZaMobileAccess.A_zimbraMobilePolicyAllowRemoteDesktop,choices:ZaModel.ALLOW_CHOICES}
,{
id:ZaMobileAccess.A_zimbraMobilePolicyAllowDesktopSync,type:_COS_ENUM_,ref:"attrs/"+ZaMobileAccess.A_zimbraMobilePolicyAllowDesktopSync,choices:ZaModel.ALLOW_CHOICES}
,{
id:ZaMobileAccess.A_zimbraMobilePolicyAllowBluetooth,type:_COS_ENUM_,ref:"attrs/"+ZaMobileAccess.A_zimbraMobilePolicyAllowBluetooth,choices:ZaMobileAccess.BLUETOOTH_CHOICES}
,{
id:ZaMobileAccess.A_zimbraMobilePolicyAllowBrowser,type:_COS_ENUM_,ref:"attrs/"+ZaMobileAccess.A_zimbraMobilePolicyAllowBrowser,choices:ZaModel.ALLOW_CHOICES}
,{
id:ZaMobileAccess.A_zimbraMobilePolicyAllowConsumerEmail,type:_COS_ENUM_,ref:"attrs/"+ZaMobileAccess.A_zimbraMobilePolicyAllowConsumerEmail,choices:ZaModel.ALLOW_CHOICES}
,{
id:ZaMobileAccess.A_zimbraMobilePolicyAllowPOPIMAPEmail,type:_COS_ENUM_,ref:"attrs/"+ZaMobileAccess.A_zimbraMobilePolicyAllowPOPIMAPEmail,choices:ZaModel.ALLOW_CHOICES}
,{
id:ZaMobileAccess.A_zimbraMobilePolicyAllowTextMessaging,type:_COS_ENUM_,ref:"attrs/"+ZaMobileAccess.A_zimbraMobilePolicyAllowTextMessaging,choices:ZaModel.ALLOW_CHOICES}
,{
id:ZaMobileAccess.A_zimbraMobilePolicyAllowUnsignedApplications,type:_COS_ENUM_,ref:"attrs/"+ZaMobileAccess.A_zimbraMobilePolicyAllowUnsignedApplications,choices:ZaModel.ALLOW_CHOICES}
,{
id:ZaMobileAccess.A_zimbraMobilePolicyAllowUnsignedInstallationPackages,type:_COS_ENUM_,ref:"attrs/"+ZaMobileAccess.A_zimbraMobilePolicyAllowUnsignedInstallationPackages,choices:ZaModel.ALLOW_CHOICES}
,{
id:ZaMobileAccess.A_zimbraMobilePolicyApprovedApplication,type:_COS_LIST_,dataType:_STRING_,ref:"attrs/"+ZaMobileAccess.A_zimbraMobilePolicyApprovedApplication}
,{
id:ZaMobileAccess.A_zimbraMobilePolicyApprovedApplicationList,type:_COS_LIST_,dataType:_STRING_,ref:"attrs/"+ZaMobileAccess.A_zimbraMobilePolicyApprovedApplicationList}
,{
id:ZaMobileAccess.A_zimbraMobilePolicyUnapprovedInROMApplication,type:_COS_LIST_,dataType:_STRING_,ref:"attrs/"+ZaMobileAccess.A_zimbraMobilePolicyUnapprovedInROMApplication}
,{
id:ZaMobileAccess.A2_ApprovedAppSelection,type:_LIST_,dataType:_STRING_}
,{
id:ZaMobileAccess.A2_BlockedAppSelection,type:_LIST_,dataType:_STRING_}
,{
id:ZaMobileAccess.A2_zimbraMobileSync,type:_LIST_,dataType:_STRING_}
,{
id:ZaMobileAccess.A2_zimbraMobileDeviceSelected}
,{
id:ZaMobileAccess.A2_resumeSyncEnabled}
,{
id:ZaMobileAccess.A2_wipeEnabled}
)
}
if(ZaGlobalConfig){
if(ZaGlobalConfig.myXModel){
ZaGlobalConfig.myXModel.items.push({
id:ZaMobileAccess.A2_registeredDevice,type:_LIST_}
,{
id:ZaMobileAccess.A2_registeredDevice_Selection,type:_LIST_}
)
}}
if(ZaDomain){
if(ZaDomain.myXModel){
ZaDomain.myXModel.items.push({
id:ZaMobileAccess.A2_registeredDevice,type:_LIST_}
,{
id:ZaMobileAccess.A2_registeredDevice_Selection,type:_LIST_}
)
}}
ZaMobileAccess.registerDeviceListener=function(o){
var t=this.getForm();
var s=t.getInstanceValue(ZaMobileAccess.A2_registeredDevice_Selection)[0];
if(!s){
return
}
var d,e;
var n=o===ZaRegisterDevice.RD_BT_REMOVE;
d=ZaRegisterDevice.processSyncRequest(o,s);
if(d&&d[0]){
d=d[0]
}else{
d=null
}
if(d||n){
var l=t.getInstanceValue(ZaMobileAccess.A2_registeredDevice);
if((d&&(s[ZaRegisterDevice.RD_Status]!==d[ZaRegisterDevice.RD_Status]))||s[ZaRegisterDevice.RD_Status]!==e){
var r=AjxUtil.indexOf(l,s);
AjxUtil.arrayRemove(l,s);
if(!n){
if(!d){
s[ZaRegisterDevice.RD_Status]=e;
AjxUtil.arrayAdd(l,s,r)
}else{
AjxUtil.arrayAdd(l,d,r)
}}
var c=ZaRegisterDevice.sortRegisteredDevices(l);
t.setInstanceValue([],ZaMobileAccess.A2_registeredDevice);
t.setInstanceValue(c,ZaMobileAccess.A2_registeredDevice);
t.setInstanceValue([],ZaMobileAccess.A2_registeredDevice_Selection)
}}};
ZaMobileAccess.registeredDeviceSelectionListener=function(){
this.getForm().setInstanceValue(this.getSelection(),ZaMobileAccess.A2_registeredDevice_Selection)
};
ZaMobileAccess.shouldEnableSyncButton=function(t){
var o=this.getForm().getInstanceValue(ZaMobileAccess.A2_registeredDevice_Selection);
if(!o||!o[0]){
return
}
var n=[];
switch(t){
case ZaRegisterDevice.RD_BT_REMOVE:n=[ZaRegisterDevice.ST_NEEDS_PROVISIONING,ZaRegisterDevice.ST_WIPE_PENDING,ZaRegisterDevice.ST_REMOVE_ACCOUNT_PENDING];
break;
case ZaRegisterDevice.RD_BT_SUSPEND:n=[ZaRegisterDevice.ST_SUSPENDED,ZaRegisterDevice.ST_WIPE_PENDING,ZaRegisterDevice.ST_WIPE_COMPLETED,ZaRegisterDevice.ST_BLOCKED,ZaRegisterDevice.ST_REMOVE_ACCOUNT_COMPLETED,ZaRegisterDevice.ST_REMOVE_ACCOUNT_PENDING];
break;
case ZaRegisterDevice.RD_BT_RESUME:n=[ZaRegisterDevice.ST_NEEDS_PROVISIONING,ZaRegisterDevice.ST_ACTIVE,ZaRegisterDevice.ST_WIPE_PENDING,ZaRegisterDevice.ST_WIPE_COMPLETED,ZaRegisterDevice.ST_REMOVE_ACCOUNT_COMPLETED,ZaRegisterDevice.ST_REMOVE_ACCOUNT_PENDING];
break;
case ZaRegisterDevice.RD_BT_WIPE:n=[ZaRegisterDevice.ST_WIPE_PENDING,ZaRegisterDevice.ST_WIPE_COMPLETED];
break;
case ZaRegisterDevice.RD_BT_WIPE_CANCEL:n=[ZaRegisterDevice.ST_NEEDS_PROVISIONING,ZaRegisterDevice.ST_ACTIVE,ZaRegisterDevice.ST_SUSPENDED,ZaRegisterDevice.ST_WIPE_COMPLETED,ZaRegisterDevice.ST_BLOCKED,ZaRegisterDevice.ST_REMOVE_ACCOUNT_COMPLETED,ZaRegisterDevice.ST_REMOVE_ACCOUNT_PENDING];
break;
case ZaRegisterDevice.RD_BT_BLOCK:n=[ZaRegisterDevice.ST_WIPE_PENDING,ZaRegisterDevice.ST_WIPE_COMPLETED,ZaRegisterDevice.ST_BLOCKED,ZaRegisterDevice.ST_REMOVE_ACCOUNT_COMPLETED,ZaRegisterDevice.ST_REMOVE_ACCOUNT_PENDING];
break;
case ZaRegisterDevice.RD_BT_REMOVE_ACCOUNT:n=[ZaRegisterDevice.ST_WIPE_PENDING,ZaRegisterDevice.ST_WIPE_COMPLETED,ZaRegisterDevice.ST_REMOVE_ACCOUNT_COMPLETED,ZaRegisterDevice.ST_REMOVE_ACCOUNT_PENDING];
break;
case ZaRegisterDevice.RD_BT_REMOVE_ACCOUNT_CANCEL:n=[ZaRegisterDevice.ST_NEEDS_PROVISIONING,ZaRegisterDevice.ST_ACTIVE,ZaRegisterDevice.ST_SUSPENDED,ZaRegisterDevice.ST_BLOCKED,ZaRegisterDevice.ST_REMOVE_ACCOUNT_COMPLETED,ZaRegisterDevice.ST_WIPE_PENDING,ZaRegisterDevice.ST_WIPE_COMPLETED];
break
}
var e=parseInt(o[0][ZaRegisterDevice.RD_Status]);
return n.indexOf(e)===-1
};
ZaMobileAccess.setSortOrder=function(e){
this._currentSortOrder=e
};
ZaMobileAccess.getSortOrder=function(){
return this._currentSortOrder
};
ZaMobileAccess.myConfXFormModifier=function(l,s){
ZaMobileAccess.REGISTERED_DEVICES_TAB_ATTRS=[];
ZaMobileAccess.REGISTERED_DEVICES_TAB_RIGHTS=[];
if(!ZaTabView.isTAB_ENABLED(s,ZaMobileAccess.REGISTERED_DEVICES_TAB_ATTRS,ZaMobileAccess.REGISTERED_DEVICES_TAB_RIGHTS)){
return
}
var n,e,o;
for(var t=0;
t<l.items.length;
t++){
if(l.items[t].type==_TAB_BAR_){
e=l.items[t]
}
if(l.items[t].type==_SWITCH_){
o=l.items[t]
}}
if(e&&o){
n=++this.TAB_INDEX;
e.choices.push({
value:n,label:com_zimbra_mobilesync.TABT_Mobile}
);
if(this.helpMap){
this.helpMap[n]=[location.pathname,ZaUtil.HELP_URL,"mobile/setting_up_zimbra_mobile_device_security_policies.htm","?locid=",AjxEnv.DEFAULT_LOCALE].join("")
}}
var r={
type:_SUPER_TABCASE_,caseKey:n,paddingStyle:"padding-left:15px;",width:"98%",cellpadding:2,colSizes:["100%"],numCols:1,id:"register_device_tab",loadDataMethods:[ZaRegisterDevice.prototype.loadRegisteredDevices],items:[{
type:_ZA_TOP_GROUPER_,id:"form_device_group",width:"100%",numCols:1,colSizes:["100%"],label:com_zimbra_mobilesync.MB_Registered_Devices,cssStyle:"margin:0;padding-bottom:0;",items:[ZaMobileAccessView.getRegistedDevicesFilter(),ZaMobileAccessView.getRegistedDevicesList(),ZaMobileAccessView.getRegistedDevicesButtons()]}
]};
o.items.push(r)
}
}
ZaRegisterDevice=function(n,o,t,e){
this.id=id;
this.name=name
};
ZaRegisterDevice.prototype=new ZaItem;
ZaRegisterDevice.prototype.constructor=ZaRegisterDevice;
ZaRegisterDevice.prototype.toString=function(){
return this.name
};
ZaRegisterDevice.RD_Email_Address="emailAddress";
ZaRegisterDevice.RD_Last_Login="lastUsedDate";
ZaRegisterDevice.RD_Device_OS="os";
ZaRegisterDevice.RD_Device_Name="friendly_name";
ZaRegisterDevice.RD_Device_ID="id";
ZaRegisterDevice.RD_Status="status";
ZaRegisterDevice.RD_EAS_PROTOCOL="protocol";
ZaRegisterDevice.RD_Mailbox_Id="mailboxId";
ZaRegisterDevice.MONTH=31;
ZaRegisterDevice.RD_BT_REMOVE="remove";
ZaRegisterDevice.RD_BT_SUSPEND="suspend";
ZaRegisterDevice.RD_BT_RESUME="resume";
ZaRegisterDevice.RD_BT_WIPE="wipe";
ZaRegisterDevice.RD_BT_WIPE_CANCEL="wipeCancel";
ZaRegisterDevice.RD_BT_REMOVE_ACCOUNT="removeAccount";
ZaRegisterDevice.RD_BT_REMOVE_ACCOUNT_CANCEL="removeAccountCancel";
ZaRegisterDevice.RD_BT_BLOCK="block";
ZaRegisterDevice.ST_NEEDS_PROVISIONING=0;
ZaRegisterDevice.ST_ACTIVE=1;
ZaRegisterDevice.ST_SUSPENDED=2;
ZaRegisterDevice.ST_WIPE_PENDING=3;
ZaRegisterDevice.ST_WIPE_COMPLETED=4;
ZaRegisterDevice.ST_BLOCKED=5;
ZaRegisterDevice.ST_REMOVE_ACCOUNT_PENDING=6;
ZaRegisterDevice.ST_REMOVE_ACCOUNT_COMPLETED=7;
ZaRegisterDevice.SYNC_REQUEST="Request";
ZaRegisterDevice.SYNC_RESPONSE="Response";
ZaRegisterDevice.getDateDifference=function(e){
var o=new Date(e);
const t=Math.abs(new Date()-o);
const n=Math.ceil(t/(1000*60*60*24));
if(n>ZaRegisterDevice.MONTH){
return AjxMessageFormat.format(e)
}
return AjxMessageFormat.format(ZaMsg.TTL_Retention_Policy_d,n)
};
ZaRegisterDevice.getFilteredDevices=function(e,t){
return ZaRegisterDevice.getRegisteredDevices(e,t)
};
ZaRegisterDevice.getRegisteredDevices=function(p,v){
var g=AjxSoapDoc.create("GetDeviceStatusRequest",ZaZimbraAdmin.URN,null);
if(v){
var d=g.set("account",v);
d.setAttribute("by","name");
const b=new Date(v);
var e=parseInt(v);
if(b!=="Invalid Date"&&!isNaN(b)){
g.set("deviceLastUsed",b.toISOString().split("T")[0])
}else{
var n=g.set("device",v);
n.setAttribute("by","id");
if(e!==0&&!e){
const t=[com_zimbra_mobilesync.MB_Waiting.toLowerCase(),com_zimbra_mobilesync.MB_Active.toLowerCase(),com_zimbra_mobilesync.MB_Suspended.toLowerCase(),com_zimbra_mobilesync.MB_Wipe_ACK.toLowerCase(),com_zimbra_mobilesync.MB_Wipe_Comp.toLowerCase(),com_zimbra_mobilesync.MB_Blocked.toLowerCase(),com_zimbra_mobilesync.MB_Remove_Account_ACK.toLowerCase(),com_zimbra_mobilesync.MB_Remove_Account_Comp.toLowerCase()];
const c=t.indexOf(v.toLowerCase());
if(c===-1){
const f=["waiting for device","active","suspended","wipe pending","wipe completed","blocked","remove account pending","account removed"];
e=f.indexOf(v.toLowerCase())
}else{
e=c
}}}
if(e>=0&&e<=5){
g.set("status",e)
}
g.set("deviceName",v);
g.set("deviceType",v);
g.set("deviceSyncVersion",v);
g.set("filterDevicesByAnd",false)
}
const m=p.type;
const o=p.id;
switch(m){
case"cos":var y=g.set("cos",o);
y.setAttribute("by","id");
break;
case"domain":var l=g.set("domain",o);
l.setAttribute("by","id");
break;
case"account":var d=g.set("account",o);
d.setAttribute("by","id");
g.set("filterDevicesByAnd",true);
break
}
var r=new Object();
r.soapDoc=g;
try{
var s={
controller:ZaApp.getInstance().getCurrentController(),busyMsg:com_zimbra_mobilesync.BUSY_GETTING_SYNC_DEVICES};
return ZaRequestMgr.invoke(r,s).Body.GetDeviceStatusResponse.device
}
catch(u){
throw u
}};
ZaRegisterDevice.processSyncRequest=function(n,r){
var s,u;
switch(n){
case ZaRegisterDevice.RD_BT_REMOVE:s="RemoveDevice";
u=com_zimbra_mobilesync.BUSY_REMOVING_SYNC_DEVICES;
break;
case ZaRegisterDevice.RD_BT_SUSPEND:s="QuarantineDevice";
u=com_zimbra_mobilesync.BUSY_QUARANTINE_SYNC_DEVICES;
break;
case ZaRegisterDevice.RD_BT_RESUME:s="AllowDevice";
u=com_zimbra_mobilesync.BUSY_RESUMING_SYNC_DEVICES;
break;
case ZaRegisterDevice.RD_BT_WIPE:s="RemoteWipe";
u=com_zimbra_mobilesync.BUSY_WIPING_SYNC_DEVICES;
break;
case ZaRegisterDevice.RD_BT_WIPE_CANCEL:s="CancelPendingRemoteWipe";
u=com_zimbra_mobilesync.BUSY_CANCELLING_WIPE;
break;
case ZaRegisterDevice.RD_BT_BLOCK:s="BlockDevice";
u=com_zimbra_mobilesync.BUSY_BLOCKING_SYNC_DEVICES;
break;
case ZaRegisterDevice.RD_BT_REMOVE_ACCOUNT:s="AccountOnlyRemoteWipe";
u=com_zimbra_mobilesync.BUSY_REMOVING_SYNC_ACCOUNT;
break;
case ZaRegisterDevice.RD_BT_REMOVE_ACCOUNT_CANCEL:s="CancelPendingAccountOnlyRemoteWipe";
u=com_zimbra_mobilesync.BUSY_CANCELLING_ACCOUNT_WIPE;
break
}
var d=AjxSoapDoc.create(s.concat(ZaRegisterDevice.SYNC_REQUEST),ZaZimbraAdmin.URN,null);
var e=d.set("device",null,null);
e.setAttribute("id",r.id);
var l=d.set("account",r[ZaRegisterDevice.RD_Email_Address]);
l.setAttribute("by","name");
var o=new Object();
o.soapDoc=d;
try{
var t={
controller:ZaApp.getInstance().getCurrentController(),busyMsg:u};
if(n===ZaRegisterDevice.RD_BT_REMOVE){
return ZaRequestMgr.invoke(o,t).Body[s.concat(ZaRegisterDevice.SYNC_RESPONSE)]
}
return ZaRequestMgr.invoke(o,t).Body[s.concat(ZaRegisterDevice.SYNC_RESPONSE)].device
}
catch(c){
throw c
}};
ZaRegisterDevice.sortRegisteredDevices=function(t){
var e=ZaMobileAccess.getSortOrder();
t.sort(ZaItem.compareEmailAddress(e));
return t
};
ZaRegisterDevice.prototype.loadRegisteredDevices=function(){
const o=this.getInstance();
var e=ZaRegisterDevice.getRegisteredDevices({
type:o.type,id:o.id}
);
if(e){
var t=ZaRegisterDevice.sortRegisteredDevices(e);
this.getForm().setInstanceValue(t,ZaMobileAccess.A2_registeredDevice)
}};
if(ZaSettings&&ZaSettings.EnabledZimlet.com_zimbra_mobilesync){
ZaGlobalMobileSyncView=function(e){
DwtTabViewPage.call(this,e)
};
ZaGlobalMobileSyncView.prototype=new DwtTabViewPage;
ZaGlobalMobileSyncView.prototype.constructor=ZaGlobalMobileSyncView;
ZaGlobalMobileSyncView.prototype.toString=function(){
return"ZaGlobalMobileSyncView"
};
ZaGlobalMobileSyncView.myGlobalConfSetObject=function(e,t){
e[ZaMobileAccess.A2_registeredDevice]=[];
return e
};
ZaTabView.XFormSetObjectMethods.GlobalConfigXFormView.push(ZaGlobalMobileSyncView.myGlobalConfSetObject);
ZaTabView.XFormModifiers.GlobalConfigXFormView.push(ZaMobileAccess.myConfXFormModifier)
}
if(ZaSettings&&ZaSettings.EnabledZimlet.com_zimbra_mobilesync){
ZaCOSMobileSyncView=function(e){
DwtTabViewPage.call(this,e)
};
ZaCOSMobileSyncView.prototype=new DwtTabViewPage;
ZaCOSMobileSyncView.prototype.constructor=ZaCOSMobileSyncView;
ZaCOSMobileSyncView.prototype.toString=function(){
return"ZaCOSMobileSyncView"
};
ZaCOSMobileSyncView.modifyObjectForCosXFormView=function(){
var e=this._containedObject;
if(e.attrs[ZaMobileAccess.A_zimbraMobilePolicyRequireSignedSMIMEMessages]=="-1"&&e.attrs[ZaMobileAccess.A_zimbraMobilePolicyRequireSignedSMIMEAlgorithm]=="-1"&&e.attrs[ZaMobileAccess.A_zimbraMobilePolicyRequireEncryptedSMIMEMessages]=="-1"&&e.attrs[ZaMobileAccess.A_zimbraMobilePolicyRequireEncryptionSMIMEAlgorithm]=="-1"&&e.attrs[ZaMobileAccess.A_zimbraMobilePolicyAllowSMIMESoftCerts]=="-1"){
e[ZaMobileAccess.A2_zimbraMobilePolicyEnableSMIMEEncryptionAndSigning]=false
}else{
e[ZaMobileAccess.A2_zimbraMobilePolicyEnableSMIMEEncryptionAndSigning]=true
}
ZaMobileAccessView.syncApprovedAppList(e);
e[ZaMobileAccess.A2_ApprovedAppSelection]=null;
e[ZaMobileAccess.A2_BlockedAppSelection]=null
};
ZaTabView.ObjectModifiers.ZaCosXFormView.push(ZaCOSMobileSyncView.modifyObjectForCosXFormView);
ZaCOSMobileSyncView.myCosXFormModifier=function(r,s){
if(ZaTabView.isTAB_ENABLED(s,ZaMobileAccessView.MOBILE_ACCESS_TAB_ATTRS,ZaMobileAccessView.MOBILE_ACCESS_TAB_RIGHTS)){
var o=++this.TAB_INDEX;
this.helpMap[o]=[location.pathname,ZaUtil.HELP_URL,"mobile/setting_up_zimbra_mobile_device_security_policies.htm","?locid=",AjxEnv.DEFAULT_LOCALE].join("");
var t={
type:_SUPER_TABCASE_,numCols:1,colsSizes:["auto"],caseKey:o,cssStyle:"padding-left:15px;",width:"98%",cellpadding:"2",id:"cos_form_mobile_access_tab",loadDataMethods:[[ZaRegisterDevice.prototype.loadRegisteredDevices,s]],items:[ZaMobileAccessView.getGeneralSettings(),{
type:_ZA_TOP_GROUPER_,label:com_zimbra_mobilesync.passwordSetting,visibilityChecks:[[ZATopGrouper_XFormItem.isGroupVisible,ZaMobileAccessView.MOBILE_ACCESS_PASSWORD_ATTRS]],items:[{
type:_CHECKBOX_,label:com_zimbra_mobilesync.requirePassword,ref:ZaMobileAccess.A_zimbraMobilePolicyDevicePasswordEnabled,trueValue:"TRUE",falseValue:"FALSE",enableDisableChangeEventSources:[ZaMobileAccess.A_zimbraFeatureMobileSyncEnabled,ZaMobileAccess.A_zimbraFeatureMobilePolicyEnabled],enableDisableChecks:[ZaMobileAccessView.isMobilePolicyEnabled]}
,{
type:_TEXTFIELD_,label:com_zimbra_mobilesync.minPasswordLen,ref:ZaMobileAccess.A_zimbraMobilePolicyMinDevicePasswordLength,width:"40px",enableDisableChangeEventSources:[ZaMobileAccess.A_zimbraFeatureMobileSyncEnabled,ZaMobileAccess.A_zimbraFeatureMobilePolicyEnabled,ZaMobileAccess.A_zimbraMobilePolicyDevicePasswordEnabled],enableDisableChecks:[[XForm.checkInstanceValue,ZaMobileAccess.A_zimbraMobilePolicyDevicePasswordEnabled,"TRUE"],[ZaMobileAccessView.isMobilePolicyEnabled]]}
,{
type:_CHECKBOX_,label:com_zimbra_mobilesync.requireAlphaNumericPassword,ref:ZaMobileAccess.A_zimbraMobilePolicyAlphanumericDevicePasswordRequired,trueValue:"TRUE",falseValue:"FALSE",enableDisableChangeEventSources:[ZaMobileAccess.A_zimbraFeatureMobileSyncEnabled,ZaMobileAccess.A_zimbraFeatureMobilePolicyEnabled,ZaMobileAccess.A_zimbraMobilePolicyDevicePasswordEnabled],enableDisableChecks:[[XForm.checkInstanceValue,ZaMobileAccess.A_zimbraMobilePolicyDevicePasswordEnabled,"TRUE"],[ZaMobileAccessView.isMobilePolicyEnabled]]}
,{
type:_TEXTFIELD_,label:com_zimbra_mobilesync.minComplexChar,ref:ZaMobileAccess.A_zimbraMobilePolicyMinDevicePasswordComplexCharacters,width:"40px",enableDisableChangeEventSources:[ZaMobileAccess.A_zimbraFeatureMobileSyncEnabled,ZaMobileAccess.A_zimbraFeatureMobilePolicyEnabled,ZaMobileAccess.A_zimbraMobilePolicyDevicePasswordEnabled],enableDisableChecks:[[XForm.checkInstanceValue,ZaMobileAccess.A_zimbraMobilePolicyDevicePasswordEnabled,"TRUE"],[ZaMobileAccessView.isMobilePolicyEnabled]]}
,{
type:_CHECKBOX_,label:com_zimbra_mobilesync.allowSimplePassword,ref:ZaMobileAccess.A_zimbraMobilePolicyAllowSimpleDevicePassword,trueValue:"TRUE",falseValue:"FALSE",enableDisableChangeEventSources:[ZaMobileAccess.A_zimbraFeatureMobileSyncEnabled,ZaMobileAccess.A_zimbraFeatureMobilePolicyEnabled,ZaMobileAccess.A_zimbraMobilePolicyDevicePasswordEnabled],enableDisableChecks:[[XForm.checkInstanceValue,ZaMobileAccess.A_zimbraMobilePolicyDevicePasswordEnabled,"TRUE"],[ZaMobileAccessView.isMobilePolicyEnabled]]}
,{
type:_CHECKBOX_,label:com_zimbra_mobilesync.enablePasswordRecovery,ref:ZaMobileAccess.A_zimbraMobilePolicyPasswordRecoveryEnabled,trueValue:"TRUE",falseValue:"FALSE",enableDisableChangeEventSources:[ZaMobileAccess.A_zimbraFeatureMobileSyncEnabled,ZaMobileAccess.A_zimbraFeatureMobilePolicyEnabled,ZaMobileAccess.A_zimbraMobilePolicyDevicePasswordEnabled],enableDisableChecks:[[XForm.checkInstanceValue,ZaMobileAccess.A_zimbraMobilePolicyDevicePasswordEnabled,"TRUE"],[ZaMobileAccessView.isMobilePolicyEnabled]]}
,{
type:_CHECKBOX_,label:com_zimbra_mobilesync.requireStorageEncryption,ref:ZaMobileAccess.A_zimbraMobilePolicyRequireStorageCardEncryption,trueValue:"TRUE",falseValue:"FALSE",enableDisableChangeEventSources:[ZaMobileAccess.A_zimbraFeatureMobileSyncEnabled,ZaMobileAccess.A_zimbraFeatureMobilePolicyEnabled,ZaMobileAccess.A_zimbraMobilePolicyDevicePasswordEnabled],enableDisableChecks:[[XForm.checkInstanceValue,ZaMobileAccess.A_zimbraMobilePolicyDevicePasswordEnabled,"TRUE"],[ZaMobileAccessView.isMobilePolicyEnabled]]}
,{
type:_CHECKBOX_,label:com_zimbra_mobilesync.requireDeviceEncryption,ref:ZaMobileAccess.A_zimbraMobilePolicyRequireDeviceEncryption,trueValue:"1",falseValue:"0",enableDisableChangeEventSources:[ZaMobileAccess.A_zimbraFeatureMobileSyncEnabled,ZaMobileAccess.A_zimbraFeatureMobilePolicyEnabled,ZaMobileAccess.A_zimbraMobilePolicyDevicePasswordEnabled],enableDisableChecks:[[XForm.checkInstanceValue,ZaMobileAccess.A_zimbraMobilePolicyDevicePasswordEnabled,"TRUE"],[ZaMobileAccessView.isMobilePolicyEnabled]]}
,{
type:_TEXTFIELD_,label:com_zimbra_mobilesync.passwordMaxInactivityTime,ref:ZaMobileAccess.A_zimbraMobilePolicyMaxInactivityTimeDeviceLock,width:"40px",enableDisableChangeEventSources:[ZaMobileAccess.A_zimbraFeatureMobileSyncEnabled,ZaMobileAccess.A_zimbraFeatureMobilePolicyEnabled,ZaMobileAccess.A_zimbraMobilePolicyDevicePasswordEnabled],enableDisableChecks:[[XForm.checkInstanceValue,ZaMobileAccess.A_zimbraMobilePolicyDevicePasswordEnabled,"TRUE"],[ZaMobileAccessView.isMobilePolicyEnabled]]}
,{
type:_TEXTFIELD_,label:com_zimbra_mobilesync.maxDevicePasswordFailedAttempts,ref:ZaMobileAccess.A_zimbraMobilePolicyMaxDevicePasswordFailedAttempts,width:"40px",enableDisableChangeEventSources:[ZaMobileAccess.A_zimbraFeatureMobileSyncEnabled,ZaMobileAccess.A_zimbraFeatureMobilePolicyEnabled,ZaMobileAccess.A_zimbraMobilePolicyDevicePasswordEnabled],enableDisableChecks:[[XForm.checkInstanceValue,ZaMobileAccess.A_zimbraMobilePolicyDevicePasswordEnabled,"TRUE"],[ZaMobileAccessView.isMobilePolicyEnabled]]}
,{
type:_TEXTFIELD_,label:com_zimbra_mobilesync.devicePasswordExpiration,ref:ZaMobileAccess.A_zimbraMobilePolicyDevicePasswordExpiration,width:"40px",enableDisableChangeEventSources:[ZaMobileAccess.A_zimbraFeatureMobileSyncEnabled,ZaMobileAccess.A_zimbraFeatureMobilePolicyEnabled,ZaMobileAccess.A_zimbraMobilePolicyDevicePasswordEnabled],enableDisableChecks:[[XForm.checkInstanceValue,ZaMobileAccess.A_zimbraMobilePolicyDevicePasswordEnabled,"TRUE"],[ZaMobileAccessView.isMobilePolicyEnabled]]}
,{
type:_TEXTFIELD_,label:com_zimbra_mobilesync.passwordReuseHistory,ref:ZaMobileAccess.A_zimbraMobilePolicyDevicePasswordHistory,width:"40px",enableDisableChangeEventSources:[ZaMobileAccess.A_zimbraFeatureMobileSyncEnabled,ZaMobileAccess.A_zimbraFeatureMobilePolicyEnabled,ZaMobileAccess.A_zimbraMobilePolicyDevicePasswordEnabled],enableDisableChecks:[[XForm.checkInstanceValue,ZaMobileAccess.A_zimbraMobilePolicyDevicePasswordEnabled,"TRUE"],[ZaMobileAccessView.isMobilePolicyEnabled]]}
]}
,{
type:_ZA_TOP_GROUPER_,label:com_zimbra_mobilesync.smimeSetting,visibilityChecks:[[ZATopGrouper_XFormItem.isGroupVisible,ZaMobileAccessView.MOBILE_ACCESS_SMIME_ATTRS]],items:[{
type:_CHECKBOX_,label:com_zimbra_mobilesync.enableSMIMEPublicKeyEncrptAndSign,ref:ZaMobileAccess.A2_zimbraMobilePolicyEnableSMIMEEncryptionAndSigning,trueValue:true,falseValue:false,onChange:ZaMobileAccessView.onEnableSMIMEEncryptionAndSigningChanged,enableDisableChangeEventSources:[ZaMobileAccess.A_zimbraFeatureMobileSyncEnabled,ZaMobileAccess.A_zimbraFeatureMobilePolicyEnabled],enableDisableChecks:[ZaMobileAccessView.isMobilePolicyEnabled]}
,{
type:_CHECKBOX_,label:com_zimbra_mobilesync.requireSendSignedMsg,ref:ZaMobileAccess.A_zimbraMobilePolicyRequireSignedSMIMEMessages,trueValue:"1",falseValue:"0",valueChangeEventSources:[ZaMobileAccess.A2_zimbraMobilePolicyEnableSMIMEEncryptionAndSigning],enableDisableChecks:[[XForm.checkInstanceValue,ZaMobileAccess.A2_zimbraMobilePolicyEnableSMIMEEncryptionAndSigning,true],[ZaMobileAccessView.isMobilePolicyEnabled]],enableDisableChangeEventSources:[ZaMobileAccess.A2_zimbraMobilePolicyEnableSMIMEEncryptionAndSigning,ZaMobileAccess.A_zimbraFeatureMobileSyncEnabled,ZaMobileAccess.A_zimbraFeatureMobilePolicyEnabled]}
,{
type:_CHECKBOX_,label:com_zimbra_mobilesync.requireSMIMEAlgorithm,ref:ZaMobileAccess.A_zimbraMobilePolicyRequireSignedSMIMEAlgorithm,trueValue:"1",falseValue:"0",valueChangeEventSources:[ZaMobileAccess.A2_zimbraMobilePolicyEnableSMIMEEncryptionAndSigning],enableDisableChecks:[[XForm.checkInstanceValue,ZaMobileAccess.A2_zimbraMobilePolicyEnableSMIMEEncryptionAndSigning,true],[ZaMobileAccessView.isMobilePolicyEnabled]],enableDisableChangeEventSources:[ZaMobileAccess.A2_zimbraMobilePolicyEnableSMIMEEncryptionAndSigning,ZaMobileAccess.A_zimbraFeatureMobileSyncEnabled,ZaMobileAccess.A_zimbraFeatureMobilePolicyEnabled]}
,{
type:_CHECKBOX_,label:com_zimbra_mobilesync.requireDeviceSendEncryptedMsg,ref:ZaMobileAccess.A_zimbraMobilePolicyRequireEncryptedSMIMEMessages,trueValue:"1",falseValue:"0",valueChangeEventSources:[ZaMobileAccess.A2_zimbraMobilePolicyEnableSMIMEEncryptionAndSigning],enableDisableChecks:[[XForm.checkInstanceValue,ZaMobileAccess.A2_zimbraMobilePolicyEnableSMIMEEncryptionAndSigning,true],[ZaMobileAccessView.isMobilePolicyEnabled]],enableDisableChangeEventSources:[ZaMobileAccess.A2_zimbraMobilePolicyEnableSMIMEEncryptionAndSigning,ZaMobileAccess.A_zimbraFeatureMobileSyncEnabled,ZaMobileAccess.A_zimbraFeatureMobilePolicyEnabled]}
,{
type:_CHECKBOX_,label:com_zimbra_mobilesync.requireSMIMEAlgorithmForEncrypt,ref:ZaMobileAccess.A_zimbraMobilePolicyRequireEncryptionSMIMEAlgorithm,trueValue:"1",falseValue:"0",valueChangeEventSources:[ZaMobileAccess.A2_zimbraMobilePolicyEnableSMIMEEncryptionAndSigning],enableDisableChecks:[[XForm.checkInstanceValue,ZaMobileAccess.A2_zimbraMobilePolicyEnableSMIMEEncryptionAndSigning,true],[ZaMobileAccessView.isMobilePolicyEnabled]],enableDisableChangeEventSources:[ZaMobileAccess.A2_zimbraMobilePolicyEnableSMIMEEncryptionAndSigning,ZaMobileAccess.A_zimbraFeatureMobileSyncEnabled,ZaMobileAccess.A_zimbraFeatureMobilePolicyEnabled]}
,{
type:_SELECT1_,label:com_zimbra_mobilesync.algorithmNegotiation,ref:ZaMobileAccess.A_zimbraMobilePolicyAllowSMIMEEncryptionAlgorithmNegotiation,enableDisableChecks:[[XForm.checkInstanceValue,ZaMobileAccess.A2_zimbraMobilePolicyEnableSMIMEEncryptionAndSigning,true],[ZaMobileAccessView.isMobilePolicyEnabled]],enableDisableChangeEventSources:[ZaMobileAccess.A2_zimbraMobilePolicyEnableSMIMEEncryptionAndSigning,ZaMobileAccess.A_zimbraFeatureMobileSyncEnabled,ZaMobileAccess.A_zimbraFeatureMobilePolicyEnabled]}
,{
type:_CHECKBOX_,label:com_zimbra_mobilesync.allowSMIMESoftwareCert,ref:ZaMobileAccess.A_zimbraMobilePolicyAllowSMIMESoftCerts,trueValue:"1",falseValue:"0",valueChangeEventSources:[ZaMobileAccess.A2_zimbraMobilePolicyEnableSMIMEEncryptionAndSigning],enableDisableChecks:[[XForm.checkInstanceValue,ZaMobileAccess.A2_zimbraMobilePolicyEnableSMIMEEncryptionAndSigning,true],[ZaMobileAccessView.isMobilePolicyEnabled]],enableDisableChangeEventSources:[ZaMobileAccess.A2_zimbraMobilePolicyEnableSMIMEEncryptionAndSigning,ZaMobileAccess.A_zimbraFeatureMobileSyncEnabled,ZaMobileAccess.A_zimbraFeatureMobilePolicyEnabled]}
]}
,{
type:_ZA_TOP_GROUPER_,label:com_zimbra_mobilesync.syncSettings,visibilityChecks:[[ZATopGrouper_XFormItem.isGroupVisible,ZaMobileAccessView.MOBILE_ACCESS_SYNC_ATTRS]],items:[{
type:_SELECT1_,label:com_zimbra_mobilesync.maxCalendarAgeFilter,ref:ZaMobileAccess.A_zimbraMobilePolicyMaxCalendarAgeFilter,enableDisableChangeEventSources:[ZaMobileAccess.A_zimbraFeatureMobileSyncEnabled,ZaMobileAccess.A_zimbraFeatureMobilePolicyEnabled],enableDisableChecks:[ZaMobileAccessView.isMobilePolicyEnabled]}
,{
type:_SELECT1_,label:com_zimbra_mobilesync.maxEmailAgeFilter,ref:ZaMobileAccess.A_zimbraMobilePolicyMaxEmailAgeFilter,enableDisableChangeEventSources:[ZaMobileAccess.A_zimbraFeatureMobileSyncEnabled,ZaMobileAccess.A_zimbraFeatureMobilePolicyEnabled],enableDisableChecks:[ZaMobileAccessView.isMobilePolicyEnabled]}
,{
type:_TEXTFIELD_,label:com_zimbra_mobilesync.maxEmailBodySize,ref:ZaMobileAccess.A_zimbraMobilePolicyMaxEmailBodyTruncationSize,width:"40px",enableDisableChangeEventSources:[ZaMobileAccess.A_zimbraFeatureMobileSyncEnabled,ZaMobileAccess.A_zimbraFeatureMobilePolicyEnabled],enableDisableChecks:[ZaMobileAccessView.isMobilePolicyEnabled],getDisplayValue:function(c){
return(c=="-1")?"":c
}}
,{
type:_CHECKBOX_,label:com_zimbra_mobilesync.allowManualSyncWhenRoaming,ref:ZaMobileAccess.A_zimbraMobilePolicyRequireManualSyncWhenRoaming,trueValue:"1",falseValue:"0",enableDisableChangeEventSources:[ZaMobileAccess.A_zimbraFeatureMobileSyncEnabled,ZaMobileAccess.A_zimbraFeatureMobilePolicyEnabled],enableDisableChecks:[ZaMobileAccessView.isMobilePolicyEnabled]}
,{
type:_CHECKBOX_,label:com_zimbra_mobilesync.allowHTMLEmail,ref:ZaMobileAccess.A_zimbraMobilePolicyAllowHTMLEmail,trueValue:"1",falseValue:"0",enableDisableChangeEventSources:[ZaMobileAccess.A_zimbraFeatureMobileSyncEnabled,ZaMobileAccess.A_zimbraFeatureMobilePolicyEnabled],enableDisableChecks:[ZaMobileAccessView.isMobilePolicyEnabled]}
,{
type:_TEXTFIELD_,label:com_zimbra_mobilesync.maxHTMLEmailBodySize,ref:ZaMobileAccess.A_zimbraMobilePolicyMaxEmailHTMLBodyTruncationSize,width:"40px",enableDisableChangeEventSources:[ZaMobileAccess.A_zimbraFeatureMobileSyncEnabled,ZaMobileAccess.A_zimbraFeatureMobilePolicyEnabled],enableDisableChecks:[ZaMobileAccessView.isMobilePolicyEnabled],getDisplayValue:function(c){
return(c=="-1")?"":c
}}
]}
,{
type:_ZA_TOP_GROUPER_,label:com_zimbra_mobilesync.deviceSetting,visibilityChecks:[[ZATopGrouper_XFormItem.isGroupVisible,ZaMobileAccessView.MOBILE_ACCESS_DEVICE_ATTRS]],items:[{
type:_CHECKBOX_,label:com_zimbra_mobilesync.allowStorageCard,ref:ZaMobileAccess.A_zimbraMobilePolicyAllowStorageCard,trueValue:"1",falseValue:"0",enableDisableChangeEventSources:[ZaMobileAccess.A_zimbraFeatureMobileSyncEnabled,ZaMobileAccess.A_zimbraFeatureMobilePolicyEnabled],enableDisableChecks:[ZaMobileAccessView.isMobilePolicyEnabled]}
,{
type:_CHECKBOX_,label:com_zimbra_mobilesync.allowCamera,ref:ZaMobileAccess.A_zimbraMobilePolicyAllowCamera,trueValue:"1",falseValue:"0",enableDisableChangeEventSources:[ZaMobileAccess.A_zimbraFeatureMobileSyncEnabled,ZaMobileAccess.A_zimbraFeatureMobilePolicyEnabled],enableDisableChecks:[ZaMobileAccessView.isMobilePolicyEnabled]}
,{
type:_CHECKBOX_,label:com_zimbra_mobilesync.allowWifi,ref:ZaMobileAccess.A_zimbraMobilePolicyAllowWiFi,trueValue:"1",falseValue:"0",enableDisableChangeEventSources:[ZaMobileAccess.A_zimbraFeatureMobileSyncEnabled,ZaMobileAccess.A_zimbraFeatureMobilePolicyEnabled],enableDisableChecks:[ZaMobileAccessView.isMobilePolicyEnabled]}
,{
type:_CHECKBOX_,label:com_zimbra_mobilesync.allowInfrared,ref:ZaMobileAccess.A_zimbraMobilePolicyAllowIrDA,trueValue:"1",falseValue:"0",enableDisableChangeEventSources:[ZaMobileAccess.A_zimbraFeatureMobileSyncEnabled,ZaMobileAccess.A_zimbraFeatureMobilePolicyEnabled],enableDisableChecks:[ZaMobileAccessView.isMobilePolicyEnabled]}
,{
type:_CHECKBOX_,label:com_zimbra_mobilesync.allowShare,ref:ZaMobileAccess.A_zimbraMobilePolicyAllowInternetSharing,trueValue:"1",falseValue:"0",enableDisableChangeEventSources:[ZaMobileAccess.A_zimbraFeatureMobileSyncEnabled,ZaMobileAccess.A_zimbraFeatureMobilePolicyEnabled],enableDisableChecks:[ZaMobileAccessView.isMobilePolicyEnabled]}
,{
type:_CHECKBOX_,label:com_zimbra_mobilesync.allowRemoteDesktop,ref:ZaMobileAccess.A_zimbraMobilePolicyAllowRemoteDesktop,trueValue:"1",falseValue:"0",enableDisableChangeEventSources:[ZaMobileAccess.A_zimbraFeatureMobileSyncEnabled,ZaMobileAccess.A_zimbraFeatureMobilePolicyEnabled],enableDisableChecks:[ZaMobileAccessView.isMobilePolicyEnabled]}
,{
type:_CHECKBOX_,label:com_zimbra_mobilesync.allowDesktopSync,ref:ZaMobileAccess.A_zimbraMobilePolicyAllowDesktopSync,trueValue:"1",falseValue:"0",enableDisableChangeEventSources:[ZaMobileAccess.A_zimbraFeatureMobileSyncEnabled,ZaMobileAccess.A_zimbraFeatureMobilePolicyEnabled],enableDisableChecks:[ZaMobileAccessView.isMobilePolicyEnabled]}
,{
type:_SELECT1_,label:com_zimbra_mobilesync.allowBluetooth,ref:ZaMobileAccess.A_zimbraMobilePolicyAllowBluetooth,enableDisableChangeEventSources:[ZaMobileAccess.A_zimbraFeatureMobileSyncEnabled,ZaMobileAccess.A_zimbraFeatureMobilePolicyEnabled],enableDisableChecks:[ZaMobileAccessView.isMobilePolicyEnabled]}
]}
,{
type:_ZA_TOP_GROUPER_,label:com_zimbra_mobilesync.deviceApps,visibilityChecks:[[ZATopGrouper_XFormItem.isGroupVisible,ZaMobileAccessView.MOBILE_ACCESS_DEVICE_APP_ATTRS]],items:[{
type:_CHECKBOX_,label:com_zimbra_mobilesync.allowBrowser,ref:ZaMobileAccess.A_zimbraMobilePolicyAllowBrowser,trueValue:"1",falseValue:"0",enableDisableChangeEventSources:[ZaMobileAccess.A_zimbraFeatureMobileSyncEnabled,ZaMobileAccess.A_zimbraFeatureMobilePolicyEnabled],enableDisableChecks:[ZaMobileAccessView.isMobilePolicyEnabled]}
,{
type:_CHECKBOX_,label:com_zimbra_mobilesync.allowConsumerMail,ref:ZaMobileAccess.A_zimbraMobilePolicyAllowConsumerEmail,trueValue:"1",falseValue:"0",enableDisableChangeEventSources:[ZaMobileAccess.A_zimbraFeatureMobileSyncEnabled,ZaMobileAccess.A_zimbraFeatureMobilePolicyEnabled],enableDisableChecks:[ZaMobileAccessView.isMobilePolicyEnabled]}
,{
type:_CHECKBOX_,label:com_zimbra_mobilesync.allowPOPIMAPMail,ref:ZaMobileAccess.A_zimbraMobilePolicyAllowPOPIMAPEmail,trueValue:"1",falseValue:"0",enableDisableChangeEventSources:[ZaMobileAccess.A_zimbraFeatureMobileSyncEnabled,ZaMobileAccess.A_zimbraFeatureMobilePolicyEnabled],enableDisableChecks:[ZaMobileAccessView.isMobilePolicyEnabled]}
,{
type:_CHECKBOX_,label:com_zimbra_mobilesync.allowTextMsg,ref:ZaMobileAccess.A_zimbraMobilePolicyAllowTextMessaging,trueValue:"1",falseValue:"0",enableDisableChangeEventSources:[ZaMobileAccess.A_zimbraFeatureMobileSyncEnabled,ZaMobileAccess.A_zimbraFeatureMobilePolicyEnabled],enableDisableChecks:[ZaMobileAccessView.isMobilePolicyEnabled]}
,{
type:_CHECKBOX_,label:com_zimbra_mobilesync.allowUnsignedApp,ref:ZaMobileAccess.A_zimbraMobilePolicyAllowUnsignedApplications,trueValue:"1",falseValue:"0",enableDisableChangeEventSources:[ZaMobileAccess.A_zimbraFeatureMobileSyncEnabled,ZaMobileAccess.A_zimbraFeatureMobilePolicyEnabled],enableDisableChecks:[ZaMobileAccessView.isMobilePolicyEnabled]}
,{
type:_CHECKBOX_,label:com_zimbra_mobilesync.allowUnsignedPkg,ref:ZaMobileAccess.A_zimbraMobilePolicyAllowUnsignedInstallationPackages,trueValue:"1",falseValue:"0",enableDisableChangeEventSources:[ZaMobileAccess.A_zimbraFeatureMobileSyncEnabled,ZaMobileAccess.A_zimbraFeatureMobilePolicyEnabled],enableDisableChecks:[ZaMobileAccessView.isMobilePolicyEnabled]}
]}
,ZaMobileAccessView.getApprovedApps(),ZaMobileAccessView.getBlockedApps(),{
type:_ZA_TOP_GROUPER_,id:"form_device_group",width:"100%",numCols:1,colSizes:["100%"],label:com_zimbra_mobilesync.MB_Registered_Devices,cssStyle:"margin:0;padding-bottom:0;",items:[ZaMobileAccessView.getRegistedDevicesFilter(),ZaMobileAccessView.getRegistedDevicesList(),ZaMobileAccessView.getRegistedDevicesButtons()]}
]};
var n=r.items[1].choices;
var l=r.items[2].items;
var e=l.length-1;
for(;
e>=0;
e--){
if(l[e].id=="cos_form_advanced_tab"){
break
}}
if(e==0){
e=l.length-1
}
AjxUtil.arrayAdd(n,{
value:o,label:com_zimbra_mobilesync.TABT_Mobile}
,e);
AjxUtil.arrayAdd(l,t,e)
}};
ZaTabView.XFormModifiers.ZaCosXFormView.push(ZaCOSMobileSyncView.myCosXFormModifier);
ZaCOSMobileSyncView.NewCosWizXFormModifier=function(n,o){
if(!ZaTabView.isTAB_ENABLED(o,ZaMobileAccess.MOBILE_SYNC_TAB_ATTRS,ZaMobileAccess.MOBILE_SYNC_TAB_RIGHTS)){
return
}
ZaNewCosXWizard.MOBILE_ACCESS_STEP=++this.TAB_INDEX;
this._lastStep++;
var t={
type:_CASE_,id:"cos_form_zimbra_mobile",numCols:1,colSizes:["auto"],caseKey:ZaNewCosXWizard.MOBILE_ACCESS_STEP,items:[{
type:_GROUP_,items:[ZaItem.getZeroIsUnlimitedItem(),{
ref:ZaMobileAccess.A_zimbraFeatureMobileSyncEnabled,type:_WIZ_CHECKBOX_,label:com_zimbra_mobilesync.zimbraFeatureMobileSyncEnable,trueValue:"TRUE",falseValue:"FALSE"}
,{
ref:ZaMobileAccess.A_zimbraFeatureMobilePolicyEnabled,type:_WIZ_CHECKBOX_,label:com_zimbra_mobilesync.zimbraFeatureMobilePolicyEnabled,trueValue:"TRUE",falseValue:"FALSE",enableDisableChecks:[[ZaItem.hasWritePermission,ZaMobileAccess.A_zimbraFeatureMobilePolicyEnabled],[XForm.checkInstanceValue,ZaMobileAccess.A_zimbraFeatureMobileSyncEnabled,"TRUE"]],enableDisableChangeEventSources:[ZaMobileAccess.A_zimbraFeatureMobileSyncEnabled]}
,{
ref:ZaMobileAccess.A_zimbraMobilePolicyAllowNonProvisionableDevices,type:_WIZ_CHECKBOX_,label:com_zimbra_mobilesync.allowNonProvionableDevices,trueValue:"TRUE",falseValue:"FALSE",enableDisableChecks:[[ZaItem.hasWritePermission,ZaMobileAccess.A_zimbraMobilePolicyAllowNonProvisionableDevices],[XForm.checkInstanceValue,ZaMobileAccess.A_zimbraFeatureMobileSyncEnabled,"TRUE"],[XForm.checkInstanceValue,ZaMobileAccess.A_zimbraFeatureMobilePolicyEnabled,"TRUE"]],enableDisableChangeEventSources:[ZaMobileAccess.A_zimbraFeatureMobileSyncEnabled,ZaMobileAccess.A_zimbraFeatureMobilePolicyEnabled]}
,{
ref:ZaMobileAccess.A_zimbraMobilePolicyAllowPartialProvisioning,type:_WIZ_CHECKBOX_,label:com_zimbra_mobilesync.zimbraMobilePolicyAllowPartialProvisioning,trueValue:"TRUE",falseValue:"FALSE",enableDisableChecks:[[ZaItem.hasWritePermission,ZaMobileAccess.A_zimbraMobilePolicyAllowPartialProvisioning],[XForm.checkInstanceValue,ZaMobileAccess.A_zimbraFeatureMobileSyncEnabled,"TRUE"],[XForm.checkInstanceValue,ZaMobileAccess.A_zimbraFeatureMobilePolicyEnabled,"TRUE"]],enableDisableChangeEventSources:[ZaMobileAccess.A_zimbraFeatureMobileSyncEnabled,ZaMobileAccess.A_zimbraFeatureMobilePolicyEnabled]}
,{
ref:ZaMobileAccess.A_zimbraMobilePolicyDevicePasswordEnabled,type:_WIZ_CHECKBOX_,label:com_zimbra_mobilesync.requirePassword,trueValue:"TRUE",falseValue:"FALSE",enableDisableChecks:[[ZaItem.hasWritePermission,ZaMobileAccess.A_zimbraMobilePolicyDevicePasswordEnabled],[XForm.checkInstanceValue,ZaMobileAccess.A_zimbraFeatureMobileSyncEnabled,"TRUE"],[XForm.checkInstanceValue,ZaMobileAccess.A_zimbraFeatureMobilePolicyEnabled,"TRUE"]],enableDisableChangeEventSources:[ZaMobileAccess.A_zimbraFeatureMobileSyncEnabled,ZaMobileAccess.A_zimbraFeatureMobilePolicyEnabled]}
,{
ref:ZaMobileAccess.A_zimbraMobilePolicyAlphanumericDevicePasswordRequired,type:_WIZ_CHECKBOX_,label:com_zimbra_mobilesync.requireAlphaNumericPassword,trueValue:"TRUE",falseValue:"FALSE",enableDisableChecks:[[ZaItem.hasWritePermission,ZaMobileAccess.A_zimbraMobilePolicyAlphanumericDevicePasswordRequired],[XForm.checkInstanceValue,ZaMobileAccess.A_zimbraFeatureMobileSyncEnabled,"TRUE"],[XForm.checkInstanceValue,ZaMobileAccess.A_zimbraFeatureMobilePolicyEnabled,"TRUE"],[XForm.checkInstanceValue,ZaMobileAccess.A_zimbraMobilePolicyDevicePasswordEnabled,"TRUE"]],enableDisableChangeEventSources:[ZaMobileAccess.A_zimbraFeatureMobileSyncEnabled,ZaMobileAccess.A_zimbraMobilePolicyDevicePasswordEnabled,ZaMobileAccess.A_zimbraFeatureMobilePolicyEnabled]}
,{
ref:ZaMobileAccess.A_zimbraMobilePolicyMinDevicePasswordLength,type:_TEXTFIELD_,label:com_zimbra_mobilesync.minPasswordLen,labelLocation:_LEFT_,textFieldCssClass:"admin_xform_number_input",enableDisableChecks:[[ZaItem.hasWritePermission,ZaMobileAccess.A_zimbraMobilePolicyMinDevicePasswordLength],[XForm.checkInstanceValue,ZaMobileAccess.A_zimbraFeatureMobileSyncEnabled,"TRUE"],[XForm.checkInstanceValue,ZaMobileAccess.A_zimbraFeatureMobilePolicyEnabled,"TRUE"],[XForm.checkInstanceValue,ZaMobileAccess.A_zimbraMobilePolicyDevicePasswordEnabled,"TRUE"]],enableDisableChangeEventSources:[ZaMobileAccess.A_zimbraFeatureMobileSyncEnabled,ZaMobileAccess.A_zimbraMobilePolicyDevicePasswordEnabled,ZaMobileAccess.A_zimbraFeatureMobilePolicyEnabled]}
,{
ref:ZaCos.A_zimbraMobilePolicyMaxDevicePasswordFailedAttempts,type:_TEXTFIELD_,label:com_zimbra_mobilesync.maxDevicePasswordFailedAttempts,labelLocation:_LEFT_,textFieldCssClass:"admin_xform_number_input",enableDisableChecks:[[ZaItem.hasWritePermission,ZaMobileAccess.A_zimbraMobilePolicyMaxDevicePasswordFailedAttempts],[XForm.checkInstanceValue,ZaMobileAccess.A_zimbraFeatureMobileSyncEnabled,"TRUE"],[XForm.checkInstanceValue,ZaMobileAccess.A_zimbraFeatureMobilePolicyEnabled,"TRUE"],[XForm.checkInstanceValue,ZaMobileAccess.A_zimbraMobilePolicyDevicePasswordEnabled,"TRUE"]],enableDisableChangeEventSources:[ZaMobileAccess.A_zimbraFeatureMobileSyncEnabled,ZaMobileAccess.A_zimbraMobilePolicyDevicePasswordEnabled,ZaMobileAccess.A_zimbraFeatureMobilePolicyEnabled]}
,{
ref:ZaMobileAccess.A_zimbraMobilePolicyMaxInactivityTimeDeviceLock,type:_TEXTFIELD_,label:com_zimbra_mobilesync.passwordMaxInactivityTime,labelLocation:_LEFT_,textFieldCssClass:"admin_xform_number_input",enableDisableChecks:[[ZaItem.hasWritePermission,ZaMobileAccess.A_zimbraMobilePolicyMaxInactivityTimeDeviceLock],[XForm.checkInstanceValue,ZaMobileAccess.A_zimbraFeatureMobileSyncEnabled,"TRUE"],[XForm.checkInstanceValue,ZaMobileAccess.A_zimbraFeatureMobilePolicyEnabled,"TRUE"],[XForm.checkInstanceValue,ZaMobileAccess.A_zimbraMobilePolicyDevicePasswordEnabled,"TRUE"]],enableDisableChangeEventSources:[ZaMobileAccess.A_zimbraFeatureMobileSyncEnabled,ZaMobileAccess.A_zimbraMobilePolicyDevicePasswordEnabled,ZaMobileAccess.A_zimbraFeatureMobilePolicyEnabled]}
]}
]};
var e=this.stepChoices;
var s=n.items[3].items;
e.push({
value:ZaNewCosXWizard.MOBILE_ACCESS_STEP,label:com_zimbra_mobilesync.TABT_Mobile}
);
s.push(t)
};
ZaXDialog.XFormModifiers.ZaNewCosXWizard.push(ZaCOSMobileSyncView.NewCosWizXFormModifier)
}
if(ZaSettings&&ZaSettings.EnabledZimlet.com_zimbra_mobilesync){
ZaDomainMobileSyncView=function(e){
DwtTabViewPage.call(this,e)
};
ZaDomainMobileSyncView.prototype=new DwtTabViewPage;
ZaDomainMobileSyncView.prototype.constructor=ZaDomainMobileSyncView;
ZaDomainMobileSyncView.prototype.toString=function(){
return"ZaDomainMobileSyncView"
};
ZaDomainMobileSyncView.myDomainConfSetObject=function(e,t){
e[ZaMobileAccess.A2_registeredDevice]=[];
return e
};
ZaTabView.XFormSetObjectMethods.ZaDomainXFormView.push(ZaDomainMobileSyncView.myDomainConfSetObject);
ZaTabView.XFormModifiers.ZaDomainXFormView.push(ZaMobileAccess.myConfXFormModifier)
}
if(ZaSettings&&ZaSettings.EnabledZimlet.com_zimbra_mobilesync){
ZaAccountMobileSyncView=function(e){
DwtTabViewPage.call(this,e)
};
ZaAccountMobileSyncView.prototype=new DwtTabViewPage;
ZaAccountMobileSyncView.prototype.constructor=ZaAccountMobileSyncView;
ZaAccountMobileSyncView.prototype.toString=function(){
return"ZaAccountMobileSyncView"
};
ZaAccountMobileSyncView.modifyObjectForAccountXFormView=function(){
var r=this._containedObject;
var n=r._defaultValues;
if(n){
if(n.attrs[ZaMobileAccess.A_zimbraMobilePolicyRequireSignedSMIMEMessages]=="-1"&&n.attrs[ZaMobileAccess.A_zimbraMobilePolicyRequireSignedSMIMEAlgorithm]=="-1"&&n.attrs[ZaMobileAccess.A_zimbraMobilePolicyRequireEncryptedSMIMEMessages]=="-1"&&n.attrs[ZaMobileAccess.A_zimbraMobilePolicyRequireEncryptionSMIMEAlgorithm]=="-1"&&n.attrs[ZaMobileAccess.A_zimbraMobilePolicyAllowSMIMESoftCerts]=="-1"){
n[ZaMobileAccess.A2_zimbraMobilePolicyEnableSMIMEEncryptionAndSigning]=false
}else{
n[ZaMobileAccess.A2_zimbraMobilePolicyEnableSMIMEEncryptionAndSigning]=true
}
var e=r.attrs[ZaMobileAccess.A_zimbraMobilePolicyRequireSignedSMIMEMessages]||n.attrs[ZaMobileAccess.A_zimbraMobilePolicyRequireSignedSMIMEMessages];
var o=r.attrs[ZaMobileAccess.A_zimbraMobilePolicyRequireSignedSMIMEAlgorithm]||n.attrs[ZaMobileAccess.A_zimbraMobilePolicyRequireSignedSMIMEAlgorithm];
var t=r.attrs[ZaMobileAccess.A_zimbraMobilePolicyRequireEncryptedSMIMEMessages]||n.attrs[ZaMobileAccess.A_zimbraMobilePolicyRequireEncryptedSMIMEMessages];
var s=r.attrs[ZaMobileAccess.A_zimbraMobilePolicyRequireEncryptionSMIMEAlgorithm]||n.attrs[ZaMobileAccess.A_zimbraMobilePolicyRequireEncryptionSMIMEAlgorithm];
var l=r.attrs[ZaMobileAccess.A_zimbraMobilePolicyAllowSMIMESoftCerts]||n.attrs[ZaMobileAccess.A_zimbraMobilePolicyAllowSMIMESoftCerts];
if(e=="-1"&&o=="-1"&&t=="-1"&&s=="-1"&&l=="-1"){
r[ZaMobileAccess.A2_zimbraMobilePolicyEnableSMIMEEncryptionAndSigning]=false
}else{
r[ZaMobileAccess.A2_zimbraMobilePolicyEnableSMIMEEncryptionAndSigning]=true
}}
ZaMobileAccessView.syncApprovedAppList(r);
r[ZaMobileAccess.A2_ApprovedAppSelection]=null;
r[ZaMobileAccess.A2_BlockedAppSelection]=null
};
ZaTabView.ObjectModifiers.ZaAccountXFormView.push(ZaAccountMobileSyncView.modifyObjectForAccountXFormView);
ZaAccountMobileSyncView.myAccountXFormModifier=function(r,s){
if(ZaTabView.isTAB_ENABLED(s,ZaMobileAccessView.MOBILE_ACCESS_TAB_ATTRS,ZaMobileAccessView.MOBILE_ACCESS_TAB_RIGHTS)){
var o=++this.TAB_INDEX;
this.helpMap[o]=[location.pathname,ZaUtil.HELP_URL,"mobile/setting_up_zimbra_mobile_device_security_policies.htm","?locid=",AjxEnv.DEFAULT_LOCALE].join("");
var t={
type:_SUPER_TABCASE_,numCols:1,colsSizes:["auto"],caseKey:o,cssStyle:"padding-left:15px;",width:"98%",cellpadding:"2",id:"account_form_mobile_access_tab",loadDataMethods:[[ZaRegisterDevice.prototype.loadRegisteredDevices,s]],items:[ZaMobileAccessView.getGeneralSettings(),{
type:_ZA_TOP_GROUPER_,label:com_zimbra_mobilesync.passwordSetting,visibilityChecks:[[ZATopGrouper_XFormItem.isGroupVisible,ZaMobileAccessView.MOBILE_ACCESS_PASSWORD_ATTRS]],items:[{
type:_SUPER_CHECKBOX_,checkBoxLabel:com_zimbra_mobilesync.requirePassword,ref:ZaMobileAccess.A_zimbraMobilePolicyDevicePasswordEnabled,trueValue:"TRUE",falseValue:"FALSE",resetToSuperLabel:ZaMsg.NAD_ResetToCOS,enableDisableChangeEventSources:[ZaMobileAccess.A_zimbraFeatureMobileSyncEnabled,ZaMobileAccess.A_zimbraFeatureMobilePolicyEnabled],enableDisableChecks:[ZaMobileAccessView.isMobilePolicyEnabled]}
,{
type:_SUPER_TEXTFIELD_,txtBoxLabel:com_zimbra_mobilesync.minPasswordLen,ref:ZaMobileAccess.A_zimbraMobilePolicyMinDevicePasswordLength,textFieldWidth:"40px",resetToSuperLabel:ZaMsg.NAD_ResetToCOS,enableDisableChangeEventSources:[ZaMobileAccess.A_zimbraFeatureMobileSyncEnabled,ZaMobileAccess.A_zimbraFeatureMobilePolicyEnabled],enableDisableChecks:[ZaMobileAccessView.isMobilePolicyEnabled]}
,{
type:_SUPER_CHECKBOX_,checkBoxLabel:com_zimbra_mobilesync.requireAlphaNumericPassword,ref:ZaMobileAccess.A_zimbraMobilePolicyAlphanumericDevicePasswordRequired,trueValue:"TRUE",falseValue:"FALSE",resetToSuperLabel:ZaMsg.NAD_ResetToCOS}
,{
type:_SUPER_TEXTFIELD_,txtBoxLabel:com_zimbra_mobilesync.minComplexChar,ref:ZaMobileAccess.A_zimbraMobilePolicyMinDevicePasswordComplexCharacters,textFieldWidth:"40px",resetToSuperLabel:ZaMsg.NAD_ResetToCOS,enableDisableChangeEventSources:[ZaMobileAccess.A_zimbraFeatureMobileSyncEnabled,ZaMobileAccess.A_zimbraFeatureMobilePolicyEnabled],enableDisableChecks:[ZaMobileAccessView.isMobilePolicyEnabled]}
,{
type:_SUPER_CHECKBOX_,checkBoxLabel:com_zimbra_mobilesync.allowSimplePassword,ref:ZaMobileAccess.A_zimbraMobilePolicyAllowSimpleDevicePassword,trueValue:"TRUE",falseValue:"FALSE",resetToSuperLabel:ZaMsg.NAD_ResetToCOS,enableDisableChangeEventSources:[ZaMobileAccess.A_zimbraFeatureMobileSyncEnabled,ZaMobileAccess.A_zimbraFeatureMobilePolicyEnabled],enableDisableChecks:[ZaMobileAccessView.isMobilePolicyEnabled]}
,{
type:_SUPER_CHECKBOX_,checkBoxLabel:com_zimbra_mobilesync.enablePasswordRecovery,ref:ZaMobileAccess.A_zimbraMobilePolicyPasswordRecoveryEnabled,trueValue:"TRUE",falseValue:"FALSE",resetToSuperLabel:ZaMsg.NAD_ResetToCOS,enableDisableChangeEventSources:[ZaMobileAccess.A_zimbraFeatureMobileSyncEnabled,ZaMobileAccess.A_zimbraFeatureMobilePolicyEnabled],enableDisableChecks:[ZaMobileAccessView.isMobilePolicyEnabled]}
,{
type:_SUPER_CHECKBOX_,checkBoxLabel:com_zimbra_mobilesync.requireStorageEncryption,ref:ZaMobileAccess.A_zimbraMobilePolicyRequireStorageCardEncryption,trueValue:"TRUE",falseValue:"FALSE",resetToSuperLabel:ZaMsg.NAD_ResetToCOS,enableDisableChangeEventSources:[ZaMobileAccess.A_zimbraFeatureMobileSyncEnabled,ZaMobileAccess.A_zimbraFeatureMobilePolicyEnabled],enableDisableChecks:[ZaMobileAccessView.isMobilePolicyEnabled]}
,{
type:_SUPER_CHECKBOX_,checkBoxLabel:com_zimbra_mobilesync.requireDeviceEncryption,ref:ZaMobileAccess.A_zimbraMobilePolicyRequireDeviceEncryption,trueValue:"1",falseValue:"0",resetToSuperLabel:ZaMsg.NAD_ResetToCOS,enableDisableChangeEventSources:[ZaMobileAccess.A_zimbraFeatureMobileSyncEnabled,ZaMobileAccess.A_zimbraFeatureMobilePolicyEnabled],enableDisableChecks:[ZaMobileAccessView.isMobilePolicyEnabled]}
,{
type:_SUPER_TEXTFIELD_,txtBoxLabel:com_zimbra_mobilesync.passwordMaxInactivityTime,ref:ZaMobileAccess.A_zimbraMobilePolicyMaxInactivityTimeDeviceLock,textFieldWidth:"40px",resetToSuperLabel:ZaMsg.NAD_ResetToCOS,enableDisableChangeEventSources:[ZaMobileAccess.A_zimbraFeatureMobileSyncEnabled,ZaMobileAccess.A_zimbraFeatureMobilePolicyEnabled],enableDisableChecks:[ZaMobileAccessView.isMobilePolicyEnabled]}
,{
type:_SUPER_TEXTFIELD_,txtBoxLabel:com_zimbra_mobilesync.maxDevicePasswordFailedAttempts,ref:ZaMobileAccess.A_zimbraMobilePolicyMaxDevicePasswordFailedAttempts,textFieldWidth:"40px",resetToSuperLabel:ZaMsg.NAD_ResetToCOS,enableDisableChangeEventSources:[ZaMobileAccess.A_zimbraFeatureMobileSyncEnabled,ZaMobileAccess.A_zimbraFeatureMobilePolicyEnabled],enableDisableChecks:[ZaMobileAccessView.isMobilePolicyEnabled]}
,{
type:_SUPER_TEXTFIELD_,txtBoxLabel:com_zimbra_mobilesync.devicePasswordExpiration,ref:ZaMobileAccess.A_zimbraMobilePolicyDevicePasswordExpiration,textFieldWidth:"40px",resetToSuperLabel:ZaMsg.NAD_ResetToCOS,enableDisableChangeEventSources:[ZaMobileAccess.A_zimbraFeatureMobileSyncEnabled,ZaMobileAccess.A_zimbraFeatureMobilePolicyEnabled],enableDisableChecks:[ZaMobileAccessView.isMobilePolicyEnabled]}
,{
type:_SUPER_TEXTFIELD_,txtBoxLabel:com_zimbra_mobilesync.passwordReuseHistory,ref:ZaMobileAccess.A_zimbraMobilePolicyDevicePasswordHistory,textFieldWidth:"40px",resetToSuperLabel:ZaMsg.NAD_ResetToCOS,enableDisableChangeEventSources:[ZaMobileAccess.A_zimbraFeatureMobileSyncEnabled,ZaMobileAccess.A_zimbraFeatureMobilePolicyEnabled],enableDisableChecks:[ZaMobileAccessView.isMobilePolicyEnabled]}
]}
,{
type:_ZA_TOP_GROUPER_,label:com_zimbra_mobilesync.smimeSetting,numCols:2,colSizes:["275px","auto"],visibilityChecks:[[ZATopGrouper_XFormItem.isGroupVisible,ZaMobileAccessView.MOBILE_ACCESS_SMIME_ATTRS]],items:[{
type:_SUPER_CHECKBOX_,checkBoxLabel:com_zimbra_mobilesync.enableSMIMEPublicKeyEncrptAndSign,ref:ZaMobileAccess.A2_zimbraMobilePolicyEnableSMIMEEncryptionAndSigning,trueValue:true,falseValue:false,resetToSuperLabel:ZaMsg.NAD_ResetToCOS,onChange:ZaMobileAccessView.onEnableSMIMEEncryptionAndSigningChanged,enableDisableChangeEventSources:[ZaMobileAccess.A_zimbraFeatureMobileSyncEnabled,ZaMobileAccess.A_zimbraFeatureMobilePolicyEnabled],enableDisableChecks:[ZaMobileAccessView.isMobilePolicyEnabled],clearChildComponentChecks:true,visibilityChecks:[function(){
return true
}
]}
,{
type:_SUPER_CHECKBOX_,checkBoxLabel:com_zimbra_mobilesync.requireSendSignedMsg,ref:ZaMobileAccess.A_zimbraMobilePolicyRequireSignedSMIMEMessages,trueValue:"1",falseValue:"0",resetToSuperLabel:ZaMsg.NAD_ResetToCOS,valueChangeEventSources:[ZaMobileAccess.A2_zimbraMobilePolicyEnableSMIMEEncryptionAndSigning],enableDisableChecks:[[XForm.checkInstanceValue,ZaMobileAccess.A2_zimbraMobilePolicyEnableSMIMEEncryptionAndSigning,true],[ZaMobileAccessView.isMobilePolicyEnabled]],enableDisableChangeEventSources:[ZaMobileAccess.A2_zimbraMobilePolicyEnableSMIMEEncryptionAndSigning,ZaMobileAccess.A_zimbraFeatureMobileSyncEnabled,ZaMobileAccess.A_zimbraFeatureMobilePolicyEnabled]}
,{
type:_SUPER_CHECKBOX_,checkBoxLabel:com_zimbra_mobilesync.requireSMIMEAlgorithm,ref:ZaMobileAccess.A_zimbraMobilePolicyRequireSignedSMIMEAlgorithm,trueValue:"1",falseValue:"0",resetToSuperLabel:ZaMsg.NAD_ResetToCOS,valueChangeEventSources:[ZaMobileAccess.A2_zimbraMobilePolicyEnableSMIMEEncryptionAndSigning],enableDisableChecks:[[XForm.checkInstanceValue,ZaMobileAccess.A2_zimbraMobilePolicyEnableSMIMEEncryptionAndSigning,true],[ZaMobileAccessView.isMobilePolicyEnabled]],enableDisableChangeEventSources:[ZaMobileAccess.A2_zimbraMobilePolicyEnableSMIMEEncryptionAndSigning,ZaMobileAccess.A_zimbraFeatureMobileSyncEnabled,ZaMobileAccess.A_zimbraFeatureMobilePolicyEnabled]}
,{
type:_SUPER_CHECKBOX_,checkBoxLabel:com_zimbra_mobilesync.requireDeviceSendEncryptedMsg,ref:ZaMobileAccess.A_zimbraMobilePolicyRequireEncryptedSMIMEMessages,trueValue:"1",falseValue:"0",resetToSuperLabel:ZaMsg.NAD_ResetToCOS,valueChangeEventSources:[ZaMobileAccess.A2_zimbraMobilePolicyEnableSMIMEEncryptionAndSigning],enableDisableChecks:[[XForm.checkInstanceValue,ZaMobileAccess.A2_zimbraMobilePolicyEnableSMIMEEncryptionAndSigning,true],[ZaMobileAccessView.isMobilePolicyEnabled]],enableDisableChangeEventSources:[ZaMobileAccess.A2_zimbraMobilePolicyEnableSMIMEEncryptionAndSigning,ZaMobileAccess.A_zimbraFeatureMobileSyncEnabled,ZaMobileAccess.A_zimbraFeatureMobilePolicyEnabled]}
,{
type:_SUPER_CHECKBOX_,checkBoxLabel:com_zimbra_mobilesync.requireSMIMEAlgorithmForEncrypt,ref:ZaMobileAccess.A_zimbraMobilePolicyRequireEncryptionSMIMEAlgorithm,trueValue:"1",falseValue:"0",resetToSuperLabel:ZaMsg.NAD_ResetToCOS,valueChangeEventSources:[ZaMobileAccess.A2_zimbraMobilePolicyEnableSMIMEEncryptionAndSigning],enableDisableChecks:[[XForm.checkInstanceValue,ZaMobileAccess.A2_zimbraMobilePolicyEnableSMIMEEncryptionAndSigning,true],[ZaMobileAccessView.isMobilePolicyEnabled]],enableDisableChangeEventSources:[ZaMobileAccess.A2_zimbraMobilePolicyEnableSMIMEEncryptionAndSigning,ZaMobileAccess.A_zimbraFeatureMobileSyncEnabled,ZaMobileAccess.A_zimbraFeatureMobilePolicyEnabled]}
,{
type:_SUPER_SELECT1_,label:com_zimbra_mobilesync.algorithmNegotiation,ref:ZaMobileAccess.A_zimbraMobilePolicyAllowSMIMEEncryptionAlgorithmNegotiation,resetToSuperLabel:ZaMsg.NAD_ResetToCOS,colSpan:2,enableDisableChecks:[[XForm.checkInstanceValue,ZaMobileAccess.A2_zimbraMobilePolicyEnableSMIMEEncryptionAndSigning,true],[ZaMobileAccessView.isMobilePolicyEnabled]],enableDisableChangeEventSources:[ZaMobileAccess.A2_zimbraMobilePolicyEnableSMIMEEncryptionAndSigning,ZaMobileAccess.A_zimbraFeatureMobileSyncEnabled,ZaMobileAccess.A_zimbraFeatureMobilePolicyEnabled]}
,{
type:_SUPER_CHECKBOX_,checkBoxLabel:com_zimbra_mobilesync.allowSMIMESoftwareCert,ref:ZaMobileAccess.A_zimbraMobilePolicyAllowSMIMESoftCerts,trueValue:"1",falseValue:"0",resetToSuperLabel:ZaMsg.NAD_ResetToCOS,valueChangeEventSources:[ZaMobileAccess.A2_zimbraMobilePolicyEnableSMIMEEncryptionAndSigning],enableDisableChecks:[[XForm.checkInstanceValue,ZaMobileAccess.A2_zimbraMobilePolicyEnableSMIMEEncryptionAndSigning,true],[ZaMobileAccessView.isMobilePolicyEnabled]],enableDisableChangeEventSources:[ZaMobileAccess.A2_zimbraMobilePolicyEnableSMIMEEncryptionAndSigning,ZaMobileAccess.A_zimbraFeatureMobileSyncEnabled,ZaMobileAccess.A_zimbraFeatureMobilePolicyEnabled]}
]}
,{
type:_ZA_TOP_GROUPER_,label:com_zimbra_mobilesync.syncSettings,numCols:2,colSizes:["275px","auto"],visibilityChecks:[[ZATopGrouper_XFormItem.isGroupVisible,ZaMobileAccessView.MOBILE_ACCESS_SYNC_ATTRS]],items:[{
type:_SUPER_SELECT1_,label:com_zimbra_mobilesync.maxCalendarAgeFilter,colSpan:2,ref:ZaMobileAccess.A_zimbraMobilePolicyMaxCalendarAgeFilter,resetToSuperLabel:ZaMsg.NAD_ResetToCOS,enableDisableChangeEventSources:[ZaMobileAccess.A_zimbraFeatureMobileSyncEnabled,ZaMobileAccess.A_zimbraFeatureMobilePolicyEnabled],enableDisableChecks:[ZaMobileAccessView.isMobilePolicyEnabled]}
,{
type:_SUPER_SELECT1_,label:com_zimbra_mobilesync.maxEmailAgeFilter,colSpan:2,ref:ZaMobileAccess.A_zimbraMobilePolicyMaxEmailAgeFilter,resetToSuperLabel:ZaMsg.NAD_ResetToCOS,enableDisableChangeEventSources:[ZaMobileAccess.A_zimbraFeatureMobileSyncEnabled,ZaMobileAccess.A_zimbraFeatureMobilePolicyEnabled],enableDisableChecks:[ZaMobileAccessView.isMobilePolicyEnabled]}
,{
type:_SUPER_TEXTFIELD_,txtBoxLabel:com_zimbra_mobilesync.maxEmailBodySize,ref:ZaMobileAccess.A_zimbraMobilePolicyMaxEmailBodyTruncationSize,textFieldWidth:"40px",resetToSuperLabel:ZaMsg.NAD_ResetToCOS,enableDisableChangeEventSources:[ZaMobileAccess.A_zimbraFeatureMobileSyncEnabled,ZaMobileAccess.A_zimbraFeatureMobilePolicyEnabled],enableDisableChecks:[ZaMobileAccessView.isMobilePolicyEnabled],getDisplayValue:function(c){
return(c=="-1")?"":c
}}
,{
type:_SUPER_CHECKBOX_,checkBoxLabel:com_zimbra_mobilesync.allowManualSyncWhenRoaming,ref:ZaMobileAccess.A_zimbraMobilePolicyRequireManualSyncWhenRoaming,trueValue:"1",falseValue:"0",resetToSuperLabel:ZaMsg.NAD_ResetToCOS,enableDisableChangeEventSources:[ZaMobileAccess.A_zimbraFeatureMobileSyncEnabled,ZaMobileAccess.A_zimbraFeatureMobilePolicyEnabled],enableDisableChecks:[ZaMobileAccessView.isMobilePolicyEnabled]}
,{
type:_SUPER_CHECKBOX_,checkBoxLabel:com_zimbra_mobilesync.allowHTMLEmail,ref:ZaMobileAccess.A_zimbraMobilePolicyAllowHTMLEmail,trueValue:"1",falseValue:"0",resetToSuperLabel:ZaMsg.NAD_ResetToCOS,enableDisableChangeEventSources:[ZaMobileAccess.A_zimbraFeatureMobileSyncEnabled,ZaMobileAccess.A_zimbraFeatureMobilePolicyEnabled],enableDisableChecks:[ZaMobileAccessView.isMobilePolicyEnabled]}
,{
type:_SUPER_TEXTFIELD_,txtBoxLabel:com_zimbra_mobilesync.maxHTMLEmailBodySize,ref:ZaMobileAccess.A_zimbraMobilePolicyMaxEmailHTMLBodyTruncationSize,textFieldWidth:"40px",resetToSuperLabel:ZaMsg.NAD_ResetToCOS,enableDisableChangeEventSources:[ZaMobileAccess.A_zimbraFeatureMobileSyncEnabled,ZaMobileAccess.A_zimbraFeatureMobilePolicyEnabled],enableDisableChecks:[ZaMobileAccessView.isMobilePolicyEnabled],getDisplayValue:function(c){
return(c=="-1")?"":c
}}
]}
,{
type:_ZA_TOP_GROUPER_,label:com_zimbra_mobilesync.deviceSetting,visibilityChecks:[[ZATopGrouper_XFormItem.isGroupVisible,ZaMobileAccessView.MOBILE_ACCESS_DEVICE_ATTRS]],items:[{
type:_SUPER_CHECKBOX_,checkBoxLabel:com_zimbra_mobilesync.allowStorageCard,ref:ZaMobileAccess.A_zimbraMobilePolicyAllowStorageCard,trueValue:"1",falseValue:"0",resetToSuperLabel:ZaMsg.NAD_ResetToCOS,enableDisableChangeEventSources:[ZaMobileAccess.A_zimbraFeatureMobileSyncEnabled,ZaMobileAccess.A_zimbraFeatureMobilePolicyEnabled],enableDisableChecks:[ZaMobileAccessView.isMobilePolicyEnabled]}
,{
type:_SUPER_CHECKBOX_,checkBoxLabel:com_zimbra_mobilesync.allowCamera,ref:ZaMobileAccess.A_zimbraMobilePolicyAllowCamera,trueValue:"1",falseValue:"0",resetToSuperLabel:ZaMsg.NAD_ResetToCOS,enableDisableChangeEventSources:[ZaMobileAccess.A_zimbraFeatureMobileSyncEnabled,ZaMobileAccess.A_zimbraFeatureMobilePolicyEnabled],enableDisableChecks:[ZaMobileAccessView.isMobilePolicyEnabled]}
,{
type:_SUPER_CHECKBOX_,checkBoxLabel:com_zimbra_mobilesync.allowWifi,ref:ZaMobileAccess.A_zimbraMobilePolicyAllowWiFi,trueValue:"1",falseValue:"0",resetToSuperLabel:ZaMsg.NAD_ResetToCOS,enableDisableChangeEventSources:[ZaMobileAccess.A_zimbraFeatureMobileSyncEnabled,ZaMobileAccess.A_zimbraFeatureMobilePolicyEnabled],enableDisableChecks:[ZaMobileAccessView.isMobilePolicyEnabled]}
,{
type:_SUPER_CHECKBOX_,checkBoxLabel:com_zimbra_mobilesync.allowInfrared,ref:ZaMobileAccess.A_zimbraMobilePolicyAllowIrDA,trueValue:"1",falseValue:"0",resetToSuperLabel:ZaMsg.NAD_ResetToCOS,enableDisableChangeEventSources:[ZaMobileAccess.A_zimbraFeatureMobileSyncEnabled,ZaMobileAccess.A_zimbraFeatureMobilePolicyEnabled],enableDisableChecks:[ZaMobileAccessView.isMobilePolicyEnabled]}
,{
type:_SUPER_CHECKBOX_,checkBoxLabel:com_zimbra_mobilesync.allowShare,ref:ZaMobileAccess.A_zimbraMobilePolicyAllowInternetSharing,trueValue:"1",falseValue:"0",resetToSuperLabel:ZaMsg.NAD_ResetToCOS,enableDisableChangeEventSources:[ZaMobileAccess.A_zimbraFeatureMobileSyncEnabled,ZaMobileAccess.A_zimbraFeatureMobilePolicyEnabled],enableDisableChecks:[ZaMobileAccessView.isMobilePolicyEnabled]}
,{
type:_SUPER_CHECKBOX_,checkBoxLabel:com_zimbra_mobilesync.allowRemoteDesktop,ref:ZaMobileAccess.A_zimbraMobilePolicyAllowRemoteDesktop,trueValue:"1",falseValue:"0",resetToSuperLabel:ZaMsg.NAD_ResetToCOS,enableDisableChangeEventSources:[ZaMobileAccess.A_zimbraFeatureMobileSyncEnabled,ZaMobileAccess.A_zimbraFeatureMobilePolicyEnabled],enableDisableChecks:[ZaMobileAccessView.isMobilePolicyEnabled]}
,{
type:_SUPER_CHECKBOX_,checkBoxLabel:com_zimbra_mobilesync.allowDesktopSync,ref:ZaMobileAccess.A_zimbraMobilePolicyAllowDesktopSync,trueValue:"1",falseValue:"0",resetToSuperLabel:ZaMsg.NAD_ResetToCOS,enableDisableChangeEventSources:[ZaMobileAccess.A_zimbraFeatureMobileSyncEnabled,ZaMobileAccess.A_zimbraFeatureMobilePolicyEnabled],enableDisableChecks:[ZaMobileAccessView.isMobilePolicyEnabled]}
,{
type:_SUPER_SELECT1_,label:com_zimbra_mobilesync.allowBluetooth,ref:ZaMobileAccess.A_zimbraMobilePolicyAllowBluetooth,resetToSuperLabel:ZaMsg.NAD_ResetToCOS,colSpan:2,enableDisableChangeEventSources:[ZaMobileAccess.A_zimbraFeatureMobileSyncEnabled,ZaMobileAccess.A_zimbraFeatureMobilePolicyEnabled],enableDisableChecks:[ZaMobileAccessView.isMobilePolicyEnabled]}
]}
,{
type:_ZA_TOP_GROUPER_,label:com_zimbra_mobilesync.deviceApps,visibilityChecks:[[ZATopGrouper_XFormItem.isGroupVisible,ZaMobileAccessView.MOBILE_ACCESS_DEVICE_APP_ATTRS]],items:[{
type:_SUPER_CHECKBOX_,checkBoxLabel:com_zimbra_mobilesync.allowBrowser,ref:ZaMobileAccess.A_zimbraMobilePolicyAllowBrowser,trueValue:"1",falseValue:"0",resetToSuperLabel:ZaMsg.NAD_ResetToCOS,enableDisableChangeEventSources:[ZaMobileAccess.A_zimbraFeatureMobileSyncEnabled,ZaMobileAccess.A_zimbraFeatureMobilePolicyEnabled],enableDisableChecks:[ZaMobileAccessView.isMobilePolicyEnabled]}
,{
type:_SUPER_CHECKBOX_,checkBoxLabel:com_zimbra_mobilesync.allowConsumerMail,ref:ZaMobileAccess.A_zimbraMobilePolicyAllowConsumerEmail,trueValue:"1",falseValue:"0",resetToSuperLabel:ZaMsg.NAD_ResetToCOS,enableDisableChangeEventSources:[ZaMobileAccess.A_zimbraFeatureMobileSyncEnabled,ZaMobileAccess.A_zimbraFeatureMobilePolicyEnabled],enableDisableChecks:[ZaMobileAccessView.isMobilePolicyEnabled]}
,{
type:_SUPER_CHECKBOX_,checkBoxLabel:com_zimbra_mobilesync.allowPOPIMAPMail,ref:ZaMobileAccess.A_zimbraMobilePolicyAllowPOPIMAPEmail,trueValue:"1",falseValue:"0",resetToSuperLabel:ZaMsg.NAD_ResetToCOS,enableDisableChangeEventSources:[ZaMobileAccess.A_zimbraFeatureMobileSyncEnabled,ZaMobileAccess.A_zimbraFeatureMobilePolicyEnabled],enableDisableChecks:[ZaMobileAccessView.isMobilePolicyEnabled]}
,{
type:_SUPER_CHECKBOX_,checkBoxLabel:com_zimbra_mobilesync.allowTextMsg,ref:ZaMobileAccess.A_zimbraMobilePolicyAllowTextMessaging,trueValue:"1",falseValue:"0",resetToSuperLabel:ZaMsg.NAD_ResetToCOS,enableDisableChangeEventSources:[ZaMobileAccess.A_zimbraFeatureMobileSyncEnabled,ZaMobileAccess.A_zimbraFeatureMobilePolicyEnabled],enableDisableChecks:[ZaMobileAccessView.isMobilePolicyEnabled]}
,{
type:_SUPER_CHECKBOX_,checkBoxLabel:com_zimbra_mobilesync.allowUnsignedApp,ref:ZaMobileAccess.A_zimbraMobilePolicyAllowUnsignedApplications,trueValue:"1",falseValue:"0",resetToSuperLabel:ZaMsg.NAD_ResetToCOS,enableDisableChangeEventSources:[ZaMobileAccess.A_zimbraFeatureMobileSyncEnabled,ZaMobileAccess.A_zimbraFeatureMobilePolicyEnabled],enableDisableChecks:[ZaMobileAccessView.isMobilePolicyEnabled]}
,{
type:_SUPER_CHECKBOX_,checkBoxLabel:com_zimbra_mobilesync.allowUnsignedPkg,ref:ZaMobileAccess.A_zimbraMobilePolicyAllowUnsignedInstallationPackages,trueValue:"1",falseValue:"0",resetToSuperLabel:ZaMsg.NAD_ResetToCOS,enableDisableChangeEventSources:[ZaMobileAccess.A_zimbraFeatureMobileSyncEnabled,ZaMobileAccess.A_zimbraFeatureMobilePolicyEnabled],enableDisableChecks:[ZaMobileAccessView.isMobilePolicyEnabled]}
]}
,ZaMobileAccessView.getApprovedApps(),ZaMobileAccessView.getBlockedApps(),{
type:_ZA_TOP_GROUPER_,id:"form_device_group",width:"100%",numCols:1,colSizes:["100%"],label:com_zimbra_mobilesync.MB_Registered_Devices,cssStyle:"margin:0;padding-bottom:0;",items:[ZaMobileAccessView.getRegistedDevicesList(),ZaMobileAccessView.getRegistedDevicesButtons()]}
]};
var n=r.items[1].choices;
var l=r.items[2].items;
var e=l.length-1;
for(;
e>=0;
e--){
if(l[e].id=="account_form_advanced_tab"){
break
}}
if(e==0){
e=l.length-1
}
AjxUtil.arrayAdd(n,{
value:o,label:com_zimbra_mobilesync.TABT_Mobile}
,e);
AjxUtil.arrayAdd(l,t,e)
}};
ZaTabView.XFormModifiers.ZaAccountXFormView.push(ZaAccountMobileSyncView.myAccountXFormModifier);
ZaAccountMobileSyncView.NewAccountWizXFormModifier=function(n,o){
if(!ZaTabView.isTAB_ENABLED(o,ZaMobileAccessView.MOBILE_SYNC_TAB_ATTRS,ZaMobileAccessView.MOBILE_SYNC_TAB_RIGHTS)){
return
}
ZaNewAccountXWizard.MOBILE_ACCESS_STEP=++this.TAB_INDEX;
this._lastStep++;
var t={
type:_CASE_,id:"account_wiz_mobile_access",numCols:1,caseKey:ZaNewAccountXWizard.MOBILE_ACCESS_STEP,tabGroupKey:ZaNewAccountXWizard.MOBILE_ACCESS_STEP,items:[ZaItem.getZeroIsUnlimitedItem(),{
ref:ZaMobileAccess.A_zimbraFeatureMobileSyncEnabled,type:_SUPER_WIZ_CHECKBOX_,resetToSuperLabel:ZaMsg.NAD_ResetToCOS,checkBoxLabel:com_zimbra_mobilesync.zimbraFeatureMobileSyncEnable,trueValue:"TRUE",falseValue:"FALSE"}
,{
ref:ZaMobileAccess.A_zimbraFeatureMobilePolicyEnabled,type:_SUPER_WIZ_CHECKBOX_,resetToSuperLabel:ZaMsg.NAD_ResetToCOS,checkBoxLabel:com_zimbra_mobilesync.zimbraFeatureMobilePolicyEnabled,trueValue:"TRUE",falseValue:"FALSE",enableDisableChecks:[[ZaItem.hasWritePermission,ZaMobileAccess.A_zimbraFeatureMobilePolicyEnabled],[XForm.checkInstanceValue,ZaMobileAccess.A_zimbraFeatureMobileSyncEnabled,"TRUE"]],enableDisableChangeEventSources:[ZaMobileAccess.A_zimbraFeatureMobileSyncEnabled]}
,{
ref:ZaMobileAccess.A_zimbraMobilePolicyAllowNonProvisionableDevices,type:_SUPER_WIZ_CHECKBOX_,resetToSuperLabel:ZaMsg.NAD_ResetToCOS,checkBoxLabel:com_zimbra_mobilesync.allowNonProvionableDevices,trueValue:"TRUE",falseValue:"FALSE",enableDisableChecks:[[ZaItem.hasWritePermission,ZaMobileAccess.A_zimbraMobilePolicyAllowNonProvisionableDevices],[XForm.checkInstanceValue,ZaMobileAccess.A_zimbraFeatureMobileSyncEnabled,"TRUE"],[XForm.checkInstanceValue,ZaMobileAccess.A_zimbraFeatureMobilePolicyEnabled,"TRUE"]],enableDisableChangeEventSources:[ZaMobileAccess.A_zimbraFeatureMobileSyncEnabled,ZaMobileAccess.A_zimbraFeatureMobilePolicyEnabled]}
,{
ref:ZaMobileAccess.A_zimbraMobilePolicyAllowPartialProvisioning,type:_SUPER_WIZ_CHECKBOX_,resetToSuperLabel:ZaMsg.NAD_ResetToCOS,checkBoxLabel:com_zimbra_mobilesync.zimbraMobilePolicyAllowPartialProvisioning,trueValue:"TRUE",falseValue:"FALSE",enableDisableChecks:[[ZaItem.hasWritePermission,ZaMobileAccess.A_zimbraMobilePolicyAllowPartialProvisioning],[XForm.checkInstanceValue,ZaMobileAccess.A_zimbraFeatureMobileSyncEnabled,"TRUE"],[XForm.checkInstanceValue,ZaMobileAccess.A_zimbraFeatureMobilePolicyEnabled,"TRUE"]],enableDisableChangeEventSources:[ZaMobileAccess.A_zimbraFeatureMobileSyncEnabled,ZaMobileAccess.A_zimbraFeatureMobilePolicyEnabled]}
,{
ref:ZaMobileAccess.A_zimbraMobilePolicyDevicePasswordEnabled,type:_SUPER_WIZ_CHECKBOX_,resetToSuperLabel:ZaMsg.NAD_ResetToCOS,checkBoxLabel:com_zimbra_mobilesync.requirePassword,trueValue:"TRUE",falseValue:"FALSE",enableDisableChecks:[[ZaItem.hasWritePermission,ZaMobileAccess.A_zimbraMobilePolicyDevicePasswordEnabled],[XForm.checkInstanceValue,ZaMobileAccess.A_zimbraFeatureMobileSyncEnabled,"TRUE"],[XForm.checkInstanceValue,ZaMobileAccess.A_zimbraFeatureMobilePolicyEnabled,"TRUE"]],enableDisableChangeEventSources:[ZaMobileAccess.A_zimbraFeatureMobileSyncEnabled,ZaMobileAccess.A_zimbraFeatureMobilePolicyEnabled]}
,{
ref:ZaMobileAccess.A_zimbraMobilePolicyAlphanumericDevicePasswordRequired,type:_SUPER_WIZ_CHECKBOX_,resetToSuperLabel:ZaMsg.NAD_ResetToCOS,checkBoxLabel:com_zimbra_mobilesync.requireAlphaNumericPassword,trueValue:"TRUE",falseValue:"FALSE",enableDisableChecks:[[ZaItem.hasWritePermission,ZaMobileAccess.A_zimbraMobilePolicyAlphanumericDevicePasswordRequired],[XForm.checkInstanceValue,ZaMobileAccess.A_zimbraFeatureMobileSyncEnabled,"TRUE"],[XForm.checkInstanceValue,ZaMobileAccess.A_zimbraFeatureMobilePolicyEnabled,"TRUE"],[XForm.checkInstanceValue,ZaMobileAccess.A_zimbraMobilePolicyDevicePasswordEnabled,"TRUE"]],enableDisableChangeEventSources:[ZaMobileAccess.A_zimbraFeatureMobileSyncEnabled,ZaMobileAccess.A_zimbraMobilePolicyDevicePasswordEnabled,ZaMobileAccess.A_zimbraFeatureMobilePolicyEnabled]}
,{
ref:ZaMobileAccess.A_zimbraMobilePolicyMinDevicePasswordLength,type:_SUPERWIZ_TEXTFIELD_,resetToSuperLabel:ZaMsg.NAD_ResetToCOS,txtBoxLabel:com_zimbra_mobilesync.minPasswordLen,labelLocation:_LEFT_,textFieldCssClass:"admin_xform_number_input",enableDisableChecks:[[ZaItem.hasWritePermission,ZaMobileAccess.A_zimbraMobilePolicyMinDevicePasswordLength],[XForm.checkInstanceValue,ZaMobileAccess.A_zimbraFeatureMobileSyncEnabled,"TRUE"],[XForm.checkInstanceValue,ZaMobileAccess.A_zimbraFeatureMobilePolicyEnabled,"TRUE"],[XForm.checkInstanceValue,ZaMobileAccess.A_zimbraMobilePolicyDevicePasswordEnabled,"TRUE"]],enableDisableChangeEventSources:[ZaMobileAccess.A_zimbraFeatureMobileSyncEnabled,ZaMobileAccess.A_zimbraMobilePolicyDevicePasswordEnabled,ZaMobileAccess.A_zimbraFeatureMobilePolicyEnabled]}
,{
ref:ZaMobileAccess.A_zimbraMobilePolicyMaxDevicePasswordFailedAttempts,type:_SUPERWIZ_TEXTFIELD_,txtBoxLabel:com_zimbra_mobilesync.maxDevicePasswordFailedAttempts,resetToSuperLabel:ZaMsg.NAD_ResetToCOS,labelLocation:_LEFT_,textFieldCssClass:"admin_xform_number_input",enableDisableChecks:[[ZaItem.hasWritePermission,ZaMobileAccess.A_zimbraMobilePolicyMaxDevicePasswordFailedAttempts],[XForm.checkInstanceValue,ZaMobileAccess.A_zimbraFeatureMobileSyncEnabled,"TRUE"],[XForm.checkInstanceValue,ZaMobileAccess.A_zimbraFeatureMobilePolicyEnabled,"TRUE"],[XForm.checkInstanceValue,ZaMobileAccess.A_zimbraMobilePolicyDevicePasswordEnabled,"TRUE"]],enableDisableChangeEventSources:[ZaMobileAccess.A_zimbraFeatureMobileSyncEnabled,ZaMobileAccess.A_zimbraMobilePolicyDevicePasswordEnabled,ZaMobileAccess.A_zimbraFeatureMobilePolicyEnabled]}
,{
ref:ZaMobileAccess.A_zimbraMobilePolicyMaxInactivityTimeDeviceLock,type:_SUPERWIZ_TEXTFIELD_,resetToSuperLabel:ZaMsg.NAD_ResetToCOS,txtBoxLabel:com_zimbra_mobilesync.passwordMaxInactivityTime,labelLocation:_LEFT_,textFieldCssClass:"admin_xform_number_input",enableDisableChecks:[[ZaItem.hasWritePermission,ZaMobileAccess.A_zimbraMobilePolicyMaxInactivityTimeDeviceLock],[XForm.checkInstanceValue,ZaMobileAccess.A_zimbraFeatureMobileSyncEnabled,"TRUE"],[XForm.checkInstanceValue,ZaMobileAccess.A_zimbraFeatureMobilePolicyEnabled,"TRUE"],[XForm.checkInstanceValue,ZaMobileAccess.A_zimbraMobilePolicyDevicePasswordEnabled,"TRUE"]],enableDisableChangeEventSources:[ZaMobileAccess.A_zimbraFeatureMobileSyncEnabled,ZaMobileAccess.A_zimbraMobilePolicyDevicePasswordEnabled,ZaMobileAccess.A_zimbraFeatureMobilePolicyEnabled]}
]};
var e=this.stepChoices;
var s=n.items[3].items;
e.push({
value:ZaNewAccountXWizard.MOBILE_ACCESS_STEP,label:com_zimbra_mobilesync.TABT_Mobile}
);
s.push(t)
};
ZaXDialog.XFormModifiers.ZaNewAccountXWizard.push(ZaAccountMobileSyncView.NewAccountWizXFormModifier);
ZaAccountMobileSyncView.initDeviceInfo=function(){
var e=ZaItem.modelExtensions.ZaAccount;
if(e&&e instanceof Array){
if(ZaUtil.findValueInArray(e,ZaMobileAccess.A2_zimbraMobileSync)<0){
e.push(ZaMobileAccess.A2_zimbraMobileSync)
}}
this[ZaMobileAccess.A2_zimbraMobileSync]=new Array();
this[ZaMobileAccess.A2_zimbraMobileSync]._version=1
};
if(ZaItem.initMethods.ZaAccount&&ZaItem.initMethods.ZaAccount instanceof Array){
ZaItem.initMethods.ZaAccount.push(ZaAccountMobileSyncView.initDeviceInfo)
}}
ZaRegisteredDeviceListView=function(n,o,t,e){
ZaListView.call(this,n,o,t,e)
};
ZaRegisteredDeviceListView.prototype=new ZaListView;
ZaRegisteredDeviceListView.prototype.constructor=ZaRegisteredDeviceListView;
ZaRegisteredDeviceListView.prototype.toString=function(){
return"ZaRegisteredDeviceListView"
};
ZaRegisteredDeviceListView.prototype._createItemHtml=function(r){
var s=new Array(50);
var c=document.createElement("div");
c[DwtListView._STYLE_CLASS]="Row";
c[DwtListView._SELECTED_STYLE_CLASS]=c[DwtListView._STYLE_CLASS]+"-"+DwtCssStyle.SELECTED;
c.className=c[DwtListView._STYLE_CLASS];
this.associateItemWithElement(r,c,DwtListView.TYPE_LIST_ITEM,r[ZaRegisterDevice.RD_Device_ID]+r[ZaRegisterDevice.RD_Email_Address]);
var e=0;
s[e++]="<table width='100%' cellspacing='0' cellpadding='0'>";
s[e++]="<tr>";
if(this._headerList){
var n=this._headerList.length;
for(var o=0;
o<n;
o++){
var l=this._headerList[o]._field;
if(l==ZaRegisterDevice.RD_Email_Address){
s[e++]="<td align=left height=20px width="+this._headerList[o]._width+">";
s[e++]=AjxStringUtil.htmlEncode(r[ZaRegisterDevice.RD_Email_Address]);
s[e++]="</td>"
}else{
if(l==ZaRegisterDevice.RD_Last_Login){
s[e++]="<td align=left height=20px width="+this._headerList[o]._width+">";
s[e++]=AjxStringUtil.htmlEncode(ZaRegisterDevice.getDateDifference(r[ZaRegisterDevice.RD_Last_Login]));
s[e++]="</td>"
}else{
if(l==ZaRegisterDevice.RD_Device_Name){
s[e++]="<td align=left height=20px width="+this._headerList[o]._width+">";
s[e++]=AjxStringUtil.htmlEncode(r[ZaRegisterDevice.RD_Device_Name]);
s[e++]="</td>"
}else{
if(l==ZaRegisterDevice.RD_Device_ID){
s[e++]="<td align=left height=20px width="+this._headerList[o]._width+">";
s[e++]=AjxStringUtil.htmlEncode(r[ZaRegisterDevice.RD_Device_ID]);
s[e++]="</td>"
}else{
if(l==ZaRegisterDevice.RD_Status){
var t=[com_zimbra_mobilesync.MB_Waiting,com_zimbra_mobilesync.MB_Active,com_zimbra_mobilesync.MB_Suspended,com_zimbra_mobilesync.MB_Wipe_ACK,com_zimbra_mobilesync.MB_Wipe_Comp,com_zimbra_mobilesync.MB_Blocked,com_zimbra_mobilesync.MB_Remove_Account_ACK,com_zimbra_mobilesync.MB_Remove_Account_Comp];
s[e++]="<td align=left height=20px width="+this._headerList[o]._width+">";
s[e++]=AjxStringUtil.htmlEncode(t[(r[ZaRegisterDevice.RD_Status])]);
s[e++]="</td>"
}else{
if(l==ZaRegisterDevice.RD_EAS_PROTOCOL){
s[e++]="<td align=left height=20px width="+this._headerList[o]._width+">";
s[e++]=AjxStringUtil.htmlEncode(r[ZaRegisterDevice.RD_EAS_PROTOCOL]);
s[e++]="</td>"
}}}}}}}}else{
s[e++]="<td width=100%>";
s[e++]=AjxStringUtil.htmlEncode(r);
s[e++]="</td>"
}
s[e++]="</tr></table>";
c.innerHTML=s.join("");
return c
};
ZaRegisteredDeviceListView.prototype._setNoResultsHtml=function(){
var e=new AjxBuffer();
var t=document.createElement("div");
e.append("<table width='100%' cellspacing='0' cellpadding='1'>","<tr><td class='NoResults'><br>&nbsp","</td></tr></table>");
t.innerHTML=e.toString();
this._addRow(t)
};
ZaRegisteredDeviceListView.prototype._sortColumn=function(e,t){
ZaMobileAccess.setSortOrder(t);
this._list.sort(ZaItem.compareEmailAddress(t));
this.setUI()
};
ZaRegisteredDeviceListView.getHeaderList=function(){
var e=new Array();
i=0;
e[i++]=new ZaListHeaderItem(ZaRegisterDevice.RD_Email_Address,com_zimbra_mobilesync.MB_Email_Address_col,null,"200px",true,null,true,true);
e[i++]=new ZaListHeaderItem(ZaRegisterDevice.RD_Last_Login,com_zimbra_mobilesync.MB_Last_Login_col,null,"auto",null,null,true,true);
e[i++]=new ZaListHeaderItem(ZaRegisterDevice.RD_Device_Name,com_zimbra_mobilesync.MB_Device_col,null,"auto",null,null,true,true);
e[i++]=new ZaListHeaderItem(ZaRegisterDevice.RD_Device_ID,com_zimbra_mobilesync.MB_Device_Id_col,null,"auto",null,null,true,true);
e[i++]=new ZaListHeaderItem(ZaRegisterDevice.RD_Status,com_zimbra_mobilesync.MB_Status_col,null,"auto",null,null,true,true);
e[i++]=new ZaListHeaderItem(ZaRegisterDevice.RD_EAS_PROTOCOL,com_zimbra_mobilesync.MB_Eas_col,null,"auto",null,null,true,true);
return e
};
if(ZaSettings&&ZaSettings.EnabledZimlet.com_zimbra_mobilesync){
ZaMobileAccessView=new function(){};
ZaMobileAccessView.syncApprovedAppList=function(l){
var n=l.attrs[ZaMobileAccess.A_zimbraMobilePolicyApprovedApplicationList];
var t={};
if(n){
for(var o in n){
var r=n[o].split(":");
if(r.length!=2){
ZaApp.getInstance().getCurrentController().popupErrorDialog(AjxMessageFormat.format(com_zimbra_mobilesync.invalid_approved_app,[n[o]]));
continue
}
var e=r[0];
var s=r[1];
t[s]=e
}}
var c=l.attrs[ZaMobileAccess.A_zimbraMobilePolicyApprovedApplication];
if(c){
if(!n){
n=[];
l.attrs[ZaMobileAccess.A_zimbraMobilePolicyApprovedApplicationList]=n
}
for(var o in c){
if(!t[c[o]]){
n.push("unknown:"+c[o])
}}}};
ZaMobileAccessView.onBlockedAppSelectionListener=function(t){
var e=this.widget.getSelection();
if(e&&e.length){
e.sort();
this.setInstanceValue(e,ZaMobileAccess.A2_BlockedAppSelection)
}else{
this.setInstanceValue(null,ZaMobileAccess.A2_BlockedAppSelection)
}};
ZaMobileAccessView.onApprovedAppSelectionListener=function(t){
var e=this.widget.getSelection();
if(e&&e.length){
e.sort();
this.setInstanceValue(e,ZaMobileAccess.A2_ApprovedAppSelection)
}else{
this.setInstanceValue(null,ZaMobileAccess.A2_ApprovedAppSelection)
}};
ZaMobileAccessView.removeBlockedAppButtonListener=function(){
instance=this.getInstance();
if(instance[ZaMobileAccess.A2_BlockedAppSelection]&&instance.attrs[ZaMobileAccess.A_zimbraMobilePolicyUnapprovedInROMApplication]){
var o=AjxUtil.arrayAsHash(instance[ZaMobileAccess.A2_BlockedAppSelection]);
var n=instance.attrs[ZaMobileAccess.A_zimbraMobilePolicyUnapprovedInROMApplication];
var t=instance[ZaMobileAccess.A2_BlockedAppSelection].length;
for(var e=n.length-1;
e>=0&&t>0;
e--){
if(o[n[e]]){
t--;
n.splice(e,1)
}}
this.setInstanceValue(n,ZaMobileAccess.A_zimbraMobilePolicyUnapprovedInROMApplication);
this.getForm().parent.setDirty(true)
}};
ZaMobileAccessView.removeApprovedAppButtonListener=function(){
instance=this.getInstance();
if(instance[ZaMobileAccess.A2_ApprovedAppSelection]&&instance.attrs[ZaMobileAccess.A_zimbraMobilePolicyApprovedApplicationList]){
var n=AjxUtil.arrayAsHash(instance[ZaMobileAccess.A2_ApprovedAppSelection]);
var s=instance.attrs[ZaMobileAccess.A_zimbraMobilePolicyApprovedApplicationList];
var o=instance[ZaMobileAccess.A2_ApprovedAppSelection].length;
var l=[];
for(var t=s.length-1;
t>=0&&o>0;
t--){
if(n[s[t]]){
o--;
s.splice(t,1)
}}
var e=[];
for(var t in s){
var r=s[t].split(":")[1];
e.push(r)
}
this.setInstanceValue(s,ZaMobileAccess.A_zimbraMobilePolicyApprovedApplicationList);
this.setInstanceValue(e,ZaMobileAccess.A_zimbraMobilePolicyApprovedApplication);
this.getForm().parent.setDirty(true)
}};
ZaMobileAccessView.isRemoveBlockedAppEnabled=function(){
return(!AjxUtil.isEmpty(this.getInstanceValue(ZaMobileAccess.A2_BlockedAppSelection)))
};
ZaMobileAccessView.isRemoveApprovedAppEnabled=function(){
return(!AjxUtil.isEmpty(this.getInstanceValue(ZaMobileAccess.A2_ApprovedAppSelection)))
};
ZaMobileAccessView.addBlockedAppButtonListener=function(){
var e=this.getInstance();
var o=this.getForm().parent;
if(!o.addBlockedAppDlg){
o.addBlockedAppDlg=new ZaMobileAccessView.ZaAddBlockedAppXDialog(ZaApp.getInstance().getAppCtxt().getShell(),"450px","120px",com_zimbra_mobilesync.addBlockedAppDlgTitle);
o.addBlockedAppDlg.registerCallback(DwtDialog.OK_BUTTON,ZaMobileAccessView.addBlockedApp,this.getForm(),null)
}
var n=o.addBlockedAppDlg;
var t={};
t[ZaMobileAccess.A2_BlockedAppName]="";
n.setObject(t);
n.popup()
};
ZaMobileAccessView.addApprovedAppButtonListener=function(){
var e=this.getInstance();
var o=this.getForm().parent;
if(!o.addApprovedAppDlg){
o.addApprovedAppDlg=new ZaMobileAccessView.ZaAddApprovedAppXDialog(ZaApp.getInstance().getAppCtxt().getShell(),"450px","120px",com_zimbra_mobilesync.addApprovedAppDlgTitle);
o.addApprovedAppDlg.registerCallback(DwtDialog.OK_BUTTON,ZaMobileAccessView.addApprovedApp,this.getForm(),null)
}
var n=o.addApprovedAppDlg;
var t={};
t[ZaMobileAccess.A2_ApprovedAppName]="";
t[ZaMobileAccess.A2_ApprovedAppHash]="";
n.setObject(t);
n.popup()
};
ZaMobileAccessView.addBlockedApp=function(){
var n=this.parent.addBlockedAppDlg;
if(n){
n.popdown();
var o=n.getObject();
var t=o[ZaMobileAccess.A2_BlockedAppName];
if(!AjxUtil.isEmpty(t)){
var e=this.getInstanceValue(ZaMobileAccess.A_zimbraMobilePolicyUnapprovedInROMApplication);
if(!e){
e=[]
}
e.push(t);
this.setInstanceValue(e,ZaMobileAccess.A_zimbraMobilePolicyUnapprovedInROMApplication);
this.parent.setDirty(true)
}}};
ZaMobileAccessView.addApprovedApp=function(){
var s=this.parent.addApprovedAppDlg;
if(s){
s.popdown();
var n=s.getObject();
var t=n[ZaMobileAccess.A2_ApprovedAppName];
var o=n[ZaMobileAccess.A2_ApprovedAppHash];
if(!AjxUtil.isEmpty(t)||!AjxUtil.isEmpty(o)){
var e=this.getInstanceValue(ZaMobileAccess.A_zimbraMobilePolicyApprovedApplicationList);
if(!e){
e=[]
}
e.push(t+":"+o);
this.setInstanceValue(e,ZaMobileAccess.A_zimbraMobilePolicyApprovedApplicationList);
e=this.getInstanceValue(ZaMobileAccess.A_zimbraMobilePolicyApprovedApplication);
if(!e){
e=[]
}
e.push(o);
this.setInstanceValue(e,ZaMobileAccess.A_zimbraMobilePolicyApprovedApplication);
this.parent.setDirty(true)
}}};
ZaMobileAccessView.ADD_BLOCKED_APP_X_DLG_ID="client_access_policy_add_blocked_app_dlg";
ZaMobileAccessView.ZaAddBlockedAppXDialog=function(o,t,e,n){
if(arguments.length==0){
return
}
this._standardButtons=[DwtDialog.OK_BUTTON,DwtDialog.CANCEL_BUTTON];
ZaXDialog.call(this,o,null,n,t,e,null,ZaMobileAccessView.ADD_BLOCKED_APP_X_DLG_ID);
this.initForm(this.getMyXModel(),this.getMyXForm());
this._helpURL=[location.pathname,ZaUtil.HELP_URL,"mobile/blocked_applications_on_mobile_devices.htm?locid=",AjxEnv.DEFAULT_LOCALE].join("")
};
ZaMobileAccessView.ZaAddBlockedAppXDialog.prototype=new ZaXDialog;
ZaMobileAccessView.ZaAddBlockedAppXDialog.constructor=ZaMobileAccessView.ZaAddBlockedAppXDialog;
ZaMobileAccessView.ZaAddBlockedAppXDialog.prototype.getMyXModel=function(){
var e={
items:[{
id:ZaMobileAccess.A2_BlockedAppName,type:_STRING_}
]};
return e
};
ZaMobileAccessView.ZaAddBlockedAppXDialog.prototype.getMyXForm=function(){
var e={
numCols:1,items:[{
type:_GROUP_,numCols:1,isTabGroup:true,width:"430px",cssStyle:"margin: 10px",items:[{
type:_SPACER_,height:"10px"}
,{
type:_OUTPUT_,value:com_zimbra_mobilesync.blockedAppName}
,{
type:_TEXTFIELD_,ref:ZaMobileAccess.A2_BlockedAppName,width:"100%",label:null}
]}
]};
return e
};
ZaMobileAccessView.ADD_APPROVED_APP_X_DLG_ID="client_access_policy_add_approved_app_dlg";
ZaMobileAccessView.ZaAddApprovedAppXDialog=function(o,t,e,n){
if(arguments.length==0){
return
}
this._standardButtons=[DwtDialog.OK_BUTTON,DwtDialog.CANCEL_BUTTON];
ZaXDialog.call(this,o,null,n,t,e,null,ZaMobileAccessView.ADD_APPROVED_APP_X_DLG_ID);
this.initForm(this.getMyXModel(),this.getMyXForm());
this._helpURL=[location.pathname,ZaUtil.HELP_URL,"mobile/configuring_approved_applications_for_mobile_devices.htm?locid=",AjxEnv.DEFAULT_LOCALE].join("")
};
ZaMobileAccessView.ZaAddApprovedAppXDialog.prototype=new ZaXDialog;
ZaMobileAccessView.ZaAddApprovedAppXDialog.constructor=ZaMobileAccessView.ZaAddApprovedAppXDialog;
ZaMobileAccessView.ZaAddApprovedAppXDialog.prototype.getMyXModel=function(){
var e={
items:[{
id:ZaMobileAccess.A2_ApprovedAppName,type:_STRING_}
,{
id:ZaMobileAccess.A2_ApprovedAppHash,type:_STRING_}
]};
return e
};
ZaMobileAccessView.ZaAddApprovedAppXDialog.prototype.getMyXForm=function(){
var e={
numCols:1,items:[{
type:_GROUP_,numCols:1,isTabGroup:true,width:"430px",cssStyle:"margin: 10px",items:[{
type:_OUTPUT_,value:com_zimbra_mobilesync.approvedAppName}
,{
type:_TEXTFIELD_,ref:ZaMobileAccess.A2_ApprovedAppName,width:"100%",label:null}
,{
type:_SPACER_,height:"10px"}
,{
type:_OUTPUT_,value:com_zimbra_mobilesync.approvedAppHash}
,{
type:_TEXTFIELD_,ref:ZaMobileAccess.A2_ApprovedAppHash,width:"100%",label:null}
]}
]};
return e
};
ZaMobileAccessView.ZaApprovedAppListView=function(n,o,t,e){
ZaListView.call(this,n,o,t,e)
};
ZaMobileAccessView.ZaApprovedAppListView.prototype=new ZaListView;
ZaMobileAccessView.ZaApprovedAppListView.prototype.constructor=ZaMobileAccessView.ZaApprovedAppListView;
ZaMobileAccessView.ZaApprovedAppListView.toString=function(){
return"ZaMobileAccessView.ZaApprovedAppListView"
};
ZaMobileAccessView.ZaApprovedAppListView.prototype._createItemHtml=function(t){
var n=document.createElement("div");
var e=new Array(50);
n[DwtListView._STYLE_CLASS]="Row";
n[DwtListView._SELECTED_STYLE_CLASS]=n[DwtListView._STYLE_CLASS]+"-"+DwtCssStyle.SELECTED;
n.className=n[DwtListView._STYLE_CLASS];
this.associateItemWithElement(t,n,DwtListView.TYPE_LIST_ITEM);
e.push("<table width='100%' cellspacing='0' cellpadding='0'>");
e.push("<tr>");
var o=t.split(":");
e.push('<td width="250px" style="padding-left:2px;padding-right:3px"><nobr>');
e.push(o[0]);
e.push("</nobr></td>");
e.push('<td style="padding-left:3px;padding-right:2px"><nobr>');
e.push(o[1]);
e.push("</nobr></td>");
e.push("</tr></table>");
n.innerHTML=e.join("");
return n
};
ZaMobileAccessView.isMobileSyncEnabled=function(){
var e=this.getInstanceValue(ZaMobileAccess.A_zimbraFeatureMobileSyncEnabled);
return(e=="TRUE")
};
ZaMobileAccessView.isMobilePolicyEnabled=function(){
if(!ZaMobileAccessView.isMobileSyncEnabled.call(this)){
return false
}
var e=this.getInstanceValue(ZaMobileAccess.A_zimbraFeatureMobilePolicyEnabled);
return(e=="TRUE")
};
ZaMobileAccessView.onEnableSMIMEEncryptionAndSigningChanged=function(o,t,e){
var n=(o?0:-1);
this.setInstanceValue(n,ZaMobileAccess.A_zimbraMobilePolicyRequireSignedSMIMEMessages);
this.setInstanceValue(n,ZaMobileAccess.A_zimbraMobilePolicyRequireSignedSMIMEAlgorithm);
this.setInstanceValue(n,ZaMobileAccess.A_zimbraMobilePolicyRequireEncryptedSMIMEMessages);
this.setInstanceValue(n,ZaMobileAccess.A_zimbraMobilePolicyRequireEncryptionSMIMEAlgorithm);
this.setInstanceValue(n,ZaMobileAccess.A_zimbraMobilePolicyAllowSMIMESoftCerts);
this.setInstanceValue(o)
};
ZaMobileAccessView.MOBILE_ACCESS_GENERAL_ATTRS=[ZaMobileAccess.A_zimbraFeatureMobileSyncEnabled,ZaMobileAccess.A_zimbraFeatureMobilePolicyEnabled,ZaMobileAccess.A_zimbraMobilePolicyAllowNonProvisionableDevices,ZaMobileAccess.A_zimbraMobilePolicyAllowPartialProvisioning,ZaMobileAccess.A_zimbraMobilePolicyRefreshInterval];
ZaMobileAccessView.MOBILE_ACCESS_PASSWORD_ATTRS=[ZaMobileAccess.A_zimbraMobilePolicyDevicePasswordEnabled,ZaMobileAccess.A_zimbraMobilePolicyAlphanumericDevicePasswordRequired,ZaMobileAccess.A_zimbraMobilePolicyMinDevicePasswordLength,ZaMobileAccess.A_zimbraMobilePolicyMinDevicePasswordComplexCharacters,ZaMobileAccess.A_zimbraMobilePolicyAllowSimpleDevicePassword,ZaMobileAccess.A_zimbraMobilePolicyPasswordRecoveryEnabled,ZaMobileAccess.A_zimbraMobilePolicyRequireStorageCardEncryption,ZaMobileAccess.A_zimbraMobilePolicyRequireDeviceEncryption,ZaMobileAccess.A_zimbraMobilePolicyMaxInactivityTimeDeviceLock,ZaMobileAccess.A_zimbraMobilePolicyMaxDevicePasswordFailedAttempts,ZaMobileAccess.A_zimbraMobilePolicyDevicePasswordExpiration,ZaMobileAccess.A_zimbraMobilePolicyDevicePasswordHistory];
ZaMobileAccessView.MOBILE_ACCESS_SMIME_ATTRS=[ZaMobileAccess.A_zimbraMobilePolicyRequireSignedSMIMEMessages,ZaMobileAccess.A_zimbraMobilePolicyRequireSignedSMIMEAlgorithm,ZaMobileAccess.A_zimbraMobilePolicyRequireEncryptedSMIMEMessages,ZaMobileAccess.A_zimbraMobilePolicyRequireEncryptionSMIMEAlgorithm,ZaMobileAccess.A_zimbraMobilePolicyAllowSMIMEEncryptionAlgorithmNegotiation,ZaMobileAccess.A_zimbraMobilePolicyAllowSMIMESoftCerts];
ZaMobileAccessView.MOBILE_ACCESS_SYNC_ATTRS=[ZaMobileAccess.A_zimbraMobilePolicyMaxCalendarAgeFilter,ZaMobileAccess.A_zimbraMobilePolicyMaxEmailAgeFilter,ZaMobileAccess.A_zimbraMobilePolicyMaxEmailBodyTruncationSize,ZaMobileAccess.A_zimbraMobilePolicyRequireManualSyncWhenRoaming,ZaMobileAccess.A_zimbraMobilePolicyAllowHTMLEmail,ZaMobileAccess.A_zimbraMobilePolicyMaxEmailHTMLBodyTruncationSize];
ZaMobileAccessView.MOBILE_ACCESS_DEVICE_ATTRS=[ZaMobileAccess.A_zimbraMobilePolicyAllowStorageCard,ZaMobileAccess.A_zimbraMobilePolicyAllowCamera,ZaMobileAccess.A_zimbraMobilePolicyAllowWiFi,ZaMobileAccess.A_zimbraMobilePolicyAllowIrDA,ZaMobileAccess.A_zimbraMobilePolicyAllowInternetSharing,ZaMobileAccess.A_zimbraMobilePolicyAllowRemoteDesktop,ZaMobileAccess.A_zimbraMobilePolicyAllowDesktopSync,ZaMobileAccess.A_zimbraMobilePolicyAllowBluetooth];
ZaMobileAccessView.MOBILE_ACCESS_DEVICE_APP_ATTRS=[ZaMobileAccess.A_zimbraMobilePolicyAllowBrowser,ZaMobileAccess.A_zimbraMobilePolicyAllowConsumerEmail,ZaMobileAccess.A_zimbraMobilePolicyAllowPOPIMAPEmail,ZaMobileAccess.A_zimbraMobilePolicyAllowTextMessaging,ZaMobileAccess.A_zimbraMobilePolicyAllowUnsignedApplications,ZaMobileAccess.A_zimbraMobilePolicyAllowUnsignedInstallationPackages];
ZaMobileAccessView.MOBILE_ACCESS_APPROVED_APP_ATTRS=[ZaMobileAccess.A_zimbraMobilePolicyApprovedApplication];
ZaMobileAccessView.MOBILE_ACCESS_UNAPPROVED_APP_ATTRS=[ZaMobileAccess.A_zimbraMobilePolicyUnapprovedInROMApplication];
ZaMobileAccessView.MOBILE_ACCESS_TAB_ATTRS=[].concat(ZaMobileAccessView.MOBILE_ACCESS_GENERAL_ATTRS,ZaMobileAccessView.MOBILE_ACCESS_PASSWORD_ATTRS,ZaMobileAccessView.MOBILE_ACCESS_SMIME_ATTRS,ZaMobileAccessView.MOBILE_ACCESS_SYNC_ATTRS,ZaMobileAccessView.MOBILE_ACCESS_DEVICE_ATTRS,ZaMobileAccessView.MOBILE_ACCESS_DEVICE_APP_ATTRS,ZaMobileAccessView.MOBILE_ACCESS_APPROVED_APP_ATTRS,ZaMobileAccessView.MOBILE_ACCESS_UNAPPROVED_APP_ATTRS);
ZaMobileAccessView.MOBILE_ACCESS_TAB_RIGHTS=[];
ZaMobileAccessView.MOBILE_SYNC_TAB_ATTRS=[ZaMobileAccess.A_zimbraFeatureMobileSyncEnabled,ZaMobileAccess.A_zimbraFeatureMobilePolicyEnabled,ZaMobileAccess.A_zimbraMobilePolicyAllowNonProvisionableDevices,ZaMobileAccess.A_zimbraMobilePolicyAllowPartialProvisioning,ZaMobileAccess.A_zimbraMobilePolicyDevicePasswordEnabled,ZaMobileAccess.A_zimbraMobilePolicyAlphanumericDevicePasswordRequired,ZaMobileAccess.A_zimbraMobilePolicyMinDevicePasswordLength,ZaMobileAccess.A_zimbraMobilePolicyMaxDevicePasswordFailedAttempts,ZaMobileAccess.A_zimbraMobilePolicyMaxInactivityTimeDeviceLock];
ZaMobileAccessView.MOBILE_SYNC_TAB_RIGHTS=[];
ZaMobileAccessView.handleConfirmation=function(e){
ZaMobileAccess.registerDeviceListener.call(this,e);
ZaApp.getInstance().dialogs.confirmMessageDialog.popdown()
};
ZaMobileAccessView.getConfirmation=function(e){
var t;
if(e===ZaRegisterDevice.RD_BT_REMOVE_ACCOUNT){
var o=this.getForm().getInstanceValue(ZaMobileAccess.A2_registeredDevice_Selection);
var n=o&&o[0]?parseFloat(o[0][ZaRegisterDevice.RD_EAS_PROTOCOL]):0;
if(n<16.1){
t=e+"UnsupportedWarningMessage";
ZaApp.getInstance().getCurrentController().popupErrorDialog(com_zimbra_mobilesync[t]);
return
}}
t=e+"WarningMessage";
ZaApp.getInstance().dialogs.confirmMessageDialog=new ZaMsgDialog(ZaApp.getInstance().getAppCtxt().getShell(),null,[DwtDialog.YES_BUTTON,DwtDialog.NO_BUTTON],null,ZaId.CTR_GLOBAL+"_confirmDialog");
ZaApp.getInstance().dialogs.confirmMessageDialog.setMessage(com_zimbra_mobilesync[t],DwtMessageDialog.WARNING_STYLE);
ZaApp.getInstance().dialogs.confirmMessageDialog.registerCallback(DwtDialog.YES_BUTTON,ZaMobileAccessView.handleConfirmation,this,e);
ZaApp.getInstance().dialogs.confirmMessageDialog.popup()
};
ZaMobileAccessView.getGeneralSettings=function(){
return{
type:_ZA_TOP_GROUPER_,label:com_zimbra_mobilesync.generalSetting,visibilityChecks:[[ZATopGrouper_XFormItem.isGroupVisible,ZaMobileAccessView.MOBILE_ACCESS_GENERAL_ATTRS]],items:[{
type:_CHECKBOX_,label:com_zimbra_mobilesync.zimbraFeatureMobileSyncEnable,ref:ZaMobileAccess.A_zimbraFeatureMobileSyncEnabled,trueValue:"TRUE",falseValue:"FALSE"}
,{
type:_CHECKBOX_,label:com_zimbra_mobilesync.zimbraFeatureMobilePolicyEnabled,ref:ZaMobileAccess.A_zimbraFeatureMobilePolicyEnabled,trueValue:"TRUE",falseValue:"FALSE",enableDisableChangeEventSources:[ZaMobileAccess.A_zimbraFeatureMobileSyncEnabled],enableDisableChecks:[ZaMobileAccessView.isMobileSyncEnabled]}
,{
type:_CHECKBOX_,label:com_zimbra_mobilesync.allowNonProvionableDevices,ref:ZaMobileAccess.A_zimbraMobilePolicyAllowNonProvisionableDevices,trueValue:"TRUE",falseValue:"FALSE",enableDisableChangeEventSources:[ZaMobileAccess.A_zimbraFeatureMobileSyncEnabled,ZaMobileAccess.A_zimbraFeatureMobilePolicyEnabled],enableDisableChecks:[ZaMobileAccessView.isMobilePolicyEnabled]}
,{
type:_CHECKBOX_,label:com_zimbra_mobilesync.zimbraMobilePolicyAllowPartialProvisioning,ref:ZaMobileAccess.A_zimbraMobilePolicyAllowPartialProvisioning,trueValue:"TRUE",falseValue:"FALSE",enableDisableChangeEventSources:[ZaMobileAccess.A_zimbraFeatureMobileSyncEnabled,ZaMobileAccess.A_zimbraFeatureMobilePolicyEnabled],enableDisableChecks:[ZaMobileAccessView.isMobilePolicyEnabled]}
,{
type:_TEXTFIELD_,label:com_zimbra_mobilesync.policyRefreshInterval,ref:ZaMobileAccess.A_zimbraMobilePolicyRefreshInterval,enableDisableChangeEventSources:[ZaMobileAccess.A_zimbraFeatureMobileSyncEnabled,ZaMobileAccess.A_zimbraFeatureMobilePolicyEnabled],enableDisableChecks:[ZaMobileAccessView.isMobilePolicyEnabled],getDisplayValue:function(e){
return(e/60)
}
,onChange:function(o,t,e){
this.setInstanceValue(o*60)
}
,width:"40px"}
]}
};
ZaMobileAccessView.getApprovedApps=function(){
return{
type:_ZACENTER_GROUPER_,numCols:1,width:"100%",label:com_zimbra_mobilesync.approvedApp,containerCssStyle:"padding-top:5px;",visibilityChecks:[[ZATopGrouper_XFormItem.isGroupVisible,ZaMobileAccessView.MOBILE_ACCESS_APPROVED_APP_ATTRS]],items:[{
ref:ZaMobileAccess.A_zimbraMobilePolicyApprovedApplicationList,type:_DWT_LIST_,listHeight:"150px",cssClass:"DLSource",width:"98%",bmolsnr:true,widgetClass:ZaMobileAccessView.ZaApprovedAppListView,reserveSelection:false,multiselect:true,cssClass:"DLSource",headerList:null,onSelection:ZaMobileAccessView.onApprovedAppSelectionListener,enableDisableChangeEventSources:[ZaMobileAccess.A_zimbraFeatureMobileSyncEnabled,ZaMobileAccess.A_zimbraFeatureMobilePolicyEnabled],enableDisableChecks:[ZaMobileAccessView.isMobilePolicyEnabled]}
,{
type:_GROUP_,numCols:3,width:"310px",colSizes:["150px","10px","150px"],cssStyle:"margin:10px;padding-bottom:0;",enableDisableChangeEventSources:[ZaMobileAccess.A_zimbraFeatureMobileSyncEnabled,ZaMobileAccess.A_zimbraFeatureMobilePolicyEnabled],enableDisableChecks:[ZaMobileAccessView.isMobilePolicyEnabled],items:[{
type:_DWT_BUTTON_,label:com_zimbra_mobilesync.addApp,onActivate:ZaMobileAccessView.addApprovedAppButtonListener}
,{
type:_CELLSPACER_}
,{
type:_DWT_BUTTON_,label:com_zimbra_mobilesync.removeApp,onActivate:ZaMobileAccessView.removeApprovedAppButtonListener,enableDisableChangeEventSources:[ZaMobileAccess.A2_ApprovedAppSelection],enableDisableChecks:[ZaMobileAccessView.isRemoveApprovedAppEnabled]}
]}
]}
};
ZaMobileAccessView.getBlockedApps=function(){
return{
type:_ZACENTER_GROUPER_,numCols:1,width:"100%",label:com_zimbra_mobilesync.blockedApp,containerCssStyle:"padding-top:5px;",visibilityChecks:[[ZATopGrouper_XFormItem.isGroupVisible,ZaMobileAccessView.MOBILE_ACCESS_UNAPPROVED_ATTRS]],items:[{
ref:ZaMobileAccess.A_zimbraMobilePolicyUnapprovedInROMApplication,type:_DWT_LIST_,height:"150px",cssClass:"DLSource",width:"98%",bmolsnr:true,reserveSelection:false,multiselect:true,cssClass:"DLSource",headerList:null,onSelection:ZaMobileAccessView.onBlockedAppSelectionListener,enableDisableChangeEventSources:[ZaMobileAccess.A_zimbraFeatureMobileSyncEnabled,ZaMobileAccess.A_zimbraFeatureMobilePolicyEnabled],enableDisableChecks:[ZaMobileAccessView.isMobilePolicyEnabled]}
,{
type:_GROUP_,numCols:3,width:"310px",colSizes:["150px","10px","150px"],cssStyle:"margin:10px;padding-bottom:0;",enableDisableChangeEventSources:[ZaMobileAccess.A_zimbraFeatureMobileSyncEnabled,ZaMobileAccess.A_zimbraFeatureMobilePolicyEnabled],enableDisableChecks:[ZaMobileAccessView.isMobilePolicyEnabled],items:[{
type:_DWT_BUTTON_,label:com_zimbra_mobilesync.addApp,onActivate:ZaMobileAccessView.addBlockedAppButtonListener}
,{
type:_CELLSPACER_}
,{
type:_DWT_BUTTON_,label:com_zimbra_mobilesync.removeApp,onActivate:ZaMobileAccessView.removeBlockedAppButtonListener,enableDisableChangeEventSources:[ZaMobileAccess.A2_BlockedAppSelection],enableDisableChecks:[ZaMobileAccessView.isRemoveBlockedAppEnabled]}
]}
]}
};
ZaMobileAccessView.getRegistedDevicesFilter=function(){
return{
ref:ZaMobileAccess.A2_registeredDevice_filter,type:_GROUP_,numCols:1,colSizes:["40px"],width:"40px",cssStyle:"margin:10px 0;padding-bottom:0;",id:"ZaMobileAccess.A2_registeredDevice_filter",items:[{
ref:"ZaGlobalConfig.A_zimbraWebClientLoginURL",type:_INPUT_,elementChanged:function(r,s,o){
if(o.charCode!=13){
return
}
if(r==s){
return
}
const n=this.getInstance();
var e=ZaRegisterDevice.getFilteredDevices({
type:n.type,id:n.id}
,r);
if(e){
var t=ZaRegisterDevice.sortRegisteredDevices(e);
this.getForm().setInstanceValue(t,ZaMobileAccess.A2_registeredDevice)
}else{
this.getForm().setInstanceValue([],ZaMobileAccess.A2_registeredDevice)
}}
,label:ZaMsg.search_option_filter,id:"ZaMobileAccess.A2_registeredDevice_filter_child",labelLocation:_LEFT_,align:_LEFT_,width:"600px"}
]}
};
ZaMobileAccessView.getRegistedDevicesList=function(){
return{
ref:ZaMobileAccess.A2_registeredDevice,id:"form_device_group_child",type:_DWT_LIST_,height:"200",width:"100%",preserveSelection:false,multiselect:false,widgetClass:ZaRegisteredDeviceListView,headerList:ZaRegisteredDeviceListView.getHeaderList(),onSelection:ZaMobileAccess.registeredDeviceSelectionListener,valueChangeEventSources:[ZaMobileAccess.A2_registeredDevice]}
};
ZaMobileAccessView.getRegistedDevicesButtons=function(){
return{
type:_GROUP_,id:"form_device_group_child_2",numCols:15,colSizes:["120px","auto","100px","auto","100px","auto","100px","auto","100px","auto","100px","auto","120px","auto","160px"],width:"1168px",cssStyle:"margin:10px;padding-bottom:0;",items:[{
type:_DWT_BUTTON_,label:com_zimbra_mobilesync.MB_But_Remove_From_List,width:"120px",onActivate:"ZaMobileAccessView.getConfirmation.call(this, 'remove');",enableDisableChangeEventSources:[ZaMobileAccess.A2_registeredDevice_Selection],enableDisableChecks:[function(){
return ZaMobileAccess.shouldEnableSyncButton.call(this,ZaRegisterDevice.RD_BT_REMOVE)
}
]}
,{
type:_CELLSPACER_}
,{
type:_DWT_BUTTON_,label:com_zimbra_mobilesync.MB_But_Suspend,width:"100px",onActivate:"ZaMobileAccess.registerDeviceListener.call(this, 'suspend');",enableDisableChangeEventSources:[ZaMobileAccess.A2_registeredDevice_Selection],enableDisableChecks:[function(){
return ZaMobileAccess.shouldEnableSyncButton.call(this,ZaRegisterDevice.RD_BT_SUSPEND)
}
]}
,{
type:_CELLSPACER_}
,{
type:_DWT_BUTTON_,label:com_zimbra_mobilesync.MB_But_Resume,width:"100px",onActivate:"ZaMobileAccess.registerDeviceListener.call(this, 'resume');",enableDisableChangeEventSources:[ZaMobileAccess.A2_registeredDevice_Selection],enableDisableChecks:[function(){
return ZaMobileAccess.shouldEnableSyncButton.call(this,ZaRegisterDevice.RD_BT_RESUME)
}
]}
,{
type:_CELLSPACER_}
,{
type:_DWT_BUTTON_,label:com_zimbra_mobilesync.MB_But_Wipe,width:"100px",onActivate:"ZaMobileAccessView.getConfirmation.call(this, 'wipe');",enableDisableChangeEventSources:[ZaMobileAccess.A2_registeredDevice_Selection],enableDisableChecks:[function(){
return ZaMobileAccess.shouldEnableSyncButton.call(this,ZaRegisterDevice.RD_BT_WIPE)
}
]}
,{
type:_CELLSPACER_}
,{
type:_DWT_BUTTON_,label:com_zimbra_mobilesync.MB_But_Wipe_Cancel,width:"100px",onActivate:"ZaMobileAccess.registerDeviceListener.call(this, 'wipeCancel');",enableDisableChangeEventSources:[ZaMobileAccess.A2_registeredDevice_Selection],enableDisableChecks:[function(){
return ZaMobileAccess.shouldEnableSyncButton.call(this,ZaRegisterDevice.RD_BT_WIPE_CANCEL)
}
]}
,{
type:_CELLSPACER_}
,{
type:_DWT_BUTTON_,label:com_zimbra_mobilesync.MB_But_Block,width:"100px",onActivate:"ZaMobileAccess.registerDeviceListener.call(this, 'block');",enableDisableChangeEventSources:[ZaMobileAccess.A2_registeredDevice_Selection],enableDisableChecks:[function(){
return ZaMobileAccess.shouldEnableSyncButton.call(this,ZaRegisterDevice.RD_BT_BLOCK)
}
]}
,{
type:_CELLSPACER_}
,{
type:_DWT_BUTTON_,label:com_zimbra_mobilesync.MB_But_Remove_Account,width:"120px",onActivate:"ZaMobileAccessView.getConfirmation.call(this, 'removeAccount');",enableDisableChangeEventSources:[ZaMobileAccess.A2_registeredDevice_Selection],enableDisableChecks:[function(){
return ZaMobileAccess.shouldEnableSyncButton.call(this,ZaRegisterDevice.RD_BT_REMOVE_ACCOUNT)
}
]}
,{
type:_CELLSPACER_}
,{
type:_DWT_BUTTON_,label:com_zimbra_mobilesync.MB_But_Remove_Account_Cancel,width:"160px",onActivate:"ZaMobileAccess.registerDeviceListener.call(this, 'removeAccountCancel');",enableDisableChangeEventSources:[ZaMobileAccess.A2_registeredDevice_Selection],enableDisableChecks:[function(){
return ZaMobileAccess.shouldEnableSyncButton.call(this,ZaRegisterDevice.RD_BT_REMOVE_ACCOUNT_CANCEL)
}
]}
]}
}
}
if(ZaSettings&&ZaSettings.EnabledZimlet.com_zimbra_hsm){
if(window.console&&window.console.log){
console.log("Start loading com_zimbra_hsm.js")
}
function ZaHSM(){}
ZaOperation.HSM=++ZA_OP_INDEX;
if(ZaGlobalConfig){
ZaGlobalConfig.A_zimbraComponentAvailable_HSM="_"+ZaGlobalConfig.A_zimbraComponentAvailable+"_HSM";
ZaGlobalConfig.A_zimbraHsmPolicy="zimbraHsmPolicy";
ZaGlobalConfig.A2_policy_selection_cache="policy_selection_cache";
ZaGlobalConfig.A2_bucket_selection_cache="bucket_selection_cache";
ZaGlobalConfig.A_bucketList="bucketList";
ZaGlobalConfig.A_BucketName="bucketName";
ZaGlobalConfig.A_BucketId="globalBucketUUID";
ZaGlobalConfig.A_StoreProvider="storeProvider";
ZaGlobalConfig.A_RemovedBuckets="removed_buckets";
if(ZaGlobalConfig.myXModel){
ZaGlobalConfig.myXModel.items.push({
id:ZaGlobalConfig.A_zimbraHsmPolicy,ref:"attrs/"+ZaGlobalConfig.A_zimbraHsmPolicy,type:_LIST_,listItem:{
type:_STRING_}}
,{
id:ZaGlobalConfig.A_zimbraComponentAvailable_HSM,ref:"attrs/"+ZaGlobalConfig.A_zimbraComponentAvailable_HSM,type:_ENUM_}
,{
id:ZaGlobalConfig.A2_policy_selection_cache,ref:ZaGlobalConfig.A2_policy_selection_cache,type:_LIST_}
,{
id:ZaGlobalConfig.A2_bucket_selection_cache,ref:ZaGlobalConfig.A2_bucket_selection_cache,type:_LIST_}
,{
id:ZaGlobalConfig.A_bucketList,ref:"attrs/"+ZaGlobalConfig.A_bucketList,type:_LIST_,listItem:{
type:_STRING_}}
)
}}
if(ZaServer){
ZaServer.A_HSMstartDate="startDate";
ZaServer.A_HSMendDate="endDate";
ZaServer.A_HSMrunning="running";
ZaServer.A_HSMwasAborted="aborted";
ZaServer.A_HSMaborting="aborting";
ZaServer.A_HSMerror="error";
ZaServer.A_HSMnumBlobsMoved="numBlobsMoved";
ZaServer.A_HSMnumMailboxes="numMailboxes";
ZaServer.A_HSMtotalMailboxes="totalMailboxes";
ZaServer.A_HSMthreshold="threshold";
ZaServer.A_HSMremainingMailboxes="remainingMailboxes";
ZaServer.A_zimbraHsmPolicy="zimbraHsmPolicy";
ZaServer.A_PolicyItems="zimbraPolicyItems";
ZaServer.A_PolicyOlderThan="zimbraPolicyOlderThan";
ZaServer.A_PolicyActive="zimbraPolicyActive";
ZaServer.A_PolicyLastExecuted="zimbraPolicyLastExecuted";
ZaServer.A2_policy_selection_cache="policy_selection_cache";
ZaServer.A_SMSchedulePolicyEnabled="smSchedulePolicyEnabled";
ZaServer.A_SMSchedulePolicyStartTime="smSchedulePolicyStartTime";
ZaServer.SEC_MSG=2;
ZaServer.A_CurrentSecondaryMsgVolumeId="current_sec_msg_volume_id";
ZaServer.currentkeys[ZaServer.SEC_MSG]=ZaServer.A_CurrentSecondaryMsgVolumeId;
ZaServer.A_NewVolumeInitialStep=1;
ZaServer.A_S3_StoreProvider="AWS_S3";
ZaServer.A_Ceph_StoreProvider="CEPH_S3";
ZaServer.A_CustomS3_StoreProvider="CUSTOM_S3";
ZaServer.A_EMC_StoreProvider="EMC_S3";
ZaServer.A_NetApp_StoreProvider="STORAGE_GRID_S3";
ZaServer.A_OpenIO_StoreProvider="OPENIO";
ZaServer.A_Scality_StoreProvider="SCALITY_S3";
ZaServer.A_VolumeStoreType="storeType";
ZaServer.A_VolumeStoreTypeInternal=1;
ZaServer.A_VolumeStoreTypeExternal=2;
ZaServer.A_VolumeStorageType="storageType";
ZaServer.A_VolumeStorageTypeInternal="Internal";
ZaServer.A_VolumeStorageTypeS3="S3";
ZaServer.A_VolumeStorageTypeCeph="Ceph";
ZaServer.A_VolumeStorageTypeCustomS3="Custom S3";
ZaServer.A_VolumeStorageTypeEMC="EMC";
ZaServer.A_VolumeStorageTypeNetApp="NetApp";
ZaServer.A_VolumeStorageTypeOpenIO="OpenIO";
ZaServer.A_VolumeStorageTypeScality="ScalityS3";
ZaServer.A_VolumePrefix="volumePrefix";
ZaServer.A_CompatibleS3Bucket="compatibleS3Bucket";
ZaServer.A_InfrequentAccess="useInFrequentAccess";
ZaServer.A_InfrequentAccessThreshold="useInFrequentAccessThreshold";
ZaServer.A_IntelligentTiering="intelligentTiering";
ZaServer.A_UnifiedStorage="unifiedStorage";
ZaServer.A_StoreProvider="storeProvider";
ZaServer.A_BucketName="bucketName";
ZaServer.A_AccessKey="accessKey";
ZaServer.A_SecretKey="secretKey";
ZaServer.A_URL="url";
ZaServer.A_Region="region";
ZaServer.A_DestinationPath="destinationPath";
ZaServer.A_OpenIOAccount="account";
ZaServer.A_OpenIONameSpace="nameSpace";
ZaServer.A_OpenIOProxyPort="proxyPort";
ZaServer.A_OpenIOAccountPort="accountPort";
ZaServer.A_DefaultRegion="GovCloud";
ZaServer.A_UseCustomSM="useCustomSM";
ZaServer.A_StoreManager="storeManager";
ZaServer.A_DefaultStoreManagerInternal="com.zimbra.cs.store.file.FileBlobStore";
ZaServer.A_DefaultStoreManagerExternal="com.zimbra.storemanagers.store.GenericStoreManager";
ZaServer.LBL_VolumeRootPath=com_zimbra_hsm.VM_VolumeRootPath;
ZaServer.volumeTypeChoices=new XFormChoices({
1:com_zimbra_hsm.VM_HSM_PrimaryMsg,2:com_zimbra_hsm.VM_HSM_SecMsg,10:ZaMsg.VM_VOLUME_Index}
,XFormChoices.HASH);
ZaServer.externalVolumeTypeChoices=new XFormChoices({
1:com_zimbra_hsm.VM_HSM_PrimaryMsg,2:com_zimbra_hsm.VM_HSM_SecMsg}
,XFormChoices.HASH);
ZaServer.HSM_StatusChoices={
0:com_zimbra_hsm.VM_HSM_Idle,1:com_zimbra_hsm.VM_HSM_Running};
StoreManager_XModelItem=function(){};
XModelItemFactory.createItemType("_STORE_MANAGER_CLASS_","store_manager_class",StoreManager_XModelItem);
StoreManager_XModelItem.prototype.pattern=/^([a-zA-Z]+(\.[a-zA-Z]+)+)$/i;
StoreManager_XModelItem.prototype.validateType=function(e){
if(e){
if(!AjxUtil.isString(e)){
throw this.getModel().getErrorMessage("notAString",e)
}else{
if(this.pattern.test(e)){
return e
}else{
throw this.getModel().getErrorMessage(com_zimbra_hsm.VM_Error_InvalidStoreManagerPath,e)
}}}};
LinuxPath_XModelItem=function(){};
XModelItemFactory.createItemType("_LINUX_PATH_","linux_path",LinuxPath_XModelItem);
LinuxPath_XModelItem.prototype.pattern=/^(\/[\w-.]+)+\/?$/i;
LinuxPath_XModelItem.prototype.validateType=function(e){
if(e){
if(!AjxUtil.isString(e)){
throw this.getModel().getErrorMessage("notAString",e)
}else{
if(this.pattern.test(e)){
return e
}else{
throw this.getModel().getErrorMessage(this.getCustomErrorMessage(),e)
}}}};
VolumeName_XModelItem=function(){};
XModelItemFactory.createItemType("_VOLUME_NAME_","volume_name",VolumeName_XModelItem);
VolumeName_XModelItem.prototype.pattern=/^[0-9a-zA-Z][0-9a-zA-Z\.\-\_]*$/i;
VolumeName_XModelItem.prototype.patternValidBegin=/^[0-9a-zA-Z]$/i;
VolumeName_XModelItem.prototype.validateType=function(e){
if(e){
if(!AjxUtil.isString(e)){
throw this.getModel().getErrorMessage("notAString",e)
}else{
if(!this.patternValidBegin.test(e.charAt(0))){
throw this.getModel().getErrorMessage(com_zimbra_hsm.VM_Error_InvalidBeginVolumeName,e)
}else{
if(this.pattern.test(e)){
return e
}else{
throw this.getModel().getErrorMessage(this.getCustomErrorMessage(),e)
}}}}};
ZaServer.volumeObjModel={
items:[{
id:ZaServer.A_isCurrentVolume,type:_ENUM_,choices:[false,true]}
,{
id:ZaServer.A_VolumeId,type:_NUMBER_}
,{
id:ZaServer.A_VolumeName,type:_STRING_}
,{
id:ZaServer.A_VolumeType,type:_ENUM_,choices:ZaServer.volumeTypes,defaultValue:ZaServer.MSG}
,{
id:ZaServer.A_VolumeRootPath,type:_STRING_}
,{
id:ZaServer.A_VolumeCompressBlobs,type:_ENUM_,choices:[false,true],defaultValue:true}
,{
id:ZaServer.A_VolumeCompressionThreshold,type:_NUMBER_,defaultValue:4096}
,{
id:ZaServer.A_InfrequentAccess,type:_ENUM_,choices:[false,true],defaultValue:false}
,{
id:ZaServer.A_InfrequentAccessThreshold,type:_NUMBER_,defaultValue:64}
,{
id:ZaServer.A_IntelligentTiering,type:_ENUM_,choices:[false,true],defaultValue:false}
,{
id:ZaServer.A_UnifiedStorage,type:_ENUM_,choices:[false,true],defaultValue:false}
,{
id:ZaServer.A_StoreManager,type:_STORE_MANAGER_CLASS_}
,{
id:"_index",type:_NUMBER_}
,{
id:ZaServer.A_VolumeName,type:_VOLUME_NAME_,required:true,customRequiredMessage:com_zimbra_hsm.VM_Error_RequiredVolumeName,customErrorMessage:com_zimbra_hsm.VM_Error_InvalidVolumeName,}
,{
id:ZaServer.A_VolumePrefix,type:_LINUX_PATH_,required:true,customRequiredMessage:com_zimbra_hsm.VM_Error_RequiredVolumePrefix,customErrorMessage:com_zimbra_hsm.VM_Error_InvalidVolumePrefix,}
,],type:_OBJECT_,};
ZaHSM.SCHEDULING_HOURS=[{
value:"00:00",label:"00:00"}
,{
value:"01:00",label:"01:00"}
,{
value:"02:00",label:"02:00"}
,{
value:"03:00",label:"03:00"}
,{
value:"04:00",label:"04:00"}
,{
value:"05:00",label:"05:00"}
,{
value:"06:00",label:"06:00"}
,{
value:"07:00",label:"07:00"}
,{
value:"08:00",label:"08:00"}
,{
value:"09:00",label:"09:00"}
,{
value:"10:00",label:"10:00"}
,{
value:"11:00",label:"11:00"}
,{
value:"12:00",label:"12:00"}
,{
value:"13:00",label:"13:00"}
,{
value:"14:00",label:"14:00"}
,{
value:"15:00",label:"15:00"}
,{
value:"16:00",label:"16:00"}
,{
value:"17:00",label:"17:00"}
,{
value:"18:00",label:"18:00"}
,{
value:"19:00",label:"19:00"}
,{
value:"20:00",label:"20:00"}
,{
value:"21:00",label:"21:00"}
,{
value:"22:00",label:"22:00"}
,{
value:"23:00",label:"23:00"}
];
if(ZaServer.myXModel){
ZaServer.volumeTypes=[ZaServer.MSG,ZaServer.SEC_MSG,ZaServer.INDEX];
if(ZaServer.volumeObjModel&&ZaServer.volumeObjModel.items){
var cnt=ZaServer.volumeObjModel.items.length;
for(var i=0;
i<cnt;
i++){
if(ZaServer.volumeObjModel.items[i].id==ZaServer.A_VolumeType){
ZaServer.volumeObjModel.items[i].choices=ZaServer.volumeTypes;
break
}}
ZaServer.myXModel.items.push({
id:ZaServer.A_zimbraHsmPolicy,ref:"attrs/"+ZaServer.A_zimbraHsmPolicy,type:_LIST_,listItem:{
type:_STRING_}}
);
ZaServer.myXModel.items.push({
id:ZaServer.A2_policy_selection_cache,ref:ZaServer.A2_policy_selection_cache,type:_LIST_}
);
ZaServer.myXModel.items.push({
id:ZaServer.A_HSMstartDate,ref:"hsm/"+ZaServer.A_HSMstartDate}
);
ZaServer.myXModel.items.push({
id:ZaServer.A_HSMendDate,ref:"hsm/"+ZaServer.A_HSMendDate}
);
ZaServer.myXModel.items.push({
id:ZaServer.A_HSMrunning,ref:"hsm/"+ZaServer.A_HSMrunning,type:_NUMBER_}
);
ZaServer.myXModel.items.push({
id:ZaServer.A_HSMwasAborted,ref:"hsm/"+ZaServer.A_HSMwasAborted,type:_NUMBER_}
);
ZaServer.myXModel.items.push({
id:ZaServer.A_HSMaborting,ref:"hsm/"+ZaServer.A_HSMaborting,type:_ENUM_,choices:[false,true]}
);
ZaServer.myXModel.items.push({
id:ZaServer.A_HSMerror,ref:"hsm/"+ZaServer.A_HSMerror,type:_STRING_}
);
ZaServer.myXModel.items.push({
id:ZaServer.A_HSMnumBlobsMoved,ref:"hsm/"+ZaServer.A_HSMnumBlobsMoved,type:_NUMBER_}
);
ZaServer.myXModel.items.push({
id:ZaServer.A_HSMnumMailboxes,ref:"hsm/"+ZaServer.A_HSMnumMailboxes,type:_NUMBER_}
);
ZaServer.myXModel.items.push({
id:ZaServer.A_HSMtotalMailboxes,ref:"hsm/"+ZaServer.A_HSMtotalMailboxes,type:_NUMBER_}
);
ZaServer.myXModel.items.push({
id:ZaServer.A_HSMthreshold,ref:"hsm/"+ZaServer.A_HSMthreshold,type:_NUMBER_}
);
ZaServer.myXModel.items.push({
id:ZaServer.A_HSMremainingMailboxes,ref:"hsm/"+ZaServer.A_HSMremainingMailboxes,type:_NUMBER_}
);
ZaServer.myXModel.items.push({
id:"errorMsg",ref:"hsm/errorMsg",type:_STRING_}
);
ZaServer.myXModel.items.push({
id:"progressMsg",ref:"hsm/progressMsg",type:_STRING_}
);
ZaServer.myXModel.items.push({
id:ZaServer.A_CurrentSecondaryMsgVolumeId,ref:ZaServer.A_CurrentSecondaryMsgVolumeId,type:_NUMBER_}
);
ZaServer.myXModel.items.push({
id:ZaServer.A_SMSchedulePolicyEnabled,ref:"hsm/"+ZaServer.A_SMSchedulePolicyEnabled,type:_ENUM_,choices:[false,true]}
);
ZaServer.myXModel.items.push({
id:ZaServer.A_SMSchedulePolicyStartTime,ref:"hsm/"+ZaServer.A_SMSchedulePolicyStartTime,type:_STRING_,choices:ZaHSM.SCHEDULING_HOURS}
);
ZaServer.myXModel.items.push({
id:"_pollHandler",ref:"hsm/_pollHandler"}
)
}
ZaServer.prototype.createVolume=function(n){
if(!n){
return false
}
var o=AjxSoapDoc.create("CreateVolumeRequest",ZaZimbraAdmin.URN,null);
var r=o.set("volume",null);
r.setAttribute("type",n[ZaServer.A_VolumeType]);
r.setAttribute("name",n[ZaServer.A_VolumeName]);
r.setAttribute("rootpath",n[ZaServer.A_VolumeRootPath]);
r.setAttribute("compressBlobs",n[ZaServer.A_VolumeCompressBlobs]);
r.setAttribute("compressionThreshold",n[ZaServer.A_VolumeCompressionThreshold]);
r.setAttribute("storeType",n[ZaServer.A_VolumeStoreType]);
r.setAttribute("storeManagerClass",n[ZaServer.A_StoreManager]);
if(n[ZaServer.A_VolumeStoreType]===ZaServer.A_VolumeStoreTypeExternal&&n[ZaServer.A_VolumeStorageType]!==ZaServer.A_VolumeStorageTypeOpenIO){
var s=o.set("volumeExternalInfo",null,r);
s.setAttribute("volumePrefix",n[ZaServer.A_VolumePrefix]);
s.setAttribute("storageType",ZaServer.A_VolumeStorageTypeS3);
s.setAttribute("globalBucketConfigId",n[ZaServer.A_CompatibleS3Bucket]);
s.setAttribute("useInFrequentAccess",n[ZaServer.A_InfrequentAccess]);
s.setAttribute("useIntelligentTiering",n[ZaServer.A_IntelligentTiering]);
s.setAttribute("unified",n[ZaServer.A_UnifiedStorage]);
s.setAttribute("useInFrequentAccessThreshold",n[ZaServer.A_InfrequentAccessThreshold])
}else{
if(n[ZaServer.A_VolumeStorageType]===ZaServer.A_VolumeStorageTypeOpenIO){
var s=o.set("volumeExternalOpenIoInfo",null,r);
s.setAttribute("storageType",ZaServer.A_OpenIO_StoreProvider);
s.setAttribute("url",n[ZaServer.A_URL]);
s.setAttribute("account",n[ZaServer.A_OpenIOAccount]);
s.setAttribute("nameSpace",n[ZaServer.A_OpenIONameSpace]);
s.setAttribute("proxyPort",n[ZaServer.A_OpenIOProxyPort]);
s.setAttribute("accountPort",n[ZaServer.A_OpenIOAccountPort])
}}
var l={
soapDoc:o,targetServer:this.id,asyncMode:false,};
var t={
controller:ZaApp.getInstance().getCurrentController(),busyMsg:ZaMsg.BUSY_CREATE_VOL,};
var e=ZaRequestMgr.invoke(l,t);
if(e.Body&&e.Body.CreateVolumeResponse&&e.Body.CreateVolumeResponse.volume){
return e.Body.CreateVolumeResponse.volume[0][ZaServer.A_VolumeId]
}};
ZaServer.parseHSMStatusResponse=function(e,s){
if(!s){
s=new ZaReindexMailbox()
}
if(!e){
s.status=null;
return
}
if(!s.hsm){
s.hsm=new Object();
s.hsm.pollInterval=500
}
if(e.isException&&e.isException()){
s.hsm.errorMsg=e.getException().detail+"\n"+e.getException().msg;
s.hsm[ZaServer.A_HSMerror]=String(ZaMsg.FAILED_HSM).replace("{0}",e.getException().code);
s.hsm[ZaServer.A_HSMrunning]=0
}else{
s.hsm.errorMsg="";
if(!e){
return
}
var n;
if(e.getResponse){
n=e.getResponse()
}else{
if(e.Body.GetHsmStatusResponse||e.Body.HsmResponse||e.Body.AbortHsmResponse||e.Body.ScheduleSMPolicyResponse){
n=e
}}
if(!n){
return
}
if(n.Body.ScheduleSMPolicyResponse){
var t=n.Body.ScheduleSMPolicyResponse;
var o=parseInt(t[ZaServer.A_SMSchedulePolicyEnabled],10);
s.hsm[ZaServer.A_SMSchedulePolicyEnabled]=o?true:false;
s.hsm[ZaServer.A_SMSchedulePolicyStartTime]=t[ZaServer.A_SMSchedulePolicyStartTime]
}else{
if(n.Body.HsmResponse){
s.hsm[ZaServer.A_HSMrunning]=1;
s.hsm[ZaServer.A_HSMwasAborted]=0;
s.hsm[ZaServer.A_HSMnumMailboxes]=0
}else{
if(n.Body.AbortHsmResponse){
var o=parseInt(n.Body.AbortHsmResponse[ZaServer.A_HSMwasAborted]);
s.hsm[ZaServer.A_HSMwasAborted]=(o==NaN)?0:o
}else{
var t=n.Body.GetHsmStatusResponse?n.Body.GetHsmStatusResponse:(e.Body.GetHsmStatusResponse?e.Body.GetHsmStatusResponse:null);
s.hsm[ZaServer.A_HSMstartDate]=t[ZaServer.A_HSMstartDate];
s.hsm[ZaServer.A_HSMendDate]=t[ZaServer.A_HSMendDate];
var o=parseInt(t[ZaServer.A_HSMrunning]);
s.hsm[ZaServer.A_HSMrunning]=o||0;
o=parseInt(t[ZaServer.A_HSMwasAborted]);
s.hsm[ZaServer.A_HSMwasAborted]=o||0;
o=parseInt(t[ZaServer.A_HSMaborting]);
s.hsm[ZaServer.A_HSMaborting]=o||0;
s.hsm[ZaServer.A_HSMerror]=t[ZaServer.A_HSMerror];
s.hsm[ZaServer.A_HSMnumBlobsMoved]=t[ZaServer.A_HSMnumBlobsMoved];
s.hsm[ZaServer.A_HSMnumMailboxes]=t[ZaServer.A_HSMnumMailboxes];
s.hsm[ZaServer.A_HSMtotalMailboxes]=t[ZaServer.A_HSMtotalMailboxes];
s.hsm[ZaServer.A_HSMthreshold]=t[ZaServer.A_HSMthreshold];
s.hsm[ZaServer.A_HSMremainingMailboxes]=s.hsm[ZaServer.A_HSMtotalMailboxes]-s.hsm[ZaServer.A_HSMnumMailboxes];
if(!s.hsm[ZaServer.A_HSMrunning]&&!s.hsm[ZaServer.A_HSMnumBlobsMoved]&&!s.hsm[ZaServer.A_HSMtotalMailboxes]&&!s.hsm[ZaServer.A_HSMremainingMailboxes]){
s.hsm.progressMsg=String(ZaMsg.HSM_InfoUnavailable)
}else{
if(s.hsm[ZaServer.A_HSMaborting]){
s.hsm.progressMsg=com_zimbra_hsm.VM_HSM_AbortingSession
}else{
s.hsm.progressMsg=String(ZaMsg.HSM_ProcessStatus).replace("{0}",s.hsm[ZaServer.A_HSMnumBlobsMoved]).replace("{1}",s.hsm[ZaServer.A_HSMnumMailboxes]).replace("{2}",s.hsm[ZaServer.A_HSMremainingMailboxes])
}}}}}
if(s.hsm[ZaServer.A_HSMrunning]==0&&s.hsm[ZaServer.A_HSMstartDate]&&s.hsm[ZaServer.A_HSMendDate]){
s.hsm.progressMsg=String(ZaMsg.HSM_StatusReport).replace("{0}",AjxBuffer.concat(AjxDateUtil.simpleComputeDateStr(new Date(parseInt(s.hsm[ZaServer.A_HSMstartDate]))),"&nbsp;",AjxDateUtil.computeTimeString(new Date(parseInt(s.hsm[ZaServer.A_HSMstartDate]))))).replace("{1}",AjxBuffer.concat(AjxDateUtil.simpleComputeDateStr(new Date(parseInt(s.hsm[ZaServer.A_HSMendDate]))),"&nbsp;",AjxDateUtil.computeTimeString(new Date(parseInt(s.hsm[ZaServer.A_HSMendDate])))))
}}};
ZaServer.getScheduledPolicy=function(s){
var o=AjxSoapDoc.create("GetScheduleSMPolicyRequest",ZaZimbraAdmin.URN,null);
var l=o.set("server","");
l.setAttribute("name",s.name);
var t={
controller:ZaApp.getInstance().getCurrentController(),busyMsg:ZaMsg.BUSY_GET_SERVER,showBusy:true,busyId:Dwt.getNextId(),};
var c=function(d,e){
if(d.busyId){
ZaApp.getInstance().getAppCtxt().getShell().setBusy(false,d.busyId)
}
if(!e||e.isException()){
ZaApp.getInstance().getCurrentController().popupErrorDialog(ZaMsg.SERVER_ERROR,e.getException());
return
}
var u=e.getResponse();
ZaServer.parseHSMStatusResponse(u,this);
ZaServer.parseHSMStatusResponse(u,ZaApp.getInstance().getCurrentController()._view.getObject())
};
var r=new Object();
r.soapDoc=o;
r.asyncMode=true;
r.useXml=true;
r.callback=new AjxCallback(s,c,t);
try{
ZaRequestMgr.invoke(r,t)
}
catch(n){
ZaApp.getInstance().getCurrentController().popupErrorDialog(ZaMsg.ERROR_UNKNOWN,n)
}};
ZaServer.getHSMStatus=function(s){
var o=AjxSoapDoc.create("GetHsmStatusRequest","urn:zimbraAdmin",null);
var t={
controller:ZaApp.getInstance().getCurrentController(),busyMsg:ZaMsg.BUSY_GET_SERVER,showBusy:false,};
var r=new Object();
r.soapDoc=o;
r.targetServer=s.id;
r.asyncMode=true;
r.useXml=true;
r.callback=new AjxCallback(s,ZaHSM.statusCallback,t);
try{
ZaRequestMgr.invoke(r,t)
}
catch(n){
ZaApp.getInstance().getCurrentController().popupErrorDialog(ZaMsg.ERROR_UNKNOWN,n)
}};
ZaServer.abortHSMSession=function(e){
var o=AjxSoapDoc.create("AbortHsmRequest","urn:zimbraAdmin",null);
o.getMethod().setAttribute("action","cancel");
var r;
try{
var n=new ZmCsfeCommand();
var s=new Object();
s.soapDoc=o;
s.targetServer=e;
s.useXml=true;
s.asyncMode=false;
s.noAuthToken=true;
r=n.invoke(s)
}
catch(t){
r=new ZmCsfeResult();
r.set(t,true)
}
return r
};
ZaServer.startHSMSession=function(e){
var o=AjxSoapDoc.create("HsmRequest","urn:zimbraAdmin",null);
var r;
try{
var n=new ZmCsfeCommand();
var s=new Object();
s.soapDoc=o;
s.targetServer=e;
s.useXml=true;
s.asyncMode=false;
s.noAuthToken=true;
r=n.invoke(s)
}
catch(t){
r=new ZmCsfeResult();
r.set(t,true)
}
return r
};
if(ZaItem.modelExtensions.ZaServer){
ZaItem.modelExtensions.ZaServer.push("hsm")
}}}
ZaHSM.secMessageVolChoices=new XFormChoices([],XFormChoices.OBJECT_LIST,ZaServer.A_VolumeId,ZaServer.A_VolumeName);
ZaHSM.serverLoad=function(){
if(!ZaApp.getInstance().getCurrentController()._view){
if(this.attrs[ZaServer.A_zimbraMailClientServiceEnabled]){
if(ZaGlobalConfig.getInstance().attrs[ZaGlobalConfig.A_zimbraComponentAvailable_HSM]){
ZaServer.getHSMStatus(this);
ZaServer.getScheduledPolicy(this)
}}}};
if(ZaItem.loadMethods.ZaServer){
ZaItem.loadMethods.ZaServer.push(ZaHSM.serverLoad)
}
ZaHSM.serverInit=function(){
this.hsm=new Object();
this.hsm.pollInterval=500
};
if(ZaItem.initMethods.ZaServer){
ZaItem.initMethods.ZaServer.push(ZaHSM.serverInit)
}
ZaHSM.scheduleSMPolicy=function(l){
if(this.hsm[ZaServer.A_SMSchedulePolicyEnabled]!==l.hsm[ZaServer.A_SMSchedulePolicyEnabled]||this.hsm[ZaServer.A_SMSchedulePolicyStartTime]!==l.hsm[ZaServer.A_SMSchedulePolicyStartTime]){
this.hsm[ZaServer.A_SMSchedulePolicyEnabled]=l.hsm[ZaServer.A_SMSchedulePolicyEnabled];
this.hsm[ZaServer.A_SMSchedulePolicyStartTime]=l.hsm[ZaServer.A_SMSchedulePolicyStartTime];
var n=AjxSoapDoc.create("ScheduleSMPolicyRequest",ZaZimbraAdmin.URN,null);
var t=n.set("server","");
t.setAttribute("name",l.name);
t=n.set("smSchedulePolicyEnabled",l.hsm[ZaServer.A_SMSchedulePolicyEnabled]);
t=n.set("smSchedulePolicyStartTime",l.hsm[ZaServer.A_SMSchedulePolicyStartTime]);
var o={
controller:ZaApp.getInstance().getCurrentController(),busyMsg:ZaMsg.BUSY_GET_SERVER,showBusy:true,busyId:Dwt.getNextId(),};
var c=function(d,e){
if(d.busyId){
ZaApp.getInstance().getAppCtxt().getShell().setBusy(false,d.busyId)
}
if(!e||e.isException()){
ZaApp.getInstance().getCurrentController().popupErrorDialog(ZaMsg.SERVER_ERROR,e.getException());
return
}
var u=e.getResponse();
ZaServer.parseHSMStatusResponse(u,this);
ZaServer.parseHSMStatusResponse(u,ZaApp.getInstance().getCurrentController()._view.getObject());
ZaApp.getInstance().getCurrentController()._view._localXForm.refresh()
};
var r=new Object();
r.soapDoc=n;
r.noAuthToken=true;
r.useXml=true;
r.asyncMode=true;
r.callback=new AjxCallback(this,c,o);
try{
ZaRequestMgr.invoke(r,o)
}
catch(s){
ZaApp.getInstance().getCurrentController().popupErrorDialog(ZaMsg.ERROR_UNKNOWN,s)
}}};
ZaItem.modifyMethods.ZaServer.push(ZaHSM.scheduleSMPolicy);
ZaHSM.setViewMethod=function(n){
if(n[ZaServer.A_Volumes]){
n[ZaServer.A_Volumes].sort(ZaServer.compareVolumesByName);
n[ZaServer.A_Volumes]._version=n[ZaServer.A_Volumes]._version?n[ZaServer.A_Volumes]._version:1;
var o=n[ZaServer.A_Volumes].length;
var e=[];
for(var t=0;
t<o;
t++){
if(n[ZaServer.A_Volumes][t][ZaServer.A_VolumeType]==ZaServer.SEC_MSG){
e.push(n[ZaServer.A_Volumes][t])
}}}
ZaHSM.secMessageVolChoices.setChoices(e);
ZaHSM.secMessageVolChoices.dirtyChoices()
};
if(ZaController.setViewMethods.ZaServerController){
ZaController.setViewMethods.ZaServerController.push(ZaHSM.setViewMethod)
}
ZaHSM.setObjectMethod=function(n){
if(this._containedObject&&this._containedObject.attrs&&!this._containedObject.attrs[ZaServer.A_zimbraHsmPolicy]){
this._containedObject.attrs[ZaServer.A_zimbraHsmPolicy]=ZaGlobalConfig.getInstance().attrs[ZaServer.A_zimbraHsmPolicy]
}
if(n[ZaServer.A_Volumes]){
n[ZaServer.A_Volumes].sort(ZaServer.compareVolumesByName);
n[ZaServer.A_Volumes]._version=n[ZaServer.A_Volumes]._version?n[ZaServer.A_Volumes]._version:1;
var o=n[ZaServer.A_Volumes].length;
var e=[];
for(var t=0;
t<o;
t++){
if(n[ZaServer.A_Volumes][t][ZaServer.A_VolumeType]==ZaServer.SEC_MSG){
e.push(n[ZaServer.A_Volumes][t])
}}}
ZaHSM.secMessageVolChoices.setChoices(e);
ZaHSM.secMessageVolChoices.dirtyChoices()
};
if(ZaServerXFormView.setObjectMethods){
ZaServerXFormView.setObjectMethods.push(ZaHSM.setObjectMethod)
}
ZaHSM.GlobalConfigXFormModifier=function(t){
if(ZaSettings.ENABLED_UI_COMPONENTS[ZaSettings.CONFIG_HSM_TAB]||ZaSettings.ENABLED_UI_COMPONENTS[ZaSettings.CARTE_BLANCHE_UI]){
var e=t.items[1];
ZaHSM.GlobalConfigTabIndex=++this.TAB_INDEX;
e.choices.push({
value:ZaHSM.GlobalConfigTabIndex,label:ZaMsg.NAD_Tab_HSM}
);
t.items[2].items.push({
type:_ZATABCASE_,visibilityChecks:[[XForm.checkInstanceValue,ZaModel.currentTab,ZaHSM.GlobalConfigTabIndex],[XForm.checkInstanceValue,ZaGlobalConfig.A_zimbraComponentAvailable_HSM,true]],colSizes:["auto"],numCols:1,width:"98%",items:[{
type:_HSM_POLICY_,ref:ZaGlobalConfig.A_zimbraHsmPolicy,label:null,width:"100%",labelLocation:_NONE_}
,{
type:_HSM_BUCKET_,ref:ZaGlobalConfig.A_bucketList,label:null,width:"100%",labelLocation:_NONE_}
]}
);
t.items[2].items.push({
type:_ZATABCASE_,visibilityChecks:[[XForm.checkInstanceValue,ZaModel.currentTab,ZaHSM.GlobalConfigTabIndex],[XForm.checkInstanceValue,ZaGlobalConfig.A_zimbraComponentAvailable_HSM,false]],colSizes:["auto"],numCols:1,width:"98%",items:[{
type:_SPACER_}
,{
type:_OUTPUT_,value:ZaMsg.HSM_COMPONENT_UNAVAILABLE,width:"100%",align:_CENTER_}
]}
)
}};
ZaTabView.XFormModifiers.GlobalConfigXFormView.push(ZaHSM.GlobalConfigXFormModifier);
ZaHSM.getVolumeTypeDisplayValue=function(t){
if(!t){
return""
}
var e=parseInt(t);
switch(e){
case ZaServer.PRI_MSG:if(ZaGlobalConfig.getInstance().attrs[ZaGlobalConfig.A_zimbraComponentAvailable_HSM]){
return com_zimbra_hsm.VM_HSM_PrimaryMsg
}else{
return ZaMsg.NAD_VOLUME_Msg
}
case ZaServer.SEC_MSG:return com_zimbra_hsm.VM_HSM_SecMsg;
case ZaServer.INDEX:return ZaMsg.NAD_VOLUME_Index;
default:return t
}};
ZaHSM.whichVolumeTypeSelect=function(){
var t=this.getModel();
var e=this.getInstance();
if(ZaGlobalConfig.getInstance().attrs[ZaGlobalConfig.A_zimbraComponentAvailable_HSM]){
if(t.getInstanceValue(e,(this.__parentItem.refPath+"/"+ZaServer.A_VolumeId))){
if(this.getInstanceValue()==ZaServer.INDEX){
return 1
}else{
if(ZaServerXFormView.isCurrent.call(this)){
return 1
}else{
return 4
}}}else{
return 3
}}else{
if(t.getInstanceValue(e,(this.__parentItem.refPath+"/"+ZaServer.A_VolumeId))){
return 1
}else{
return 2
}}};
ZaHSM.isHSMComponentAvailable=function(){
return ZaGlobalConfig.getInstance().attrs[ZaGlobalConfig.A_zimbraComponentAvailable_HSM]
};
ZaHSM.handleError=function(e){
if(e[ZaServer.A_HSMerror]){
ZaApp.getInstance().getCurrentController().popupErrorDialog(e[ZaServer.A_HSMerror],{
detail:e.errorMsg||""}
)
}};
ZaHSM.pollAction=function(e){
return new AjxTimedAction(e,function(){
ZaServer.getHSMStatus(e,new AjxCallback(e,ZaHSM.statusCallback))
}
)
};
ZaHSM.statusCallback=function(t,e){
if(t.busyId){
ZaApp.getInstance().getAppCtxt().getShell().setBusy(false,t.busyId)
}
if(e instanceof AjxException||e instanceof ZmCsfeException||e instanceof AjxSoapException){
ZaApp.getInstance().getCurrentController()._handleException(e);
return
}
ZaServer.parseHSMStatusResponse(e,this);
ZaServer.parseHSMStatusResponse(e,ZaApp.getInstance().getCurrentController()._view.getObject());
ZaHSM.handleError(this.hsm);
if(this.hsm[ZaServer.A_HSMrunning]==1){
this.hsm._pollHandler=AjxTimedAction.scheduleAction(ZaHSM.pollAction(this),this.hsm.pollInterval)
}else{
if(this.hsm._pollHandler){
AjxTimedAction.cancelAction(this.hsm._pollHandler);
this.hsm._pollHandler=null
}}
ZaApp.getInstance().getCurrentController()._view._localXForm.refresh()
};
ZaHSM.ServerXFormModifier=function(d){
var u={
type:_GROUP_,id:"server_volumes_hsm_group",visibilityChecks:[[XForm.checkInstanceValue,ZaServer.A_showVolumes,true],ZaHSM.isHSMComponentAvailable],label:null,labelLocation:_NONE_,items:[{
type:_HSM_POLICY_,ref:ZaGlobalConfig.A_zimbraHsmPolicy,label:null,width:"100%",labelLocation:_NONE_}
]};
var t=d.items.length;
var r=0;
for(r=0;
r<t;
r++){
if(d.items[r].type=="switch"){
break
}}
t=d.items[r].items.length;
var s=0;
for(s=0;
s<t;
s++){
if(d.items[r].items[s].id=="server_form_volumes_tab"){
if(d.items[r].items[s].items&&d.items[r].items[s].items instanceof Array){
var e=d.items[r].items[s].items;
var m=e.length;
for(var n=0;
n<m;
n++){
if(e[n].id=="server_form_current_vol_group"){
if(e[n].items&&e[n].items instanceof Array){
var c=e[n].items.length;
for(var o=0;
o<c;
o++){
e[n].items[c-1].width=150;
if(e[n].items[o].ref==ZaServer.A_CurrentMsgVolumeId){
e[n].items[o].width=150;
e[n].items[o].label=AjxMessageFormat.format(com_zimbra_hsm.Label_VM_CurrentpriMessageVolume,ZabMsg.MessageContent);
e[n].items.splice(o+1,0,{
type:_OSELECT1_,editable:false,valueChangeEventSources:[ZaServer.A_Volumes,ZaServer.A_RemovedVolumes],ref:ZaServer.A_CurrentSecondaryMsgVolumeId,choices:ZaHSM.secMessageVolChoices,label:AjxMessageFormat.format(com_zimbra_hsm.Label_VM_CurrentSecMessageVolume,ZabMsg.MessageContent),visibilityChecks:[function(){
return ZaGlobalConfig.getInstance().attrs[ZaGlobalConfig.A_zimbraComponentAvailable_HSM]
}
],enableDisableChecks:[[XForm.checkInstanceValue,ZaServer.A_showVolumes,true]],width:150,}
);
break
}}
break
}}}
d.items[r].items[s].items.push(u)
}}}};
ZaTabView.XFormModifiers.ZaServerXFormView.push(ZaHSM.ServerXFormModifier);
ZaServerXFormView.addVolume=function(){
if(this.parent.addVolumeDlg){
this.parent.addVolumeDlg.popdown();
var s=this.parent.addVolumeDlg.getObject();
var d=this.getInstance();
var c=[];
var o=this.getModel().getInstanceValue(this.getInstance(),ZaServer.A_Volumes);
var n=o.length;
for(var r=0;
r<n;
r++){
c[r]=o[r]
}
this.getModel().setInstanceValue(this.getInstance(),ZaServer.A2_volume_selection_cache,[]);
if(s[ZaServer.A_VolumeStorageType]===ZaServer.A_VolumeStorageTypeOpenIO){
s[ZaServer.A_VolumePrefix]="/"+ZaServer.A_OpenIO_StoreProvider+"-"+s[ZaServer.A_VolumeName]
}
c.push(s);
c._version=o._version+1;
c.sort(ZaServer.compareVolumesByName);
var n=c.length;
var e=[];
var t=[];
var l=[];
for(var r=0;
r<n;
r++){
if(c[r][ZaServer.A_VolumeType]==ZaServer.INDEX){
e.push(c[r])
}else{
if(c[r][ZaServer.A_VolumeType]==ZaServer.MSG){
t.push(c[r])
}else{
if(c[r][ZaServer.A_VolumeType]==ZaServer.SEC_MSG){
l.push(c[r])
}}}}
ZaServerXFormView.indexVolChoices.setChoices(e);
ZaServerXFormView.indexVolChoices.dirtyChoices();
ZaServerXFormView.messageVolChoices.setChoices(t);
ZaServerXFormView.messageVolChoices.dirtyChoices();
ZaHSM.secMessageVolChoices.setChoices(l);
ZaHSM.secMessageVolChoices.dirtyChoices();
this.getModel().setInstanceValue(this.getInstance(),ZaServer.A_Volumes,c);
this.parent.setDirty(true)
}};
ZaServerXFormView.addButtonListener=function(){
var e=this.getInstance();
var o=this.getForm().parent;
if(!o.addVolumeDlg){
o.addVolumeDlg=new ZaNewVolumeXWizard(ZaApp.getInstance().getAppCtxt().getShell(),null);
o.addVolumeDlg.registerCallback(DwtWizardDialog.FINISH_BUTTON,ZaServerXFormView.addVolume,this.getForm(),null)
}
var t={};
t[ZaServer.A_VolumeId]=e.newVolID--;
t[ZaServer.A_VolumeStoreType]=1;
t[ZaServer.A_VolumeStorageType]=ZaServer.A_VolumeStorageTypeInternal;
t[ZaServer.A_VolumeRootPath]="/opt/zimbra";
t[ZaServer.A_VolumeCompressBlobs]=false;
t[ZaServer.A_VolumeCompressionThreshold]=4096;
t[ZaServer.A_InfrequentAccess]=false;
t[ZaServer.A_InfrequentAccessThreshold]=65536;
t[ZaServer.A_IntelligentTiering]=false;
t[ZaServer.A_UnifiedStorage]=false;
t[ZaServer.A_Region]=ZaServer.A_DefaultRegion;
t[ZaServer.A_VolumeType]=ZaServer.MSG;
t[ZaServer.A_isCurrent]=false;
o.addVolumeDlg.setObject(t);
o.addVolumeDlg.popup()
};
ZaServerXFormView.editButtonListener=function(){
var e=this.getInstance();
if(e.volume_selection_cache&&e.volume_selection_cache[0]){
var s=this.getForm().parent;
if(!s.editVolumeDlg){
s.editVolumeDlg=new ZaUpdateVolumeXDialog(ZaApp.getInstance().getAppCtxt().getShell(),"550px","150px",ZaMsg.VM_Edit_Volume_Title);
s.editVolumeDlg.registerCallback(DwtDialog.OK_BUTTON,ZaServerXFormView.updateVolume,this.getForm(),null)
}
var n={};
n[ZaServer.A_VolumeId]=e.volume_selection_cache[0][ZaServer.A_VolumeId];
n[ZaServer.A_VolumeName]=e.volume_selection_cache[0][ZaServer.A_VolumeName];
n[ZaServer.A_VolumeRootPath]=e.volume_selection_cache[0][ZaServer.A_VolumeRootPath];
n[ZaServer.A_VolumeCompressBlobs]=e.volume_selection_cache[0][ZaServer.A_VolumeCompressBlobs];
n[ZaServer.A_VolumeCompressionThreshold]=e.volume_selection_cache[0][ZaServer.A_VolumeCompressionThreshold];
n[ZaServer.A_VolumeType]=e.volume_selection_cache[0][ZaServer.A_VolumeType];
n[ZaServer.A_VolumeStoreType]=e.volume_selection_cache[0][ZaServer.A_VolumeStoreType];
var t=this.getModel().getInstanceValue(this.getInstance(),ZaServer.A_Volumes);
for(var o=0;
o<t.length;
o++){
if(t[o][ZaServer.A_VolumeId]==n[ZaServer.A_VolumeId]||(!t[o][ZaServer.A_VolumeId]&&t[o][ZaServer.A_VolumeName]==n[ZaServer.A_VolumeName]&&t[o][ZaServer.A_VolumeRootPath]==n[ZaServer.A_VolumeRootPath])){
n._index=o;
break
}}
s.editVolumeDlg.setObject(n);
s.editVolumeDlg.popup()
}};
ZaServerXFormView.deleteButtonListener=function(){
var p=this.getInstance();
var f=[];
if(!p.volume_selection_cache){
return
}
var m=this.getInstanceValue(ZaServer.A2_volume_selection_cache);
var n=this.getInstanceValue(ZaServer.A_Volumes);
var d=n.length;
for(var l=0;
l<d;
l++){
f[l]=n[l]
}
var t=this.getInstanceValue(ZaServer.A_RemovedVolumes);
if(AjxUtil.isEmpty(t)){
t=new Array()
}
var s=m.length;
if(s&&f){
for(var l=0;
l<s;
l++){
d--;
for(var r=d;
r>=0;
r--){
if(f[r][ZaServer.A_VolumeId]==m[l][ZaServer.A_VolumeId]){
t.push(f[r]);
f.splice(r,1);
break
}}}}
f.sort(ZaServer.compareVolumesByName);
f._version=n._version+1;
var c=f.length;
var e=[];
var o=[];
var u=[];
for(var l=0;
l<c;
l++){
if(f[l][ZaServer.A_VolumeType]==ZaServer.INDEX){
e.push(f[l])
}else{
if(f[l][ZaServer.A_VolumeType]==ZaServer.MSG){
o.push(f[l])
}else{
if(f[l][ZaServer.A_VolumeType]==ZaServer.SEC_MSG){
u.push(f[l])
}}}}
ZaServerXFormView.indexVolChoices.setChoices(e);
ZaServerXFormView.indexVolChoices.dirtyChoices();
ZaServerXFormView.messageVolChoices.setChoices(o);
ZaServerXFormView.messageVolChoices.dirtyChoices();
ZaHSM.secMessageVolChoices.setChoices(u);
ZaHSM.secMessageVolChoices.dirtyChoices();
this.setInstanceValue(f,ZaServer.A_Volumes);
this.setInstanceValue([],ZaServer.A2_volume_selection_cache);
this.setInstanceValue(t,ZaServer.A_RemovedVolumes);
this.getForm().parent.setDirty(true)
};
ZaServerXFormView.updateVolume=function(){
if(this.parent.editVolumeDlg){
var r=this.parent.editVolumeDlg.getObject();
var f=this.getInstance();
var m=[];
var n=f[ZaServer.A_Volumes].length;
for(var l=0;
l<n;
l++){
m[l]=f[ZaServer.A_Volumes][l]
}
var o=false;
if(m[r._index]){
if(m[r._index][ZaServer.A_VolumeName]!==r[ZaServer.A_VolumeName]){
m[r._index][ZaServer.A_VolumeName]=r[ZaServer.A_VolumeName];
o=true
}
if(m[r._index][ZaServer.A_VolumeRootPath]!==r[ZaServer.A_VolumeRootPath]){
m[r._index][ZaServer.A_VolumeRootPath]=r[ZaServer.A_VolumeRootPath];
o=true;
if(m[r._index][ZaServer.A_isCurrent]){
ZaApp.getInstance().getCurrentController().popupWarningDialog(ZaMsg.VM_Warning_Changing_CurVolumePath)
}}
if(m[r._index][ZaServer.A_VolumeCompressBlobs]!==r[ZaServer.A_VolumeCompressBlobs]){
m[r._index][ZaServer.A_VolumeCompressBlobs]=r[ZaServer.A_VolumeCompressBlobs];
o=true
}
if(m[r._index][ZaServer.A_VolumeCompressionThreshold]!==r[ZaServer.A_VolumeCompressionThreshold]){
m[r._index][ZaServer.A_VolumeCompressionThreshold]=r[ZaServer.A_VolumeCompressionThreshold];
o=true
}
if(m[r._index][ZaServer.A_VolumeType]!==r[ZaServer.A_VolumeType]){
var c=false;
for(var s=0;
s<f.volume_selection_cache.length;
s++){
var u=f.volume_selection_cache[s].id;
if(this.getInstanceValue(ZaServer.A_CurrentIndexVolumeId)==u){
c=true;
warningMsg=AjxMessageFormat.format(ZaMsg.EditWarningAcceptMsg,[f.volume_selection_cache[0].name,"index"]);
ZaApp.getInstance().getCurrentController().popupErrorDialog(warningMsg);
return
}
if(this.getInstanceValue(ZaServer.A_CurrentMsgVolumeId)==u){
c=true;
warningMsg=AjxMessageFormat.format(ZaMsg.EditWarningAcceptMsg,[f.volume_selection_cache[0].name,"primary"]);
ZaApp.getInstance().getCurrentController().popupErrorDialog(warningMsg);
return
}
if(this.getInstanceValue(ZaServer.A_CurrentSecondaryMsgVolumeId)==u){
c=true;
warningMsg=AjxMessageFormat.format(ZaMsg.EditWarningAcceptMsg,[f.volume_selection_cache[0].name,"secondary"]);
ZaApp.getInstance().getCurrentController().popupErrorDialog(warningMsg);
return
}}
if(!c){
m[r._index][ZaServer.A_VolumeType]=r[ZaServer.A_VolumeType];
o=true
}}}
if(o){
var e=[];
var t=[];
var d=[];
for(var l=0;
l<n;
l++){
if(m[l][ZaServer.A_VolumeType]==ZaServer.MSG){
t.push(m[l])
}else{
if(m[l][ZaServer.A_VolumeType]==ZaServer.INDEX){
e.push(m[l])
}else{
if(m[l][ZaServer.A_VolumeType]==ZaServer.SEC_MSG){
d.push(m[l])
}}}}
ZaServerXFormView.indexVolChoices.setChoices(e);
ZaServerXFormView.indexVolChoices.dirtyChoices();
ZaServerXFormView.messageVolChoices.setChoices(t);
ZaServerXFormView.messageVolChoices.dirtyChoices();
ZaHSM.secMessageVolChoices.setChoices(d);
ZaHSM.secMessageVolChoices.dirtyChoices();
m._version=f[ZaServer.A_Volumes]._version+1;
this.getModel().setInstanceValue(this.getInstance(),ZaServer.A_Volumes,m);
this.getModel().setInstanceValue(this.getInstance(),ZaServer.A2_volume_selection_cache,new Array());
this.parent.setDirty(o)
}
this.parent.editVolumeDlg.popdown()
}};
HSMPolicy_XModelItem=function(){};
XModelItemFactory.createItemType("_HSM_POLICY_MODEL_","hsm_policy_model",HSMPolicy_XModelItem);
HSMPolicy_XModelItem.prototype.pattern=/([a-z,]*)(:*)(before|after)*(:*)([\+\-]*)([0-9]*)(minutes|minute|hours|hour|days|day|weeks|week|months|month|years|year)*/;
HSMPolicy_XModelItem.prototype.notInclPattern1=/not_in:([a-zA-Z]+)/;
HSMPolicy_XModelItem.prototype.notInclPattern2=/-in:([a-zA-Z]+)/;
HSMPolicy_XModelItem.prototype.isValidPattern=function(n,e){
var o=HSMPolicy_XModelItem.prototype.pattern.exec(n);
if(o){
var t=false;
o.forEach(function(s,r){
if(!s){
t=true
}
if(r===1){
t=!e
}}
);
return !t
}else{
return false
}};
HSMPolicyListView=function(s,n,o,t){
ZaListView.call(this,s,n,o,t);
var e=ZaApp.getInstance().getCurrentController()._currentObject;
if(e instanceof ZaServer){
ZaHSM.pollAction(e);
e.hsm._pollHandler=null;
if(e.hsm[ZaServer.A_HSMrunning]==1){
e.hsm._pollHandler=AjxTimedAction.scheduleAction(ZaHSM.pollAction(e),e.hsm.pollInterval)
}else{
if(e.hsm._pollHandler){
AjxTimedAction.cancelAction(e.hsm._pollHandler)
}}}};
HSMPolicyListView.prototype=new ZaListView;
HSMPolicyListView.prototype.constructor=HSMPolicyListView;
HSMPolicyListView.prototype.toString=function(){
return"HSMPolicyListView"
};
HSMPolicyListView.prototype._createItemHtml=function(s){
var n=new Array(50);
var c=document.createElement("div");
c[DwtListView._STYLE_CLASS]="Row";
c[DwtListView._SELECTED_STYLE_CLASS]=c[DwtListView._STYLE_CLASS]+"-"+DwtCssStyle.SELECTED;
c.className=c[DwtListView._STYLE_CLASS];
this.associateItemWithElement(s,c,DwtListView.TYPE_LIST_ITEM);
var l=HSMPolicy_XFormItem.parsePolicyString(s);
var e=0;
n[e++]="<table width='100%' cellspacing='0' cellpadding='0'>";
n[e++]="<tr>";
if(this._headerList){
var o=this._headerList.length;
for(var t=0;
t<o;
t++){
var r=this._headerList[t]._field;
if(r==ZaServer.A_PolicyItems){
n[e++]="<td align=left height=20px width="+this._headerList[t]._width+">";
n[e++]=AjxStringUtil.htmlEncode(l.typeString);
n[e++]="</td>"
}else{
if(r==ZaServer.A_PolicyOlderThan){
n[e++]="<td align=left height=20px width="+this._headerList[t]._width+">";
n[e++]=AjxStringUtil.htmlEncode(l.period);
n[e++]="</td>"
}else{
n[e++]="<td align=left height=20px width="+this._headerList[t]._width+"></td>"
}}}}else{
n[e++]="<td width=100%>";
n[e++]=AjxStringUtil.htmlEncode(s);
n[e++]="</td>"
}
n[e++]="</tr></table>";
c.innerHTML=n.join("");
return c
};
HSMPolicyListView.prototype._setNoResultsHtml=function(){
var e=new AjxBuffer();
var t=document.createElement("div");
e.append("<table width='100%' cellspacing='0' cellpadding='1'>","<tr><td class='NoResults'><br>&nbsp","</td></tr></table>");
t.innerHTML=e.toString();
this._addRow(t)
};
HSMPolicyListView.prototype._sortColumn=function(t,o){
if(o){
var e=function(s,n){
return(s<n)?1:((s>n)?-1:0)
};
this.getList().sort(e)
}else{
this.getList().sort()
}};
HSMPolicyListView.prototype._getElFromItem=function(e){
return e.id?Dwt.byId(e.id):Dwt.byId(this._getItemId(e))
};
HsmEditPolicyXDialog=function(o,e,t,n){
if(arguments.length==0){
return
}
this._standardButtons=[DwtDialog.OK_BUTTON,DwtDialog.CANCEL_BUTTON];
ZaXDialog.call(this,o,null,n,e,t);
this._containedObject={};
this.initForm(ZaServer.A_zimbraHsmPolicy,this.getMyXForm());
this._helpURL=HsmEditPolicyXDialog.helpURL;
this._localXForm.addListener(DwtEvent.XFORMS_FORM_DIRTY_CHANGE,new AjxListener(this,HsmEditPolicyXDialog.prototype.handleXFormChange))
};
HsmEditPolicyXDialog.prototype=new ZaXDialog;
HsmEditPolicyXDialog.prototype.constructor=HsmEditPolicyXDialog;
HsmEditPolicyXDialog.prototype.popup=function(e,t){
ZaXDialog.prototype.popup.call(this,t);
this._validItemsToMove=e
};
HsmEditPolicyXDialog.helpURL=location.pathname+ZaUtil.HELP_URL+"managing_servers/adding_a_new_storage_volume_to_the_server.htm?locid="+AjxEnv.DEFAULT_LOCALE;
HsmEditPolicyXDialog.prototype.handleXFormChange=function(){
if(this._localXForm.instance&&HSMPolicy_XModelItem.prototype.isValidPattern(this._localXForm.instance.zimbraHsmPolicy.zimbraHsmPolicy,this._validItemsToMove)){
this._button[DwtDialog.OK_BUTTON].setEnabled(true)
}else{
this._button[DwtDialog.OK_BUTTON].setEnabled(false)
}};
HsmEditPolicyXDialog.prototype.getMyXForm=function(){
var t={
type:_CHECKBOX_,ref:".",label:com_zimbra_hsm.ItemType_Messages,labelCssStyle:"width:80px",getDisplayValue:HSMPolicy_XFormItem.checkBoxGetDisplayValue,elementChanged:HSMPolicy_XFormItem.checkBoxElementChanged,myType:"message",trueValue:true,falseValue:false,bmolsnr:true,forceUpdate:true,};
var l={
type:_CHECKBOX_,ref:".",label:com_zimbra_hsm.ItemType_Documents,labelCssStyle:"width:80px",getDisplayValue:HSMPolicy_XFormItem.checkBoxGetDisplayValue,elementChanged:HSMPolicy_XFormItem.checkBoxElementChanged,myType:"document",trueValue:true,falseValue:false,bmolsnr:true,forceUpdate:true,};
var f={
type:_CHECKBOX_,ref:".",label:com_zimbra_hsm.ItemType_Appointments,labelCssStyle:"width:80px",getDisplayValue:HSMPolicy_XFormItem.checkBoxGetDisplayValue,elementChanged:HSMPolicy_XFormItem.checkBoxElementChanged,myType:"appointment",trueValue:true,falseValue:false,bmolsnr:true,forceUpdate:true,};
var g={
type:_CHECKBOX_,ref:".",label:com_zimbra_hsm.ItemType_Contacts,labelCssStyle:"width:80px",getDisplayValue:HSMPolicy_XFormItem.checkBoxGetDisplayValue,elementChanged:HSMPolicy_XFormItem.checkBoxElementChanged,myType:"contact",trueValue:true,falseValue:false,bmolsnr:true,forceUpdate:true,};
var p={
type:_CHECKBOX_,ref:".",label:com_zimbra_hsm.ItemType_Tasks,labelCssStyle:"width:80px",getDisplayValue:HSMPolicy_XFormItem.checkBoxGetDisplayValue,elementChanged:HSMPolicy_XFormItem.checkBoxElementChanged,myType:"task",trueValue:true,falseValue:false,bmolsnr:true,forceUpdate:true,};
var n={
ref:".",type:_TEXTFIELD_,width:"93%",bmolsnr:true,label:com_zimbra_hsm.PolicyString,labelCssStyle:"text-align:left;",labelLocation:_LEFT_,enableDisableChecks:false,};
var c={
type:_GROUP_,ref:".",label:com_zimbra_hsm.ItemTypes4Hsm,labelCssStyle:"text-align:left;",items:[t,l,p,f,g]};
var y={
type:_CHECKBOX_,ref:".",labelCssStyle:"width:80px",getDisplayValue:HSMPolicy_XFormItem.checkBoxGetDisplayValue,elementChanged:HSMPolicy_XFormItem.checkBoxElementChanged,myOpt:"junk",trueValue:true,falseValue:false,bmolsnr:true,forceUpdate:true,label:com_zimbra_hsm.OptIncl_Junk};
var r={
type:_CHECKBOX_,ref:".",label:com_zimbra_hsm.OptIncl_Trash,labelCssStyle:"width:80px",getDisplayValue:HSMPolicy_XFormItem.checkBoxGetDisplayValue,elementChanged:HSMPolicy_XFormItem.checkBoxElementChanged,myOpt:"trash",trueValue:true,falseValue:false,bmolsnr:true,forceUpdate:true,};
var o={};
if(typeof(ZaOctopus)!="undefined"){
o={
type:_GROUP_,ref:".",label:com_zimbra_hsm.Options4Hsm,labelCssStyle:"text-align:left;",items:[r]}
}else{
o={
type:_GROUP_,ref:".",label:com_zimbra_hsm.Options4Hsm,labelCssStyle:"text-align:left;",items:[y,r]}
}
var s={
type:_TEXTFIELD_,ref:".",cssClass:"admin_xform_number_input",label:null,labelLocation:_NONE_,getDisplayValue:function(b){
var v=HSMPolicy_XModelItem.prototype.pattern.exec(b);
if(v&&v[6]){
return v[6]
}else{
return""
}}
,elementChanged:function(q,x,k){
var j=HSMPolicy_XModelItem.prototype.pattern.exec(x);
var b=String(x).substring(j[0].length);
var v;
if(Number.isNaN(+q)){
q=""
}
if(j[3]&&j[7]){
v=[j[1],j[2],j[3],j[4],j[5],HSMPolicy_XFormItem.parsePeriodPlural(q,j[7])].join("")+b
}else{
v=[j[1],"",":","before",":","-",HSMPolicy_XFormItem.parsePeriodPlural(q,"day")].join("")+b
}
this.getForm().itemChanged(this.getParentItem(),v,k)
}
,bmolsnr:true};
var u={
type:_OSELECT1_,ref:".",labelLocation:_NONE_,choices:[{
value:"year",label:AjxMsg.years}
,{
value:"month",label:AjxMsg.months}
,{
value:"week",label:AjxMsg.weeks}
,{
value:"day",label:AjxMsg.days}
,{
value:"hour",label:AjxMsg.hours}
,{
value:"minute",label:AjxMsg.minutes}
],getDisplayValue:function(b){
var v=HSMPolicy_XModelItem.prototype.pattern.exec(b);
if(v&&v[7]){
v[7]=v[7].replace(/(minute|hour|day|week|month|year)s$/,"$1");
return v[7]
}else{
return"day"
}}
,elementChanged:function(q,x,k){
var j=HSMPolicy_XModelItem.prototype.pattern.exec(x);
var b=x.substring(j[0].length);
var v;
if(j){
if(j[3]&&j[7]){
v=[j[1],j[2],j[3],j[4],j[5],HSMPolicy_XFormItem.parsePeriodPlural(j[6],q)].join("")+b
}else{
v=[j[1],"",":","before",":","-",HSMPolicy_XFormItem.parsePeriodPlural("",q)].join("")+b
}}else{
v=["",":","before",":","-","",q].join("")
}
this.getForm().itemChanged(this.getParentItem(),v,k)
}
,bmolsnr:true};
var m={
type:_GROUP_,ref:".",label:com_zimbra_hsm.MoveOlderThen,labelCssStyle:"text-align:left;",items:[s,u]};
var e={};
var d={
type:_SEPARATOR_,colSpan:3};
if(typeof(ZaOctopus)!="undefined"){
e={
type:_ZAWIZGROUP_,width:"100%",numCols:2,colSizes:["200px","*"],items:[o,d,m,d,n],ref:ZaServer.A_zimbraHsmPolicy+"/"+ZaServer.A_zimbraHsmPolicy,}
}else{
e={
type:_ZAWIZGROUP_,width:"100%",numCols:2,colSizes:["200px","*"],items:[c,d,o,d,m,d,n],ref:ZaServer.A_zimbraHsmPolicy+"/"+ZaServer.A_zimbraHsmPolicy,}
}
return{
width:"100%",items:[e]}
};
HSMPolicy_XFormItem=function(){};
XFormItemFactory.createItemType("_HSM_POLICY_","hsm_policy",HSMPolicy_XFormItem,Composite_XFormItem);
HSMPolicy_XFormItem.prototype.visibilityChecks=[ZaItem.hasReadPermission];
HSMPolicy_XFormItem.prototype.enableDisableChecks=[ZaItem.hasWritePermission];
HSMPolicy_XFormItem.prototype.showPlusMinus=false;
HSMPolicy_XFormItem.prototype.numCols=1;
HSMPolicy_XFormItem.prototype.colSizes=["600"];
HSMPolicy_XFormItem.prototype.colSpan="*";
L_Dwt_List_XFormItem=function(){};
XFormItemFactory.createItemType("_L_DWT_LIST_","l_dwt_list",L_Dwt_List_XFormItem,Dwt_List_XFormItem);
L_Dwt_List_XFormItem.prototype.setItems=function(e){
if(typeof(e)==="string"){
e=[e]
}
var r=this.widget.getList();
var c=r?r.getArray():new Array();
var o=new Array();
var d=this.getInheritedProperty("defaultColumnSortable");
if(e&&e.length>0){
if(this.getForceUpdate()||Dwt_List_XFormItem.isItemsChanged(e,c)){
var s=this.getInheritedProperty("preserveSelection");
var u=null;
if(s){
u=this.widget.getSelection()
}
var t=e.length;
for(var n=0;
n<t;
n++){
o.push(e[n])
}
this.widget.set(AjxVector.fromArray(o),d);
if(e._version!=undefined&&e._version!=null){
this.widget.getList().getArray()._version=e._version
}
if(s&&u.length>0){
this.widget.setSelectedItems(u)
}else{
var l=this.widget._listDiv.firstChild;
this.widget.selectItem(l,true);
this.getModel().setInstanceValue(this.getInstance(),ZaServer.A2_policy_selection_cache,[e[0]])
}}}else{
this.widget.set(AjxVector.fromArray([]),d)
}};
HSMPolicy_XFormItem.parsePolicyString=function(s){
var r={
typeString:"",optString:"",types:[]};
var l=HSMPolicy_XModelItem.prototype.pattern.exec(s);
if(l){
if(l[1]){
r.typeString=l[1];
if(l[1].indexOf(",")>-1){
r.types=l[1].split(",")
}else{
r.types=[l[1]]
}}
r.periodString=[l[3],l[4],l[5],l[6],l[7]].join("");
r.period=[l[6],l[7]].join("");
var t=s.substring(l[0].length).replace(/^\s+|\s+$/g,"");
r.optString=t;
r.notInclOpts=[];
r.hasAnywhere=false;
if(t!=""){
t=t.replace(/not /g,"not_");
var e=t.split(" ");
for(var n=0;
n<e.length;
n++){
if(e[n]=="is:anywhere"){
if(r.hasAnywhere==true){
return
}
r.hasAnywhere=true;
continue
}
var o=HSMPolicy_XModelItem.prototype.notInclPattern1.exec(e[n]);
if(!o){
o=HSMPolicy_XModelItem.prototype.notInclPattern2.exec(e[n])
}
if(o){
r.notInclOpts.push(o[1]);
continue
}
return
}}else{
r.notInclOpts=HSMPolicy_XFormItem.optSet.concat()
}}
return r
};
HSMPolicy_XFormItem.parsePeriodPlural=function(e,n){
var o=n.indexOf("s")>-1;
if(o&&!e){
return n.slice(0,n.length-1)
}
var t=parseInt(e,10);
if(o&&t<=1){
return[e,n.slice(0,n.length-1)].join("")
}
if(!o&&t>1){
return[e,n,"s"].join("")
}
return[e,n].join("")
};
HSMPolicy_XFormItem.genTypeString=function(t,o,n,e){
if(o){
if(!AjxUtil.arrayContains(n.types,t)){
AjxUtil.arrayAdd(n.types,t)
}}else{
AjxUtil.arrayRemove(n.types,t)
}
var s=n.types.join(",");
e.getForm().parent._validItemsToMove=!!s;
return s
};
HSMPolicy_XFormItem.checkBoxElementChanged=function(s,u,t){
var m=this.getInheritedProperty("myType");
var o=this.getInheritedProperty("myOpt");
var d=HSMPolicy_XFormItem.parsePolicyString(u);
var l=d.typeString;
var c=d.optString;
var n;
if(!d){
n=[types.join(","),":","before",":","-","","day"].join("")
}else{
if(m){
l=HSMPolicy_XFormItem.genTypeString(m,s,d,this)
}else{
if(o){
c=HSMPolicy_XFormItem.genOptString(o,s,d)
}else{}}}
n=[l,":",d.periodString," ",c].join("");
var e=this.getForm().parent.getObject();
var r={};
r[ZaServer.A_zimbraHsmPolicy]={};
r[ZaServer.A_zimbraHsmPolicy]["policyIndex"]=e[ZaServer.A_zimbraHsmPolicy]["policyIndex"];
r[ZaServer.A_zimbraHsmPolicy][ZaServer.A_zimbraHsmPolicy]=n;
this.getForm().parent.setObject(r)
};
HSMPolicy_XFormItem.checkBoxGetDisplayValue=function(e){
var o=this.getInheritedProperty("myType");
var t=this.getInheritedProperty("myOpt");
var n=HSMPolicy_XFormItem.parsePolicyString(e);
if(!n){
return false
}
if(o){
if(AjxUtil.arrayContains(n.types,o)){
return true
}else{
return false
}}else{
if(t){
return HSMPolicy_XFormItem.getOptValue(t,n)
}}};
HSMPolicy_XFormItem.optSet=["junk","trash"];
HSMPolicy_XFormItem.genOptString=function(t,n,s){
if(n){
AjxUtil.arrayRemove(s.notInclOpts,t)
}else{
AjxUtil.arrayAdd(s.notInclOpts,t)
}
if(AjxUtil.isEmpty(s.notInclOpts)){
return"is:anywhere"
}
if(s.notInclOpts.length==HSMPolicy_XFormItem.optSet.length){
return""
}
var o=s.notInclOpts;
for(var e=0;
e<o.length;
e++){
o[e]="-in:"+o[e]
}
var r=o.join(" ");
return"is:anywhere "+r
};
HSMPolicy_XFormItem.getOptValue=function(e,t){
if(AjxUtil.isEmpty(t.optString)){
return false
}
if(AjxUtil.arrayContains(t.notInclOpts,e)){
return false
}else{
return true
}};
HSMPolicy_XFormItem.comparePoliciesByName=function(t,e){
if(t[ZaServer.A_zimbraHsmPolicy]>e[ZaServer.A_zimbraHsmPolicy]){
return 1
}
if(t[ZaServer.A_zimbraHsmPolicy]<e[ZaServer.A_zimbraHsmPolicy]){
return -1
}
return 0
};
HSMPolicy_XFormItem.policyStartButtonListener=function(e){
ZaApp.getInstance().dialogs.confirmMessageDialog=new ZaMsgDialog(ZaApp.getInstance().getAppCtxt().getShell(),null,[DwtDialog.YES_BUTTON,DwtDialog.NO_BUTTON],null,ZaId.VIEW_STATUS+"_confirmStartHSM");
ZaApp.getInstance().dialogs.confirmMessageDialog.setMessage(com_zimbra_hsm.StartPolicyConfirmMessage,DwtMessageDialog.WARNING_STYLE,com_zimbra_hsm.StartPolicyConfirmTitle);
ZaApp.getInstance().dialogs.confirmMessageDialog.registerCallback(DwtDialog.YES_BUTTON,HSMPolicy_XFormItem.startHSMSession,this,e);
ZaApp.getInstance().dialogs.confirmMessageDialog.popup()
};
HSMPolicy_XFormItem.policyAbortButtonListener=function(e){
ZaApp.getInstance().dialogs.confirmMessageDialog=new ZaMsgDialog(ZaApp.getInstance().getAppCtxt().getShell(),null,[DwtDialog.YES_BUTTON,DwtDialog.NO_BUTTON],null,ZaId.VIEW_STATUS+"_confirmAbortHSM");
ZaApp.getInstance().dialogs.confirmMessageDialog.setMessage(com_zimbra_hsm.AbortPolicyConfirmMessage,DwtMessageDialog.WARNING_STYLE,com_zimbra_hsm.AbortPolicyConfirmTitle);
ZaApp.getInstance().dialogs.confirmMessageDialog.registerCallback(DwtDialog.YES_BUTTON,HSMPolicy_XFormItem.abortHSMSession,this,e);
ZaApp.getInstance().dialogs.confirmMessageDialog.popup()
};
HSMPolicy_XFormItem.policyDeleteButtonListener=function(){
var t=this.getInstance();
if(!t.policy_selection_cache){
return
}
var e=this.getInstanceValue(ZaServer.A2_policy_selection_cache);
ZaApp.getInstance().dialogs.confirmMessageDialog=new ZaMsgDialog(ZaApp.getInstance().getAppCtxt().getShell(),null,[DwtDialog.YES_BUTTON,DwtDialog.NO_BUTTON],null,ZaId.VIEW_STATUS+"_confirmMessage");
ZaApp.getInstance().dialogs.confirmMessageDialog.setMessage(com_zimbra_hsm.DeletePolicyWarningMessage,DwtMessageDialog.WARNING_STYLE);
ZaApp.getInstance().dialogs.confirmMessageDialog.registerCallback(DwtDialog.YES_BUTTON,HSMPolicy_XFormItem.deletePolicy,this.getForm(),[e,[]]);
ZaApp.getInstance().dialogs.confirmMessageDialog.popup()
};
HSMPolicy_XFormItem.policyEditButtonListener=function(){
var e=this.getInstance();
if(e.policy_selection_cache&&e.policy_selection_cache[0]){
var r=this.getForm().parent;
if(!r.editPolicyDlg){
r.editPolicyDlg=new HsmEditPolicyXDialog(ZaApp.getInstance().getAppCtxt().getShell(),"550px","250px",com_zimbra_hsm.EditPolicyTitle);
r.editPolicyDlg.registerCallback(DwtDialog.OK_BUTTON,HSMPolicy_XFormItem.updatePolicy,this.getForm(),"edit")
}
var t=e.attrs[ZaServer.A_zimbraHsmPolicy]||[];
if(typeof(t)==="string"){
t=[t]
}
var s;
for(var o=0;
o<t.length;
o++){
if(t[o]===e.policy_selection_cache[0]){
s=o
}}
var n={};
n[ZaServer.A_zimbraHsmPolicy]={};
n[ZaServer.A_zimbraHsmPolicy]["policyIndex"]=s;
n[ZaServer.A_zimbraHsmPolicy][ZaServer.A_zimbraHsmPolicy]=e.policy_selection_cache[0];
r.editPolicyDlg.setObject(n);
r.editPolicyDlg._button[DwtDialog.OK_BUTTON].setEnabled(false);
r.editPolicyDlg.popup(true)
}};
HSMPolicy_XFormItem.policyAddButtonListener=function(){
var e=this.getInstance();
var n=this.getForm().parent;
if(!n.addPolicyDlg){
n.addPolicyDlg=new HsmEditPolicyXDialog(ZaApp.getInstance().getAppCtxt().getShell(),"550px","250px",com_zimbra_hsm.AddPolicyTitle);
n.addPolicyDlg.registerCallback(DwtDialog.OK_BUTTON,HSMPolicy_XFormItem.updatePolicy,this.getForm(),"add")
}
var t=e.attrs[ZaServer.A_zimbraHsmPolicy]||[];
if(typeof(t)==="string"){
t=[t]
}
var o={};
o[ZaServer.A_zimbraHsmPolicy]={};
o[ZaServer.A_zimbraHsmPolicy]["policyIndex"]=t.length;
o[ZaServer.A_zimbraHsmPolicy][ZaServer.A_zimbraHsmPolicy]="";
n.addPolicyDlg.setObject(o);
n.addPolicyDlg._button[DwtDialog.OK_BUTTON].setEnabled(false);
n.addPolicyDlg.popup(false)
};
HSMPolicy_XFormItem.policySelectionListener=function(t){
var e=this.widget.getSelection();
if(e&&e.length){
e.sort(HSMPolicy_XFormItem.comparePoliciesByName);
this.getModel().setInstanceValue(this.getInstance(),ZaServer.A2_policy_selection_cache,e)
}else{
this.getModel().setInstanceValue(this.getInstance(),ZaServer.A2_policy_selection_cache,null)
}
if(t.detail==DwtListView.ITEM_DBL_CLICKED){
HSMPolicy_XFormItem.policyEditButtonListener.call(this)
}};
HSMPolicy_XFormItem.isEditOrDeletePolicyEnabled=function(){
var e=this.getInstance();
return(!AjxUtil.isEmpty(e.policy_selection_cache)&&e.policy_selection_cache.length==1)
};
HSMPolicy_XFormItem.deletePolicy=function(t){
ZaApp.getInstance().dialogs.confirmMessageDialog.popdown();
var e=this.getInstance();
var o=[];
var n=e.attrs[ZaServer.A_zimbraHsmPolicy];
var l=typeof(e.attrs[ZaServer.A_zimbraHsmPolicy])==="string"?[n]:n;
var r=l?l.length:0;
for(var s=0;
s<r;
s++){
o[s]=l[s]
}
for(var s=0;
s<t.length;
s++){
AjxUtil.arrayRemove(o,t[s])
}
this.getModel().setInstanceValue(this.getInstance(),ZaServer.A_zimbraHsmPolicy,o);
this.getModel().setInstanceValue(this.getInstance(),ZaServer.A2_policy_selection_cache,new Array());
this.parent.setDirty(true)
};
HSMPolicy_XFormItem.updatePolicy=function(r){
var d;
if(r=="add"&&this.parent.addPolicyDlg){
d=this.parent.addPolicyDlg
}else{
if(r=="edit"&&this.parent.editPolicyDlg){
d=this.parent.editPolicyDlg
}}
if(d){
var c=d.getObject();
var u=this.getInstance();
var t=[];
var o=u.attrs[ZaServer.A_zimbraHsmPolicy];
var m=typeof(u.attrs[ZaServer.A_zimbraHsmPolicy])==="string"?[o]:o;
var n=m?m.length:0;
for(var l=0;
l<n;
l++){
t[l]=m[l]
}
var e=false;
var s=c[ZaServer.A_zimbraHsmPolicy]["policyIndex"];
if(t[s]!==c[ZaServer.A_zimbraHsmPolicy][ZaServer.A_zimbraHsmPolicy]){
t[s]=c[ZaServer.A_zimbraHsmPolicy][ZaServer.A_zimbraHsmPolicy];
e=true
}
if(e){
this.getModel().setInstanceValue(this.getInstance(),ZaServer.A_zimbraHsmPolicy,t);
this.getModel().setInstanceValue(this.getInstance(),ZaServer.A2_policy_selection_cache,new Array());
this.parent.setDirty(e)
}
d.popdown()
}};
HSMPolicy_XFormItem.abortHSMSession=function(t){
try{
ZaApp.getInstance().dialogs.confirmMessageDialog.popdown();
var e=ZaApp.getInstance().getCurrentController()._currentObject;
var n=ZaServer.abortHSMSession(e.id);
ZaServer.parseHSMStatusResponse(n,e);
ZaServer.parseHSMStatusResponse(n,ZaApp.getInstance().getCurrentController()._view.getObject());
ZaHSM.handleError(e.hsm);
this.getForm().refresh()
}
catch(o){
ZaApp.getInstance().getCurrentController()._handleException(o,"HSMPolicy_XFormItem.abortHSMSession",null,false)
}};
HSMPolicy_XFormItem.startHSMSession=function(t){
try{
ZaApp.getInstance().dialogs.confirmMessageDialog.popdown();
var e=ZaApp.getInstance().getCurrentController()._currentObject;
e.hsm[ZaServer.A_HSMerror]="";
ZaServer.parseHSMStatusResponse(ZaServer.startHSMSession(e.id),e);
ZaHSM.handleError(e.hsm);
this.getForm().refresh();
if(e.hsm[ZaServer.A_HSMrunning]==1){
e.hsm._pollHandler=AjxTimedAction.scheduleAction(ZaHSM.pollAction(e),e.hsm.pollInterval)
}else{
if(e.hsm._pollHandler){
AjxTimedAction.cancelAction(e.hsm._pollHandler);
e.hsm._pollHandler=null
}}}
catch(o){
ZaApp.getInstance().getCurrentController()._handleException(o,"HSMPolicy_XFormItem.startHSMSession",null,false)
}};
HSMPolicy_XFormItem.haveServerController=function(){
var e=ZaApp.getInstance().getCurrentController();
return AjxUtil.isInstance(e,ZaServerController)
};
HSMPolicy_XFormItem.hasError=function(){
return this.getModel().getInstanceValue(this.getInstance(),ZaServer.A_HSMerror)
};
HSMPolicy_XFormItem.displaySessionInfo=function(){
var t=this.getModel().getInstanceValue(this.getInstance(),ZaServer.A_HSMnumMailboxes);
var e=this.getModel().getInstanceValue(this.getInstance(),ZaServer.A_HSMrunning);
return(t>0||e==1)
};
HSMPolicy_XFormItem.prototype.initializeItems=function(){
var e=new Array();
e[0]=new ZaListHeaderItem(ZaServer.A_PolicyItems,com_zimbra_hsm.PolicyItemsToMove,null,"400px",false,null,false,true);
e[1]=new ZaListHeaderItem(ZaServer.A_PolicyOlderThan,com_zimbra_hsm.PolicyOlderThan,null,"auto",false,null,false,true);
var t={
type:_ZA_TOP_GROUPER_,id:"server_form_policies_group",width:"100%",numCols:1,colSizes:["auto"],label:com_zimbra_hsm.PoliciesGrpTitle,cssStyle:"margin-top:10px;padding-bottom:0;",items:[{
type:_DWT_ALERT_,ref:"progressMsg",content:null,visibilityChecks:[HSMPolicy_XFormItem.displaySessionInfo,HSMPolicy_XFormItem.haveServerController],colSpan:"*",iconVisible:true,align:_LEFT_,style:DwtAlert.INFORMATION}
,{
type:_GROUP_,numCols:2,width:"100%",cssStyle:"text-align:center;margin-top:10px;",visibilityChecks:[HSMPolicy_XFormItem.haveServerController],align:_CENTER_,items:[{
type:_ZACENTER_GROUPER_,label:com_zimbra_hsm.VM_HSM_ScheduleHsm,width:"100%",numCols:2,colspan:2,colSizes:["150px","auto"],cssStyle:"margin-top:5px;padding-bottom:0;",align:_CENTER_,valign:_TOP_,items:[{
type:_CHECKBOX_,ref:ZaServer.A_SMSchedulePolicyEnabled,trueValue:true,falseValue:false,bmolsnr:true,label:com_zimbra_hsm.VM_HSM_EnableScheduleHsm,align:_LEFT_,containerCssStyle:"padding-left:10px",elementChanged:function(s,n,o){
this.setInstanceValue((s?ZaHSM.SCHEDULING_HOURS[0].value:""),ZaServer.A_SMSchedulePolicyStartTime);
this.getForm().itemChanged(this,s,o)
}}
,{
type:_OSELECT1_,ref:ZaServer.A_SMSchedulePolicyStartTime,label:com_zimbra_hsm.VM_HSM_ScheduleHsmStartTime,width:"50px",labelLocation:_LEFT_,labelCssStyle:"text-align:left",cssStyle:"margin-left:14px",align:_LEFT_,enableDisableChecks:[[XForm.checkInstanceValue,ZaServer.A_SMSchedulePolicyEnabled,true]],enableDisableChangeEventSources:[ZaServer.A_SMSchedulePolicyEnabled],}
]}
,{
type:_ZACENTER_GROUPER_,label:com_zimbra_hsm.VM_HSM_ManageHsm,width:"100%",numCols:1,colSizes:["100px","auto"],cssStyle:"padding-bottom:0;margin-top:5px;",align:_CENTER_,valign:_TOP_,items:[{
type:_OUTPUT_,value:com_zimbra_hsm.VM_HSM_NoSession,width:"132px",visibilityChecks:[[XForm.checkInstanceValue,ZaServer.A_HSMrunning,0],[XForm.checkInstanceValue,ZaServer.A_HSMerror,null]]}
,{
type:_OUTPUT_,value:com_zimbra_hsm.VM_HSM_ErrorMsg,width:"278px",visibilityChecks:[HSMPolicy_XFormItem.hasError]}
,{
type:_DWT_PROGRESS_BAR_,label:ZaMsg.ReindexMbx_Progress,maxValue:null,maxValueRef:ZaServer.A_HSMtotalMailboxes,ref:ZaServer.A_HSMnumMailboxes,visibilityChecks:[[XForm.checkInstanceValue,ZaServer.A_HSMrunning,1]],visibilityChangeEventSources:[ZaServer.A_HSMnumMailboxes,ZaServer.A_HSMrunning],valign:_CENTER_,align:_LEFT_,cssStyle:"text-align:left;",wholeCssClass:"progressbar",progressCssClass:"progressused"}
,{
type:_SPACER_,height:"10",colSpan:"2"}
,{
type:_GROUP_,colSpan:"2",numCols:4,width:"260px",items:[{
type:_SPACER_,width:"5px",colSpan:1}
,{
type:_DWT_BUTTON_,onActivate:"HSMPolicy_XFormItem.policyStartButtonListener.call(this)",label:com_zimbra_hsm.VM_HSM_StartHsm,visibilityChecks:[],ref:ZaServer.A_HSMrunning,enableDisableChecks:[[XForm.checkInstanceValue,ZaServer.A_HSMrunning,0]],enableDisableChangeEventSources:[ZaServer.A_HSMrunning],valign:_BOTTOM_,width:"120px"}
,{
type:_SPACER_,width:"15px",colSpan:1}
,{
type:_DWT_BUTTON_,onActivate:"HSMPolicy_XFormItem.policyAbortButtonListener.call(this)",label:com_zimbra_hsm.VM_HSM_AbortHsm,visibilityChecks:[],ref:ZaServer.A_HSMrunning,enableDisableChecks:[[XForm.checkInstanceValue,ZaServer.A_HSMrunning,1],[XForm.checkInstanceValue,ZaServer.A_HSMaborting,0]],enableDisableChangeEventSources:[ZaServer.A_HSMrunning],valign:_BOTTOM_,width:"120px"}
]}
]}
,]}
,{
ref:ZaServer.A_zimbraHsmPolicy,type:_L_DWT_LIST_,height:"200",width:"99%",preserveSelection:true,multiselect:true,cssClass:"DLSource",headerList:e,widgetClass:HSMPolicyListView,onSelection:HSMPolicy_XFormItem.policySelectionListener,valueChangeEventSources:[ZaServer.A_zimbraHsmPolicy]}
,{
type:_GROUP_,numCols:5,colSizes:["100px","auto","100px","auto","100px"],width:"350px",cssStyle:"margin:10px;padding-bottom:0;",items:[{
type:_DWT_BUTTON_,label:ZaMsg.TBB_Delete,width:"100px",onActivate:"HSMPolicy_XFormItem.policyDeleteButtonListener.call(this);",enableDisableChangeEventSources:[ZaServer.A2_policy_selection_cache],enableDisableChecks:[HSMPolicy_XFormItem.isEditOrDeletePolicyEnabled]}
,{
type:_CELLSPACER_}
,{
type:_DWT_BUTTON_,label:ZaMsg.TBB_Edit,width:"100px",onActivate:"HSMPolicy_XFormItem.policyEditButtonListener.call(this);",enableDisableChangeEventSources:[ZaServer.A2_policy_selection_cache],enableDisableChecks:[HSMPolicy_XFormItem.isEditOrDeletePolicyEnabled]}
,{
type:_CELLSPACER_}
,{
type:_DWT_BUTTON_,label:ZaMsg.NAD_Add,width:"100px",onActivate:"HSMPolicy_XFormItem.policyAddButtonListener.call(this);"}
]}
]};
this.items=[t];
Composite_XFormItem.prototype.initializeItems.call(this)
};
HSMPolicy_XFormItem.prototype.items=[];
ZaServerVolumesListView.prototype._createItemHtml=function(r){
var s=new Array(50);
var c=document.createElement("div");
c[DwtListView._STYLE_CLASS]="Row";
c[DwtListView._SELECTED_STYLE_CLASS]=c[DwtListView._STYLE_CLASS]+"-"+DwtCssStyle.SELECTED;
c.className=c[DwtListView._STYLE_CLASS];
this.associateItemWithElement(r,c,DwtListView.TYPE_LIST_ITEM);
var e=0;
s[e++]="<table width='100%' cellspacing='0' cellpadding='0'>";
s[e++]="<tr>";
if(this._headerList){
var n=this._headerList.length;
for(var o=0;
o<n;
o++){
var l=this._headerList[o]._field;
if(l==ZaServer.A_isCurrentVolume){
s[e++]="<td align=left height=20px width="+this._headerList[o]._width+">";
var t=false;
for(a in ZaServer.currentkeys){
if(this.parent&&this.parent.instance&&this.parent.instance[ZaServer.currentkeys[a]]){
if(this.parent.instance[ZaServer.currentkeys[a]]==r[ZaServer.A_VolumeId]){
t=true;
break
}}}
if(t){
s[e++]=AjxImg.getImageHtml("Check")
}
s[e++]="</td>"
}else{
if(l==ZaServer.A_VolumeName){
s[e++]="<td align=left height=20px width="+this._headerList[o]._width+">";
s[e++]="<span title='";
if(r.volumeExternalInfo){
s[e++]=r.volumeExternalInfo[0][ZaServer.A_VolumeStorageType]
}else{
if(r[ZaServer.A_VolumeStorageType]){
s[e++]=r[ZaServer.A_VolumeStorageType]
}else{
s[e++]=com_zimbra_hsm.VM_VolumeTypeInternal
}}
s[e++]="'>";
s[e++]=AjxStringUtil.htmlEncode(r[ZaServer.A_VolumeName]);
s[e++]="</span>";
s[e++]="</td>"
}else{
if(l==ZaServer.A_VolumeRootPath){
s[e++]="<td align=left height=20px width="+this._headerList[o]._width+">";
if(r.volumeExternalInfo){
s[e++]=r.volumeExternalInfo[0][ZaServer.A_VolumePrefix]
}else{
if(r[ZaServer.A_VolumePrefix]){
s[e++]=AjxStringUtil.htmlEncode(r[ZaServer.A_VolumePrefix])
}else{
s[e++]=AjxStringUtil.htmlEncode(r[ZaServer.A_VolumeRootPath])
}}
s[e++]="</td>"
}else{
if(l==ZaServer.A_VolumeType){
s[e++]="<td align=left height=20px width="+this._headerList[o]._width+">";
s[e++]=ZaServer.volumeTypeChoices.getChoiceByValue(r[ZaServer.A_VolumeType]);
s[e++]="</td>"
}else{
if(l==ZaServer.A_VolumeCompressBlobs){
s[e++]="<td align=left height=20px width="+this._headerList[o]._width+">";
if(r[ZaServer.A_VolumeCompressBlobs]){
s[e++]=ZaMsg.Yes
}else{
if(r[ZaServer.A_VolumeCompressBlobs]===false){
s[e++]=ZaMsg.No
}}
s[e++]="</td>"
}else{
if(l==ZaServer.A_VolumeCompressionThreshold){
s[e++]="<td align=left height=20px width="+this._headerList[o]._width+">";
if(r[ZaServer.A_VolumeCompressionThreshold]){
if(r[ZaServer.A_VolumeStoreType]==ZaServer.A_VolumeStoreTypeExternal||r[ZaServer.A_VolumeCompressBlobs]===false){
s[e++]="-"
}else{
s[e++]=AjxMessageFormat.format(ZaMsg.VM_VolumeCompressThresholdBytes,[r[ZaServer.A_VolumeCompressionThreshold],])
}}
s[e++]="</td>"
}}}}}}}}else{
s[e++]="<td width=100%>";
s[e++]=AjxStringUtil.htmlEncode(r);
s[e++]="</td>"
}
s[e++]="</tr></table>";
c.innerHTML=s.join("");
return c
};
if(window.console&&window.console.log){
console.log("Loaded com_zimbra_hsm.js")
}}
ZaNewVolumeXWizard=function(e){
ZaXWizardDialog.call(this,e,null,ZaMsg.VM_Add_Volume_Title,"720px","340px","ZaNewVolumeXWizard",null,"NEW_VOLUME");
this.initForm(ZaServer.volumeObjModel,this.getMyXForm());
this._localXForm.setController();
this._localXForm.addListener(DwtEvent.XFORMS_FORM_DIRTY_CHANGE,new AjxListener(this,this.handleXFormChange));
this._localXForm.addListener(DwtEvent.XFORMS_VALUE_ERROR,new AjxListener(this,this.handleXFormChange));
this._localXForm.addListener(DwtEvent.XFORMS_VALUE_CHANGED,new AjxListener(this,this.handleXFormChange));
this._helpURL=location.pathname+ZaUtil.HELP_URL+"managing_servers/adding_a_new_storage_volume_to_the_server.htm?locid="+AjxEnv.DEFAULT_LOCALE
};
ZaNewVolumeXWizard.bucketChoices=new XFormChoices([],XFormChoices.OBJECT_LIST,"globalBucketUUID",ZaServer.A_BucketName);
ZaNewVolumeXWizard.stepObject=new Object();
ZaNewVolumeXWizard.prototype=new ZaXWizardDialog();
ZaNewVolumeXWizard.prototype.constructor=ZaNewVolumeXWizard;
ZaNewVolumeXWizard.prototype.toString=function(){
return"ZaNewVolumeXWizard"
};
ZaXDialog.XFormModifiers.ZaNewVolumeXWizard=new Array();
ZaNewVolumeXWizard.helpURL=location.pathname+ZaUtil.HELP_URL+"managing_accounts/create_an_account.htm?locid="+AjxEnv.DEFAULT_LOCALE;
ZaNewVolumeXWizard.prototype.handleXFormChange=function(){
if(this._localXForm.hasErrors()){
this._button[DwtWizardDialog.FINISH_BUTTON].setEnabled(false)
}else{
if(this._containedObject[ZaModel.currentStep]!==ZaNewVolumeXWizard.GENERAL_STEP){
var n=this.hasEmptyFields([ZaServer.A_VolumeName,ZaServer.A_VolumeType,ZaServer.A_StoreManager,]);
var t=this.hasEmptyFields([ZaServer.A_VolumeRootPath,ZaServer.A_VolumeCompressionThreshold,]);
var r=this.hasEmptyFields([ZaServer.A_VolumePrefix,ZaServer.A_CompatibleS3Bucket,]);
var o=this.hasEmptyFields([ZaServer.A_URL,ZaServer.A_OpenIOAccount,ZaServer.A_OpenIONameSpace,ZaServer.A_OpenIOProxyPort,ZaServer.A_OpenIOAccountPort,]);
var e=n||(this._containedObject[ZaModel.currentStep]===ZaNewVolumeXWizard.NEW_INTERNAL_VOLUME&&t)||(this._containedObject[ZaModel.currentStep]===ZaNewVolumeXWizard.NEW_OPENIO_VOLUME&&o)||(this._containedObject[ZaModel.currentStep]!==ZaNewVolumeXWizard.NEW_INTERNAL_VOLUME&&this._containedObject[ZaModel.currentStep]!==ZaNewVolumeXWizard.NEW_OPENIO_VOLUME&&r);
this._button[DwtWizardDialog.FINISH_BUTTON].setEnabled(!e)
}
this.resetDefaultStoreManager()
}
if(this._containedObject[ZaModel.currentStep]===ZaNewVolumeXWizard.NEW_S3_BUCKET||this._containedObject[ZaModel.currentStep]===ZaNewVolumeXWizard.NEW_SCALITY_BUCKET||this._containedObject[ZaModel.currentStep]===ZaNewVolumeXWizard.NEW_CEPH_BUCKET||this._containedObject[ZaModel.currentStep]===ZaNewVolumeXWizard.NEW_NETAPP_STORAGEGRID_BUCKET||this._containedObject[ZaModel.currentStep]===ZaNewVolumeXWizard.NEW_CUSTOMS3_BUCKET||this._containedObject[ZaModel.currentStep]===ZaNewVolumeXWizard.NEW_EMC_BUCKET){
var s=this.hasEmptyFields([ZaServer.A_BucketName,ZaServer.A_AccessKey,ZaServer.A_SecretKey,ZaServer.A_DestinationPath,ZaServer.A_URL,]);
this._button[DwtWizardDialog.NEXT_BUTTON].setEnabled(!s)
}};
ZaNewVolumeXWizard.prototype.hasEmptyFields=function(t){
for(var e=0;
e<t.length;
e++){
if(AjxUtil.isString(this._containedObject[t[e]])){
this._containedObject[t[e]]=AjxStringUtil.trim(this._containedObject[t[e]],true)
}
if(!this._containedObject[t[e]]||this._containedObject[t[e]]===""){
return true
}}
return false
};
ZaNewVolumeXWizard.prototype.uniqueBucketName=function(){
var e=this.bucketList.filter(function(t){
return t.storeProvider===this._containedObject[ZaServer.A_StoreProvider]&&t.bucketName===this._containedObject[ZaServer.A_BucketName]
}
,this);
return(e.length===0)
};
ZaNewVolumeXWizard.prototype.resetDefaultStoreManager=function(){
if(!this._containedObject[ZaServer.A_UseCustomSM]){
if(this._containedObject[ZaServer.A_VolumeStorageType]===ZaServer.A_VolumeStorageTypeInternal){
this._containedObject[ZaServer.A_StoreManager]=ZaServer.A_DefaultStoreManagerInternal
}else{
this._containedObject[ZaServer.A_StoreManager]=ZaServer.A_DefaultStoreManagerExternal
}
this._localXForm.refresh()
}};
ZaNewVolumeXWizard.prototype.goNext=function(){
if(this._containedObject[ZaModel.currentStep]===ZaNewVolumeXWizard.GENERAL_STEP){
this.setDefaultValues();
this._button[DwtWizardDialog.PREV_BUTTON].setEnabled(true);
this._button[DwtWizardDialog.NEXT_BUTTON].setEnabled(false);
if(this._containedObject[ZaServer.A_VolumeStorageType]===ZaServer.A_VolumeStorageTypeInternal){
this.goPage(ZaNewVolumeXWizard.NEW_INTERNAL_VOLUME)
}else{
if(this._containedObject[ZaServer.A_VolumeStorageType]===ZaServer.A_VolumeStorageTypeS3){
ZaNewVolumeXWizard.bucketChoices.setChoices(ZaNewVolumeXWizard.getBucketChoices(this.bucketList,ZaServer.A_S3_StoreProvider));
ZaNewVolumeXWizard.bucketChoices.dirtyChoices();
this.goPage(ZaNewVolumeXWizard.NEW_S3_VOLUME)
}else{
if(this._containedObject[ZaServer.A_VolumeStorageType]===ZaServer.A_VolumeStorageTypeCeph){
ZaNewVolumeXWizard.bucketChoices.setChoices(ZaNewVolumeXWizard.getBucketChoices(this.bucketList,ZaServer.A_Ceph_StoreProvider));
ZaNewVolumeXWizard.bucketChoices.dirtyChoices();
this.goPage(ZaNewVolumeXWizard.NEW_CEPH_VOLUME)
}else{
if(this._containedObject[ZaServer.A_VolumeStorageType]===ZaServer.A_VolumeStorageTypeNetApp){
ZaNewVolumeXWizard.bucketChoices.setChoices(ZaNewVolumeXWizard.getBucketChoices(this.bucketList,ZaServer.A_NetApp_StoreProvider));
ZaNewVolumeXWizard.bucketChoices.dirtyChoices();
this.goPage(ZaNewVolumeXWizard.NEW_NETAPP_STORAGEGRID_VOLUME)
}else{
if(this._containedObject[ZaServer.A_VolumeStorageType]===ZaServer.A_VolumeStorageTypeScality){
ZaNewVolumeXWizard.bucketChoices.setChoices(ZaNewVolumeXWizard.getBucketChoices(this.bucketList,ZaServer.A_Scality_StoreProvider));
ZaNewVolumeXWizard.bucketChoices.dirtyChoices();
this.goPage(ZaNewVolumeXWizard.NEW_SCALITY_VOLUME)
}else{
if(this._containedObject[ZaServer.A_VolumeStorageType]===ZaServer.A_VolumeStorageTypeOpenIO){
this.goPage(ZaNewVolumeXWizard.NEW_OPENIO_VOLUME)
}else{
if(this._containedObject[ZaServer.A_VolumeStorageType]===ZaServer.A_VolumeStorageTypeCustomS3){
ZaNewVolumeXWizard.bucketChoices.setChoices(ZaNewVolumeXWizard.getBucketChoices(this.bucketList,ZaServer.A_CustomS3_StoreProvider));
ZaNewVolumeXWizard.bucketChoices.dirtyChoices();
this.goPage(ZaNewVolumeXWizard.NEW_CUSTOMS3_VOLUME)
}else{
if(this._containedObject[ZaServer.A_VolumeStorageType]===ZaServer.A_VolumeStorageTypeEMC){
ZaNewVolumeXWizard.bucketChoices.setChoices(ZaNewVolumeXWizard.getBucketChoices(this.bucketList,ZaServer.A_EMC_StoreProvider));
ZaNewVolumeXWizard.bucketChoices.dirtyChoices();
this.goPage(ZaNewVolumeXWizard.NEW_EMC_VOLUME)
}}}}}}}}}else{
if(this._containedObject[ZaModel.currentStep]===ZaNewVolumeXWizard.NEW_S3_BUCKET||this._containedObject[ZaModel.currentStep]===ZaNewVolumeXWizard.NEW_SCALITY_BUCKET||this._containedObject[ZaModel.currentStep]===ZaNewVolumeXWizard.NEW_CEPH_BUCKET||this._containedObject[ZaModel.currentStep]===ZaNewVolumeXWizard.NEW_NETAPP_STORAGEGRID_BUCKET||this._containedObject[ZaModel.currentStep]===ZaNewVolumeXWizard.NEW_CUSTOMS3_BUCKET||this._containedObject[ZaModel.currentStep]===ZaNewVolumeXWizard.NEW_EMC_BUCKET){
this.createS3BucketRequest(this._containedObject)
}}};
ZaNewVolumeXWizard.prototype.goPrev=function(){
if(this._containedObject[ZaModel.currentStep]===ZaNewVolumeXWizard.NEW_INTERNAL_VOLUME||this._containedObject[ZaModel.currentStep]===ZaNewVolumeXWizard.NEW_SCALITY_VOLUME||this._containedObject[ZaModel.currentStep]===ZaNewVolumeXWizard.NEW_S3_VOLUME||this._containedObject[ZaModel.currentStep]===ZaNewVolumeXWizard.NEW_CEPH_VOLUME||this._containedObject[ZaModel.currentStep]===ZaNewVolumeXWizard.NEW_NETAPP_STORAGEGRID_VOLUME||this._containedObject[ZaModel.currentStep]===ZaNewVolumeXWizard.NEW_OPENIO_VOLUME||this._containedObject[ZaModel.currentStep]===ZaNewVolumeXWizard.NEW_CUSTOMS3_VOLUME||this._containedObject[ZaModel.currentStep]===ZaNewVolumeXWizard.NEW_EMC_VOLUME){
this._button[DwtWizardDialog.FINISH_BUTTON].setEnabled(false);
this._button[DwtWizardDialog.PREV_BUTTON].setEnabled(false);
this._button[DwtWizardDialog.NEXT_BUTTON].setEnabled(true)
}
if(this._containedObject[ZaModel.currentStep]===ZaNewVolumeXWizard.NEW_S3_BUCKET){
this._button[DwtWizardDialog.NEXT_BUTTON].setEnabled(false);
this.goPage(ZaNewVolumeXWizard.NEW_S3_VOLUME)
}else{
if(this._containedObject[ZaModel.currentStep]===ZaNewVolumeXWizard.NEW_CEPH_BUCKET){
this._button[DwtWizardDialog.NEXT_BUTTON].setEnabled(false);
this.goPage(ZaNewVolumeXWizard.NEW_CEPH_VOLUME)
}else{
if(this._containedObject[ZaModel.currentStep]===ZaNewVolumeXWizard.NEW_SCALITY_BUCKET){
this.goPage(ZaNewVolumeXWizard.NEW_SCALITY_VOLUME);
this._button[DwtWizardDialog.NEXT_BUTTON].setEnabled(false)
}else{
if(this._containedObject[ZaModel.currentStep]===ZaNewVolumeXWizard.NEW_NETAPP_STORAGEGRID_BUCKET){
this.goPage(ZaNewVolumeXWizard.NEW_NETAPP_STORAGEGRID_VOLUME)
}else{
if(this._containedObject[ZaModel.currentStep]===ZaNewVolumeXWizard.NEW_CUSTOMS3_BUCKET){
this.goPage(ZaNewVolumeXWizard.NEW_CUSTOMS3_VOLUME);
this._button[DwtWizardDialog.NEXT_BUTTON].setEnabled(false)
}else{
if(this._containedObject[ZaModel.currentStep]===ZaNewVolumeXWizard.NEW_EMC_BUCKET){
this.goPage(ZaNewVolumeXWizard.NEW_EMC_VOLUME);
this._button[DwtWizardDialog.NEXT_BUTTON].setEnabled(false)
}else{
this.goPage(ZaNewVolumeXWizard.GENERAL_STEP)
}}}}}}};
ZaNewVolumeXWizard.prototype.setObject=function(e){
this._containedObject={};
this._containedObject[ZaModel.currentStep]=e[ZaModel.currentStep]||ZaServer.A_NewVolumeInitialStep;
this._containedObject[ZaServer.A_VolumeId]=e[ZaServer.A_VolumeId];
this._containedObject[ZaServer.A_VolumeStoreType]=e[ZaServer.A_VolumeStoreType];
this._containedObject[ZaServer.A_VolumeStorageType]=e[ZaServer.A_VolumeStorageType];
this._containedObject[ZaServer.A_VolumeCompressBlobs]=e[ZaServer.A_VolumeCompressBlobs];
this._containedObject[ZaServer.A_VolumeCompressionThreshold]=e[ZaServer.A_VolumeCompressionThreshold];
this._containedObject[ZaServer.A_InfrequentAccess]=e[ZaServer.A_InfrequentAccess];
this._containedObject[ZaServer.A_InfrequentAccessThreshold]=e[ZaServer.A_InfrequentAccessThreshold];
this._containedObject[ZaServer.A_IntelligentTiering]=e[ZaServer.A_IntelligentTiering];
this._containedObject[ZaServer.A_UnifiedStorage]=e[ZaServer.A_UnifiedStorage];
this._containedObject[ZaServer.A_Region]=e[ZaServer.A_Region];
this._containedObject[ZaServer.A_isCurrent]=e[ZaServer.A_isCurrent];
this._localXForm.setInstance(this._containedObject);
this._button[DwtWizardDialog.NEXT_BUTTON].setEnabled(true);
this._button[DwtWizardDialog.FINISH_BUTTON].setEnabled(false);
this._button[DwtWizardDialog.PREV_BUTTON].setEnabled(false);
this.getS3BucketConfig(false)
};
ZaNewVolumeXWizard.prototype.setDefaultValues=function(){
this._containedObject[ZaServer.A_VolumeName]="";
this._containedObject[ZaServer.A_VolumeType]="";
this._containedObject[ZaServer.A_VolumePrefix]="";
this._containedObject[ZaServer.A_UseCustomSM]=false;
this._containedObject[ZaServer.A_UnifiedStorage]=false;
this._containedObject[ZaServer.A_OpenIOAccount]="";
this._containedObject[ZaServer.A_OpenIONameSpace]="";
this._containedObject[ZaServer.A_OpenIOProxyPort]="";
this._containedObject[ZaServer.A_OpenIOAccountPort]="";
if(this._containedObject[ZaServer.A_VolumeStorageType]===ZaServer.A_VolumeStorageTypeInternal){
this._containedObject[ZaServer.A_VolumeStoreType]=ZaServer.A_VolumeStoreTypeInternal;
this._containedObject[ZaServer.A_VolumeRootPath]="/opt/zimbra";
this._containedObject[ZaServer.A_VolumeCompressBlobs]=false;
this._containedObject[ZaServer.A_StoreManager]=ZaServer.A_DefaultStoreManagerInternal;
delete this._containedObject[ZaServer.A_UnifiedStorage]
}else{
this._containedObject[ZaServer.A_VolumeStoreType]=ZaServer.A_VolumeStoreTypeExternal;
this._containedObject[ZaServer.A_StoreManager]=ZaServer.A_DefaultStoreManagerExternal;
this._containedObject[ZaServer.A_UnifiedStorage]=ZaServer.A_UnifiedStorage;
delete this._containedObject[ZaServer.A_CompatibleS3Bucket]
}
if(this._containedObject[ZaServer.A_VolumeStorageType]===ZaServer.A_VolumeStorageTypeOpenIO){
this.cleanBucketFields()
}
this._localXForm.refresh()
};
ZaNewVolumeXWizard.prototype.cleanBucketFields=function(){
this._containedObject[ZaServer.A_Region]=this.resetBucketRegionField();
delete this._containedObject[ZaServer.A_BucketName];
delete this._containedObject[ZaServer.A_AccessKey];
delete this._containedObject[ZaServer.A_SecretKey];
delete this._containedObject[ZaServer.A_DestinationPath];
delete this._containedObject[ZaServer.A_URL]
};
ZaNewVolumeXWizard.prototype.resetBucketRegionField=function(){
if(this._containedObject[ZaServer.A_StoreProvider]===ZaServer.A_CustomS3_StoreProvider){
return""
}else{
return ZaServer.A_DefaultRegion
}};
ZaNewVolumeXWizard.myXFormModifier=function(r){
var o=new Array();
this.stepChoices=[];
this.TAB_INDEX=0;
this.s3Providers=[];
ZaNewVolumeXWizard.GENERAL_STEP=++this.TAB_INDEX;
this.stepChoices.push({
value:ZaNewVolumeXWizard.GENERAL_STEP,label:com_zimbra_hsm.TABT_VolumeTypePage,}
);
var t={
type:_CASE_,tabGroupKey:ZaNewVolumeXWizard.GENERAL_STEP,caseKey:ZaNewVolumeXWizard.GENERAL_STEP,numCols:1,align:_LEFT_,valign:_TOP_,};
var n=[{
type:_OUTPUT_,label:com_zimbra_hsm.VM_VolumeTypeSelectTitle,labelCssStyle:"text-align:left;",}
,{
type:_GROUP_,numCols:2,items:[{
type:_SPACER_,height:15,}
,{
ref:ZaServer.A_VolumeStorageType,type:_RADIO_,groupname:ZaServer.A_VolumeStorageType,label:com_zimbra_hsm.LBL_VM_VolumeTypeInternal,onChange:ZaTabView.onFormFieldChanged,updateElement:function(){
this.getElement().checked=this.getInstanceValue(ZaServer.A_VolumeStorageType)===ZaServer.A_VolumeStorageTypeInternal
}
,elementChanged:function(l,d,c){
this.getForm().setInstanceValue(ZaServer.A_VolumeStorageTypeInternal,ZaServer.A_VolumeStorageType);
this.getForm().itemChanged(this,ZaServer.A_VolumeStorageTypeInternal,c)
}
,}
,{
ref:ZaServer.A_VolumeStorageType,type:_RADIO_,groupname:ZaServer.A_VolumeStorageType,label:com_zimbra_hsm.LBL_VM_VolumeTypeS3,onChange:ZaTabView.onFormFieldChanged,updateElement:function(){
this.getElement().checked=this.getInstanceValue(ZaServer.A_VolumeStorageType)===ZaServer.A_VolumeStorageTypeS3
}
,elementChanged:function(l,d,c){
this.getForm().setInstanceValue(ZaServer.A_VolumeStorageTypeS3,ZaServer.A_VolumeStorageType);
this.getForm().itemChanged(this,ZaServer.A_VolumeStorageTypeS3,c)
}
,}
,{
ref:ZaServer.A_VolumeStorageType,type:_RADIO_,groupname:ZaServer.A_VolumeStorageType,label:com_zimbra_hsm.LBL_VM_VolumeTypeCeph,onChange:ZaTabView.onFormFieldChanged,updateElement:function(){
this.getElement().checked=this.getInstanceValue(ZaServer.A_VolumeStorageType)===ZaServer.A_VolumeStorageTypeCeph
}
,elementChanged:function(l,d,c){
this.getForm().setInstanceValue(ZaServer.A_VolumeStorageTypeCeph,ZaServer.A_VolumeStorageType);
this.getForm().itemChanged(this,ZaServer.A_VolumeStorageTypeCeph,c)
}
,}
,{
ref:ZaServer.A_VolumeStorageType,type:_RADIO_,groupname:ZaServer.A_VolumeStorageType,label:com_zimbra_hsm.LBL_VM_VolumeTypeCustomS3,onChange:ZaTabView.onFormFieldChanged,updateElement:function(){
this.getElement().checked=this.getInstanceValue(ZaServer.A_VolumeStorageType)===ZaServer.A_VolumeStorageTypeCustomS3
}
,elementChanged:function(l,d,c){
this.getForm().setInstanceValue(ZaServer.A_VolumeStorageTypeCustomS3,ZaServer.A_VolumeStorageType);
this.getForm().itemChanged(this,ZaServer.A_VolumeStorageTypeCustomS3,c)
}
,}
,{
ref:ZaServer.A_VolumeStorageType,type:_RADIO_,groupname:ZaServer.A_VolumeStorageType,label:com_zimbra_hsm.LBL_VM_VolumeTypeEMC,onChange:ZaTabView.onFormFieldChanged,updateElement:function(){
this.getElement().checked=this.getInstanceValue(ZaServer.A_VolumeStorageType)===ZaServer.A_VolumeStorageTypeEMC
}
,elementChanged:function(l,d,c){
this.getForm().setInstanceValue(ZaServer.A_VolumeStorageTypeEMC,ZaServer.A_VolumeStorageType);
this.getForm().itemChanged(this,ZaServer.A_VolumeStorageTypeEMC,c)
}
,}
,{
ref:ZaServer.A_VolumeStorageType,type:_RADIO_,groupname:ZaServer.A_VolumeStorageType,label:com_zimbra_hsm.LBL_VM_VolumeTypeNASG,onChange:ZaTabView.onFormFieldChanged,updateElement:function(){
this.getElement().checked=this.getInstanceValue(ZaServer.A_VolumeStorageType)===ZaServer.A_VolumeStorageTypeNetApp
}
,elementChanged:function(l,d,c){
this.getForm().setInstanceValue(ZaServer.A_VolumeStorageTypeNetApp,ZaServer.A_VolumeStorageType);
this.getForm().itemChanged(this,ZaServer.A_VolumeStorageTypeNetApp,c)
}
,}
,{
ref:ZaServer.A_VolumeStorageType,type:_RADIO_,groupname:ZaServer.A_VolumeStorageType,label:com_zimbra_hsm.LBL_VM_VolumeTypeOpenIO,onChange:ZaTabView.onFormFieldChanged,updateElement:function(){
this.getElement().checked=this.getInstanceValue(ZaServer.A_VolumeStorageType)===ZaServer.A_VolumeStorageTypeOpenIO
}
,elementChanged:function(l,d,c){
this.getForm().setInstanceValue(ZaServer.A_VolumeStorageTypeOpenIO,ZaServer.A_VolumeStorageType);
this.getForm().itemChanged(this,ZaServer.A_VolumeStorageTypeOpenIO,c)
}
,}
,{
ref:ZaServer.A_VolumeStorageType,type:_RADIO_,groupname:ZaServer.A_VolumeStorageType,label:com_zimbra_hsm.LBL_VM_VolumeTypeScality,onChange:ZaTabView.onFormFieldChanged,updateElement:function(){
this.getElement().checked=this.getInstanceValue(ZaServer.A_VolumeStorageType)===ZaServer.A_VolumeStorageTypeScality
}
,elementChanged:function(l,d,c){
this.getForm().setInstanceValue(ZaServer.A_VolumeStorageTypeScality,ZaServer.A_VolumeStorageType);
this.getForm().itemChanged(this,ZaServer.A_VolumeStorageTypeScality,c)
}
,}
,],}
,];
t.items=n;
o.push(t);
ZaNewVolumeXWizard.NEW_INTERNAL_VOLUME=++this.TAB_INDEX;
this.stepChoices.push({
value:ZaNewVolumeXWizard.NEW_INTERNAL_VOLUME,label:com_zimbra_hsm.TABT_InternalVolumePage,}
);
o.push({
type:_CASE_,tabGroupKey:ZaNewVolumeXWizard.NEW_INTERNAL_VOLUME,caseKey:ZaNewVolumeXWizard.NEW_INTERNAL_VOLUME,numCols:1,items:[{
type:_ZAWIZGROUP_,isTabGroup:true,numCols:2,colSizes:["200px","*"],items:[{
ref:ZaServer.A_VolumeType,type:_OSELECT1_,choices:ZaServer.volumeTypeChoices,width:155,label:com_zimbra_hsm.LBL_VM_VolumeType,labelCssStyle:"text-align:left;",}
,{
ref:ZaServer.A_VolumeName,type:_TEXTFIELD_,label:com_zimbra_hsm.LBL_VM_VolumeName,labelLocation:_LEFT_,labelCssStyle:"text-align:left;",width:150,}
,{
ref:ZaServer.A_VolumeRootPath,type:_TEXTFIELD_,label:com_zimbra_hsm.LBL_VM_VolumeRootPath,labelLocation:_LEFT_,labelCssStyle:"text-align:left;",width:150,}
,{
ref:ZaServer.A_VolumeCompressBlobs,type:_WIZ_CHECKBOX_,labelLocation:_LEFT_,align:_LEFT_,label:ZaMsg.VM_VolumeCompressBlobs,labelCssStyle:"padding-left:3px;",trueValue:true,falseValue:false,}
,{
type:_GROUP_,numCols:3,colSpan:2,colSizes:["200px","*","*"],items:[{
ref:ZaServer.A_VolumeCompressionThreshold,type:_TEXTFIELD_,label:ZaMsg.VM_VolumeCompressThreshold,labelLocation:_LEFT_,labelCssStyle:"text-align:left;",align:_LEFT_,width:100,enableDisableChangeEventSources:[ZaServer.A_VolumeCompressBlobs],enableDisableChecks:[[XForm.checkInstanceValue,ZaServer.A_VolumeCompressBlobs,true]],}
,{
type:_OUTPUT_,label:ZaMsg.NAD_bytes,labelCssStyle:"text-align:left;",}
,],}
,{
type:_SPACER_,height:15,}
,{
ref:ZaServer.A_UseCustomSM,type:_WIZ_CHECKBOX_,labelLocation:_LEFT_,align:_LEFT_,label:com_zimbra_hsm.LBL_VM_CustomStoreManager,subLabel:ZaMsg.NAD_Enable+'<a href="https://zimbra.github.io/documentation/zimbra-10/adminguide.html#_custom_storage_manager" target="_blank" class="Img ImgInformation_xtra_small" style="vertical-align:text-bottom;display:inline-block;" title="'+com_zimbra_hsm.VM_S3CustomStoreManagerHelpButton+'"/>',labelCssStyle:"padding-left:3px;",trueValue:true,falseValue:false,}
,{
ref:ZaServer.A_StoreManager,type:_TEXTFIELD_,label:com_zimbra_hsm.LBL_VM_StoreManagerClassPath,labelLocation:_LEFT_,labelCssStyle:"text-align:left;",align:_LEFT_,width:250,enableDisableChangeEventSources:[ZaServer.A_UseCustomSM],enableDisableChecks:[[XForm.checkInstanceValue,ZaServer.A_UseCustomSM,true]],}
,],}
,],}
);
ZaNewVolumeXWizard.NEW_S3_VOLUME=ZaNewVolumeXWizard.stepObject[ZaServer.A_S3_StoreProvider]=++this.TAB_INDEX;
ZaNewVolumeXWizard.NEW_S3_BUCKET=++this.TAB_INDEX;
ZaNewVolumeXWizard.NEW_SCALITY_VOLUME=ZaNewVolumeXWizard.stepObject[ZaServer.A_Scality_StoreProvider]=++this.TAB_INDEX;
ZaNewVolumeXWizard.NEW_SCALITY_BUCKET=++this.TAB_INDEX;
ZaNewVolumeXWizard.NEW_CEPH_VOLUME=ZaNewVolumeXWizard.stepObject[ZaServer.A_Ceph_StoreProvider]=++this.TAB_INDEX;
ZaNewVolumeXWizard.NEW_CEPH_BUCKET=++this.TAB_INDEX;
ZaNewVolumeXWizard.NEW_NETAPP_STORAGEGRID_VOLUME=ZaNewVolumeXWizard.stepObject[ZaServer.A_NetApp_StoreProvider]=++this.TAB_INDEX;
ZaNewVolumeXWizard.NEW_NETAPP_STORAGEGRID_BUCKET=++this.TAB_INDEX;
ZaNewVolumeXWizard.NEW_CUSTOMS3_VOLUME=ZaNewVolumeXWizard.stepObject[ZaServer.A_CustomS3_StoreProvider]=++this.TAB_INDEX;
ZaNewVolumeXWizard.NEW_CUSTOMS3_BUCKET=++this.TAB_INDEX;
ZaNewVolumeXWizard.NEW_EMC_VOLUME=ZaNewVolumeXWizard.stepObject[ZaServer.A_EMC_StoreProvider]=++this.TAB_INDEX;
ZaNewVolumeXWizard.NEW_EMC_BUCKET=++this.TAB_INDEX;
ZaNewVolumeXWizard.NEW_OPENIO_VOLUME=ZaNewVolumeXWizard.stepObject[ZaServer.A_OpenIO_StoreProvider]=++this.TAB_INDEX;
this.stepChoices.push({
value:ZaNewVolumeXWizard.NEW_OPENIO_VOLUME,label:com_zimbra_hsm.TABT_OpenIOVolumePage,}
);
o.push({
type:_CASE_,caseKey:ZaNewVolumeXWizard.NEW_OPENIO_VOLUME,tabGroupKey:ZaNewVolumeXWizard.NEW_OPENIO_VOLUME,numCols:1,items:[{
type:_ZAWIZGROUP_,colSizes:["200px","*"],numCols:2,items:[{
ref:ZaServer.A_VolumeType,type:_OSELECT1_,label:com_zimbra_hsm.LBL_VM_VolumeType,labelCssStyle:"text-align:left;",choices:ZaServer.externalVolumeTypeChoices,width:155,}
,{
ref:ZaServer.A_VolumeName,type:_TEXTFIELD_,label:com_zimbra_hsm.LBL_VM_VolumeName,labelLocation:_LEFT_,labelCssStyle:"text-align:left;",width:150,}
,{
ref:ZaServer.A_URL,type:_TEXTFIELD_,label:com_zimbra_hsm.LBL_VM_URL,labelLocation:_LEFT_,labelCssStyle:"text-align:left;",width:150,}
,{
ref:ZaServer.A_OpenIOAccount,type:_TEXTFIELD_,label:com_zimbra_hsm.LBL_VM_OpenIOAccount,labelLocation:_LEFT_,labelCssStyle:"text-align:left;",width:150,}
,{
ref:ZaServer.A_OpenIONameSpace,type:_TEXTFIELD_,label:com_zimbra_hsm.LBL_VM_OpenIONamespace,labelLocation:_LEFT_,labelCssStyle:"text-align:left;",width:150,}
,{
ref:ZaServer.A_OpenIOProxyPort,type:_TEXTFIELD_,label:com_zimbra_hsm.LBL_VM_OpenIOProxyPort,labelLocation:_LEFT_,labelCssStyle:"text-align:left;",width:150,}
,{
ref:ZaServer.A_OpenIOAccountPort,type:_TEXTFIELD_,label:com_zimbra_hsm.LBL_VM_OpenIOAccountPort,labelLocation:_LEFT_,labelCssStyle:"text-align:left;",width:150,}
,],}
,{
type:_ZAWIZGROUP_,colSizes:["200px","*"],numCols:2,items:[{
ref:ZaServer.A_UseCustomSM,type:_WIZ_CHECKBOX_,labelLocation:_LEFT_,align:_LEFT_,label:com_zimbra_hsm.LBL_VM_CustomStoreManager,subLabel:ZaMsg.NAD_Enable+'<a href="https://zimbra.github.io/documentation/zimbra-10/adminguide.html#_custom_storage_manager" target="_blank" class="Img ImgInformation_xtra_small" style="vertical-align:text-bottom;display:inline-block;" title="'+com_zimbra_hsm.VM_S3CustomStoreManagerHelpButton+'"/>',labelCssStyle:"padding-left:3px;",trueValue:true,falseValue:false,}
,{
ref:ZaServer.A_StoreManager,type:_TEXTFIELD_,label:com_zimbra_hsm.LBL_VM_StoreManagerClassPath,labelLocation:_LEFT_,labelCssStyle:"text-align:left;",align:_LEFT_,width:250,enableDisableChangeEventSources:[ZaServer.A_UseCustomSM],enableDisableChecks:[[XForm.checkInstanceValue,ZaServer.A_UseCustomSM,true]],}
,],}
,],}
);
this.s3Providers.push({
stepChoiceVolume:ZaNewVolumeXWizard.NEW_S3_VOLUME,stepChoiceBucket:ZaNewVolumeXWizard.NEW_S3_BUCKET,stepChoiceVolTab:com_zimbra_hsm.TABT_S3VolumePage,stepChoiceBktTab:com_zimbra_hsm.TABT_S3BucketPage,stepChoiceBktLabel:com_zimbra_hsm.LBL_VM_S3CompatibleBucket}
);
this.s3Providers.push({
stepChoiceVolume:ZaNewVolumeXWizard.NEW_CEPH_VOLUME,stepChoiceBucket:ZaNewVolumeXWizard.NEW_CEPH_BUCKET,stepChoiceVolTab:com_zimbra_hsm.TABT_CephVolumePage,stepChoiceBktTab:com_zimbra_hsm.TABT_CephBucketPage,stepChoiceBktLabel:com_zimbra_hsm.LBL_VM_S3CompatibleBucket}
);
this.s3Providers.push({
stepChoiceVolume:ZaNewVolumeXWizard.NEW_NETAPP_STORAGEGRID_VOLUME,stepChoiceBucket:ZaNewVolumeXWizard.NEW_NETAPP_STORAGEGRID_BUCKET,stepChoiceVolTab:com_zimbra_hsm.TABT_NetAppStorageGridVolumePage,stepChoiceBktTab:com_zimbra_hsm.TABT_NetAppStorageGridBucketPage,stepChoiceBktLabel:com_zimbra_hsm.LBL_VM_S3CompatibleBucket}
);
this.s3Providers.push({
stepChoiceVolume:ZaNewVolumeXWizard.NEW_CUSTOMS3_VOLUME,stepChoiceBucket:ZaNewVolumeXWizard.NEW_CUSTOMS3_BUCKET,stepChoiceVolTab:com_zimbra_hsm.TABT_CustomS3VolumePage,stepChoiceBktTab:com_zimbra_hsm.TABT_CustomS3BucketPage,stepChoiceBktLabel:com_zimbra_hsm.LBL_VM_CustomS3Bucket}
);
this.s3Providers.push({
stepChoiceVolume:ZaNewVolumeXWizard.NEW_EMC_VOLUME,stepChoiceBucket:ZaNewVolumeXWizard.NEW_EMC_BUCKET,stepChoiceVolTab:com_zimbra_hsm.TABT_EMCVolumePage,stepChoiceBktTab:com_zimbra_hsm.TABT_EMCBucketPage,stepChoiceBktLabel:com_zimbra_hsm.LBL_VM_S3CompatibleBucket}
);
this.s3Providers.push({
stepChoiceVolume:ZaNewVolumeXWizard.NEW_SCALITY_VOLUME,stepChoiceBucket:ZaNewVolumeXWizard.NEW_SCALITY_BUCKET,stepChoiceVolTab:com_zimbra_hsm.TABT_ScalityVolumePage,stepChoiceBktTab:com_zimbra_hsm.TABT_ScalityBucketPage,stepChoiceBktLabel:com_zimbra_hsm.LBL_VM_S3CompatibleBucket}
);
for(var e=0;
e<this.s3Providers.length;
e++){
this.stepChoices.push({
value:this.s3Providers[e]["stepChoiceVolume"],label:this.s3Providers[e]["stepChoiceVolTab"],}
);
o.push({
type:_CASE_,caseKey:this.s3Providers[e]["stepChoiceVolume"],tabGroupKey:this.s3Providers[e]["stepChoiceVolume"],numCols:1,items:[{
type:_ZAWIZGROUP_,colSizes:["200px","*"],numCols:2,items:[{
ref:ZaServer.A_VolumeType,type:_OSELECT1_,label:com_zimbra_hsm.LBL_VM_VolumeType,labelCssStyle:"text-align:left;",choices:ZaServer.externalVolumeTypeChoices,width:155,}
,{
ref:ZaServer.A_VolumeName,type:_TEXTFIELD_,label:com_zimbra_hsm.LBL_VM_VolumeName,labelLocation:_LEFT_,labelCssStyle:"text-align:left;",width:150,}
,{
ref:ZaServer.A_VolumePrefix,type:_TEXTFIELD_,label:com_zimbra_hsm.LBL_VM_VolumePrefix,labelLocation:_LEFT_,labelCssStyle:"text-align:left;",width:150,}
,{
type:_OSELECT1_,label:this.s3Providers[e]["stepChoiceBktLabel"],labelCssStyle:"text-align:left;",align:_LEFT_,selectRef:ZaServer.A_CompatibleS3Bucket,ref:ZaServer.A_CompatibleS3Bucket,choices:ZaNewVolumeXWizard.bucketChoices,width:155,}
,{
type:_GROUP_,numCols:2,colSizes:["200px","*"],colSpan:2,items:[{
type:_CELLSPACER_}
,{
type:_BUTTON_,label:com_zimbra_hsm.LBL_VM_NewBucket,onActivate:function(){
if(this.getForm().parent._containedObject[ZaModel.currentStep]===ZaNewVolumeXWizard.NEW_S3_VOLUME){
this.getForm().setInstanceValue(ZaServer.A_S3_StoreProvider,ZaServer.A_StoreProvider)
}else{
if(this.getForm().parent._containedObject[ZaModel.currentStep]===ZaNewVolumeXWizard.NEW_CEPH_VOLUME){
this.getForm().setInstanceValue(ZaServer.A_Ceph_StoreProvider,ZaServer.A_StoreProvider)
}else{
if(this.getForm().parent._containedObject[ZaModel.currentStep]===ZaNewVolumeXWizard.NEW_NETAPP_STORAGEGRID_VOLUME){
this.getForm().setInstanceValue(ZaServer.A_NetApp_StoreProvider,ZaServer.A_StoreProvider)
}else{
if(this.getForm().parent._containedObject[ZaModel.currentStep]===ZaNewVolumeXWizard.NEW_CUSTOMS3_VOLUME){
this.getForm().setInstanceValue(ZaServer.A_CustomS3_StoreProvider,ZaServer.A_StoreProvider)
}else{
if(this.getForm().parent._containedObject[ZaModel.currentStep]===ZaNewVolumeXWizard.NEW_EMC_VOLUME){
this.getForm().setInstanceValue(ZaServer.A_EMC_StoreProvider,ZaServer.A_StoreProvider)
}else{
if(this.getForm().parent._containedObject[ZaModel.currentStep]===ZaNewVolumeXWizard.NEW_SCALITY_VOLUME){
this.getForm().setInstanceValue(ZaServer.A_Scality_StoreProvider,ZaServer.A_StoreProvider)
}}}}}}
this.getForm().parent.cleanBucketFields();
if(this.getForm().parent._containedObject[ZaModel.currentStep]===ZaNewVolumeXWizard.NEW_S3_VOLUME){
this.getForm().parent.goPage(ZaNewVolumeXWizard.NEW_S3_BUCKET)
}else{
if(this.getForm().parent._containedObject[ZaModel.currentStep]===ZaNewVolumeXWizard.NEW_CEPH_VOLUME){
this.getForm().parent.goPage(ZaNewVolumeXWizard.NEW_CEPH_BUCKET)
}else{
if(this.getForm().parent._containedObject[ZaModel.currentStep]===ZaNewVolumeXWizard.NEW_NETAPP_STORAGEGRID_VOLUME){
this.getForm().parent.goPage(ZaNewVolumeXWizard.NEW_NETAPP_STORAGEGRID_BUCKET)
}else{
if(this.getForm().parent._containedObject[ZaModel.currentStep]===ZaNewVolumeXWizard.NEW_CUSTOMS3_VOLUME){
this.getForm().parent.goPage(ZaNewVolumeXWizard.NEW_CUSTOMS3_BUCKET)
}else{
if(this.getForm().parent._containedObject[ZaModel.currentStep]===ZaNewVolumeXWizard.NEW_EMC_VOLUME){
this.getForm().parent.goPage(ZaNewVolumeXWizard.NEW_EMC_BUCKET)
}else{
if(this.getForm().parent._containedObject[ZaModel.currentStep]===ZaNewVolumeXWizard.NEW_SCALITY_VOLUME){
this.getForm().parent.goPage(ZaNewVolumeXWizard.NEW_SCALITY_BUCKET)
}}}}}}
this.getForm().parent._button[DwtWizardDialog.NEXT_BUTTON].setEnabled(false)
}
,}
,],}
,],}
,{
type:_ZAWIZGROUP_,colSizes:["200px","*"],numCols:2,items:[{
ref:ZaServer.A_UseCustomSM,type:_WIZ_CHECKBOX_,labelLocation:_LEFT_,align:_LEFT_,label:com_zimbra_hsm.LBL_VM_CustomStoreManager,subLabel:ZaMsg.NAD_Enable+'<a href="https://zimbra.github.io/documentation/zimbra-10/adminguide.html#_custom_storage_manager" target="_blank" class="Img ImgInformation_xtra_small" style="vertical-align:text-bottom;display:inline-block;" title="'+com_zimbra_hsm.VM_S3CustomStoreManagerHelpButton+'"/>',labelCssStyle:"padding-left:3px;",trueValue:true,falseValue:false,}
,{
ref:ZaServer.A_StoreManager,type:_TEXTFIELD_,label:com_zimbra_hsm.LBL_VM_StoreManagerClassPath,labelLocation:_LEFT_,labelCssStyle:"text-align:left;",align:_LEFT_,width:250,enableDisableChangeEventSources:[ZaServer.A_UseCustomSM],enableDisableChecks:[[XForm.checkInstanceValue,ZaServer.A_UseCustomSM,true]],}
,{
type:_SPACER_,height:15,visibilityChecks:[[ZaNewVolumeXWizard.isStep,ZaNewVolumeXWizard.NEW_S3_VOLUME,true]],}
,{
ref:ZaServer.A_InfrequentAccess,type:_WIZ_CHECKBOX_,labelLocation:_LEFT_,align:_LEFT_,subLabel:ZaMsg.NAD_Enable,label:com_zimbra_hsm.LBL_VM_InfrequentAccess,labelCssStyle:"padding-left:3px;",trueValue:true,falseValue:false,visibilityChecks:[[ZaNewVolumeXWizard.isStep,ZaNewVolumeXWizard.NEW_S3_VOLUME,true]],enableDisableChangeEventSources:[ZaServer.A_IntelligentTiering],enableDisableChecks:[[XForm.checkInstanceValue,ZaServer.A_IntelligentTiering,false]],}
,{
type:_GROUP_,numCols:3,colSpan:2,colSizes:["200px","*","*"],visibilityChecks:[[ZaNewVolumeXWizard.isStep,ZaNewVolumeXWizard.NEW_S3_VOLUME,true]],items:[{
ref:ZaServer.A_InfrequentAccessThreshold,type:_TEXTFIELD_,label:com_zimbra_hsm.LBL_VM_InfrequentAccessTreshold,labelLocation:_LEFT_,labelCssStyle:"text-align:left;",align:_LEFT_,width:100,enableDisableChangeEventSources:[ZaServer.A_InfrequentAccess],enableDisableChecks:[[XForm.checkInstanceValue,ZaServer.A_InfrequentAccess,true]],}
,{
type:_OUTPUT_,label:ZaMsg.NAD_bytes,labelCssStyle:"text-align:left;",}
,],}
,{
ref:ZaServer.A_IntelligentTiering,type:_WIZ_CHECKBOX_,labelLocation:_LEFT_,align:_LEFT_,subLabel:ZaMsg.NAD_Enable+'<a href="https://aws.amazon.com/s3/storage-classes" target="_blank" class="Img ImgInformation_xtra_small" style="vertical-align:text-bottom;display:inline-block;" title="'+com_zimbra_hsm.VM_S3IntelligentTieringHelpButton+'"/>',label:com_zimbra_hsm.LBL_VM_IntelligentTiering,labelCssStyle:"padding-left:3px;",trueValue:true,falseValue:false,visibilityChecks:[[ZaNewVolumeXWizard.isStep,ZaNewVolumeXWizard.NEW_S3_VOLUME,true]],enableDisableChangeEventSources:[ZaServer.A_InfrequentAccess],enableDisableChecks:[[XForm.checkInstanceValue,ZaServer.A_InfrequentAccess,false]],}
,{
ref:ZaServer.A_UnifiedStorage,type:_WIZ_CHECKBOX_,labelLocation:_LEFT_,align:_LEFT_,subLabel:ZaMsg.NAD_Enable+'<a href="https://zimbra.github.io/documentation/zimbra-10/adminguide.html#_unified_storage" target="_blank" class="Img ImgInformation_xtra_small" style="vertical-align:text-bottom;display:inline-block;" title="'+com_zimbra_hsm.VM_S3UnifiedStorageButton+'"/>',label:com_zimbra_hsm.LBL_VM_UnifiedStorage,labelCssStyle:"padding-left:3px;",trueValue:true,falseValue:false}
,],}
,],}
);
this.stepChoices.push({
value:this.s3Providers[e]["stepChoiceBucket"],label:this.s3Providers[e]["stepChoiceBktTab"],}
);
o.push({
type:_CASE_,tabGroupKey:this.s3Providers[e]["stepChoiceBucket"],caseKey:this.s3Providers[e]["stepChoiceBucket"],numCols:1,items:[{
type:_ZAWIZGROUP_,colSizes:["200px","*"],numCols:2,items:[{
ref:ZaServer.A_BucketName,type:_TEXTFIELD_,label:com_zimbra_hsm.LBL_VM_BucketName,labelLocation:_LEFT_,labelCssStyle:"text-align:left;",width:150,}
,{
ref:ZaServer.A_AccessKey,type:_TEXTFIELD_,label:com_zimbra_hsm.LBL_VM_AccessKey,labelLocation:_LEFT_,labelCssStyle:"text-align:left;",width:150,}
,{
ref:ZaServer.A_SecretKey,type:_TEXTFIELD_,label:com_zimbra_hsm.LBL_VM_SecretAccessKey,labelLocation:_LEFT_,labelCssStyle:"text-align:left;",width:150,}
,{
ref:ZaServer.A_DestinationPath,type:_TEXTFIELD_,label:com_zimbra_hsm.LBL_VM_DestinationPath,labelLocation:_LEFT_,labelCssStyle:"text-align:left;",width:150,}
,{
ref:ZaServer.A_URL,type:_TEXTFIELD_,label:com_zimbra_hsm.LBL_VM_URL,labelLocation:_LEFT_,labelCssStyle:"text-align:left;",width:150,}
,{
ref:ZaServer.A_Region,type:_TEXTFIELD_,label:com_zimbra_hsm.LBL_VM_Region,labelLocation:_LEFT_,labelCssStyle:"text-align:left;padding-left:5px;",width:150,visibilityChecks:[[ZaNewVolumeXWizard.isStep,ZaNewVolumeXWizard.NEW_CUSTOMS3_BUCKET,true]],}
,{
type:_OSELECT1_,label:com_zimbra_hsm.LBL_VM_Region,align:_LEFT_,labelCssStyle:"text-align:left;",selectRef:ZaServer.A_Region,ref:ZaServer.A_Region,choices:ZaNewVolumeXWizard.getRegionList(),width:125,visibilityChecks:[[ZaNewVolumeXWizard.isStep,ZaNewVolumeXWizard.NEW_S3_VOLUME,true]],}
,],}
,],}
)
}
var s={};
s[ZaNewVolumeXWizard.GENERAL_STEP]={};
s[ZaNewVolumeXWizard.NEW_INTERNAL_VOLUME]={
checks:[[ZaNewVolumeXWizard.isStep,ZaNewVolumeXWizard.NEW_INTERNAL_VOLUME,true]],};
s[ZaNewVolumeXWizard.NEW_S3_VOLUME]={
checks:[[ZaNewVolumeXWizard.isStep,ZaNewVolumeXWizard.NEW_S3_VOLUME,true]],};
s[ZaNewVolumeXWizard.NEW_S3_BUCKET]={
checks:[[ZaNewVolumeXWizard.isStep,ZaNewVolumeXWizard.NEW_S3_BUCKET,true]],};
s[ZaNewVolumeXWizard.NEW_SCALITY_VOLUME]={
checks:[[ZaNewVolumeXWizard.isStep,ZaNewVolumeXWizard.NEW_SCALITY_VOLUME,true]],};
s[ZaNewVolumeXWizard.NEW_SCALITY_BUCKET]={
checks:[[ZaNewVolumeXWizard.isStep,ZaNewVolumeXWizard.NEW_SCALITY_BUCKET,true]],};
s[ZaNewVolumeXWizard.NEW_CEPH_VOLUME]={
checks:[[ZaNewVolumeXWizard.isStep,ZaNewVolumeXWizard.NEW_CEPH_VOLUME,true]],};
s[ZaNewVolumeXWizard.NEW_CEPH_BUCKET]={
checks:[[ZaNewVolumeXWizard.isStep,ZaNewVolumeXWizard.NEW_CEPH_BUCKET,true]],};
s[ZaNewVolumeXWizard.NEW_NETAPP_STORAGEGRID_VOLUME]={
checks:[[ZaNewVolumeXWizard.isStep,ZaNewVolumeXWizard.NEW_NETAPP_STORAGEGRID_VOLUME,true]],};
s[ZaNewVolumeXWizard.NEW_NETAPP_STORAGEGRID_BUCKET]={
checks:[[ZaNewVolumeXWizard.isStep,ZaNewVolumeXWizard.NEW_NETAPP_STORAGEGRID_BUCKET,true]],};
s[ZaNewVolumeXWizard.NEW_OPENIO_VOLUME]={
checks:[[ZaNewVolumeXWizard.isStep,ZaNewVolumeXWizard.NEW_OPENIO_VOLUME,true]],};
s[ZaNewVolumeXWizard.NEW_CUSTOMS3_VOLUME]={
checks:[[ZaNewVolumeXWizard.isStep,ZaNewVolumeXWizard.NEW_CUSTOMS3_VOLUME,true]],};
s[ZaNewVolumeXWizard.NEW_CUSTOMS3_BUCKET]={
checks:[[ZaNewVolumeXWizard.isStep,ZaNewVolumeXWizard.NEW_CUSTOMS3_BUCKET,true]],};
s[ZaNewVolumeXWizard.NEW_EMC_VOLUME]={
checks:[[ZaNewVolumeXWizard.isStep,ZaNewVolumeXWizard.NEW_EMC_VOLUME,true]],};
s[ZaNewVolumeXWizard.NEW_EMC_BUCKET]={
checks:[[ZaNewVolumeXWizard.isStep,ZaNewVolumeXWizard.NEW_EMC_BUCKET,true]],};
this._lastStep=this.stepChoices.length;
r.items=[{
type:_OUTPUT_,colSpan:2,align:_CENTER_,valign:_TOP_,ref:ZaModel.currentStep,choices:this.stepChoices,labelVisibility:s,labelClickMethod:null,valueChangeEventSources:[ZaModel.currentStep],}
,{
type:_SEPARATOR_,align:_CENTER_,valign:_TOP_}
,{
type:_SPACER_,align:_CENTER_,valign:_TOP_}
,{
type:_SWITCH_,width:680,align:_LEFT_,valign:_TOP_,items:o,}
,]
};
ZaNewVolumeXWizard.isStep=function(o){
var t=this.getForm();
var e=t?t.instance.currentStep:1;
switch(o){
case ZaNewVolumeXWizard.NEW_INTERNAL_VOLUME:return e===ZaNewVolumeXWizard.NEW_INTERNAL_VOLUME;
case ZaNewVolumeXWizard.NEW_S3_VOLUME:return e===ZaNewVolumeXWizard.NEW_S3_VOLUME||e===ZaNewVolumeXWizard.NEW_S3_BUCKET;
case ZaNewVolumeXWizard.NEW_S3_BUCKET:return e===ZaNewVolumeXWizard.NEW_S3_BUCKET;
case ZaNewVolumeXWizard.NEW_SCALITY_VOLUME:return(e===ZaNewVolumeXWizard.NEW_SCALITY_VOLUME||e===ZaNewVolumeXWizard.NEW_SCALITY_BUCKET);
case ZaNewVolumeXWizard.NEW_SCALITY_BUCKET:return e===ZaNewVolumeXWizard.NEW_SCALITY_BUCKET;
case ZaNewVolumeXWizard.NEW_CEPH_VOLUME:return(e===ZaNewVolumeXWizard.NEW_CEPH_VOLUME||e===ZaNewVolumeXWizard.NEW_CEPH_BUCKET);
case ZaNewVolumeXWizard.NEW_CEPH_BUCKET:return e===ZaNewVolumeXWizard.NEW_CEPH_BUCKET;
case ZaNewVolumeXWizard.NEW_NETAPP_STORAGEGRID_VOLUME:return(e===ZaNewVolumeXWizard.NEW_NETAPP_STORAGEGRID_VOLUME||e===ZaNewVolumeXWizard.NEW_NETAPP_STORAGEGRID_BUCKET);
case ZaNewVolumeXWizard.NEW_NETAPP_STORAGEGRID_BUCKET:return e===ZaNewVolumeXWizard.NEW_NETAPP_STORAGEGRID_BUCKET;
case ZaNewVolumeXWizard.NEW_OPENIO_VOLUME:return e===ZaNewVolumeXWizard.NEW_OPENIO_VOLUME;
case ZaNewVolumeXWizard.NEW_CUSTOMS3_VOLUME:return(e===ZaNewVolumeXWizard.NEW_CUSTOMS3_VOLUME||e===ZaNewVolumeXWizard.NEW_CUSTOMS3_BUCKET);
case ZaNewVolumeXWizard.NEW_CUSTOMS3_BUCKET:return e===ZaNewVolumeXWizard.NEW_CUSTOMS3_BUCKET;
case ZaNewVolumeXWizard.NEW_EMC_VOLUME:return(e===ZaNewVolumeXWizard.NEW_EMC_VOLUME||e===ZaNewVolumeXWizard.NEW_EMC_BUCKET);
case ZaNewVolumeXWizard.NEW_EMC_BUCKET:return e===ZaNewVolumeXWizard.NEW_EMC_BUCKET;
default:return false
}};
ZaNewVolumeXWizard.getBucketChoices=function(t,e){
if(!t){
t=[]
}
return t.filter(function(o){
return o.storeProvider===e
}
)
};
ZaNewVolumeXWizard.prototype.getS3BucketConfigCallback=function(t,e){
if(t.busyId){
ZaApp.getInstance().getAppCtxt().getShell().setBusy(false,t.busyId)
}
if(!e){
throw new AjxException(ZaMsg.ERROR_EMPTY_RESPONSE_ARG,AjxException.UNKNOWN,"ZaNewVolumeXWizard.prototype.getS3BucketConfigCallback")
}else{
if(e.isException()){
ZaApp.getInstance().getCurrentController().popupErrorDialog(com_zimbra_hsm.VM_Error_FailedGetS3BucketConfiguration)
}else{
this.bucketList=e.getResponse().Body.GetS3BucketConfigResponse.globalS3BucketConfigurations;
if(!this.bucketList){
this.bucketList=new Array()
}
if(t.resetChoices){
ZaNewVolumeXWizard.bucketChoices.setChoices(ZaNewVolumeXWizard.getBucketChoices(this.bucketList,this._containedObject[ZaServer.A_StoreProvider]));
ZaNewVolumeXWizard.bucketChoices.dirtyChoices()
}}}};
ZaNewVolumeXWizard.prototype.getS3BucketConfig=function(t){
var n=AjxSoapDoc.create("GetS3BucketConfigRequest",ZaZimbraAdmin.URN,null);
var o={
controller:ZaApp.getInstance().getCurrentController(),busyMsg:ZaMsg.BUSY_LOADING,busyId:Dwt.getNextId(),showBusy:true,resetChoices:t,};
var r=new Object();
r.soapDoc=n;
r.asyncMode=true;
r.callback=new AjxCallback(this,this.getS3BucketConfigCallback,o);
try{
ZaRequestMgr.invoke(r,o)
}
catch(s){
ZaApp.getInstance().getCurrentController().popupErrorDialog(ZaMsg.ERROR_UNKNOWN,s)
}};
ZaNewVolumeXWizard.prototype.createS3BucketCallback=function(t,e){
if(t.busyId){
ZaApp.getInstance().getAppCtxt().getShell().setBusy(false,t.busyId)
}
if(!e){
throw new AjxException(ZaMsg.ERROR_EMPTY_RESPONSE_ARG,AjxException.UNKNOWN,"ZaNewVolumeXWizard.prototype.createS3BucketCallback")
}else{
if(e.isException()){
ZaApp.getInstance().getCurrentController().popupErrorDialog(com_zimbra_hsm.VM_Error_InvalidBucket,e.getException())
}else{
this.getS3BucketConfig(true);
this._button[DwtWizardDialog.NEXT_BUTTON].setEnabled(false);
this.goPage(ZaNewVolumeXWizard.stepObject[this._containedObject[ZaServer.A_StoreProvider]])
}}};
ZaNewVolumeXWizard.prototype.createS3BucketRequest=function(o){
if(!this.uniqueBucketName()){
ZaApp.getInstance().getCurrentController().popupErrorDialog(com_zimbra_hsm.VM_Error_RepeatedBucketName);
return
}
var s=AjxSoapDoc.create("CreateS3BucketConfigRequest",ZaZimbraAdmin.URN,null);
var t=s.set("a",o[ZaServer.A_StoreProvider]);
t.setAttribute("n","storeProvider");
t=s.set("a",o[ZaServer.A_BucketName]);
t.setAttribute("n","bucketName");
t=s.set("a","HTTPS");
t.setAttribute("n","protocol");
t=s.set("a",o[ZaServer.A_AccessKey]);
t.setAttribute("n","accessKey");
t=s.set("a",o[ZaServer.A_SecretKey]);
t.setAttribute("n","secretKey");
t=s.set("a",o[ZaServer.A_DestinationPath]);
t.setAttribute("n","destinationPath");
t=s.set("a",o[ZaServer.A_Region]);
t.setAttribute("n","region");
t=s.set("a",o[ZaServer.A_URL]);
t.setAttribute("n","url");
var n={
controller:ZaApp.getInstance().getCurrentController(),busyMsg:ZaMsg.BUSY_VALIDATING,busyId:Dwt.getNextId(),showBusy:true,};
var l=new Object();
l.soapDoc=s;
l.asyncMode=true;
l.callback=new AjxCallback(this,this.createS3BucketCallback,n);
try{
ZaRequestMgr.invoke(l,n)
}
catch(r){
ZaApp.getInstance().getCurrentController().popupErrorDialog(ZaMsg.ERROR_UNKNOWN,r)
}};
ZaNewVolumeXWizard.prototype.deleteS3BucketCallback=function(){
this.bucketList=ZaNewVolumeXWizard.getS3BucketConfig();
ZaNewVolumeXWizard.bucketChoices.setChoices(ZaNewVolumeXWizard.getBucketChoices(this.bucketList,ZaServer.A_S3_StoreProvider));
ZaNewVolumeXWizard.bucketChoices.dirtyChoices();
delete this._containedObject[ZaServer.A_CompatibleS3Bucket];
this.goPage(ZaNewVolumeXWizard.NEW_S3_VOLUME)
};
ZaNewVolumeXWizard.prototype.deleteS3BucketRequest=function(){
var n=AjxSoapDoc.create("DeleteS3BucketConfigRequest",ZaZimbraAdmin.URN,null);
var l=ZaNewVolumeXWizard.getS3BucketConfig();
var s=l.length-1;
var t=n.set("a",l[s]["globalBucketUUID"]);
t.setAttribute("n","globalBucketUUID");
var c=new Object();
c.soapDoc=n;
c.asyncMode=true;
c.callback=new AjxCallback(this,this.deleteS3BucketCallback);
var o={
controller:ZaApp.getInstance().getCurrentController(),busyMsg:com_zimbra_hsm.BUSY_GET_ALL_SERVER,};
try{
ZaRequestMgr.invoke(c,o)
}
catch(r){
ZaApp.getInstance().getCurrentController().popupErrorDialog(ZaMsg.ERROR_UNKNOWN,r)
}};
ZaNewVolumeXWizard.getRegionList=function(){
var e=["GovCloud","us-ashburn-1","us-gov-east-1","us-east-1","us-east-2","us-west-1","us-west-2","eu-west-1","eu-west-2","eu-west-3","eu-central-1","eu-north-1","eu-south-1","ap-east-1","ap-south-1","ap-southeast-1","ap-southeast-2","ap-northeast-1","ap-northeast-2","sa-east-1","cn-north-1","cn-northwest-1","ca-central-1","me-south-1","af-south-1",];
return AjxUtil.map(e,function(t){
return{
value:t,label:t}
}
)
};
ZaXDialog.XFormModifiers.ZaNewVolumeXWizard[0]=ZaNewVolumeXWizard.myXFormModifier;
ZaUpdateBucketXDialog=function(o,e,t,n){
if(arguments.length==0){
return
}
this._standardButtons=[DwtDialog.OK_BUTTON,DwtDialog.CANCEL_BUTTON];
ZaXDialog.call(this,o,null,n,e,t);
this._containedObject={};
this.initForm(ZaHSM.bucketXModel,this.getMyXForm());
this._localXForm.addListener(DwtEvent.XFORMS_VALUE_CHANGED,new AjxListener(this,this.handleXFormChange));
this._localXForm.addListener(DwtEvent.XFORMS_VALUE_ERROR,new AjxListener(this,this.handleXFormChange));
this._button[ZaXDialog.HELP_BUTTON].setVisibility(false)
};
ZaUpdateBucketXDialog.prototype=new ZaXDialog();
ZaUpdateBucketXDialog.prototype.constructor=ZaUpdateBucketXDialog;
ZaUpdateBucketXDialog.prototype.handleXFormChange=function(){
var n=this._containedObject.bucket;
var e=this._app.getCurrentController()._currentObject;
var o=e.attrs[ZaGlobalConfig.A_bucketList]||[];
var t=this._containedObject.bucketIndex;
this._button[DwtDialog.OK_BUTTON].setEnabled(!ZaHSM.objectsPrimitiveEqual(o[t],n)&&!this._localXForm.hasErrors())
};
ZaUpdateBucketXDialog.prototype.getMyXForm=function(){
var e={
numCols:1,items:[{
type:_ZAWIZGROUP_,isTabGroup:true,width:"100%",numCols:2,colSizes:["200px","*"],items:[{
type:_DWT_ALERT_,ref:"warningMessage",content:null,colSpan:"*",iconVisible:true,align:_LEFT_,style:DwtAlert.WARNING,}
,{
type:_SPACER_}
,{
ref:ZaServer.A_BucketName,type:_TEXTFIELD_,label:com_zimbra_hsm.LBL_VM_BucketName,labelLocation:_LEFT_,labelCssStyle:"text-align:left;padding-left:5px;",width:200,enableDisableChecks:false,}
,{
ref:ZaServer.A_AccessKey,type:_TEXTFIELD_,label:com_zimbra_hsm.LBL_VM_AccessKey,labelLocation:_LEFT_,labelCssStyle:"text-align:left;padding-left:5px;",width:200,}
,{
ref:ZaServer.A_SecretKey,type:_TEXTFIELD_,label:com_zimbra_hsm.LBL_VM_SecretAccessKey,labelLocation:_LEFT_,labelCssStyle:"text-align:left;padding-left:5px;",width:200,}
,{
ref:ZaServer.A_DestinationPath,type:_TEXTFIELD_,label:com_zimbra_hsm.LBL_VM_DestinationPath,labelLocation:_LEFT_,labelCssStyle:"text-align:left;padding-left:5px;",width:200,enableDisableChecks:false,}
,{
ref:ZaServer.A_URL,type:_TEXTFIELD_,label:com_zimbra_hsm.LBL_VM_URL,labelLocation:_LEFT_,labelCssStyle:"text-align:left;padding-left:5px;",width:200,}
,{
ref:ZaServer.A_Region,type:_TEXTFIELD_,label:com_zimbra_hsm.LBL_VM_Region,labelLocation:_LEFT_,labelCssStyle:"text-align:left;padding-left:5px;",width:150,visibilityChecks:[function(){
return(this.getInstanceValue("bucket")[ZaServer.A_StoreProvider]===ZaServer.A_CustomS3_StoreProvider)
}
,],enableDisableChecks:[[XForm.checkInstanceValueNotEmty,ZaServer.A_Region]],}
,{
type:_OSELECT1_,label:com_zimbra_hsm.LBL_VM_Region,align:_LEFT_,labelCssStyle:"text-align:left;padding-left:5px;",selectRef:ZaServer.A_Region,ref:ZaServer.A_Region,choices:ZaNewVolumeXWizard.getRegionList(),width:150,visibilityChecks:[function(){
return(this.getInstanceValue("bucket")[ZaServer.A_StoreProvider]===ZaServer.A_S3_StoreProvider)
}
,],}
,],}
,],};
return e
};
ZaUpdateVolumeXDialog=function(o,e,t,n){
if(arguments.length==0){
return
}
this._standardButtons=[DwtDialog.OK_BUTTON,DwtDialog.CANCEL_BUTTON];
ZaXDialog.call(this,o,null,n,e,t);
this._containedObject={};
this._helpURL=ZaEditVolumeXDialog.helpURL
};
ZaUpdateVolumeXDialog.prototype=new ZaEditVolumeXDialog();
ZaUpdateVolumeXDialog.prototype.constructor=ZaUpdateVolumeXDialog;
ZaUpdateVolumeXDialog.prototype.setObject=function(e){
var t=new Object();
t.isVolumeTypeInternal=e[ZaServer.A_VolumeStoreType]===ZaServer.A_VolumeStoreTypeInternal;
this.initForm(ZaServer.volumeObjModel,this.getMyXForm(t));
this._containedObject=e;
this._localXForm.setInstance(this._containedObject)
};
function ZaBucketGrouper(){}
if(ZaSettings&&ZaSettings.EnabledZimlet.com_zimbra_hsm){
ZaHSM.bucketXModel={
items:[{
id:ZaGlobalConfig.A_BucketId,ref:"bucket/"+ZaGlobalConfig.A_BucketId,type:_STRING_}
,{
id:ZaServer.A_BucketName,ref:"bucket/"+ZaServer.A_BucketName,type:_STRING_}
,{
id:ZaServer.A_AccessKey,ref:"bucket/"+ZaServer.A_AccessKey,type:_STRING_,required:true}
,{
id:ZaServer.A_SecretKey,ref:"bucket/"+ZaServer.A_SecretKey,type:_STRING_,required:true}
,{
id:ZaServer.A_DestinationPath,ref:"bucket/"+ZaServer.A_DestinationPath,type:_STRING_}
,{
id:ZaServer.A_URL,ref:"bucket/"+ZaServer.A_URL,type:_STRING_,required:true}
,{
id:ZaServer.A_Region,ref:"bucket/"+ZaServer.A_Region,type:_STRING_,required:true}
,{
id:"warningMessage",ref:"warningMessage",type:_STRING_}
,],};
ZaHSM.objectsPrimitiveEqual=function(n,o){
if(Object.keys(n).length!==Object.keys(o).length){
return false
}
var t,e;
for(e in n){
if(n.hasOwnProperty(e)){
t=o[e];
if(typeof t==="undefined"||n[e]!==t){
return false
}}}
return true
};
ZaHSM.getS3BucketRequest=function(){
if(ZaApp.getInstance()._globalConfig){
var o=AjxSoapDoc.create("GetS3BucketConfigRequest",ZaZimbraAdmin.URN,null);
var t={
controller:ZaApp.getInstance().getCurrentController(),};
var s=new Object();
s.soapDoc=o;
s.asyncMode=false;
try{
resp=ZaRequestMgr.invoke(s,t);
this.attrs.bucketList=new Array();
if(!resp||!resp.Body||!resp.Body.GetS3BucketConfigResponse){
throw new AjxException(ZaMsg.ERROR_EMPTY_RESPONSE_ARG,AjxException.UNKNOWN,"ZaHSM.getS3BucketRequest")
}else{
if(resp.Body.GetS3BucketConfigResponse.globalS3BucketConfigurations){
this.attrs.bucketList=resp.Body.GetS3BucketConfigResponse.globalS3BucketConfigurations
}}}
catch(n){
ZaApp.getInstance().getCurrentController().popupErrorDialog(ZaMsg.ERROR_UNKNOWN,n)
}}};
if(ZaItem.loadMethods.ZaGlobalConfig){
ZaItem.loadMethods.ZaGlobalConfig.push(ZaHSM.getS3BucketRequest)
}
ZaHSM.saveBucketList=function(){
var n=ZaApp.getInstance().getCurrentController()._view.getObject();
var t=ZaApp.getInstance().getCurrentController()._currentObject;
var s=n.attrs[ZaGlobalConfig.A_bucketList];
var e=t.attrs[ZaGlobalConfig.A_bucketList];
for(var o=0;
o<s.length;
o++){
if(!ZaHSM.objectsPrimitiveEqual(s[o],e[o])){
ZaHSM.updateS3BucketRequest(s[o])
}}};
if(ZaItem.modifyMethods.ZaGlobalConfig){
ZaItem.modifyMethods.ZaGlobalConfig.push(ZaHSM.saveBucketList)
}
ZaHSM.updateS3BucketRequest=function(n){
var r=AjxSoapDoc.create("EditS3BucketConfigRequest",ZaZimbraAdmin.URN,null);
var t=r.set("a",n[ZaGlobalConfig.A_BucketId]);
t.setAttribute("n","globalBucketUUID");
t=r.set("a",n[ZaServer.A_AccessKey]);
t.setAttribute("n","accessKey");
t=r.set("a",n[ZaServer.A_SecretKey]);
t.setAttribute("n","secretKey");
t=r.set("a",n[ZaServer.A_Region]);
t.setAttribute("n","region");
t=r.set("a",n[ZaServer.A_URL]);
t.setAttribute("n","url");
var s={
controller:ZaApp.getInstance().getCurrentController(),busyMsg:ZaMsg.BUSY_LOADING,};
var c=new Object();
c.soapDoc=r;
c.asyncMode=false;
try{
var o=ZaRequestMgr.invoke(c,s);
if(o.isException&&o.isException()){
ZaApp.getInstance().getCurrentController().popupErrorDialog(com_zimbra_hsm.VM_Error_InvalidBucket,o.getException())
}}
catch(l){
ZaApp.getInstance().getCurrentController().popupErrorDialog(ZaMsg.ERROR_UNKNOWN,l)
}};
ZaHSM.validateS3BucketCallback=function(l,r){
if(l.busyId){
ZaApp.getInstance().getAppCtxt().getShell().setBusy(false,l.busyId)
}
var o=this.parent.editBucketDialog;
if(!r){
throw new AjxException(ZaMsg.ERROR_EMPTY_RESPONSE_ARG,AjxException.UNKNOWN,"ZaNewVolumeXWizard.prototype.validateS3BucketCallback")
}else{
if(r.isException()){
ZaApp.getInstance().getCurrentController().popupErrorDialog(com_zimbra_hsm.VM_Error_InvalidBucket,r.getException());
o._button[DwtDialog.OK_BUTTON].setEnabled(false)
}else{
ZaApp.getInstance().getCurrentController().popupMsgDialog(com_zimbra_hsm.VM_Info_BucketConnectionSuccessful);
var n=o.getObject();
var c=n.bucket;
var e=this.getInstance();
var s=e.attrs[ZaGlobalConfig.A_bucketList]||[];
var t=n.bucketIndex;
s[t]=c;
this.setInstanceValue(s,ZaGlobalConfig.A_bucketList);
this.setInstanceValue(new Array(),ZaGlobalConfig.A2_bucket_selection_cache);
this.parent.setDirty(true);
o.popdown()
}}};
ZaHSM.validateS3BucketRequest=function(t){
var n=AjxSoapDoc.create("ValidateS3BucketReachableRequest",ZaZimbraAdmin.URN,null);
n.set("storeProvider",t[ZaServer.A_StoreProvider]);
n.set("bucketName",t[ZaServer.A_BucketName]);
n.set("protocol","HTTPS");
n.set("accessKey",t[ZaServer.A_AccessKey]);
n.set("secretKey",t[ZaServer.A_SecretKey]);
n.set("destinationPath",t[ZaServer.A_DestinationPath]);
n.set("region",t[ZaServer.A_Region]);
n.set("url",t[ZaServer.A_URL]);
var o={
controller:ZaApp.getInstance().getCurrentController(),busyMsg:ZaMsg.BUSY_VALIDATING,busyId:Dwt.getNextId(),showBusy:true,};
var r=new Object();
r.soapDoc=n;
r.asyncMode=true;
r.callback=new AjxCallback(this,ZaHSM.validateS3BucketCallback,o);
try{
ZaRequestMgr.invoke(r,o)
}
catch(s){
ZaApp.getInstance().getCurrentController().popupErrorDialog(ZaMsg.ERROR_UNKNOWN,s)
}};
ZaHSM.deleteS3BucketRequest=function(){
var o=ZaApp.getInstance().getCurrentController()._view.getObject();
if(o[ZaGlobalConfig.A_RemovedBuckets]){
var r=o[ZaGlobalConfig.A_RemovedBuckets].length;
for(var s=0;
s<r;
s++){
if(o[ZaGlobalConfig.A_RemovedBuckets][s][ZaGlobalConfig.A_BucketId]){
var l=AjxSoapDoc.create("DeleteS3BucketConfigRequest",ZaZimbraAdmin.URN,null);
var t=l.set("a",o[ZaGlobalConfig.A_RemovedBuckets][s][ZaGlobalConfig.A_BucketId]);
t.setAttribute("n","globalBucketUUID");
var n={
controller:ZaApp.getInstance().getCurrentController(),};
var d=new Object();
d.soapDoc=l;
d.asyncMode=false;
try{
ZaRequestMgr.invoke(d,n)
}
catch(c){
ZaApp.getInstance().getCurrentController().popupErrorDialog(ZaMsg.ERROR_UNKNOWN,c)
}}}}};
ZaItem.modifyMethods.ZaGlobalConfig.push(ZaHSM.deleteS3BucketRequest);
HSMBucketListView=function(n,o,t,e){
ZaListView.call(this,n,o,t,e)
};
HSMBucketListView.prototype=new ZaListView();
HSMBucketListView.prototype.constructor=HSMBucketListView;
HSMBucketListView.prototype.toString=function(){
return"HSMBucketListView"
};
HSMBucketListView.prototype._createItemHtml=function(l){
var n=[];
var r=document.createElement("div");
r[DwtListView._STYLE_CLASS]="Row";
r[DwtListView._SELECTED_STYLE_CLASS]=r[DwtListView._STYLE_CLASS]+"-"+DwtCssStyle.SELECTED;
r.className=r[DwtListView._STYLE_CLASS];
this.associateItemWithElement(l,r,DwtListView.TYPE_LIST_ITEM);
var e=0;
n[e++]="<table width='100%' cellspacing='0' cellpadding='0'>";
n[e++]="<tr>";
if(this._headerList){
var o=this._headerList.length;
for(var t=0;
t<o;
t++){
var s=this._headerList[t]._field;
if(s==ZaGlobalConfig.A_BucketName){
n[e++]="<td align=left height=20px width="+this._headerList[t]._width+">";
n[e++]=AjxStringUtil.htmlEncode(l.bucketName);
n[e++]="</td>"
}else{
if(s==ZaGlobalConfig.A_BucketId){
n[e++]="<td align=left height=20px width="+this._headerList[t]._width+">";
n[e++]=AjxStringUtil.htmlEncode(l.globalBucketUUID);
n[e++]="</td>"
}else{
if(s==ZaGlobalConfig.A_StoreProvider){
n[e++]="<td align=left height=20px width="+this._headerList[t]._width+">";
n[e++]=AjxStringUtil.htmlEncode(l.storeProvider.replace("_S3",""));
n[e++]="</td>"
}else{
n[e++]="<td align=left height=20px width="+this._headerList[t]._width+"></td>"
}}}}}else{
n[e++]="<td width=100%>";
n[e++]=AjxStringUtil.htmlEncode(l);
n[e++]="</td>"
}
n[e++]="</tr></table>";
r.innerHTML=n.join("");
return r
};
HSMBucketListView.prototype._setNoResultsHtml=function(){
var e=new AjxBuffer();
var t=document.createElement("div");
e.append("<table width='100%' cellspacing='0' cellpadding='1'>","<tr><td class='NoResults'><br>&nbsp","</td></tr></table>");
t.innerHTML=e.toString();
this._addRow(t)
};
HSMBucketListView.prototype._sortColumn=function(t,o){
if(o){
var e=function(s,n){
return s<n?1:s>n?-1:0
};
this.getList().sort(e)
}else{
this.getList().sort()
}};
HSMBucket_XFormItem=function(){};
XFormItemFactory.createItemType("_HSM_BUCKET_","hsm_bucket",HSMBucket_XFormItem,Composite_XFormItem);
HSMBucket_XFormItem.prototype.visibilityChecks=[ZaItem.hasReadPermission];
HSMBucket_XFormItem.prototype.enableDisableChecks=[ZaItem.hasWritePermission];
HSMBucket_XFormItem.prototype.showPlusMinus=false;
HSMBucket_XFormItem.prototype.numCols=1;
HSMBucket_XFormItem.prototype.colSizes=["600"];
HSMBucket_XFormItem.prototype.colSpan="*";
HSMBucket_XFormItem.bucketEditButtonListener=function(){
var e=this.getInstance();
if(e.bucket_selection_cache&&e.bucket_selection_cache[0]){
var s=this.getForm().parent;
if(!s.editBucketDialog){
s.editBucketDialog=new ZaUpdateBucketXDialog(ZaApp.getInstance().getAppCtxt().getShell(),"450px","260px",com_zimbra_hsm.EditBucketTitle);
s.editBucketDialog.registerCallback(DwtDialog.OK_BUTTON,HSMBucket_XFormItem.updateS3Bucket,this.getForm())
}
var r=e.attrs[ZaGlobalConfig.A_bucketList]||[];
var o;
for(var t=0;
t<r.length;
t++){
if(ZaHSM.objectsPrimitiveEqual(r[t],e.bucket_selection_cache[0])){
o=t;
break
}}
var n=ZaUtil.deepCloneObject(r[o]);
s.editBucketDialog.setObject({
bucketIndex:o,bucket:n,warningMessage:com_zimbra_hsm.EditBucketWarningMessage,}
);
s.editBucketDialog._button[DwtDialog.OK_BUTTON].setEnabled(false);
s.editBucketDialog.popup()
}};
HSMBucket_XFormItem.bucketDeleteButtonListener=function(){
var t=this.getInstance();
if(!t.bucket_selection_cache){
return
}
var e=this.getInstanceValue(ZaGlobalConfig.A2_bucket_selection_cache);
ZaApp.getInstance().dialogs.confirmMessageDialog=new ZaMsgDialog(ZaApp.getInstance().getAppCtxt().getShell(),null,[DwtDialog.YES_BUTTON,DwtDialog.NO_BUTTON],null,ZaId.VIEW_STATUS+"_confirmDeleteBucket");
ZaApp.getInstance().dialogs.confirmMessageDialog.setMessage(com_zimbra_hsm.DeleteBucketWarningMessage,DwtMessageDialog.WARNING_STYLE);
ZaApp.getInstance().dialogs.confirmMessageDialog.registerCallback(DwtDialog.YES_BUTTON,HSMBucket_XFormItem.prototype.deleteS3Bucket,this.getForm(),[e,[]]);
ZaApp.getInstance().dialogs.confirmMessageDialog.popup()
};
HSMBucket_XFormItem.updateS3Bucket=function(){
var e=this.parent.editBucketDialog;
if(e){
var t=e.getObject();
var o=t.bucket;
ZaHSM.validateS3BucketRequest.call(this,o)
}};
HSMBucket_XFormItem.prototype.deleteS3Bucket=function(o){
ZaApp.getInstance().dialogs.confirmMessageDialog.popdown();
if(!o||!o.length){
return
}
var s=this.getInstanceValue(ZaGlobalConfig.A_bucketList);
var t=o[0];
var n=this.getInstanceValue(ZaGlobalConfig.A_RemovedBuckets)||[];
var e=s.filter(function(r){
return r[ZaGlobalConfig.A_BucketId]!==t[ZaGlobalConfig.A_BucketId]
}
);
n.push(t);
this.setInstanceValue(e,ZaGlobalConfig.A_bucketList);
this.setInstanceValue([],ZaGlobalConfig.A2_bucket_selection_cache);
this.setInstanceValue(n,ZaGlobalConfig.A_RemovedBuckets);
this.parent.setDirty(true)
};
HSMBucket_XFormItem.bucketSelectionListener=function(t){
var e=this.widget.getSelection();
if(e&&e.length){
this.getModel().setInstanceValue(this.getInstance(),ZaGlobalConfig.A2_bucket_selection_cache,e)
}else{
this.getModel().setInstanceValue(this.getInstance(),ZaGlobalConfig.A2_bucket_selection_cache,null)
}};
HSMBucket_XFormItem.isDeleteBucketEnabled=function(){
return(!AjxUtil.isEmpty(this.getInstanceValue(ZaGlobalConfig.A2_bucket_selection_cache))&&this.getInstanceValue(ZaGlobalConfig.A2_bucket_selection_cache).length==1)
};
HSMBucket_XFormItem.prototype.initializeItems=function(){
var t=new Array();
t[0]=new ZaListHeaderItem(ZaGlobalConfig.A_BucketName,"Bucket Name",null,"300px",false,null,false,true);
t[1]=new ZaListHeaderItem(ZaGlobalConfig.A_BucketId,"ID",null,"400px",false,null,false,true);
t[2]=new ZaListHeaderItem(ZaGlobalConfig.A_StoreProvider,"Store Provider",null,"auto",false,null,false,true);
var e={
type:_ZA_TOP_GROUPER_,id:"server_form_bucket_group",width:"100%",numCols:1,colSizes:["auto"],label:com_zimbra_hsm.BucketsGrpTitle,cssStyle:"margin-top:10px;padding-bottom:0;",items:[{
ref:ZaGlobalConfig.A_bucketList,type:_DWT_LIST_,height:"200",width:"99%",preserveSelection:false,multiselect:false,cssClass:"DLSource",headerList:t,widgetClass:HSMBucketListView,onSelection:HSMBucket_XFormItem.bucketSelectionListener,valueChangeEventSources:[ZaGlobalConfig.A_bucketList],}
,{
type:_GROUP_,numCols:5,colSizes:["100px","auto","100px","auto","100px"],width:"350px",cssStyle:"margin:10px;padding-bottom:0;",items:[{
type:_DWT_BUTTON_,label:ZaMsg.TBB_Delete,width:"100px",onActivate:"HSMBucket_XFormItem.bucketDeleteButtonListener.call(this);",enableDisableChangeEventSources:[ZaGlobalConfig.A2_bucket_selection_cache],enableDisableChecks:[HSMBucket_XFormItem.isDeleteBucketEnabled],}
,{
type:_CELLSPACER_,}
,{
type:_DWT_BUTTON_,label:ZaMsg.TBB_Edit,width:"100px",onActivate:"HSMBucket_XFormItem.bucketEditButtonListener.call(this);",enableDisableChangeEventSources:[ZaGlobalConfig.A2_bucket_selection_cache],enableDisableChecks:[HSMBucket_XFormItem.isDeleteBucketEnabled],}
,],}
,],};
this.items=[e];
Composite_XFormItem.prototype.initializeItems.call(this)
};
HSMBucket_XFormItem.prototype.items=[]
}
if(ZaSettings&&ZaSettings.EnabledZimlet.com_zimbra_two_factor_auth){
if(window.console&&console.log){
console.log("Start loading com_zimbra_two_factor_auth.js")
}
if(window.ZaAccount){
ZaAccount.A_zimbraFeatureTwoFactorAuthAvailable="zimbraFeatureTwoFactorAuthAvailable";
ZaAccount.A_zimbraTwoFactorAuthEnabled="zimbraTwoFactorAuthEnabled";
ZaAccount.A_zimbraFeatureTwoFactorAuthRequired="zimbraFeatureTwoFactorAuthRequired";
ZaAccount.A_zimbraTwoFactorAuthNumScratchCodes="zimbraTwoFactorAuthNumScratchCodes";
ZaAccount.A_zimbraFeatureAppSpecificPasswordsEnabled="zimbraFeatureAppSpecificPasswordsEnabled";
if(ZaAccount.myXModel){
var items=ZaAccount.myXModel.items;
if(items){
items.push({
id:ZaAccount.A_zimbraFeatureTwoFactorAuthAvailable,type:_COS_ENUM_,ref:"attrs/"+ZaAccount.A_zimbraFeatureTwoFactorAuthAvailable,choices:ZaModel.BOOLEAN_CHOICES}
);
items.push({
id:ZaAccount.A_zimbraTwoFactorAuthEnabled,type:_COS_ENUM_,ref:"attrs/"+ZaAccount.A_zimbraTwoFactorAuthEnabled,choices:ZaModel.BOOLEAN_CHOICES}
);
items.push({
id:ZaAccount.A_zimbraFeatureTwoFactorAuthRequired,type:_COS_ENUM_,ref:"attrs/"+ZaAccount.A_zimbraFeatureTwoFactorAuthRequired,choices:ZaModel.BOOLEAN_CHOICES}
);
items.push({
id:ZaAccount.A_zimbraTwoFactorAuthNumScratchCodes,type:_COS_NUMBER_,ref:"attrs/"+ZaAccount.A_zimbraTwoFactorAuthNumScratchCodes,minInclusive:1,maxInclusive:40}
);
items.push({
id:ZaAccount.A_zimbraFeatureAppSpecificPasswordsEnabled,type:_COS_ENUM_,ref:"attrs/"+ZaAccount.A_zimbraFeatureAppSpecificPasswordsEnabled,choices:ZaModel.BOOLEAN_CHOICES}
)
}}}
if(window.ZaCos){
ZaCos.A_zimbraFeatureTwoFactorAuthAvailable="zimbraFeatureTwoFactorAuthAvailable";
ZaCos.A_zimbraFeatureTwoFactorAuthRequired="zimbraFeatureTwoFactorAuthRequired";
ZaCos.A_zimbraTwoFactorAuthNumScratchCodes="zimbraTwoFactorAuthNumScratchCodes";
ZaCos.A_zimbraFeatureAppSpecificPasswordsEnabled="zimbraFeatureAppSpecificPasswordsEnabled";
if(ZaCos.myXModel){
var items=ZaCos.myXModel.items;
if(items){
items.push({
id:ZaCos.A_zimbraFeatureTwoFactorAuthAvailable,type:_COS_ENUM_,ref:"attrs/"+ZaCos.A_zimbraFeatureTwoFactorAuthAvailable,choices:ZaModel.BOOLEAN_CHOICES}
);
items.push({
id:ZaCos.A_zimbraFeatureTwoFactorAuthRequired,type:_COS_ENUM_,ref:"attrs/"+ZaCos.A_zimbraFeatureTwoFactorAuthRequired,choices:ZaModel.BOOLEAN_CHOICES}
);
items.push({
id:ZaCos.A_zimbraTwoFactorAuthNumScratchCodes,type:_COS_NUMBER_,ref:"attrs/"+ZaCos.A_zimbraTwoFactorAuthNumScratchCodes,minInclusive:1,maxInclusive:40}
);
items.push({
id:ZaCos.A_zimbraFeatureAppSpecificPasswordsEnabled,type:_COS_ENUM_,ref:"attrs/"+ZaCos.A_zimbraFeatureAppSpecificPasswordsEnabled,choices:ZaModel.BOOLEAN_CHOICES}
)
}}
if(window.ZaNewCosXWizard){
var advancedTabAttrs=ZaNewCosXWizard.ADVANCED_TAB_ATTRS;
if(advancedTabAttrs){
advancedTabAttrs.push(ZaCos.A_zimbraFeatureTwoFactorAuthAvailable,ZaCos.A_zimbraFeatureTwoFactorAuthRequired,ZaCos.A_zimbraTwoFactorAuthNumScratchCodes,ZaCos.A_zimbraFeatureAppSpecificPasswordsEnabled)
}}}
function ZaTwoFactorAuth(){}
ZaTwoFactorAuth.isTwoFactorAuthAvailable=function(){
return(this.getInstanceValue(ZaAccount.A_zimbraFeatureTwoFactorAuthAvailable)=="TRUE")
};
ZaTwoFactorAuth.searchXFormObject=function(r,s){
var t=AjxUtil.filter(r.items,function(l){
return(l.type===s.type)
}
);
if(!t||t.length===0){
return
}
t=AjxUtil.filter(t[0].items,function(l){
return(l.id===s.outerId)
}
);
if(!t||t.length===0){
return
}
var o=t[0].items;
for(var n=0,e=o.length;
n<e;
n++){
if(o[n].id===s.innerId){
return{
index:n,items:o}
}}};
if(ZaTabView.XFormModifiers.ZaAccountXFormView){
ZaTwoFactorAuth.myAccountXFormModifier=function(t){
var e=ZaTwoFactorAuth.searchXFormObject(t,{
type:"switch",outerId:"account_form_advanced_tab",innerId:"account_password_settings"}
);
if(e){
e.items.splice(e.index+1,0,ZaTwoFactorAuth.getMyAccountXFormItem())
}};
ZaTabView.XFormModifiers.ZaAccountXFormView.push(ZaTwoFactorAuth.myAccountXFormModifier);
ZaTwoFactorAuth.getMyAccountXFormItem=function(){
var e={
type:_ZA_TOP_GROUPER_,id:"two_factor_authentication_settings",colSizes:["auto"],numCols:1,label:com_zimbra_two_factor_auth.Two_Factor_Authentication,visibilityChecks:[[ZATopGrouper_XFormItem.isGroupVisible,[ZaAccount.A_zimbraFeatureTwoFactorAuthAvailable,ZaAccount.A_zimbraTwoFactorAuthEnabled,ZaAccount.A_zimbraFeatureTwoFactorAuthRequired,ZaAccount.A_zimbraTwoFactorAuthNumScratchCodes,ZaAccount.A_zimbraFeatureAppSpecificPasswordsEnabled]]],items:[{
ref:ZaAccount.A_zimbraFeatureTwoFactorAuthAvailable,type:_SUPER_CHECKBOX_,checkBoxLabel:com_zimbra_two_factor_auth.LBL_Enable_Two_Factor_Authentication,msgName:com_zimbra_two_factor_auth.LBL_Enable_Two_Factor_Authentication,trueValue:"TRUE",falseValue:"FALSE",resetToSuperLabel:ZaMsg.NAD_ResetToCOS}
,{
ref:ZaAccount.A_zimbraTwoFactorAuthEnabled,type:_SUPER_CHECKBOX_,enableDisableChecks:[[XForm.checkInstanceValue,ZaAccount.A_zimbraTwoFactorAuthEnabled,"TRUE"],[XForm.checkInstanceValue,ZaAccount.A_zimbraFeatureTwoFactorAuthAvailable,"TRUE"]],enableDisableChangeEventSources:[ZaAccount.A_zimbraFeatureTwoFactorAuthAvailable,ZaAccount.A_COSId],checkBoxLabel:com_zimbra_two_factor_auth.LBL_Two_Factor_Authentication_Active,msgName:com_zimbra_two_factor_auth.LBL_Two_Factor_Authentication_Active,trueValue:"TRUE",falseValue:"FALSE",resetToSuperLabel:ZaMsg.NAD_ResetToCOS,checkBoxElementChanged:function(n,o,t){
if(n==="FALSE"){
this.disableElement();
this.getParentItem().getItems()[1].setElementEnabled(false)
}
this.elementChanged(n,o,t)
}}
,{
ref:ZaAccount.A_zimbraFeatureTwoFactorAuthRequired,type:_SUPER_CHECKBOX_,enableDisableChecks:[[XForm.checkInstanceValue,ZaAccount.A_zimbraFeatureTwoFactorAuthAvailable,"TRUE"]],enableDisableChangeEventSources:[ZaAccount.A_zimbraFeatureTwoFactorAuthAvailable,ZaAccount.A_COSId],labelLocation:_LEFT_,trueValue:"TRUE",falseValue:"FALSE",checkBoxLabel:com_zimbra_two_factor_auth.LBL_Require_Two_Step_Authentication,resetToSuperLabel:ZaMsg.NAD_ResetToCOS,msgName:com_zimbra_two_factor_auth.LBL_Require_Two_Step_Authentication}
,{
ref:ZaAccount.A_zimbraTwoFactorAuthNumScratchCodes,type:_SUPER_TEXTFIELD_,enableDisableChecks:[[XForm.checkInstanceValue,ZaAccount.A_zimbraFeatureTwoFactorAuthAvailable,"TRUE"]],enableDisableChangeEventSources:[ZaAccount.A_zimbraFeatureTwoFactorAuthAvailable,ZaAccount.A_COSId],txtBoxLabel:com_zimbra_two_factor_auth.LBL_Number_Of_One_Time_Codes,msgName:com_zimbra_two_factor_auth.MSG_Number_Of_One_Time_Codes,labelLocation:_LEFT_,textFieldCssClass:"admin_xform_number_input",resetToSuperLabel:ZaMsg.NAD_ResetToCOS}
,{
ref:ZaAccount.A_zimbraFeatureAppSpecificPasswordsEnabled,type:_SUPER_CHECKBOX_,enableDisableChecks:[[XForm.checkInstanceValue,ZaAccount.A_zimbraFeatureTwoFactorAuthAvailable,"TRUE"]],enableDisableChangeEventSources:[ZaAccount.A_zimbraFeatureTwoFactorAuthAvailable,ZaAccount.A_COSId],labelLocation:_LEFT_,trueValue:"TRUE",falseValue:"FALSE",checkBoxLabel:com_zimbra_two_factor_auth.LBL_Enable_Application_Passcodes,msgName:com_zimbra_two_factor_auth.LBL_Enable_Application_Passcodes,resetToSuperLabel:ZaMsg.NAD_ResetToCOS}
]};
return e
}
}
if(ZaXDialog.XFormModifiers.ZaNewAccountXWizard){
ZaTwoFactorAuth.NewAccountWizXFormModifier=function(t){
var e=ZaTwoFactorAuth.searchXFormObject(t,{
type:"switch",outerId:"account_form_advanced_step",innerId:"account_password_settings"}
);
if(e){
e.items.splice(e.index+1,0,ZaTwoFactorAuth.getNewAccountWizXFormItem())
}};
ZaXDialog.XFormModifiers.ZaNewAccountXWizard.push(ZaTwoFactorAuth.NewAccountWizXFormModifier);
ZaTwoFactorAuth.getNewAccountWizXFormItem=function(){
var e={
type:_ZAWIZ_TOP_GROUPER_,id:"account_two_factor_authentication_settings",colSizes:["auto"],numCols:1,label:com_zimbra_two_factor_auth.Two_Factor_Authentication,visibilityChecks:[[ZATopGrouper_XFormItem.isGroupVisible,[ZaAccount.A_zimbraFeatureTwoFactorAuthAvailable,ZaAccount.A_zimbraFeatureTwoFactorAuthRequired,ZaAccount.A_zimbraTwoFactorAuthNumScratchCodes,ZaAccount.A_zimbraFeatureAppSpecificPasswordsEnabled]]],items:[{
ref:ZaAccount.A_zimbraFeatureTwoFactorAuthAvailable,type:_SUPER_WIZ_CHECKBOX_,resetToSuperLabel:ZaMsg.NAD_ResetToCOS,checkBoxLabel:com_zimbra_two_factor_auth.LBL_Enable_Two_Factor_Authentication,msgName:com_zimbra_two_factor_auth.LBL_Enable_Two_Factor_Authentication,trueValue:"TRUE",falseValue:"FALSE",colSizes:["200px","300px","*"],colSpan:1}
,{
ref:ZaAccount.A_zimbraFeatureTwoFactorAuthRequired,type:_SUPER_WIZ_CHECKBOX_,enableDisableChecks:[[ZaTwoFactorAuth.isTwoFactorAuthAvailable],[XForm.checkInstanceValue,ZaAccount.A_zimbraFeatureTwoFactorAuthAvailable,"TRUE"]],enableDisableChangeEventSources:[ZaAccount.A_zimbraFeatureTwoFactorAuthAvailable,ZaAccount.A_COSId,ZaAccount.A_zimbraFeatureTwoFactorAuthAvailable],resetToSuperLabel:ZaMsg.NAD_ResetToCOS,checkBoxLabel:com_zimbra_two_factor_auth.LBL_Require_Two_Step_Authentication,trueValue:"TRUE",falseValue:"FALSE",colSizes:["200px","300px","*"],colSpan:1,checkBoxLabelLocation:_LEFT_,checkboxAlign:_LEFT_,labelCssStyle:"text-align:right;"}
,{
ref:ZaAccount.A_zimbraTwoFactorAuthNumScratchCodes,type:_SUPERWIZ_TEXTFIELD_,enableDisableChecks:[[ZaTwoFactorAuth.isTwoFactorAuthAvailable],[XForm.checkInstanceValue,ZaAccount.A_zimbraFeatureTwoFactorAuthAvailable,"TRUE"]],enableDisableChangeEventSources:[ZaAccount.A_zimbraFeatureTwoFactorAuthAvailable,ZaAccount.A_COSId,ZaAccount.A_zimbraFeatureTwoFactorAuthAvailable],txtBoxLabel:com_zimbra_two_factor_auth.LBL_Number_Of_One_Time_Codes,toolTipContent:com_zimbra_two_factor_auth.MSG_Number_Of_One_Time_Codes,msgName:com_zimbra_two_factor_auth.LBL_Number_Of_One_Time_Codes,labelLocation:_LEFT_,textFieldCssClass:"admin_xform_number_input",resetToSuperLabel:ZaMsg.NAD_ResetToCOS,colSizes:["200px","300px","*"],colSpan:1}
,{
ref:ZaAccount.A_zimbraFeatureAppSpecificPasswordsEnabled,type:_SUPER_WIZ_CHECKBOX_,enableDisableChecks:[[ZaTwoFactorAuth.isTwoFactorAuthAvailable],[XForm.checkInstanceValue,ZaAccount.A_zimbraFeatureTwoFactorAuthAvailable,"TRUE"]],enableDisableChangeEventSources:[ZaAccount.A_zimbraFeatureTwoFactorAuthAvailable,ZaAccount.A_COSId,ZaAccount.A_zimbraFeatureTwoFactorAuthAvailable],resetToSuperLabel:ZaMsg.NAD_ResetToCOS,checkBoxLabel:com_zimbra_two_factor_auth.LBL_Enable_Application_Passcodes,trueValue:"TRUE",falseValue:"FALSE",colSizes:["200px","300px","*"],colSpan:1,checkBoxLabelLocation:_LEFT_,checkboxAlign:_LEFT_,labelCssStyle:"text-align:right;"}
]};
return e
}
}
if(ZaTabView.XFormModifiers.ZaCosXFormView){
ZaTwoFactorAuth.myCosXFormModifier=function(t){
var e=ZaTwoFactorAuth.searchXFormObject(t,{
type:"switch",outerId:"cos_form_advanced_tab",innerId:"cos_password_settings"}
);
if(e){
e.items.splice(e.index+1,0,ZaTwoFactorAuth.getMyCosXFormItem())
}};
ZaTabView.XFormModifiers.ZaCosXFormView.push(ZaTwoFactorAuth.myCosXFormModifier);
ZaTwoFactorAuth.getMyCosXFormItem=function(){
var e={
type:_ZA_TOP_GROUPER_,id:"two_factor_authentication_settings",label:com_zimbra_two_factor_auth.Two_Factor_Authentication,visibilityChecks:[[ZATopGrouper_XFormItem.isGroupVisible,[ZaCos.A_zimbraFeatureTwoFactorAuthAvailable,ZaCos.A_zimbraFeatureTwoFactorAuthRequired,ZaCos.A_zimbraTwoFactorAuthNumScratchCodes,ZaCos.A_zimbraFeatureAppSpecificPasswordsEnabled]]],items:[{
ref:ZaCos.A_zimbraFeatureTwoFactorAuthAvailable,type:_CHECKBOX_,label:com_zimbra_two_factor_auth.LBL_Enable_Two_Factor_Authentication,msgName:com_zimbra_two_factor_auth.LBL_Enable_Two_Factor_Authentication,trueValue:"TRUE",falseValue:"FALSE"}
,{
ref:ZaCos.A_zimbraFeatureTwoFactorAuthRequired,type:_CHECKBOX_,enableDisableChecks:[ZaTwoFactorAuth.isTwoFactorAuthAvailable],enableDisableChangeEventSources:[ZaCos.A_zimbraFeatureTwoFactorAuthAvailable],labelLocation:_LEFT_,trueValue:"TRUE",falseValue:"FALSE",label:com_zimbra_two_factor_auth.LBL_Require_Two_Step_Authentication,msgName:com_zimbra_two_factor_auth.LBL_Require_Two_Step_Authentication}
,{
ref:ZaCos.A_zimbraTwoFactorAuthNumScratchCodes,type:_TEXTFIELD_,enableDisableChecks:[ZaTwoFactorAuth.isTwoFactorAuthAvailable],enableDisableChangeEventSources:[ZaCos.A_zimbraFeatureTwoFactorAuthAvailable],label:com_zimbra_two_factor_auth.LBL_Number_Of_One_Time_Codes,msgName:com_zimbra_two_factor_auth.MSG_Number_Of_One_Time_Codes,labelLocation:_LEFT_,cssClass:"admin_xform_number_input"}
,{
ref:ZaCos.A_zimbraFeatureAppSpecificPasswordsEnabled,type:_CHECKBOX_,enableDisableChecks:[ZaTwoFactorAuth.isTwoFactorAuthAvailable],enableDisableChangeEventSources:[ZaCos.A_zimbraFeatureTwoFactorAuthAvailable],labelLocation:_LEFT_,trueValue:"TRUE",falseValue:"FALSE",label:com_zimbra_two_factor_auth.LBL_Enable_Application_Passcodes,msgName:com_zimbra_two_factor_auth.LBL_Enable_Application_Passcodes}
]};
return e
}
}
if(ZaXDialog.XFormModifiers.ZaNewCosXWizard){
ZaTwoFactorAuth.NewCosWizXFormModifier=function(t){
var e=ZaTwoFactorAuth.searchXFormObject(t,{
type:"switch",outerId:"cos_form_advanced_tab",innerId:"cos_password_settings"}
);
if(e){
e.items.splice(e.index+1,0,ZaTwoFactorAuth.getNewCosWizXFormItem())
}};
ZaXDialog.XFormModifiers.ZaNewCosXWizard.push(ZaTwoFactorAuth.NewCosWizXFormModifier);
ZaTwoFactorAuth.getNewCosWizXFormItem=function(){
var e={
type:_ZAWIZ_TOP_GROUPER_,id:"cos_two_factor_authentication_settings",label:com_zimbra_two_factor_auth.Two_Factor_Authentication,items:[{
ref:ZaCos.A_zimbraFeatureTwoFactorAuthAvailable,type:_WIZ_CHECKBOX_,label:com_zimbra_two_factor_auth.LBL_Enable_Two_Factor_Authentication,msgName:com_zimbra_two_factor_auth.LBL_Enable_Two_Factor_Authentication,trueValue:"TRUE",falseValue:"FALSE"}
,{
ref:ZaCos.A_zimbraFeatureTwoFactorAuthRequired,type:_WIZ_CHECKBOX_,enableDisableChecks:[ZaTwoFactorAuth.isTwoFactorAuthAvailable],enableDisableChangeEventSources:[ZaCos.A_zimbraFeatureTwoFactorAuthAvailable],labelLocation:_LEFT_,trueValue:"TRUE",falseValue:"FALSE",label:com_zimbra_two_factor_auth.LBL_Require_Two_Step_Authentication,msgName:com_zimbra_two_factor_auth.LBL_Require_Two_Step_Authentication,align:_LEFT_,labelCssClass:"xform_label"}
,{
ref:ZaCos.A_zimbraTwoFactorAuthNumScratchCodes,type:_TEXTFIELD_,enableDisableChecks:[ZaTwoFactorAuth.isTwoFactorAuthAvailable],enableDisableChangeEventSources:[ZaCos.A_zimbraFeatureTwoFactorAuthAvailable],label:com_zimbra_two_factor_auth.LBL_Number_Of_One_Time_Codes,subLabel:com_zimbra_two_factor_auth.LBL_Number_Of_One_Time_Codes,msgName:com_zimbra_two_factor_auth.MSG_Number_Of_One_Time_Codes,labelLocation:_LEFT_,cssClass:"admin_xform_number_input"}
,{
ref:ZaCos.A_zimbraFeatureAppSpecificPasswordsEnabled,type:_WIZ_CHECKBOX_,enableDisableChecks:[ZaTwoFactorAuth.isTwoFactorAuthAvailable],enableDisableChangeEventSources:[ZaCos.A_zimbraFeatureTwoFactorAuthAvailable],labelLocation:_LEFT_,trueValue:"TRUE",falseValue:"FALSE",label:com_zimbra_two_factor_auth.LBL_Enable_Application_Passcodes,msgName:com_zimbra_two_factor_auth.LBL_Enable_Application_Passcodes,align:_LEFT_,labelCssClass:"xform_label"}
]};
return e
}
}}
if(ZaSettings&&ZaSettings.EnabledZimlet.com_zimbra_convertd){
function ZaConvertD(){}
if(ZaGlobalConfig){
ZaGlobalConfig.A_zimbraComponentAvailable_convertd="_"+ZaGlobalConfig.A_zimbraComponentAvailable+"_convertd";
ZaGlobalConfig.A_zimbraAttachmentsViewInHtmlOnly="zimbraAttachmentsViewInHtmlOnly";
if(ZaGlobalConfig.myXModel){
ZaGlobalConfig.myXModel.items.push({
id:ZaGlobalConfig.A_zimbraAttachmentsViewInHtmlOnly,ref:"attrs/"+ZaGlobalConfig.A_zimbraAttachmentsViewInHtmlOnly,type:_ENUM_,choices:ZaModel.BOOLEAN_CHOICES}
)
}}
if(ZaCos){
ZaCos.A_zimbraAttachmentsViewInHtmlOnly="zimbraAttachmentsViewInHtmlOnly";
ZaCos.A_zimbraAttachmentsIndexingEnabled="zimbraAttachmentsIndexingEnabled";
ZaCos.A_zimbraFeatureViewInHtmlEnabled="zimbraFeatureViewInHtmlEnabled";
if(ZaCos.myXModel){
ZaCos.myXModel.items.push({
id:ZaCos.A_zimbraAttachmentsViewInHtmlOnly,type:_ENUM_,choices:ZaModel.BOOLEAN_CHOICES,ref:"attrs/"+ZaCos.A_zimbraAttachmentsViewInHtmlOnly}
);
ZaCos.myXModel.items.push({
id:ZaCos.A_zimbraFeatureViewInHtmlEnabled,type:_ENUM_,choices:ZaModel.BOOLEAN_CHOICES,ref:"attrs/"+ZaCos.A_zimbraFeatureViewInHtmlEnabled}
);
ZaCos.myXModel.items.push({
id:ZaCos.A_zimbraAttachmentsIndexingEnabled,choices:ZaModel.BOOLEAN_CHOICES,ref:"attrs/"+ZaCos.A_zimbraAttachmentsIndexingEnabled,type:_ENUM_}
)
}}
if(ZaAccount){
ZaAccount.A_zimbraAttachmentsViewInHtmlOnly="zimbraAttachmentsViewInHtmlOnly";
ZaAccount.A_zimbraAttachmentsIndexingEnabled="zimbraAttachmentsIndexingEnabled";
ZaAccount.A_zimbraFeatureViewInHtmlEnabled="zimbraFeatureViewInHtmlEnabled";
if(ZaAccount.myXModel){
ZaAccount.myXModel.items.push({
id:ZaAccount.A_zimbraFeatureViewInHtmlEnabled,type:_COS_ENUM_,ref:"attrs/"+ZaAccount.A_zimbraFeatureViewInHtmlEnabled,choices:ZaModel.BOOLEAN_CHOICES}
);
ZaAccount.myXModel.items.push({
id:ZaAccount.A_zimbraAttachmentsViewInHtmlOnly,type:_COS_ENUM_,ref:"attrs/"+ZaAccount.A_zimbraAttachmentsViewInHtmlOnly,choices:ZaModel.BOOLEAN_CHOICES}
);
ZaAccount.myXModel.items.push({
id:ZaAccount.A_zimbraAttachmentsIndexingEnabled,type:_COS_ENUM_,ref:"attrs/"+ZaAccount.A_zimbraAttachmentsIndexingEnabled,choices:ZaModel.BOOLEAN_CHOICES}
)
}}
if(ZaTabView.XFormModifiers.GlobalConfigXFormView){
GlobalConfigXFormView.ATTACHMENTS_TAB_ATTRS.push(ZaGlobalConfig.A_zimbraAttachmentsViewInHtmlOnly);
ZaConvertD.GlobalConfigXFormModifier=function(d){
var t=d.items.length;
var s=0;
for(s=0;
s<t;
s++){
if(d.items[s].type=="switch"){
break
}}
t=d.items[s].items.length;
var n=0;
for(n=0;
n<t;
n++){
if(d.items[s].items[n].id=="gs_form_attachment_tab"){
var e=d.items[s].items[n].items;
var u=e.length;
for(var o=0;
o<u;
o++){
if(e[o].id=="attachment_settings"){
if(!e[o].visibilityChecks){
e[o].visibilityChecks=[XFormItem.prototype.hasReadPermission]
}
e[o].visibilityChecks.push(ZaConvertD.isConvertDUnAvailable);
var m={
ref:ZaGlobalConfig.A_zimbraAttachmentsBlocked,type:_RADIO_,groupname:"attachment_settings",msgName:ZaMsg.NAD_GlobalRemoveAllAttachments,label:ZaMsg.NAD_GlobalRemoveAllAttachments,onChange:ZaTabView.onFormFieldChanged,valueChangeEventSources:[ZaGlobalConfig.A_zimbraAttachmentsViewInHtmlOnly,ZaGlobalConfig.A_zimbraAttachmentsBlocked],visibilityChecks:[ZaConvertD.isConvertDAvailable],updateElement:function(){
this.getElement().checked=(ZaConvertD.getGlobalAttachmentOptionVal.call(this)==ZaConvertD.ATTACHMENTS_BLOCKED)
}
,elementChanged:function(y,g,p){
this.setInstanceValue("TRUE",ZaGlobalConfig.A_zimbraAttachmentsBlocked);
this.setInstanceValue("FALSE",ZaGlobalConfig.A_zimbraAttachmentsViewInHtmlOnly);
this.getForm().parent.setDirty(true)
}};
var c={
ref:ZaGlobalConfig.A_zimbraAttachmentsViewInHtmlOnly,type:_RADIO_,groupname:"attachment_settings",msgName:ZaMsg.NAD_GlobalAttachmentsViewInHtmlOnly,label:ZaMsg.NAD_GlobalAttachmentsViewInHtmlOnly,labelLocation:_RIGHT_,onChange:ZaTabView.onFormFieldChanged,visibilityChecks:[ZaConvertD.isConvertDAvailable],valueChangeEventSources:[ZaGlobalConfig.A_zimbraAttachmentsViewInHtmlOnly,ZaGlobalConfig.A_zimbraAttachmentsBlocked],updateElement:function(){
this.getElement().checked=(ZaConvertD.getGlobalAttachmentOptionVal.call(this)==ZaConvertD.ATTACHMENTS_HTML_ONLY)
}
,elementChanged:function(y,g,p){
this.setInstanceValue("FALSE",ZaGlobalConfig.A_zimbraAttachmentsBlocked);
this.setInstanceValue("TRUE",ZaGlobalConfig.A_zimbraAttachmentsViewInHtmlOnly);
this.getForm().parent.setDirty(true)
}};
var l={
ref:ZaGlobalConfig.A_zimbraAttachmentsBlocked,type:_RADIO_,groupname:"attachment_settings",msgName:ZaMsg.NAD_GlobalAttachmentsViewCOS,label:ZaMsg.NAD_GlobalAttachmentsViewCOS,labelLocation:_RIGHT_,onChange:ZaTabView.onFormFieldChanged,visibilityChecks:[ZaConvertD.isConvertDAvailable],valueChangeEventSources:[ZaGlobalConfig.A_zimbraAttachmentsViewInHtmlOnly,ZaGlobalConfig.A_zimbraAttachmentsBlocked],updateElement:function(){
this.getElement().checked=(ZaConvertD.getGlobalAttachmentOptionVal.call(this)==ZaConvertD.ATTACHMENTS_COS)
}
,elementChanged:function(y,g,p){
this.setInstanceValue("FALSE",ZaGlobalConfig.A_zimbraAttachmentsBlocked);
this.setInstanceValue("FALSE",ZaGlobalConfig.A_zimbraAttachmentsViewInHtmlOnly);
this.getForm().parent.setDirty(true)
}};
var r={
ref:ZaGlobalConfig.A_zimbraMtaBlockedExtensionWarnRecipient,type:_CHECKBOX_,colSpan:2,subLabel:ZaMsg.LBL_zimbraMtaBlockedExtensionWarnRecipient,trueValue:"TRUE",falseValue:"FALSE"};
var f={
type:_GROUP_,id:"convertd_attachment_settings",width:"98%",numCols:2,colSpan:2,colSizes:[250,"*"],items:[{
type:_GROUP_,label:ZaMsg.NAD_Attachment_Settings,labelCssStyle:"vertical-align:top",items:[m,c,l,r],visibilityChecks:[[XFormItem.prototype.hasReadPermission,ZaGlobalConfig.A_zimbraAttachmentsViewInHtmlOnly],[XFormItem.prototype.hasReadPermission,ZaGlobalConfig.A_zimbraAttachmentsBlocked],ZaConvertD.isConvertDAvailable],bmolsnr:true}
]};
e.splice(o,0,f);
break
}}
break
}}};
ZaTabView.XFormModifiers.GlobalConfigXFormView.push(ZaConvertD.GlobalConfigXFormModifier)
}
ZaConvertD.ATTACHMENTS_BLOCKED=1;
ZaConvertD.ATTACHMENTS_HTML_ONLY=2;
ZaConvertD.ATTACHMENTS_ORIGINAL_ONLY=3;
ZaConvertD.ATTACHMENTS_HTML_AND_ORIGINGAL=4;
ZaConvertD.ATTACHMENTS_COS=4;
ZaConvertD.getAttachmentOptionVal=function(){
var e=this.getInstanceValue(ZaCos.A_zimbraAttachmentsViewInHtmlOnly);
var o=this.getInstanceValue(ZaCos.A_zimbraAttachmentsBlocked);
var t=this.getInstanceValue(ZaCos.A_zimbraFeatureViewInHtmlEnabled);
if(o=="TRUE"){
return ZaConvertD.ATTACHMENTS_BLOCKED
}else{
if(o=="FALSE"&&e=="TRUE"){
return ZaConvertD.ATTACHMENTS_HTML_ONLY
}else{
if(o=="FALSE"&&e=="FALSE"&&t=="TRUE"){
return ZaConvertD.ATTACHMENTS_HTML_AND_ORIGINGAL
}else{
if(o=="FALSE"&&e=="FALSE"&&t=="FALSE"){
return ZaConvertD.ATTACHMENTS_ORIGINAL_ONLY
}}}}};
ZaConvertD.getGlobalAttachmentOptionVal=function(){
var e=this.getInstanceValue(ZaGlobalConfig.A_zimbraAttachmentsViewInHtmlOnly);
var t=this.getInstanceValue(ZaGlobalConfig.A_zimbraAttachmentsBlocked);
if(t=="TRUE"){
return ZaConvertD.ATTACHMENTS_BLOCKED
}else{
if(t=="FALSE"&&e=="TRUE"){
return ZaConvertD.ATTACHMENTS_HTML_ONLY
}else{
if(t=="FALSE"&&e=="FALSE"){
return ZaConvertD.ATTACHMENTS_COS
}}}};
ZaConvertD.checkIfAttachmentOptionsOverwritten=function(){
var n=(this.getForm().getItemsById("attach_radio1")[0].getModelItem().getLocalValue(this.getInstance())!=null);
var o=(this.getForm().getItemsById("attach_radio2")[0].getModelItem().getLocalValue(this.getInstance())!=null);
var t=(this.getForm().getItemsById("attach_radio3")[0].getModelItem().getLocalValue(this.getInstance())!=null);
var e=(this.getForm().getItemsById("attach_radio4")[0].getModelItem().getLocalValue(this.getInstance())!=null);
return(n||o||t||e)
};
ZaConvertD.resetAttachOptionsToCOS=function(e){
this.setInstanceValue(null,ZaAccount.A_zimbraAttachmentsViewInHtmlOnly);
this.setInstanceValue(null,ZaAccount.A_zimbraAttachmentsBlocked);
this.setInstanceValue(null,ZaAccount.A_zimbraFeatureViewInHtmlEnabled);
this.getForm().itemChanged(this,null,e)
};
ZaConvertD.isConvertDAvailable=function(){
return true
};
ZaConvertD.isConvertDUnAvailable=function(){
return !ZaConvertD.isConvertDAvailable()
};
if(ZaTabView.XFormModifiers.ZaCosXFormView){
ZaCosXFormView.ADVANCED_TAB_ATTRS.push(ZaCos.A_zimbraAttachmentsViewInHtmlOnly);
ZaCosXFormView.ADVANCED_TAB_ATTRS.push(ZaCos.A_zimbraFeatureViewInHtmlEnabled);
ZaCosXFormView.ADVANCED_TAB_ATTRS.push(ZaCos.A_zimbraAttachmentsIndexingEnabled);
ZaConvertD.CosXFormModifier=function(u){
var t=u.items.length;
var p=null;
for(i=0;
i<t;
i++){
if(u.items[i].type=="switch"){
p=u.items[i];
break
}}
if(p&&p.items){
var t=p.items.length;
for(i=0;
i<t;
i++){
if(p.items[i].id=="cos_form_advanced_tab"){
var e=p.items[i].items;
var m=e.length;
for(var n=0;
n<m;
n++){
if(e[n].id=="cos_attachment_settings"){
var g=e[n].items;
var c=g.length;
for(var o=0;
o<c;
o++){
if(g[o].ref==ZaCos.A_zimbraAttachmentsBlocked){
if(!g[o].visibilityChecks){
g[o].visibilityChecks=[XFormItem.prototype.hasReadPermission]
}
g[o].visibilityChecks.push(ZaConvertD.isConvertDUnAvailable);
var f={
ref:ZaCos.A_zimbraAttachmentsBlocked,type:_RADIO_,groupname:"cos_attachment_settings",msgName:ZaMsg.NAD_RemoveAllAttachments,label:ZaMsg.NAD_RemoveAllAttachments,onChange:ZaTabView.onFormFieldChanged,labelCssClass:"xform_label_right",valueChangeEventSources:[ZaCos.A_zimbraAttachmentsViewInHtmlOnly,ZaCos.A_zimbraFeatureViewInHtmlEnabled,ZaCos.A_zimbraAttachmentsBlocked],visibilityChecks:[[XFormItem.prototype.hasReadPermission,ZaAccount.A_zimbraAttachmentsViewInHtmlOnly],[XFormItem.prototype.hasReadPermission,ZaAccount.A_zimbraAttachmentsBlocked],[XFormItem.prototype.hasReadPermission,ZaAccount.A_zimbraFeatureViewInHtmlEnabled],ZaConvertD.isConvertDAvailable],updateElement:function(){
this.getElement().checked=(ZaConvertD.getAttachmentOptionVal.call(this)==ZaConvertD.ATTACHMENTS_BLOCKED)
}
,elementChanged:function(v,b,y){
this.setInstanceValue("TRUE",ZaCos.A_zimbraAttachmentsBlocked);
this.setInstanceValue("FALSE",ZaCos.A_zimbraFeatureViewInHtmlEnabled);
this.setInstanceValue("FALSE",ZaCos.A_zimbraAttachmentsViewInHtmlOnly);
this.getForm().parent.setDirty(true)
}};
var d={
ref:ZaCos.A_zimbraAttachmentsViewInHtmlOnly,type:_RADIO_,groupname:"cos_attachment_settings",msgName:com_zimbra_convertd.NAD_AttachmentsViewInHtmlOnly,label:com_zimbra_convertd.NAD_AttachmentsViewInHtmlOnly,onChange:ZaTabView.onFormFieldChanged,labelCssClass:"xform_label_right",valueChangeEventSources:[ZaCos.A_zimbraAttachmentsViewInHtmlOnly,ZaCos.A_zimbraFeatureViewInHtmlEnabled,ZaCos.A_zimbraAttachmentsBlocked],visibilityChecks:[[XFormItem.prototype.hasReadPermission,ZaAccount.A_zimbraAttachmentsViewInHtmlOnly],[XFormItem.prototype.hasReadPermission,ZaAccount.A_zimbraAttachmentsBlocked],[XFormItem.prototype.hasReadPermission,ZaAccount.A_zimbraFeatureViewInHtmlEnabled],ZaConvertD.isConvertDAvailable],updateElement:function(){
this.getElement().checked=(ZaConvertD.getAttachmentOptionVal.call(this)==ZaConvertD.ATTACHMENTS_HTML_ONLY)
}
,elementChanged:function(v,b,y){
this.setInstanceValue("FALSE",ZaCos.A_zimbraAttachmentsBlocked);
this.setInstanceValue("TRUE",ZaCos.A_zimbraFeatureViewInHtmlEnabled);
this.setInstanceValue("TRUE",ZaCos.A_zimbraAttachmentsViewInHtmlOnly);
this.getForm().parent.setDirty(true)
}};
var l={
ref:ZaCos.A_zimbraFeatureViewInHtmlEnabled,type:_RADIO_,groupname:"cos_attachment_settings",msgName:com_zimbra_convertd.NAD_AttachmentsViewOrigOnly,label:com_zimbra_convertd.NAD_AttachmentsViewOrigOnly,onChange:ZaTabView.onFormFieldChanged,labelCssClass:"xform_label_right",valueChangeEventSources:[ZaCos.A_zimbraAttachmentsViewInHtmlOnly,ZaCos.A_zimbraFeatureViewInHtmlEnabled,ZaCos.A_zimbraAttachmentsBlocked],visibilityChecks:[[XFormItem.prototype.hasReadPermission,ZaAccount.A_zimbraAttachmentsViewInHtmlOnly],[XFormItem.prototype.hasReadPermission,ZaAccount.A_zimbraAttachmentsBlocked],[XFormItem.prototype.hasReadPermission,ZaAccount.A_zimbraFeatureViewInHtmlEnabled],ZaConvertD.isConvertDAvailable],updateElement:function(){
this.getElement().checked=(ZaConvertD.getAttachmentOptionVal.call(this)==ZaConvertD.ATTACHMENTS_ORIGINAL_ONLY)
}
,elementChanged:function(v,b,y){
this.setInstanceValue("FALSE",ZaCos.A_zimbraAttachmentsBlocked);
this.setInstanceValue("FALSE",ZaCos.A_zimbraFeatureViewInHtmlEnabled);
this.setInstanceValue("FALSE",ZaCos.A_zimbraAttachmentsViewInHtmlOnly);
this.getForm().parent.setDirty(true)
}};
var r={
ref:ZaCos.A_zimbraFeatureViewInHtmlEnabled,type:_RADIO_,groupname:"cos_attachment_settings",msgName:com_zimbra_convertd.NAD_AttachmentsViewOrigAndHtml,label:com_zimbra_convertd.NAD_AttachmentsViewOrigAndHtml,onChange:ZaTabView.onFormFieldChanged,labelCssClass:"xform_label_right",visibilityChecks:[[XFormItem.prototype.hasReadPermission,ZaAccount.A_zimbraAttachmentsViewInHtmlOnly],[XFormItem.prototype.hasReadPermission,ZaAccount.A_zimbraAttachmentsBlocked],[XFormItem.prototype.hasReadPermission,ZaAccount.A_zimbraFeatureViewInHtmlEnabled],ZaConvertD.isConvertDAvailable],valueChangeEventSources:[ZaCos.A_zimbraAttachmentsBlocked,ZaCos.A_zimbraFeatureViewInHtmlEnabled,ZaCos.A_zimbraAttachmentsViewInHtmlOnly],updateElement:function(){
this.getElement().checked=(ZaConvertD.getAttachmentOptionVal.call(this)==ZaConvertD.ATTACHMENTS_HTML_AND_ORIGINGAL)
}
,elementChanged:function(v,b,y){
this.setInstanceValue("FALSE",ZaCos.A_zimbraAttachmentsBlocked);
this.setInstanceValue("TRUE",ZaCos.A_zimbraFeatureViewInHtmlEnabled);
this.setInstanceValue("FALSE",ZaCos.A_zimbraAttachmentsViewInHtmlOnly);
this.getForm().parent.setDirty(true)
}};
var s={
ref:ZaCos.A_zimbraAttachmentsIndexingEnabled,type:_CHECKBOX_,msgName:com_zimbra_convertd.NAD_zimbraAttachmentsIndexingEnabled,label:com_zimbra_convertd.NAD_zimbraAttachmentsIndexingEnabled,trueValue:"TRUE",falseValue:"FALSE",onChange:ZaTabView.onFormFieldChanged,visibilityChecks:[XFormItem.prototype.hasReadPermission,ZaConvertD.isConvertDAvailable]};
g.splice(o,0,f,d,l,r,s);
break
}}
break
}}
break
}}}};
ZaTabView.XFormModifiers.ZaCosXFormView.push(ZaConvertD.CosXFormModifier)
}
if(ZaTabView.XFormModifiers.ZaAccountXFormView){
ZaAccountXFormView.ADVANCED_TAB_ATTRS.push(ZaAccount.A_zimbraAttachmentsViewInHtmlOnly);
ZaAccountXFormView.ADVANCED_TAB_ATTRS.push(ZaAccount.A_zimbraFeatureViewInHtmlEnabled);
ZaAccountXFormView.ADVANCED_TAB_ATTRS.push(ZaAccount.A_zimbraAttachmentsIndexingEnabled);
ZaConvertD.AccountXFormModifier=function(g){
var o=g.items.length;
var d=0;
for(d=0;
d<o;
d++){
if(g.items[d].type=="switch"){
break
}}
o=g.items[d].items.length;
var r=0;
for(r=0;
r<o;
r++){
if(g.items[d].items[r].id=="account_form_advanced_tab"){
var e=g.items[d].items[r].items;
var y=e.length;
for(var s=0;
s<y;
s++){
if(e[s].id=="account_attachment_settings"&&e[s].items){
e[s].visibilityChecks=[[ZATopGrouper_XFormItem.isGroupVisible,[ZaAccount.A_zimbraAttachmentsBlocked,ZaAccount.A_zimbraAttachmentsViewInHtmlOnly,ZaAccount.A_zimbraFeatureViewInHtmlEnabled,ZaAccount.A_zimbraAttachmentsIndexingEnabled]]];
e[s].numCols=3;
e[s].colSizes=["275px","275px","*"];
e[s].colSizes=["275px","225px","*"];
var f=e[s].items.length;
for(var n=0;
n<f;
n++){
if(e[s].items[n].ref==ZaAccount.A_zimbraAttachmentsBlocked){
if(!e[s].items[n].visibilityChecks){
e[s].items[n].visibilityChecks=[XFormItem.prototype.hasReadPermission]
}
e[s].items[n].visibilityChecks.push(ZaConvertD.isConvertDUnAvailable);
var b={
ref:ZaAccount.A_zimbraAttachmentsBlocked,id:"attach_radio1",type:_RADIO_,nowrap:false,labelWrap:true,width:"275px",msgName:ZaMsg.NAD_RemoveAllAttachments,label:ZaMsg.NAD_RemoveAllAttachments,labelLocation:_RIGHT_,onChange:ZaTabView.onFormFieldChanged,labelCssClass:"xform_label_right",visibilityChecks:[[XFormItem.prototype.hasReadPermission,ZaAccount.A_zimbraAttachmentsViewInHtmlOnly],[XFormItem.prototype.hasReadPermission,ZaAccount.A_zimbraAttachmentsBlocked],[XFormItem.prototype.hasReadPermission,ZaAccount.A_zimbraFeatureViewInHtmlEnabled],ZaConvertD.isConvertDAvailable],valueChangeEventSources:[ZaAccount.A_zimbraAttachmentsViewInHtmlOnly,ZaAccount.A_zimbraFeatureViewInHtmlEnabled,ZaAccount.A_zimbraAttachmentsBlocked],updateElement:function(){
Super_XFormItem.updateCss.call(this,1);
this.getElement().checked=(ZaConvertD.getAttachmentOptionVal.call(this)==ZaConvertD.ATTACHMENTS_BLOCKED)
}
,elementChanged:function(k,v,l){
this.setInstanceValue("FALSE",ZaAccount.A_zimbraAttachmentsViewInHtmlOnly);
this.setInstanceValue("FALSE",ZaAccount.A_zimbraFeatureViewInHtmlEnabled);
this.setInstanceValue("TRUE",ZaAccount.A_zimbraAttachmentsBlocked);
this.getForm().parent.setDirty(true)
}};
var p={
ref:ZaAccount.A_zimbraAttachmentsViewInHtmlOnly,id:"attach_radio2",type:_RADIO_,nowrap:false,labelWrap:true,width:"275px",msgName:com_zimbra_convertd.NAD_AttachmentsViewInHtmlOnly,label:com_zimbra_convertd.NAD_AttachmentsViewInHtmlOnly,labelLocation:_RIGHT_,onChange:ZaTabView.onFormFieldChanged,labelCssClass:"xform_label_right",visibilityChecks:[[XFormItem.prototype.hasReadPermission,ZaAccount.A_zimbraAttachmentsViewInHtmlOnly],[XFormItem.prototype.hasReadPermission,ZaAccount.A_zimbraAttachmentsBlocked],[XFormItem.prototype.hasReadPermission,ZaAccount.A_zimbraFeatureViewInHtmlEnabled],ZaConvertD.isConvertDAvailable],valueChangeEventSources:[ZaAccount.A_zimbraAttachmentsViewInHtmlOnly,ZaAccount.A_zimbraFeatureViewInHtmlEnabled,ZaAccount.A_zimbraAttachmentsBlocked],updateElement:function(){
Super_XFormItem.updateCss.call(this,1);
this.getElement().checked=(ZaConvertD.getAttachmentOptionVal.call(this)==ZaConvertD.ATTACHMENTS_HTML_ONLY)
}
,elementChanged:function(k,v,l){
this.setInstanceValue("FALSE",ZaAccount.A_zimbraAttachmentsBlocked);
this.setInstanceValue("TRUE",ZaAccount.A_zimbraFeatureViewInHtmlEnabled);
this.setInstanceValue("TRUE",ZaAccount.A_zimbraAttachmentsViewInHtmlOnly);
this.getForm().parent.setDirty(true)
}};
var m={
ref:ZaAccount.A_zimbraFeatureViewInHtmlEnabled,id:"attach_radio3",type:_RADIO_,nowrap:false,labelWrap:true,width:"275px",msgName:com_zimbra_convertd.NAD_AttachmentsViewOrigOnly,label:com_zimbra_convertd.NAD_AttachmentsViewOrigOnly,labelLocation:_RIGHT_,onChange:ZaTabView.onFormFieldChanged,labelCssClass:"xform_label_right",visibilityChecks:[[XFormItem.prototype.hasReadPermission,ZaAccount.A_zimbraAttachmentsViewInHtmlOnly],[XFormItem.prototype.hasReadPermission,ZaAccount.A_zimbraAttachmentsBlocked],[XFormItem.prototype.hasReadPermission,ZaAccount.A_zimbraFeatureViewInHtmlEnabled],ZaConvertD.isConvertDAvailable],valueChangeEventSources:[ZaAccount.A_zimbraAttachmentsViewInHtmlOnly,ZaAccount.A_zimbraFeatureViewInHtmlEnabled,ZaAccount.A_zimbraAttachmentsBlocked],updateElement:function(){
Super_XFormItem.updateCss.call(this,1);
this.getElement().checked=(ZaConvertD.getAttachmentOptionVal.call(this)==ZaConvertD.ATTACHMENTS_ORIGINAL_ONLY)
}
,elementChanged:function(k,v,l){
this.setInstanceValue("FALSE",ZaAccount.A_zimbraAttachmentsBlocked);
this.setInstanceValue("FALSE",ZaAccount.A_zimbraAttachmentsViewInHtmlOnly);
this.setInstanceValue("FALSE",ZaAccount.A_zimbraFeatureViewInHtmlEnabled);
this.getForm().parent.setDirty(true)
}};
var u={
ref:ZaAccount.A_zimbraFeatureViewInHtmlEnabled,type:_RADIO_,id:"attach_radio4",nowrap:false,labelWrap:true,width:"275px",msgName:com_zimbra_convertd.NAD_AttachmentsViewOrigAndHtml,label:com_zimbra_convertd.NAD_AttachmentsViewOrigAndHtml,labelLocation:_RIGHT_,onChange:ZaTabView.onFormFieldChanged,labelCssClass:"xform_label_right",visibilityChecks:[[XFormItem.prototype.hasReadPermission,ZaAccount.A_zimbraAttachmentsViewInHtmlOnly],[XFormItem.prototype.hasReadPermission,ZaAccount.A_zimbraAttachmentsBlocked],[XFormItem.prototype.hasReadPermission,ZaAccount.A_zimbraFeatureViewInHtmlEnabled],ZaConvertD.isConvertDAvailable],valueChangeEventSources:[ZaAccount.A_zimbraAttachmentsViewInHtmlOnly,ZaAccount.A_zimbraFeatureViewInHtmlEnabled,ZaAccount.A_zimbraAttachmentsBlocked],updateElement:function(){
Super_XFormItem.updateCss.call(this,1);
this.getElement().checked=(ZaConvertD.getAttachmentOptionVal.call(this)==ZaConvertD.ATTACHMENTS_HTML_AND_ORIGINGAL)
}
,elementChanged:function(k,v,l){
this.setInstanceValue("FALSE",ZaAccount.A_zimbraAttachmentsBlocked);
this.setInstanceValue("FALSE",ZaAccount.A_zimbraAttachmentsViewInHtmlOnly);
this.setInstanceValue("TRUE",ZaAccount.A_zimbraFeatureViewInHtmlEnabled);
this.getForm().parent.setDirty(true)
}};
var c={
ref:ZaAccount.A_zimbraAttachmentsIndexingEnabled,type:_SUPER_CHECKBOX_,nowrap:false,labelWrap:true,msgName:com_zimbra_convertd.NAD_zimbraAttachmentsIndexingEnabled,checkBoxLabel:com_zimbra_convertd.NAD_zimbraAttachmentsIndexingEnabled,label:null,resetToSuperLabel:ZaMsg.NAD_ResetToCOS,trueValue:"TRUE",falseValue:"FALSE",onChange:ZaTabView.onFormFieldChanged,labelCssClass:("gridGroupBodyLabel"),visibilityChecks:[XFormItem.prototype.hasReadPermission,ZaConvertD.isConvertDAvailable]};
var t={
type:_GROUP_,rowSpan:4,numCols:1,items:[{
type:_GROUP_,items:[{
type:_DWT_BUTTON_,ref:".",label:ZaMsg.NAD_ResetToCOS,visibilityChecks:[[XFormItem.prototype.hasReadPermission,ZaAccount.A_zimbraAttachmentsViewInHtmlOnly],[XFormItem.prototype.hasReadPermission,ZaAccount.A_zimbraAttachmentsBlocked],[XFormItem.prototype.hasReadPermission,ZaAccount.A_zimbraFeatureViewInHtmlEnabled],ZaConvertD.checkIfAttachmentOptionsOverwritten],visibilityChangeEventSources:[ZaAccount.A_zimbraFeatureViewInHtmlEnabled,ZaAccount.A_zimbraAttachmentsViewInHtmlOnly,ZaAccount.A_zimbraAttachmentsBlocked],onActivate:ZaConvertD.resetAttachOptionsToCOS,onChange:ZaTabView.onFormFieldChanged,autoPadding:false}
]}
]};
e[s].items.splice(n,0,b,t,p,m,u,c);
break
}}
break
}}
break
}}};
ZaTabView.XFormModifiers.ZaAccountXFormView.push(ZaConvertD.AccountXFormModifier)
}
if(ZaXDialog.XFormModifiers.ZaNewAccountXWizard){
ZaConvertD.AccountXWizFormModifier=function(y){
var o=y.items.length;
var d=0;
for(d=0;
d<o;
d++){
if(y.items[d].type=="switch"){
break
}}
o=y.items[d].items.length;
var r=0;
var m=false;
var x=false;
for(r=0;
r<o;
r++){
if(y.items[d].items[r].id=="account_form_advanced_step"){
var e=y.items[d].items[r].items;
var b=e.length;
for(var s=0;
s<b;
s++){
if(e[s].id=="account_attachment_settings"&&e[s].items){
e[s].numCols=3;
e[s].colSizes=["200","300px","*"];
var p=e[s].items.length;
for(var n=0;
n<p;
n++){
if(e[s].items[n].ref==ZaAccount.A_zimbraAttachmentsBlocked){
if(!e[s].items[n].visibilityChecks){
e[s].items[n].visibilityChecks=[XFormItem.prototype.hasReadPermission]
}
e[s].items[n].visibilityChecks.push(ZaConvertD.isConvertDUnAvailable);
var v={
ref:ZaAccount.A_zimbraAttachmentsBlocked,id:"attach_radio1",type:_RADIO_,msgName:ZaMsg.NAD_RemoveAllAttachments,label:ZaMsg.NAD_RemoveAllAttachments,labelLocation:_RIGHT_,labelCssClass:"xform_label_right",valueChangeEventSources:[ZaAccount.A_zimbraAttachmentsViewInHtmlOnly,ZaAccount.A_zimbraFeatureViewInHtmlEnabled,ZaAccount.A_zimbraAttachmentsBlocked],visibilityChecks:[[XFormItem.prototype.hasReadPermission,ZaAccount.A_zimbraAttachmentsViewInHtmlOnly],[XFormItem.prototype.hasReadPermission,ZaAccount.A_zimbraAttachmentsBlocked],[XFormItem.prototype.hasReadPermission,ZaAccount.A_zimbraFeatureViewInHtmlEnabled],ZaConvertD.isConvertDAvailable],updateElement:function(){
Super_XFormItem.updateCss.call(this,1);
this.getElement().checked=(ZaConvertD.getAttachmentOptionVal.call(this)==ZaConvertD.ATTACHMENTS_BLOCKED)
}
,elementChanged:function(q,k,l){
this.setInstanceValue("TRUE",ZaAccount.A_zimbraAttachmentsBlocked);
this.setInstanceValue("FALSE",ZaAccount.A_zimbraFeatureViewInHtmlEnabled);
this.setInstanceValue("FALSE",ZaAccount.A_zimbraAttachmentsViewInHtmlOnly);
this.getForm().parent.setDirty(true)
}};
var g={
ref:ZaAccount.A_zimbraAttachmentsViewInHtmlOnly,id:"attach_radio2",type:_RADIO_,msgName:com_zimbra_convertd.NAD_AttachmentsViewInHtmlOnly,label:com_zimbra_convertd.NAD_AttachmentsViewInHtmlOnly,labelLocation:_RIGHT_,labelCssClass:"xform_label_right",valueChangeEventSources:[ZaAccount.A_zimbraAttachmentsViewInHtmlOnly,ZaAccount.A_zimbraFeatureViewInHtmlEnabled,ZaAccount.A_zimbraAttachmentsBlocked],visibilityChecks:[[XFormItem.prototype.hasReadPermission,ZaAccount.A_zimbraAttachmentsViewInHtmlOnly],[XFormItem.prototype.hasReadPermission,ZaAccount.A_zimbraAttachmentsBlocked],[XFormItem.prototype.hasReadPermission,ZaAccount.A_zimbraFeatureViewInHtmlEnabled],ZaConvertD.isConvertDAvailable],updateElement:function(){
Super_XFormItem.updateCss.call(this,1);
this.getElement().checked=(ZaConvertD.getAttachmentOptionVal.call(this)==ZaConvertD.ATTACHMENTS_HTML_ONLY)
}
,elementChanged:function(q,k,l){
this.setInstanceValue("FALSE",ZaAccount.A_zimbraAttachmentsBlocked);
this.setInstanceValue("TRUE",ZaAccount.A_zimbraFeatureViewInHtmlEnabled);
this.setInstanceValue("TRUE",ZaAccount.A_zimbraAttachmentsViewInHtmlOnly);
this.getForm().parent.setDirty(true)
}};
var f={
ref:ZaAccount.A_zimbraFeatureViewInHtmlEnabled,id:"attach_radio3",type:_RADIO_,msgName:com_zimbra_convertd.NAD_AttachmentsViewOrigOnly,label:com_zimbra_convertd.NAD_AttachmentsViewOrigOnly,labelLocation:_RIGHT_,labelCssClass:"xform_label_right",valueChangeEventSources:[ZaAccount.A_zimbraAttachmentsViewInHtmlOnly,ZaAccount.A_zimbraFeatureViewInHtmlEnabled,ZaAccount.A_zimbraAttachmentsBlocked],visibilityChecks:[[XFormItem.prototype.hasReadPermission,ZaAccount.A_zimbraAttachmentsViewInHtmlOnly],[XFormItem.prototype.hasReadPermission,ZaAccount.A_zimbraAttachmentsBlocked],[XFormItem.prototype.hasReadPermission,ZaAccount.A_zimbraFeatureViewInHtmlEnabled],ZaConvertD.isConvertDAvailable],updateElement:function(){
Super_XFormItem.updateCss.call(this,1);
this.getElement().checked=(ZaConvertD.getAttachmentOptionVal.call(this)==ZaConvertD.ATTACHMENTS_ORIGINAL_ONLY)
}
,elementChanged:function(q,k,l){
this.setInstanceValue("FALSE",ZaAccount.A_zimbraAttachmentsBlocked);
this.setInstanceValue("FALSE",ZaAccount.A_zimbraFeatureViewInHtmlEnabled);
this.setInstanceValue("FALSE",ZaAccount.A_zimbraAttachmentsViewInHtmlOnly);
this.getForm().parent.setDirty(true)
}};
var u={
ref:ZaAccount.A_zimbraFeatureViewInHtmlEnabled,type:_RADIO_,id:"attach_radio4",msgName:com_zimbra_convertd.NAD_AttachmentsViewOrigAndHtml,label:com_zimbra_convertd.NAD_AttachmentsViewOrigAndHtml,labelLocation:_RIGHT_,labelCssClass:"xform_label_right",valueChangeEventSources:[ZaAccount.A_zimbraAttachmentsViewInHtmlOnly,ZaAccount.A_zimbraFeatureViewInHtmlEnabled,ZaAccount.A_zimbraAttachmentsBlocked],visibilityChecks:[[XFormItem.prototype.hasReadPermission,ZaAccount.A_zimbraAttachmentsViewInHtmlOnly],[XFormItem.prototype.hasReadPermission,ZaAccount.A_zimbraAttachmentsBlocked],[XFormItem.prototype.hasReadPermission,ZaAccount.A_zimbraFeatureViewInHtmlEnabled],ZaConvertD.isConvertDAvailable],updateElement:function(){
Super_XFormItem.updateCss.call(this,1);
this.getElement().checked=(ZaConvertD.getAttachmentOptionVal.call(this)==ZaConvertD.ATTACHMENTS_HTML_AND_ORIGINGAL)
}
,elementChanged:function(q,k,l){
this.setInstanceValue("FALSE",ZaAccount.A_zimbraAttachmentsBlocked);
this.setInstanceValue("TRUE",ZaAccount.A_zimbraFeatureViewInHtmlEnabled);
this.setInstanceValue("FALSE",ZaAccount.A_zimbraAttachmentsViewInHtmlOnly);
this.getForm().parent.setDirty(true)
}};
var c={
ref:ZaAccount.A_zimbraAttachmentsIndexingEnabled,type:_SUPER_WIZ_CHECKBOX_,colSizes:["200px","300px","*"],colSpan:3,msgName:com_zimbra_convertd.NAD_zimbraAttachmentsIndexingEnabled,checkBoxLabel:com_zimbra_convertd.NAD_zimbraAttachmentsIndexingEnabled,label:null,labelLocation:_NONE_,checkBoxLabelLocation:_RIGHT_,resetToSuperLabel:ZaMsg.NAD_ResetToCOS,trueValue:"TRUE",falseValue:"FALSE",labelCssClass:"xform_label_right",visibilityChecks:[XFormItem.prototype.hasReadPermission,ZaConvertD.isConvertDAvailable]};
var t={
type:_DWT_BUTTON_,ref:".",label:ZaMsg.NAD_ResetToCOS,visibilityChecks:[[XFormItem.prototype.hasReadPermission,ZaAccount.A_zimbraAttachmentsViewInHtmlOnly],[XFormItem.prototype.hasReadPermission,ZaAccount.A_zimbraAttachmentsBlocked],[XFormItem.prototype.hasReadPermission,ZaAccount.A_zimbraFeatureViewInHtmlEnabled],ZaConvertD.checkIfAttachmentOptionsOverwritten],visibilityChangeEventSources:[ZaAccount.A_zimbraFeatureViewInHtmlEnabled,ZaAccount.A_zimbraAttachmentsViewInHtmlOnly,ZaAccount.A_zimbraAttachmentsBlocked],onActivate:ZaConvertD.resetAttachOptionsToCOS,rowSpan:4,autoPadding:false};
e[s].items.splice(n,0,v,t,g,f,u,c);
break
}}
break
}}
break
}}};
ZaXDialog.XFormModifiers.ZaNewAccountXWizard.push(ZaConvertD.AccountXWizFormModifier)
}}
if(ZaSettings&&ZaSettings.EnabledZimlet.com_zimbra_smime_cert_admin){
ZaSmimeConfigXFormView=function(){};
if(ZaDomain){
ZaDomain.A_zimbraSMIMELdapURL="zimbraSMIMELdapURL";
ZaDomain.A_zimbraSMIMELdapStartTlsEnabled="zimbraSMIMELdapStartTlsEnabled";
ZaDomain.A_zimbraSMIMELdapBindDn="zimbraSMIMELdapBindDn";
ZaDomain.A_zimbraSMIMELdapBindPassword="zimbraSMIMELdapBindPassword";
ZaDomain.A_zimbraSMIMELdapSearchBase="zimbraSMIMELdapSearchBase";
ZaDomain.A_zimbraSMIMELdapDiscoverSearchBaseEnabled="zimbraSMIMELdapDiscoverSearchBaseEnabled";
ZaDomain.A_zimbraSMIMELdapFilter="zimbraSMIMELdapFilter";
ZaDomain.A_zimbraSMIMELdapAttribute="zimbraSMIMELdapAttribute";
ZaDomain.A2_zimbraSMIMEConf="zimbraSMIMEConf";
if(ZaDomain.myXModel){
ZaDomain.myXModel.items.push({
id:ZaDomain.A_zimbraSMIMELdapURL,type:_LIST_,listItem:{
type:_SHORT_URL_}
,ref:"attrs/"+ZaDomain.A_zimbraSMIMELdapURL}
,{
id:ZaDomain.A_zimbraSMIMELdapBindDn,ref:"attrs/"+ZaDomain.A_zimbraSMIMELdapBindDn,type:_STRING_}
,{
id:ZaDomain.A_zimbraSMIMELdapBindPassword,ref:"attrs/"+ZaDomain.A_zimbraSMIMELdapBindPassword,type:_STRING_}
,{
id:ZaDomain.A_zimbraSMIMELdapSearchBase,ref:"attrs/"+ZaDomain.A_zimbraSMIMELdapSearchBase,type:_STRING_}
,{
id:ZaDomain.A_zimbraSMIMELdapDiscoverSearchBaseEnabled,ref:"attrs/"+ZaDomain.A_zimbraSMIMELdapDiscoverSearchBaseEnabled,type:_STRING_}
,{
id:ZaDomain.A_zimbraSMIMELdapFilter,ref:"attrs/"+ZaDomain.A_zimbraSMIMELdapFilter,type:_STRING_}
,{
id:ZaDomain.A_zimbraSMIMELdapAttribute,ref:"attrs/"+ZaDomain.A_zimbraSMIMELdapAttribute,type:_STRING_}
,{
id:ZaDomain.A_zimbraSMIMELdapStartTlsEnabled,ref:"attrs/"+ZaDomain.A_zimbraSMIMELdapStartTlsEnabled,type:_ENUM_,choices:ZaModel.BOOLEAN_CHOICES}
,{
id:ZaDomain.A2_zimbraSMIMEConf,ref:ZaDomain.A2_zimbraSMIMEConf,type:_LIST_}
)
}}
if(ZaGlobalConfig){
ZaGlobalConfig.A_zimbraSMIMELdapURL="zimbraSMIMELdapURL";
ZaGlobalConfig.A_zimbraSMIMELdapBindDn="zimbraSMIMELdapBindDn";
ZaGlobalConfig.A_zimbraSMIMELdapBindPassword="zimbraSMIMELdapBindPassword";
ZaGlobalConfig.A_zimbraSMIMELdapSearchBase="zimbraSMIMELdapSearchBase";
ZaGlobalConfig.A_zimbraSMIMELdapDiscoverSearchBaseEnabled="zimbraSMIMELdapDiscoverSearchBaseEnabled";
ZaGlobalConfig.A_zimbraSMIMELdapFilter="zimbraSMIMELdapFilter";
ZaGlobalConfig.A_zimbraSMIMELdapAttribute="zimbraSMIMELdapAttribute";
ZaGlobalConfig.A2_zimbraSMIMEConf="zimbraSMIMEConf";
if(ZaGlobalConfig.myXModel){
ZaGlobalConfig.myXModel.items.push({
id:ZaGlobalConfig.A_zimbraSMIMELdapURL,ref:"attrs/"+ZaGlobalConfig.A_zimbraSMIMELdapURL,type:_STRING_}
,{
id:ZaGlobalConfig.A_zimbraSMIMELdapBindDn,ref:"attrs/"+ZaGlobalConfig.A_zimbraSMIMELdapBindDn,type:_STRING_}
,{
id:ZaGlobalConfig.A_zimbraSMIMELdapBindPassword,ref:"attrs/"+ZaGlobalConfig.A_zimbraSMIMELdapBindPassword,type:_STRING_}
,{
id:ZaGlobalConfig.A_zimbraSMIMELdapSearchBase,ref:"attrs/"+ZaGlobalConfig.A_zimbraSMIMELdapSearchBase,type:_STRING_}
,{
id:ZaGlobalConfig.A_zimbraSMIMELdapDiscoverSearchBaseEnabled,ref:"attrs/"+ZaGlobalConfig.A_zimbraSMIMELdapDiscoverSearchBaseEnabled,type:_STRING_}
,{
id:ZaGlobalConfig.A_zimbraSMIMELdapFilter,ref:"attrs/"+ZaGlobalConfig.A_zimbraSMIMELdapFilter,type:_STRING_}
,{
id:ZaGlobalConfig.A_zimbraSMIMELdapAttribute,ref:"attrs/"+ZaGlobalConfig.A_zimbraSMIMELdapAttribute,type:_STRING_}
,{
id:ZaGlobalConfig.A2_zimbraSMIMEConf,ref:ZaGlobalConfig.A2_zimbraSMIMEConf,type:_LIST_}
)
}}
ZaSmimeConfigXFormView.myDomainSetObject=function(n,r){
n[ZaDomain.A2_zimbraSMIMEConf]=[];
var t={};
if(r.attrs[ZaDomain.A_zimbraSMIMELdapURL]){
if(!(r.attrs[ZaDomain.A_zimbraSMIMELdapURL] instanceof Array)){
r.attrs[ZaDomain.A_zimbraSMIMELdapURL]=[r.attrs[ZaDomain.A_zimbraSMIMELdapURL]]
}
if(r.attrs[ZaDomain.A_zimbraSMIMELdapURL].length>0){
for(var s=0;
s<r.attrs[ZaDomain.A_zimbraSMIMELdapURL].length;
s++){
var e=r.attrs[ZaDomain.A_zimbraSMIMELdapURL][s].split(":");
if(!t[e[0]]){
t[e[0]]={
name:e[0]}
}
if(e.length>2){
e[1]=r.attrs[ZaDomain.A_zimbraSMIMELdapURL][s].substring(e[0].length+1)
}
t[e[0]][ZaDomain.A_zimbraSMIMELdapURL]=e[1]
}}}
if(r.attrs[ZaDomain.A_zimbraSMIMELdapBindDn]){
if(!(r.attrs[ZaDomain.A_zimbraSMIMELdapBindDn] instanceof Array)){
r.attrs[ZaDomain.A_zimbraSMIMELdapBindDn]=[r.attrs[ZaDomain.A_zimbraSMIMELdapBindDn]]
}
if(r.attrs[ZaDomain.A_zimbraSMIMELdapBindDn].length>0){
for(var s=0;
s<r.attrs[ZaDomain.A_zimbraSMIMELdapBindDn].length;
s++){
var e=r.attrs[ZaDomain.A_zimbraSMIMELdapBindDn][s].split(":");
if(!t[e[0]]){
t[e[0]]={
name:e[0]}
}
if(e.length>2){
e[1]=r.attrs[ZaDomain.A_zimbraSMIMELdapBindDn][s].substring(e[0].length+1)
}
t[e[0]][ZaDomain.A_zimbraSMIMELdapBindDn]=e[1]
}}}
if(r.attrs[ZaDomain.A_zimbraSMIMELdapBindPassword]){
if(!(r.attrs[ZaDomain.A_zimbraSMIMELdapBindPassword] instanceof Array)){
r.attrs[ZaDomain.A_zimbraSMIMELdapBindPassword]=[r.attrs[ZaDomain.A_zimbraSMIMELdapBindPassword]]
}
if(r.attrs[ZaDomain.A_zimbraSMIMELdapBindPassword].length>0){
for(var s=0;
s<r.attrs[ZaDomain.A_zimbraSMIMELdapBindPassword].length;
s++){
var e=r.attrs[ZaDomain.A_zimbraSMIMELdapBindPassword][s].split(":");
if(!t[e[0]]){
t[e[0]]={
name:e[0]}
}
if(e.length>2){
e[1]=r.attrs[ZaDomain.A_zimbraSMIMELdapBindPassword][s].substring(e[0].length+1)
}
t[e[0]][ZaDomain.A_zimbraSMIMELdapBindPassword]=e[1]
}}}
if(r.attrs[ZaDomain.A_zimbraSMIMELdapSearchBase]){
if(!(r.attrs[ZaDomain.A_zimbraSMIMELdapSearchBase] instanceof Array)){
r.attrs[ZaDomain.A_zimbraSMIMELdapSearchBase]=[r.attrs[ZaDomain.A_zimbraSMIMELdapSearchBase]]
}
if(r.attrs[ZaDomain.A_zimbraSMIMELdapSearchBase].length>0){
for(var s=0;
s<r.attrs[ZaDomain.A_zimbraSMIMELdapSearchBase].length;
s++){
var e=r.attrs[ZaDomain.A_zimbraSMIMELdapSearchBase][s].split(":");
if(!t[e[0]]){
t[e[0]]={
name:e[0]}
}
if(e.length>2){
e[1]=r.attrs[ZaDomain.A_zimbraSMIMELdapSearchBase][s].substring(e[0].length+1)
}
t[e[0]][ZaDomain.A_zimbraSMIMELdapSearchBase]=e[1]
}}}
if(r.attrs[ZaDomain.A_zimbraSMIMELdapDiscoverSearchBaseEnabled]){
if(!(r.attrs[ZaDomain.A_zimbraSMIMELdapDiscoverSearchBaseEnabled] instanceof Array)){
r.attrs[ZaDomain.A_zimbraSMIMELdapDiscoverSearchBaseEnabled]=[r.attrs[ZaDomain.A_zimbraSMIMELdapDiscoverSearchBaseEnabled]]
}
if(r.attrs[ZaDomain.A_zimbraSMIMELdapDiscoverSearchBaseEnabled].length>0){
for(var s=0;
s<r.attrs[ZaDomain.A_zimbraSMIMELdapDiscoverSearchBaseEnabled].length;
s++){
var e=r.attrs[ZaDomain.A_zimbraSMIMELdapDiscoverSearchBaseEnabled][s].split(":");
if(!t[e[0]]){
t[e[0]]={
name:e[0]}
}
if(e.length>2){
e[1]=r.attrs[ZaDomain.A_zimbraSMIMELdapDiscoverSearchBaseEnabled][s].substring(e[0].length+1)
}
t[e[0]][ZaDomain.A_zimbraSMIMELdapDiscoverSearchBaseEnabled]=e[1]
}}}
if(r.attrs[ZaDomain.A_zimbraSMIMELdapFilter]){
if(!(r.attrs[ZaDomain.A_zimbraSMIMELdapFilter] instanceof Array)){
r.attrs[ZaDomain.A_zimbraSMIMELdapFilter]=[r.attrs[ZaDomain.A_zimbraSMIMELdapFilter]]
}
if(r.attrs[ZaDomain.A_zimbraSMIMELdapFilter].length>0){
for(var s=0;
s<r.attrs[ZaDomain.A_zimbraSMIMELdapFilter].length;
s++){
var e=r.attrs[ZaDomain.A_zimbraSMIMELdapFilter][s].split(":");
if(!t[e[0]]){
t[e[0]]={
name:e[0]}
}
if(e.length>2){
e[1]=r.attrs[ZaDomain.A_zimbraSMIMELdapFilter][s].substring(e[0].length+1)
}
t[e[0]][ZaDomain.A_zimbraSMIMELdapFilter]=e[1]
}}}
if(r.attrs[ZaDomain.A_zimbraSMIMELdapAttribute]){
if(!(r.attrs[ZaDomain.A_zimbraSMIMELdapAttribute] instanceof Array)){
r.attrs[ZaDomain.A_zimbraSMIMELdapAttribute]=[r.attrs[ZaDomain.A_zimbraSMIMELdapAttribute]]
}
if(r.attrs[ZaDomain.A_zimbraSMIMELdapAttribute].length>0){
for(var s=0;
s<r.attrs[ZaDomain.A_zimbraSMIMELdapAttribute].length;
s++){
var e=r.attrs[ZaDomain.A_zimbraSMIMELdapAttribute][s].split(":");
if(!t[e[0]]){
t[e[0]]={
name:e[0]}
}
if(e.length>2){
e[1]=r.attrs[ZaDomain.A_zimbraSMIMELdapAttribute][s].substring(e[0].length+1)
}
t[e[0]][ZaDomain.A_zimbraSMIMELdapAttribute]=e[1]
}}}
for(var o in t){
n[ZaDomain.A2_zimbraSMIMEConf].push(t[o])
}
return n
};
ZaTabView.XFormSetObjectMethods.ZaDomainXFormView.push(ZaSmimeConfigXFormView.myDomainSetObject);
ZaSmimeConfigXFormView.myGlobalConfSetObject=function(n,r){
n[ZaGlobalConfig.A2_zimbraSMIMEConf]=[];
var t={};
if(r.attrs[ZaGlobalConfig.A_zimbraSMIMELdapURL]){
if(!(r.attrs[ZaGlobalConfig.A_zimbraSMIMELdapURL] instanceof Array)){
r.attrs[ZaGlobalConfig.A_zimbraSMIMELdapURL]=[r.attrs[ZaGlobalConfig.A_zimbraSMIMELdapURL]]
}
if(r.attrs[ZaGlobalConfig.A_zimbraSMIMELdapURL].length>0){
for(var s=0;
s<r.attrs[ZaGlobalConfig.A_zimbraSMIMELdapURL].length;
s++){
var e=r.attrs[ZaGlobalConfig.A_zimbraSMIMELdapURL][s].split(":");
if(!t[e[0]]){
t[e[0]]={
name:e[0]}
}
if(e.length>2){
e[1]=r.attrs[ZaGlobalConfig.A_zimbraSMIMELdapURL][s].substring(e[0].length+1)
}
t[e[0]][ZaGlobalConfig.A_zimbraSMIMELdapURL]=e[1]
}}}
if(r.attrs[ZaGlobalConfig.A_zimbraSMIMELdapBindDn]){
if(!(r.attrs[ZaGlobalConfig.A_zimbraSMIMELdapBindDn] instanceof Array)){
r.attrs[ZaGlobalConfig.A_zimbraSMIMELdapBindDn]=[r.attrs[ZaGlobalConfig.A_zimbraSMIMELdapBindDn]]
}
if(r.attrs[ZaGlobalConfig.A_zimbraSMIMELdapBindDn].length>0){
for(var s=0;
s<r.attrs[ZaGlobalConfig.A_zimbraSMIMELdapBindDn].length;
s++){
var e=r.attrs[ZaGlobalConfig.A_zimbraSMIMELdapBindDn][s].split(":");
if(!t[e[0]]){
t[e[0]]={
name:e[0]}
}
if(e.length>2){
e[1]=r.attrs[ZaGlobalConfig.A_zimbraSMIMELdapBindDn][s].substring(e[0].length+1)
}
t[e[0]][ZaGlobalConfig.A_zimbraSMIMELdapBindDn]=e[1]
}}}
if(r.attrs[ZaGlobalConfig.A_zimbraSMIMELdapBindPassword]){
if(!(r.attrs[ZaGlobalConfig.A_zimbraSMIMELdapBindPassword] instanceof Array)){
r.attrs[ZaGlobalConfig.A_zimbraSMIMELdapBindPassword]=[r.attrs[ZaGlobalConfig.A_zimbraSMIMELdapBindPassword]]
}
if(r.attrs[ZaGlobalConfig.A_zimbraSMIMELdapBindPassword].length>0){
for(var s=0;
s<r.attrs[ZaGlobalConfig.A_zimbraSMIMELdapBindPassword].length;
s++){
var e=r.attrs[ZaGlobalConfig.A_zimbraSMIMELdapBindPassword][s].split(":");
if(!t[e[0]]){
t[e[0]]={
name:e[0]}
}
if(e.length>2){
e[1]=r.attrs[ZaGlobalConfig.A_zimbraSMIMELdapBindPassword][s].substring(e[0].length+1)
}
t[e[0]][ZaGlobalConfig.A_zimbraSMIMELdapBindPassword]=e[1]
}}}
if(r.attrs[ZaGlobalConfig.A_zimbraSMIMELdapSearchBase]){
if(!(r.attrs[ZaGlobalConfig.A_zimbraSMIMELdapSearchBase] instanceof Array)){
r.attrs[ZaGlobalConfig.A_zimbraSMIMELdapSearchBase]=[r.attrs[ZaGlobalConfig.A_zimbraSMIMELdapSearchBase]]
}
if(r.attrs[ZaGlobalConfig.A_zimbraSMIMELdapSearchBase].length>0){
for(var s=0;
s<r.attrs[ZaGlobalConfig.A_zimbraSMIMELdapSearchBase].length;
s++){
var e=r.attrs[ZaGlobalConfig.A_zimbraSMIMELdapSearchBase][s].split(":");
if(!t[e[0]]){
t[e[0]]={
name:e[0]}
}
if(e.length>2){
e[1]=r.attrs[ZaGlobalConfig.A_zimbraSMIMELdapSearchBase][s].substring(e[0].length+1)
}
t[e[0]][ZaGlobalConfig.A_zimbraSMIMELdapSearchBase]=e[1]
}}}
if(r.attrs[ZaGlobalConfig.A_zimbraSMIMELdapDiscoverSearchBaseEnabled]){
if(!(r.attrs[ZaGlobalConfig.A_zimbraSMIMELdapDiscoverSearchBaseEnabled] instanceof Array)){
r.attrs[ZaGlobalConfig.A_zimbraSMIMELdapDiscoverSearchBaseEnabled]=[r.attrs[ZaGlobalConfig.A_zimbraSMIMELdapDiscoverSearchBaseEnabled]]
}
if(r.attrs[ZaGlobalConfig.A_zimbraSMIMELdapDiscoverSearchBaseEnabled].length>0){
for(var s=0;
s<r.attrs[ZaGlobalConfig.A_zimbraSMIMELdapDiscoverSearchBaseEnabled].length;
s++){
var e=r.attrs[ZaGlobalConfig.A_zimbraSMIMELdapDiscoverSearchBaseEnabled][s].split(":");
if(!t[e[0]]){
t[e[0]]={
name:e[0]}
}
if(e.length>2){
e[1]=r.attrs[ZaGlobalConfig.A_zimbraSMIMELdapDiscoverSearchBaseEnabled][s].substring(e[0].length+1)
}
t[e[0]][ZaGlobalConfig.A_zimbraSMIMELdapDiscoverSearchBaseEnabled]=e[1]
}}}
if(r.attrs[ZaGlobalConfig.A_zimbraSMIMELdapFilter]){
if(!(r.attrs[ZaGlobalConfig.A_zimbraSMIMELdapFilter] instanceof Array)){
r.attrs[ZaGlobalConfig.A_zimbraSMIMELdapFilter]=[r.attrs[ZaGlobalConfig.A_zimbraSMIMELdapFilter]]
}
if(r.attrs[ZaGlobalConfig.A_zimbraSMIMELdapFilter].length>0){
for(var s=0;
s<r.attrs[ZaGlobalConfig.A_zimbraSMIMELdapFilter].length;
s++){
var e=r.attrs[ZaGlobalConfig.A_zimbraSMIMELdapFilter][s].split(":");
if(!t[e[0]]){
t[e[0]]={
name:e[0]}
}
if(e.length>2){
e[1]=r.attrs[ZaGlobalConfig.A_zimbraSMIMELdapFilter][s].substring(e[0].length+1)
}
t[e[0]][ZaGlobalConfig.A_zimbraSMIMELdapFilter]=e[1]
}}}
if(r.attrs[ZaGlobalConfig.A_zimbraSMIMELdapAttribute]){
if(!(r.attrs[ZaGlobalConfig.A_zimbraSMIMELdapAttribute] instanceof Array)){
r.attrs[ZaGlobalConfig.A_zimbraSMIMELdapAttribute]=[r.attrs[ZaGlobalConfig.A_zimbraSMIMELdapAttribute]]
}
if(r.attrs[ZaGlobalConfig.A_zimbraSMIMELdapAttribute].length>0){
for(var s=0;
s<r.attrs[ZaGlobalConfig.A_zimbraSMIMELdapAttribute].length;
s++){
var e=r.attrs[ZaGlobalConfig.A_zimbraSMIMELdapAttribute][s].split(":");
if(!t[e[0]]){
t[e[0]]={
name:e[0]}
}
if(e.length>2){
e[1]=r.attrs[ZaGlobalConfig.A_zimbraSMIMELdapAttribute][s].substring(e[0].length+1)
}
t[e[0]][ZaGlobalConfig.A_zimbraSMIMELdapAttribute]=e[1]
}}}
for(var o in t){
n[ZaGlobalConfig.A2_zimbraSMIMEConf].push(t[o])
}
return n
};
ZaTabView.XFormSetObjectMethods.GlobalConfigXFormView.push(ZaSmimeConfigXFormView.myGlobalConfSetObject);
ZaSmimeConfigXFormView.myDomainSaveChange=function(p,t,u){
var r=u.attrs;
var n={};
if(r[ZaDomain.A_zimbraSMIMELdapURL]){
if(!(r[ZaDomain.A_zimbraSMIMELdapURL] instanceof Array)){
r[ZaDomain.A_zimbraSMIMELdapURL]=[r[ZaDomain.A_zimbraSMIMELdapURL]]
}
if(r[ZaDomain.A_zimbraSMIMELdapURL].length>0){
for(var o=0;
o<r[ZaDomain.A_zimbraSMIMELdapURL].length;
o++){
var d=r[ZaDomain.A_zimbraSMIMELdapURL][o].split(":");
if(!n[d[0]]){
n[d[0]]={
name:d[0]}
}
if(d.length>2){
d[1]=r[ZaDomain.A_zimbraSMIMELdapURL][o].substring(d[0].length+1)
}
n[d[0]][ZaDomain.A_zimbraSMIMELdapURL]=d[1]
}}}
if(r[ZaDomain.A_zimbraSMIMELdapBindDn]){
if(!(r[ZaDomain.A_zimbraSMIMELdapBindDn] instanceof Array)){
r[ZaDomain.A_zimbraSMIMELdapBindDn]=[r[ZaDomain.A_zimbraSMIMELdapBindDn]]
}
if(r[ZaDomain.A_zimbraSMIMELdapBindDn].length>0){
for(var o=0;
o<r[ZaDomain.A_zimbraSMIMELdapBindDn].length;
o++){
var d=r[ZaDomain.A_zimbraSMIMELdapBindDn][o].split(":");
if(!n[d[0]]){
n[d[0]]={
name:d[0]}
}
if(d.length>2){
d[1]=r[ZaDomain.A_zimbraSMIMELdapBindDn][o].substring(d[0].length+1)
}
n[d[0]][ZaDomain.A_zimbraSMIMELdapBindDn]=d[1]
}}}
if(r[ZaDomain.A_zimbraSMIMELdapBindPassword]){
if(!(r[ZaDomain.A_zimbraSMIMELdapBindPassword] instanceof Array)){
r[ZaDomain.A_zimbraSMIMELdapBindPassword]=[r[ZaDomain.A_zimbraSMIMELdapBindPassword]]
}
if(r[ZaDomain.A_zimbraSMIMELdapBindPassword].length>0){
for(var o=0;
o<r[ZaDomain.A_zimbraSMIMELdapBindPassword].length;
o++){
var d=r[ZaDomain.A_zimbraSMIMELdapBindPassword][o].split(":");
if(!n[d[0]]){
n[d[0]]={
name:d[0]}
}
if(d.length>2){
d[1]=r[ZaDomain.A_zimbraSMIMELdapBindPassword][o].substring(d[0].length+1)
}
n[d[0]][ZaDomain.A_zimbraSMIMELdapBindPassword]=d[1]
}}}
if(r[ZaDomain.A_zimbraSMIMELdapSearchBase]){
if(!(r[ZaDomain.A_zimbraSMIMELdapSearchBase] instanceof Array)){
r[ZaDomain.A_zimbraSMIMELdapSearchBase]=[r[ZaDomain.A_zimbraSMIMELdapSearchBase]]
}
if(r[ZaDomain.A_zimbraSMIMELdapSearchBase].length>0){
for(var o=0;
o<r[ZaDomain.A_zimbraSMIMELdapSearchBase].length;
o++){
var d=r[ZaDomain.A_zimbraSMIMELdapSearchBase][o].split(":");
if(!n[d[0]]){
n[d[0]]={
name:d[0]}
}
if(d.length>2){
d[1]=r[ZaDomain.A_zimbraSMIMELdapSearchBase][o].substring(d[0].length+1)
}
n[d[0]][ZaDomain.A_zimbraSMIMELdapSearchBase]=d[1]
}}}
if(r[ZaDomain.A_zimbraSMIMELdapDiscoverSearchBaseEnabled]){
if(!(r[ZaDomain.A_zimbraSMIMELdapDiscoverSearchBaseEnabled] instanceof Array)){
r[ZaDomain.A_zimbraSMIMELdapDiscoverSearchBaseEnabled]=[r[ZaDomain.A_zimbraSMIMELdapDiscoverSearchBaseEnabled]]
}
if(r[ZaDomain.A_zimbraSMIMELdapDiscoverSearchBaseEnabled].length>0){
for(var o=0;
o<r[ZaDomain.A_zimbraSMIMELdapDiscoverSearchBaseEnabled].length;
o++){
var d=r[ZaDomain.A_zimbraSMIMELdapDiscoverSearchBaseEnabled][o].split(":");
if(!n[d[0]]){
n[d[0]]={
name:d[0]}
}
if(d.length>2){
d[1]=r[ZaDomain.A_zimbraSMIMELdapDiscoverSearchBaseEnabled][o].substring(d[0].length+1)
}
n[d[0]][ZaDomain.A_zimbraSMIMELdapDiscoverSearchBaseEnabled]=d[1]
}}}
if(r[ZaDomain.A_zimbraSMIMELdapFilter]){
if(!(r[ZaDomain.A_zimbraSMIMELdapFilter] instanceof Array)){
r[ZaDomain.A_zimbraSMIMELdapFilter]=[r[ZaDomain.A_zimbraSMIMELdapFilter]]
}
if(r[ZaDomain.A_zimbraSMIMELdapFilter].length>0){
for(var o=0;
o<r[ZaDomain.A_zimbraSMIMELdapFilter].length;
o++){
var d=r[ZaDomain.A_zimbraSMIMELdapFilter][o].split(":");
if(!n[d[0]]){
n[d[0]]={
name:d[0]}
}
if(d.length>2){
d[1]=r[ZaDomain.A_zimbraSMIMELdapFilter][o].substring(d[0].length+1)
}
n[d[0]][ZaDomain.A_zimbraSMIMELdapFilter]=d[1]
}}}
if(r[ZaDomain.A_zimbraSMIMELdapAttribute]){
if(!(r[ZaDomain.A_zimbraSMIMELdapAttribute] instanceof Array)){
r[ZaDomain.A_zimbraSMIMELdapAttribute]=[r[ZaDomain.A_zimbraSMIMELdapAttribute]]
}
if(r[ZaDomain.A_zimbraSMIMELdapAttribute].length>0){
for(var o=0;
o<r[ZaDomain.A_zimbraSMIMELdapAttribute].length;
o++){
var d=r[ZaDomain.A_zimbraSMIMELdapAttribute][o].split(":");
if(!n[d[0]]){
n[d[0]]={
name:d[0]}
}
if(d.length>2){
d[1]=r[ZaDomain.A_zimbraSMIMELdapAttribute][o].substring(d[0].length+1)
}
n[d[0]][ZaDomain.A_zimbraSMIMELdapAttribute]=d[1]
}}}
var m={};
var c={};
var l=false;
if(t[ZaDomain.A2_zimbraSMIMEConf]&&t[ZaDomain.A2_zimbraSMIMEConf] instanceof Array&&t[ZaDomain.A2_zimbraSMIMEConf].length>=0){
for(var o=0;
o<t[ZaDomain.A2_zimbraSMIMEConf].length;
o++){
var s=t[ZaDomain.A2_zimbraSMIMEConf][o];
if(!s.name||s.name==""||!s[ZaDomain.A_zimbraSMIMELdapURL]||s[ZaDomain.A_zimbraSMIMELdapURL]==""){
this._errorDialog.setMessage(com_zimbra_smime_cert_admin.ERROR_SMIME_MSG_NULL,null,DwtMessageDialog.CRITICAL_STYLE,ZaMsg.zimbraAdminTitle);
this._errorDialog.popup();
return false
}else{
if(c[s.name]){
this._errorDialog.setMessage(AjxMessageFormat.format(com_zimbra_smime_cert_admin.ERROR_SMIME_MSG_SAMENAME,[s.name]),null,DwtMessageDialog.CRITICAL_STYLE,ZaMsg.zimbraAdminTitle);
this._errorDialog.popup();
return false
}}
if(!n[s.name]){
m[s.name]={
Op:"ADD",Loc:o};
l=true
}else{
var e=n[s.name];
if(e.name!=s.name||e[ZaDomain.A_zimbraSMIMELdapURL]!=s[ZaDomain.A_zimbraSMIMELdapURL]||e[ZaDomain.A_zimbraSMIMELdapBindDn]!=s[ZaDomain.A_zimbraSMIMELdapBindDn]||e[ZaDomain.A_zimbraSMIMELdapBindPassword]!=s[ZaDomain.A_zimbraSMIMELdapBindPassword]||e[ZaDomain.A_zimbraSMIMELdapSearchBase]!=s[ZaDomain.A_zimbraSMIMELdapSearchBase]||e[ZaDomain.A_zimbraSMIMELdapDiscoverSearchBaseEnabled]!=s[ZaDomain.A_zimbraSMIMELdapDiscoverSearchBaseEnabled]||e[ZaDomain.A_zimbraSMIMELdapFilter]!=s[ZaDomain.A_zimbraSMIMELdapFilter]||e[ZaDomain.A_zimbraSMIMELdapAttribute]!=s[ZaDomain.A_zimbraSMIMELdapAttribute]){
m[s.name]={
Op:"MODIFIED",Loc:o};
l=true
}
c[s.name]="DONE";
delete n[s.name]
}}
for(var f in n){
m[f]={
Op:"DELETED",Loc:o};
l=true
}}
if(l){
p[ZaDomain.A2_zimbraSMIMEConf]=m
}
return l
};
ZaController.saveChangeCheckMethods.ZaDomainController.push(ZaSmimeConfigXFormView.myDomainSaveChange);
ZaSmimeConfigXFormView.myGlobalConfSaveChange=function(p,t,u){
var r=u.attrs;
var n={};
if(r[ZaGlobalConfig.A_zimbraSMIMELdapURL]){
if(!(r[ZaGlobalConfig.A_zimbraSMIMELdapURL] instanceof Array)){
r[ZaGlobalConfig.A_zimbraSMIMELdapURL]=[r[ZaGlobalConfig.A_zimbraSMIMELdapURL]]
}
if(r[ZaGlobalConfig.A_zimbraSMIMELdapURL].length>0){
for(var o=0;
o<r[ZaGlobalConfig.A_zimbraSMIMELdapURL].length;
o++){
var d=r[ZaGlobalConfig.A_zimbraSMIMELdapURL][o].split(":");
if(!n[d[0]]){
n[d[0]]={
name:d[0]}
}
if(d.length>2){
d[1]=r[ZaGlobalConfig.A_zimbraSMIMELdapURL][o].substring(d[0].length+1)
}
n[d[0]][ZaGlobalConfig.A_zimbraSMIMELdapURL]=d[1]
}}}
if(r[ZaGlobalConfig.A_zimbraSMIMELdapBindDn]){
if(!(r[ZaGlobalConfig.A_zimbraSMIMELdapBindDn] instanceof Array)){
r[ZaGlobalConfig.A_zimbraSMIMELdapBindDn]=[r[ZaGlobalConfig.A_zimbraSMIMELdapBindDn]]
}
if(r[ZaGlobalConfig.A_zimbraSMIMELdapBindDn].length>0){
for(var o=0;
o<r[ZaGlobalConfig.A_zimbraSMIMELdapBindDn].length;
o++){
var d=r[ZaGlobalConfig.A_zimbraSMIMELdapBindDn][o].split(":");
if(!n[d[0]]){
n[d[0]]={
name:d[0]}
}
if(d.length>2){
d[1]=r[ZaGlobalConfig.A_zimbraSMIMELdapBindDn][o].substring(d[0].length+1)
}
n[d[0]][ZaGlobalConfig.A_zimbraSMIMELdapBindDn]=d[1]
}}}
if(r[ZaGlobalConfig.A_zimbraSMIMELdapBindPassword]){
if(!(r[ZaGlobalConfig.A_zimbraSMIMELdapBindPassword] instanceof Array)){
r[ZaGlobalConfig.A_zimbraSMIMELdapBindPassword]=[r[ZaGlobalConfig.A_zimbraSMIMELdapBindPassword]]
}
if(r[ZaGlobalConfig.A_zimbraSMIMELdapBindPassword].length>0){
for(var o=0;
o<r[ZaGlobalConfig.A_zimbraSMIMELdapBindPassword].length;
o++){
var d=r[ZaGlobalConfig.A_zimbraSMIMELdapBindPassword][o].split(":");
if(!n[d[0]]){
n[d[0]]={
name:d[0]}
}
if(d.length>2){
d[1]=r[ZaGlobalConfig.A_zimbraSMIMELdapBindPassword][o].substring(d[0].length+1)
}
n[d[0]][ZaGlobalConfig.A_zimbraSMIMELdapBindPassword]=d[1]
}}}
if(r[ZaGlobalConfig.A_zimbraSMIMELdapSearchBase]){
if(!(r[ZaGlobalConfig.A_zimbraSMIMELdapSearchBase] instanceof Array)){
r[ZaGlobalConfig.A_zimbraSMIMELdapSearchBase]=[r[ZaGlobalConfig.A_zimbraSMIMELdapSearchBase]]
}
if(r[ZaGlobalConfig.A_zimbraSMIMELdapSearchBase].length>0){
for(var o=0;
o<r[ZaGlobalConfig.A_zimbraSMIMELdapSearchBase].length;
o++){
var d=r[ZaGlobalConfig.A_zimbraSMIMELdapSearchBase][o].split(":");
if(!n[d[0]]){
n[d[0]]={
name:d[0]}
}
if(d.length>2){
d[1]=r[ZaGlobalConfig.A_zimbraSMIMELdapSearchBase][o].substring(d[0].length+1)
}
n[d[0]][ZaGlobalConfig.A_zimbraSMIMELdapSearchBase]=d[1]
}}}
if(r[ZaGlobalConfig.A_zimbraSMIMELdapDiscoverSearchBaseEnabled]){
if(!(r[ZaGlobalConfig.A_zimbraSMIMELdapDiscoverSearchBaseEnabled] instanceof Array)){
r[ZaGlobalConfig.A_zimbraSMIMELdapDiscoverSearchBaseEnabled]=[r[ZaGlobalConfig.A_zimbraSMIMELdapDiscoverSearchBaseEnabled]]
}
if(r[ZaGlobalConfig.A_zimbraSMIMELdapDiscoverSearchBaseEnabled].length>0){
for(var o=0;
o<r[ZaGlobalConfig.A_zimbraSMIMELdapDiscoverSearchBaseEnabled].length;
o++){
var d=r[ZaGlobalConfig.A_zimbraSMIMELdapDiscoverSearchBaseEnabled][o].split(":");
if(!n[d[0]]){
n[d[0]]={
name:d[0]}
}
if(d.length>2){
d[1]=r[ZaGlobalConfig.A_zimbraSMIMELdapDiscoverSearchBaseEnabled][o].substring(d[0].length+1)
}
n[d[0]][ZaGlobalConfig.A_zimbraSMIMELdapDiscoverSearchBaseEnabled]=d[1]
}}}
if(r[ZaGlobalConfig.A_zimbraSMIMELdapFilter]){
if(!(r[ZaGlobalConfig.A_zimbraSMIMELdapFilter] instanceof Array)){
r[ZaGlobalConfig.A_zimbraSMIMELdapFilter]=[r[ZaGlobalConfig.A_zimbraSMIMELdapFilter]]
}
if(r[ZaGlobalConfig.A_zimbraSMIMELdapFilter].length>0){
for(var o=0;
o<r[ZaGlobalConfig.A_zimbraSMIMELdapFilter].length;
o++){
var d=r[ZaGlobalConfig.A_zimbraSMIMELdapFilter][o].split(":");
if(!n[d[0]]){
n[d[0]]={
name:d[0]}
}
if(d.length>2){
d[1]=r[ZaGlobalConfig.A_zimbraSMIMELdapFilter][o].substring(d[0].length+1)
}
n[d[0]][ZaGlobalConfig.A_zimbraSMIMELdapFilter]=d[1]
}}}
if(r[ZaGlobalConfig.A_zimbraSMIMELdapAttribute]){
if(!(r[ZaGlobalConfig.A_zimbraSMIMELdapAttribute] instanceof Array)){
r[ZaGlobalConfig.A_zimbraSMIMELdapAttribute]=[r[ZaGlobalConfig.A_zimbraSMIMELdapAttribute]]
}
if(r[ZaGlobalConfig.A_zimbraSMIMELdapAttribute].length>0){
for(var o=0;
o<r[ZaGlobalConfig.A_zimbraSMIMELdapAttribute].length;
o++){
var d=r[ZaGlobalConfig.A_zimbraSMIMELdapAttribute][o].split(":");
if(!n[d[0]]){
n[d[0]]={
name:d[0]}
}
if(d.length>2){
d[1]=r[ZaGlobalConfig.A_zimbraSMIMELdapAttribute][o].substring(d[0].length+1)
}
n[d[0]][ZaGlobalConfig.A_zimbraSMIMELdapAttribute]=d[1]
}}}
var m={};
var c={};
var l=false;
if(t[ZaGlobalConfig.A2_zimbraSMIMEConf]&&t[ZaGlobalConfig.A2_zimbraSMIMEConf] instanceof Array&&t[ZaGlobalConfig.A2_zimbraSMIMEConf].length>=0){
for(var o=0;
o<t[ZaGlobalConfig.A2_zimbraSMIMEConf].length;
o++){
var s=t[ZaGlobalConfig.A2_zimbraSMIMEConf][o];
if(!s.name||s.name==""||!s[ZaGlobalConfig.A_zimbraSMIMELdapURL]||s[ZaGlobalConfig.A_zimbraSMIMELdapURL]==""){
this._errorDialog.setMessage(com_zimbra_smime_cert_admin.ERROR_SMIME_MSG_NULL,null,DwtMessageDialog.CRITICAL_STYLE,ZaMsg.zimbraAdminTitle);
this._errorDialog.popup();
return false
}else{
if(c[s.name]){
this._errorDialog.setMessage(AjxMessageFormat.format(com_zimbra_smime_cert_admin.ERROR_SMIME_MSG_SAMENAME,[s.name]),null,DwtMessageDialog.CRITICAL_STYLE,ZaMsg.zimbraAdminTitle);
this._errorDialog.popup();
return false
}}
if(!n[s.name]){
m[s.name]={
Op:"ADD",Loc:o};
l=true
}else{
var e=n[s.name];
if(e.name!=s.name||e[ZaGlobalConfig.A_zimbraSMIMELdapURL]!=s[ZaGlobalConfig.A_zimbraSMIMELdapURL]||e[ZaGlobalConfig.A_zimbraSMIMELdapBindDn]!=s[ZaGlobalConfig.A_zimbraSMIMELdapBindDn]||e[ZaGlobalConfig.A_zimbraSMIMELdapBindPassword]!=s[ZaGlobalConfig.A_zimbraSMIMELdapBindPassword]||e[ZaGlobalConfig.A_zimbraSMIMELdapSearchBase]!=s[ZaGlobalConfig.A_zimbraSMIMELdapSearchBase]||e[ZaGlobalConfig.A_zimbraSMIMELdapDiscoverSearchBaseEnabled]!=s[ZaGlobalConfig.A_zimbraSMIMELdapDiscoverSearchBaseEnabled]||e[ZaGlobalConfig.A_zimbraSMIMELdapFilter]!=s[ZaGlobalConfig.A_zimbraSMIMELdapFilter]||e[ZaGlobalConfig.A_zimbraSMIMELdapAttribute]!=s[ZaGlobalConfig.A_zimbraSMIMELdapAttribute]){
m[s.name]={
Op:"MODIFIED",Loc:o};
l=true
}
c[s.name]="DONE";
delete n[s.name]
}}
for(var f in n){
m[f]={
Op:"DELETED",Loc:o};
l=true
}}
if(l){
p[ZaGlobalConfig.A2_zimbraSMIMEConf]=m
}
return l
};
ZaController.saveChangeCheckMethods.ZaGlobalConfigViewController.push(ZaSmimeConfigXFormView.myGlobalConfSaveChange);
ZaSmimeConfigXFormView.myModifyMethod=function(c,e,r){
if(c[ZaDomain.A2_zimbraSMIMEConf]){
for(var t in c[ZaDomain.A2_zimbraSMIMEConf]){
var s=r.set("ModifySMIMEConfigRequest",null,null,ZaZimbraAdmin.URN);
if(e.type==ZaItem.DOMAIN){
var l=r.set("domain",e.id,s);
l.setAttribute("by","id")
}
var o=r.set("config",null,s);
o.setAttribute("name",t);
var d=c[ZaDomain.A2_zimbraSMIMEConf][t];
if(d.Op=="ADD"||d.Op=="MODIFIED"){
o.setAttribute("op","modify");
var n=e[ZaDomain.A2_zimbraSMIMEConf][d.Loc];
attr=r.set("a",n[ZaDomain.A_zimbraSMIMELdapURL],o);
attr.setAttribute("n",ZaDomain.A_zimbraSMIMELdapURL);
attr=r.set("a",n[ZaDomain.A_zimbraSMIMELdapBindDn],o);
attr.setAttribute("n",ZaDomain.A_zimbraSMIMELdapBindDn);
attr=r.set("a",n[ZaDomain.A_zimbraSMIMELdapBindPassword],o);
attr.setAttribute("n",ZaDomain.A_zimbraSMIMELdapBindPassword);
attr=r.set("a",n[ZaDomain.A_zimbraSMIMELdapFilter],o);
attr.setAttribute("n",ZaDomain.A_zimbraSMIMELdapFilter);
attr=r.set("a",n[ZaDomain.A_zimbraSMIMELdapSearchBase],o);
attr.setAttribute("n",ZaDomain.A_zimbraSMIMELdapSearchBase);
attr=r.set("a",n[ZaDomain.A_zimbraSMIMELdapDiscoverSearchBaseEnabled],o);
attr.setAttribute("n",ZaDomain.A_zimbraSMIMELdapDiscoverSearchBaseEnabled);
attr=r.set("a",n[ZaDomain.A_zimbraSMIMELdapAttribute],o);
attr.setAttribute("n",ZaDomain.A_zimbraSMIMELdapAttribute)
}else{
o.setAttribute("op","remove")
}}
delete c[ZaDomain.A2_zimbraSMIMEConf];
if(c[ZaDomain.A_zimbraSMIMELdapDiscoverSearchBaseEnabled]){
delete c[ZaDomain.A_zimbraSMIMELdapDiscoverSearchBaseEnabled]
}
if(c[ZaDomain.A_zimbraSMIMELdapURL]){
delete c[ZaDomain.A_zimbraSMIMELdapURL]
}
if(c[ZaDomain.A_zimbraSMIMELdapBindDn]){
delete c[ZaDomain.A_zimbraSMIMELdapBindDn]
}
if(c[ZaDomain.A_zimbraSMIMELdapBindPassword]){
delete c[ZaDomain.A_zimbraSMIMELdapBindPassword]
}
if(c[ZaDomain.A_zimbraSMIMELdapFilter]){
delete c[ZaDomain.A_zimbraSMIMELdapFilter]
}
if(c[ZaDomain.A_zimbraSMIMELdapSearchBase]){
delete c[ZaDomain.A_zimbraSMIMELdapSearchBase]
}
if(c[ZaDomain.A_zimbraSMIMELdapAttribute]){
delete c[ZaDomain.A_zimbraSMIMELdapAttribute]
}}};
ZaItem.modifyMethodsExt.ZaDomain.push(ZaSmimeConfigXFormView.myModifyMethod);
ZaSmimeConfigXFormView.myGlobalConfModifyMethod=function(c,e,r){
if(c[ZaGlobalConfig.A2_zimbraSMIMEConf]){
for(var t in c[ZaGlobalConfig.A2_zimbraSMIMEConf]){
var s=r.set("ModifySMIMEConfigRequest",null,null,ZaZimbraAdmin.URN);
if(e.type==ZaItem.DOMAIN){
var l=r.set("domain",e.id,s);
l.setAttribute("by","id")
}
var o=r.set("config",null,s);
o.setAttribute("name",t);
var d=c[ZaGlobalConfig.A2_zimbraSMIMEConf][t];
if(d.Op=="ADD"||d.Op=="MODIFIED"){
o.setAttribute("op","modify");
var n=e[ZaGlobalConfig.A2_zimbraSMIMEConf][d.Loc];
attr=r.set("a",n[ZaGlobalConfig.A_zimbraSMIMELdapURL],o);
attr.setAttribute("n",ZaGlobalConfig.A_zimbraSMIMELdapURL);
attr=r.set("a",n[ZaGlobalConfig.A_zimbraSMIMELdapBindDn],o);
attr.setAttribute("n",ZaGlobalConfig.A_zimbraSMIMELdapBindDn);
attr=r.set("a",n[ZaGlobalConfig.A_zimbraSMIMELdapBindPassword],o);
attr.setAttribute("n",ZaGlobalConfig.A_zimbraSMIMELdapBindPassword);
attr=r.set("a",n[ZaGlobalConfig.A_zimbraSMIMELdapFilter],o);
attr.setAttribute("n",ZaGlobalConfig.A_zimbraSMIMELdapFilter);
attr=r.set("a",n[ZaGlobalConfig.A_zimbraSMIMELdapSearchBase],o);
attr.setAttribute("n",ZaGlobalConfig.A_zimbraSMIMELdapSearchBase);
attr=r.set("a",n[ZaGlobalConfig.A_zimbraSMIMELdapDiscoverSearchBaseEnabled],o);
attr.setAttribute("n",ZaGlobalConfig.A_zimbraSMIMELdapDiscoverSearchBaseEnabled);
attr=r.set("a",n[ZaGlobalConfig.A_zimbraSMIMELdapAttribute],o);
attr.setAttribute("n",ZaGlobalConfig.A_zimbraSMIMELdapAttribute)
}else{
o.setAttribute("op","remove")
}}
delete c[ZaGlobalConfig.A2_zimbraSMIMEConf];
if(c[ZaDomain.A_zimbraSMIMELdapDiscoverSearchBaseEnabled]){
delete c[ZaDomain.A_zimbraSMIMELdapDiscoverSearchBaseEnabled]
}
if(c[ZaDomain.A_zimbraSMIMELdapURL]){
delete c[ZaDomain.A_zimbraSMIMELdapURL]
}
if(c[ZaDomain.A_zimbraSMIMELdapBindDn]){
delete c[ZaDomain.A_zimbraSMIMELdapBindDn]
}
if(c[ZaDomain.A_zimbraSMIMELdapBindPassword]){
delete c[ZaDomain.A_zimbraSMIMELdapBindPassword]
}
if(c[ZaDomain.A_zimbraSMIMELdapFilter]){
delete c[ZaDomain.A_zimbraSMIMELdapFilter]
}
if(c[ZaDomain.A_zimbraSMIMELdapSearchBase]){
delete c[ZaDomain.A_zimbraSMIMELdapSearchBase]
}
if(c[ZaDomain.A_zimbraSMIMELdapAttribute]){
delete c[ZaDomain.A_zimbraSMIMELdapAttribute]
}}};
ZaItem.modifyMethodsExt.ZaGlobalConfig.push(ZaSmimeConfigXFormView.myGlobalConfModifyMethod);
ZaSmimeConfigXFormView.smimeConfItemId="smime_tab_item_"+Dwt.getNextId();
ZaSmimeConfigXFormView.updateSMIME=function(e){
var t=e._localXForm.getItemsById(ZaSmimeConfigXFormView.smimeConfItemId)[0];
t.updateElement()
};
ZaSmimeConfigXFormView.myDomainXFormModifier=function(l,s){
ZaDomainXFormView.SMIME_TAB_ATTRS=[ZaDomain.A_zimbraSMIMELdapURL,ZaDomain.A_zimbraSMIMELdapBindDn,ZaDomain.A_zimbraSMIMELdapBindPassword,ZaDomain.A_zimbraSMIMELdapSearchBase,ZaDomain.A_zimbraSMIMELdapDiscoverSearchBaseEnabled,ZaDomain.A_zimbraSMIMELdapAttribute];
ZaDomainXFormView.SMIME_TAB_RIGHTS=[];
if(!ZaTabView.isTAB_ENABLED(s,ZaDomainXFormView.SMIME_TAB_ATTRS,ZaDomainXFormView.SMIME_TAB_RIGHTS)){
return
}
var n,e,o;
for(var t=0;
t<l.items.length;
t++){
if(l.items[t].type==_TAB_BAR_){
e=l.items[t]
}
if(l.items[t].type==_SWITCH_){
o=l.items[t]
}}
if(e&&o){
n=++this.TAB_INDEX;
e.choices.push({
value:n,label:com_zimbra_smime_cert_admin.Domain_Tab_SMIME}
);
if(this.helpMap){
this.helpMap[n]=[location.pathname,ZaUtil.HELP_URL,"managing_global_settings/configuring_s_mime_settings.htm","?locid=",AjxEnv.DEFAULT_LOCALE].join("")
}}
var r={
type:_ZATABCASE_,caseKey:n,colSizes:["100%"],numCols:1,id:"global_smime_tab",items:[{
type:_ZA_TOP_GROUPER_,label:com_zimbra_smime_cert_admin.Domain_SMIME_Settings,colSizes:["auto"],numCols:1,items:[{
ref:ZaDomain.A2_zimbraSMIMEConf,type:_REPEAT_,containerCssStyle:"padding-left:30px;",id:ZaSmimeConfigXFormView.smimeConfItemId,label:null,repeatInstance:"",showAddButton:true,showRemoveButton:true,addButtonLabel:com_zimbra_smime_cert_admin.Domain_Add_SMIME,removeButtonLabel:com_zimbra_smime_cert_admin.Domain_REPEAT_REMOVE,showAddOnNextRow:true,align:_LEFT_,items:[{
ref:".",type:_SMIME_,label:null,labelLocation:_NONE_,onChange:ZaDomainXFormView.onFormFieldChanged,visibilityChecks:[],enableDisableChecks:[]}
]}
]}
]};
o.items.push(r)
};
ZaTabView.XFormModifiers.ZaDomainXFormView.push(ZaSmimeConfigXFormView.myDomainXFormModifier);
ZaSmimeConfigXFormView.myGlobalConfXFormModifier=function(l,s){
GlobalConfigXFormView.SMIME_TAB_ATTRS=[ZaGlobalConfig.A_zimbraSMIMELdapURL,ZaGlobalConfig.A_zimbraSMIMELdapBindDn,ZaGlobalConfig.A_zimbraSMIMELdapBindPassword,ZaGlobalConfig.A_zimbraSMIMELdapSearchBase,ZaGlobalConfig.A_zimbraSMIMELdapDiscoverSearchBaseEnabled,ZaGlobalConfig.A_zimbraSMIMELdapAttribute];
GlobalConfigXFormView.SMIME_TAB_RIGHTS=[];
if(!ZaTabView.isTAB_ENABLED(s,GlobalConfigXFormView.SMIME_TAB_ATTRS,GlobalConfigXFormView.SMIME_TAB_RIGHTS)){
return
}
var n,e,o;
for(var t=0;
t<l.items.length;
t++){
if(l.items[t].type==_TAB_BAR_){
e=l.items[t]
}
if(l.items[t].type==_SWITCH_){
o=l.items[t]
}}
if(e&&o){
n=++this.TAB_INDEX;
e.choices.push({
value:n,label:com_zimbra_smime_cert_admin.Domain_Tab_SMIME}
);
if(this.helpMap){
this.helpMap[n]=[location.pathname,ZaUtil.HELP_URL,"managing_global_settings/configuring_s_mime_settings.htm","?locid=",AjxEnv.DEFAULT_LOCALE].join("")
}}
var r={
type:_ZATABCASE_,caseKey:n,colSizes:["100%"],numCols:1,id:"global_smime_tab",paddingStyle:"padding-left:15px;",width:"98%",cellpadding:2,items:[{
type:_ZA_TOP_GROUPER_,label:com_zimbra_smime_cert_admin.Domain_SMIME_Settings,colSizes:["auto"],numCols:1,items:[{
ref:ZaGlobalConfig.A2_zimbraSMIMEConf,type:_REPEAT_,containerCssStyle:"padding-left:30px;",label:null,repeatInstance:"",showAddButton:true,showRemoveButton:true,addButtonLabel:com_zimbra_smime_cert_admin.Domain_Add_SMIME,removeButtonLabel:com_zimbra_smime_cert_admin.Domain_REPEAT_REMOVE,showAddOnNextRow:true,align:_LEFT_,items:[{
ref:".",type:_SMIME_,label:null,labelLocation:_NONE_,visibilityChecks:[],enableDisableChecks:[]}
]}
]}
]};
o.items.push(r)
};
ZaTabView.XFormModifiers.GlobalConfigXFormView.push(ZaSmimeConfigXFormView.myGlobalConfXFormModifier)
}
SMIME_XFormItem=function(){};
XFormItemFactory.createItemType("_SMIME_","smime",SMIME_XFormItem,Composite_XFormItem);
SMIME_XFormItem.prototype.numCols=1;
SMIME_XFormItem.prototype.nowrap=true;
SMIME_XFormItem.A_zimbraSMIMELdapURL="zimbraSMIMELdapURL";
SMIME_XFormItem.A_zimbraSMIMELdapBindDn="zimbraSMIMELdapBindDn";
SMIME_XFormItem.A_zimbraSMIMELdapBindPassword="zimbraSMIMELdapBindPassword";
SMIME_XFormItem.A_zimbraSMIMELdapSearchBase="zimbraSMIMELdapSearchBase";
SMIME_XFormItem.A_zimbraSMIMELdapDiscoverSearchBaseEnabled="zimbraSMIMELdapDiscoverSearchBaseEnabled";
SMIME_XFormItem.A_zimbraSMIMELdapFilter="zimbraSMIMELdapFilter";
SMIME_XFormItem.A_zimbraSMIMELdapAttribute="zimbraSMIMELdapAttribute";
SMIME_XFormItem.prototype.visibilityChecks=[ZaItem.hasReadPermission];
SMIME_XFormItem.prototype.enableDisableChecks=[ZaItem.hasWritePermission];
SMIME_XFormItem.prototype.initializeItems=function(){
Composite_XFormItem.prototype.initializeItems.call(this)
};
SMIME_XFormItem.prototype.items=[{
type:_TEXTFIELD_,ref:".",labelLocation:_LEFT_,forceUpdate:true,label:com_zimbra_smime_cert_admin.Domain_SMIMEConfName,attributeName:"name",required:true,getDisplayValue:function(e){
var t;
if(e&&e.name){
t=e.name
}else{
t=""
}
return t
}
,elementChanged:function(n,t,o){
var e={};
if(t==""||!t){
t={}
}
e.name=n;
if(t[SMIME_XFormItem.A_zimbraSMIMELdapURL]){
e[SMIME_XFormItem.A_zimbraSMIMELdapURL]=t[SMIME_XFormItem.A_zimbraSMIMELdapURL]
}
if(t[SMIME_XFormItem.A_zimbraSMIMELdapBindDn]){
e[SMIME_XFormItem.A_zimbraSMIMELdapBindDn]=t[SMIME_XFormItem.A_zimbraSMIMELdapBindDn]
}
if(t[SMIME_XFormItem.A_zimbraSMIMELdapBindPassword]){
e[SMIME_XFormItem.A_zimbraSMIMELdapBindPassword]=t[SMIME_XFormItem.A_zimbraSMIMELdapBindPassword]
}
if(t[SMIME_XFormItem.A_zimbraSMIMELdapSearchBase]){
e[SMIME_XFormItem.A_zimbraSMIMELdapSearchBase]=t[SMIME_XFormItem.A_zimbraSMIMELdapSearchBase]
}
if(t[SMIME_XFormItem.A_zimbraSMIMELdapFilter]){
e[SMIME_XFormItem.A_zimbraSMIMELdapFilter]=t[SMIME_XFormItem.A_zimbraSMIMELdapFilter]
}
if(t[SMIME_XFormItem.A_zimbraSMIMELdapAttribute]){
e[SMIME_XFormItem.A_zimbraSMIMELdapAttribute]=t[SMIME_XFormItem.A_zimbraSMIMELdapAttribute]
}
this.getForm().itemChanged(this.getParentItem(),e,o)
}}
,{
type:_TEXTFIELD_,width:"300px",forceUpdate:true,ref:".",labelLocation:_LEFT_,label:com_zimbra_smime_cert_admin.Domain_SMIMELdapURL,required:true,attributeName:SMIME_XFormItem.A_zimbraSMIMELdapURL,getDisplayValue:function(e){
var t;
if(e&&e[SMIME_XFormItem.A_zimbraSMIMELdapURL]){
t=e[SMIME_XFormItem.A_zimbraSMIMELdapURL]
}else{
t=""
}
return t
}
,elementChanged:function(n,t,o){
var e={};
if(t==""||!t){
t={}
}
if(t.name){
e.name=t.name
}
if(t[SMIME_XFormItem.A_zimbraSMIMELdapBindDn]){
e[SMIME_XFormItem.A_zimbraSMIMELdapBindDn]=t[SMIME_XFormItem.A_zimbraSMIMELdapBindDn]
}
if(t[SMIME_XFormItem.A_zimbraSMIMELdapBindPassword]){
e[SMIME_XFormItem.A_zimbraSMIMELdapBindPassword]=t[SMIME_XFormItem.A_zimbraSMIMELdapBindPassword]
}
if(t[SMIME_XFormItem.A_zimbraSMIMELdapSearchBase]){
e[SMIME_XFormItem.A_zimbraSMIMELdapSearchBase]=t[SMIME_XFormItem.A_zimbraSMIMELdapSearchBase]
}
if(t[SMIME_XFormItem.A_zimbraSMIMELdapDiscoverSearchBaseEnabled]){
e[SMIME_XFormItem.A_zimbraSMIMELdapDiscoverSearchBaseEnabled]=t[SMIME_XFormItem.A_zimbraSMIMELdapDiscoverSearchBaseEnabled]
}
if(t[SMIME_XFormItem.A_zimbraSMIMELdapFilter]){
e[SMIME_XFormItem.A_zimbraSMIMELdapFilter]=t[SMIME_XFormItem.A_zimbraSMIMELdapFilter]
}
if(t[SMIME_XFormItem.A_zimbraSMIMELdapAttribute]){
e[SMIME_XFormItem.A_zimbraSMIMELdapAttribute]=t[SMIME_XFormItem.A_zimbraSMIMELdapAttribute]
}
e[SMIME_XFormItem.A_zimbraSMIMELdapURL]=n;
this.getForm().itemChanged(this.getParentItem(),e,o)
}}
,{
type:_TEXTFIELD_,forceUpdate:true,ref:".",labelLocation:_LEFT_,label:com_zimbra_smime_cert_admin.Domain_SMIMELdapBindDn,attributeName:SMIME_XFormItem.A_zimbraSMIMELdapBindDn,getDisplayValue:function(e){
var t;
if(e&&e[SMIME_XFormItem.A_zimbraSMIMELdapBindDn]){
t=e[SMIME_XFormItem.A_zimbraSMIMELdapBindDn]
}else{
t=""
}
return t
}
,elementChanged:function(e,o,n){
var t={};
if(o==""||!o){
o={}
}
if(o.name){
t.name=o.name
}
if(o[SMIME_XFormItem.A_zimbraSMIMELdapURL]){
t[SMIME_XFormItem.A_zimbraSMIMELdapURL]=o[SMIME_XFormItem.A_zimbraSMIMELdapURL]
}
if(o[SMIME_XFormItem.A_zimbraSMIMELdapBindPassword]){
t[SMIME_XFormItem.A_zimbraSMIMELdapBindPassword]=o[SMIME_XFormItem.A_zimbraSMIMELdapBindPassword]
}
if(o[SMIME_XFormItem.A_zimbraSMIMELdapSearchBase]){
t[SMIME_XFormItem.A_zimbraSMIMELdapSearchBase]=o[SMIME_XFormItem.A_zimbraSMIMELdapSearchBase]
}
if(o[SMIME_XFormItem.A_zimbraSMIMELdapDiscoverSearchBaseEnabled]){
t[SMIME_XFormItem.A_zimbraSMIMELdapDiscoverSearchBaseEnabled]=o[SMIME_XFormItem.A_zimbraSMIMELdapDiscoverSearchBaseEnabled]
}
if(o[SMIME_XFormItem.A_zimbraSMIMELdapFilter]){
t[SMIME_XFormItem.A_zimbraSMIMELdapFilter]=o[SMIME_XFormItem.A_zimbraSMIMELdapFilter]
}
if(o[SMIME_XFormItem.A_zimbraSMIMELdapAttribute]){
t[SMIME_XFormItem.A_zimbraSMIMELdapAttribute]=o[SMIME_XFormItem.A_zimbraSMIMELdapAttribute]
}
t[SMIME_XFormItem.A_zimbraSMIMELdapBindDn]=e;
this.getForm().itemChanged(this.getParentItem(),t,n)
}}
,{
type:_PASSWORD_,forceUpdate:true,ref:".",labelLocation:_LEFT_,label:com_zimbra_smime_cert_admin.Domain_SMIMELdapBindPassword,attributeName:SMIME_XFormItem.A_zimbraSMIMELdapBindPassword,getDisplayValue:function(e){
var t;
if(e&&e[SMIME_XFormItem.A_zimbraSMIMELdapBindPassword]){
t=e[SMIME_XFormItem.A_zimbraSMIMELdapBindPassword]
}else{
t=""
}
return t
}
,elementChanged:function(n,t,o){
var e={};
if(t==""||!t){
t={}
}
if(t.name){
e.name=t.name
}
if(t[SMIME_XFormItem.A_zimbraSMIMELdapURL]){
e[SMIME_XFormItem.A_zimbraSMIMELdapURL]=t[SMIME_XFormItem.A_zimbraSMIMELdapURL]
}
if(t[SMIME_XFormItem.A_zimbraSMIMELdapBindDn]){
e[SMIME_XFormItem.A_zimbraSMIMELdapBindDn]=t[SMIME_XFormItem.A_zimbraSMIMELdapBindDn]
}
if(t[SMIME_XFormItem.A_zimbraSMIMELdapSearchBase]){
e[SMIME_XFormItem.A_zimbraSMIMELdapSearchBase]=t[SMIME_XFormItem.A_zimbraSMIMELdapSearchBase]
}
if(t[SMIME_XFormItem.A_zimbraSMIMELdapDiscoverSearchBaseEnabled]){
e[SMIME_XFormItem.A_zimbraSMIMELdapDiscoverSearchBaseEnabled]=t[SMIME_XFormItem.A_zimbraSMIMELdapDiscoverSearchBaseEnabled]
}
if(t[SMIME_XFormItem.A_zimbraSMIMELdapFilter]){
e[SMIME_XFormItem.A_zimbraSMIMELdapFilter]=t[SMIME_XFormItem.A_zimbraSMIMELdapFilter]
}
if(t[SMIME_XFormItem.A_zimbraSMIMELdapAttribute]){
e[SMIME_XFormItem.A_zimbraSMIMELdapAttribute]=t[SMIME_XFormItem.A_zimbraSMIMELdapAttribute]
}
e[SMIME_XFormItem.A_zimbraSMIMELdapBindPassword]=n;
this.getForm().itemChanged(this.getParentItem(),e,o)
}}
,{
type:_TEXTFIELD_,forceUpdate:true,ref:".",labelLocation:_LEFT_,label:com_zimbra_smime_cert_admin.Domain_SMIMELdapSearchBase,attributeName:SMIME_XFormItem.A_zimbraSMIMELdapSearchBase,getDisplayValue:function(e){
var t;
if(e&&e[SMIME_XFormItem.A_zimbraSMIMELdapSearchBase]){
t=e[SMIME_XFormItem.A_zimbraSMIMELdapSearchBase]
}else{
t=""
}
return t
}
,elementChanged:function(o,t,n){
var e={};
if(t==""||!t){
t={}
}
if(t.name){
e.name=t.name
}
if(t[SMIME_XFormItem.A_zimbraSMIMELdapURL]){
e[SMIME_XFormItem.A_zimbraSMIMELdapURL]=t[SMIME_XFormItem.A_zimbraSMIMELdapURL]
}
if(t[SMIME_XFormItem.A_zimbraSMIMELdapBindDn]){
e[SMIME_XFormItem.A_zimbraSMIMELdapBindDn]=t[SMIME_XFormItem.A_zimbraSMIMELdapBindDn]
}
if(t[SMIME_XFormItem.A_zimbraSMIMELdapBindPassword]){
e[SMIME_XFormItem.A_zimbraSMIMELdapBindPassword]=t[SMIME_XFormItem.A_zimbraSMIMELdapBindPassword]
}
if(t[SMIME_XFormItem.A_zimbraSMIMELdapDiscoverSearchBaseEnabled]){
e[SMIME_XFormItem.A_zimbraSMIMELdapDiscoverSearchBaseEnabled]=t[SMIME_XFormItem.A_zimbraSMIMELdapDiscoverSearchBaseEnabled]
}
if(t[SMIME_XFormItem.A_zimbraSMIMELdapFilter]){
e[SMIME_XFormItem.A_zimbraSMIMELdapFilter]=t[SMIME_XFormItem.A_zimbraSMIMELdapFilter]
}
if(t[SMIME_XFormItem.A_zimbraSMIMELdapAttribute]){
e[SMIME_XFormItem.A_zimbraSMIMELdapAttribute]=t[SMIME_XFormItem.A_zimbraSMIMELdapAttribute]
}
e[SMIME_XFormItem.A_zimbraSMIMELdapSearchBase]=o;
this.getForm().itemChanged(this.getParentItem(),e,n)
}}
,{
type:_CHECKBOX_,subLabel:"",align:_RIGHT_,forceUpdate:true,ref:".",labelLocation:_RIGHT_,label:com_zimbra_smime_cert_admin.Domain_SMIMELdapDiscoverSearchBaseEnabled,attributeName:SMIME_XFormItem.A_zimbraSMIMELdapDiscoverSearchBaseEnabled,trueValue:"TRUE",falseValue:"FALSE",getDisplayValue:function(e){
var t;
if(e&&e[SMIME_XFormItem.A_zimbraSMIMELdapDiscoverSearchBaseEnabled]){
t=e[SMIME_XFormItem.A_zimbraSMIMELdapDiscoverSearchBaseEnabled]
}else{
t="FALSE"
}
if(t=="TRUE"){
this.__parentItem.items[4].setElementEnabled(false)
}else{
this.__parentItem.items[4].setElementEnabled(true)
}
return t
}
,elementChanged:function(n,t,o){
var e={};
if(t==""||!t){
t={}
}
if(t.name){
e.name=t.name
}
if(t[SMIME_XFormItem.A_zimbraSMIMELdapURL]){
e[SMIME_XFormItem.A_zimbraSMIMELdapURL]=t[SMIME_XFormItem.A_zimbraSMIMELdapURL]
}
if(t[SMIME_XFormItem.A_zimbraSMIMELdapBindDn]){
e[SMIME_XFormItem.A_zimbraSMIMELdapBindDn]=t[SMIME_XFormItem.A_zimbraSMIMELdapBindDn]
}
if(t[SMIME_XFormItem.A_zimbraSMIMELdapBindPassword]){
e[SMIME_XFormItem.A_zimbraSMIMELdapBindPassword]=t[SMIME_XFormItem.A_zimbraSMIMELdapBindPassword]
}
if(t[SMIME_XFormItem.A_zimbraSMIMELdapSearchBase]&&n=="FALSE"){
e[SMIME_XFormItem.A_zimbraSMIMELdapSearchBase]=t[SMIME_XFormItem.A_zimbraSMIMELdapSearchBase]
}
if(t[SMIME_XFormItem.A_zimbraSMIMELdapFilter]){
e[SMIME_XFormItem.A_zimbraSMIMELdapFilter]=t[SMIME_XFormItem.A_zimbraSMIMELdapFilter]
}
if(t[SMIME_XFormItem.A_zimbraSMIMELdapAttribute]){
e[SMIME_XFormItem.A_zimbraSMIMELdapAttribute]=t[SMIME_XFormItem.A_zimbraSMIMELdapAttribute]
}
e[SMIME_XFormItem.A_zimbraSMIMELdapDiscoverSearchBaseEnabled]=n;
if(n=="TRUE"){
this.__parentItem.items[4].setElementEnabled(false)
}else{
this.__parentItem.items[4].setElementEnabled(true)
}
this.getForm().itemChanged(this.getParentItem(),e,o)
}}
,{
type:_TEXTAREA_,width:"300px",height:"40px",forceUpdate:true,ref:".",labelLocation:_LEFT_,label:com_zimbra_smime_cert_admin.Domain_SMIMELdapFilter,attributeName:SMIME_XFormItem.A_zimbraSMIMELdapFilter,getDisplayValue:function(e){
var t;
if(e&&e[SMIME_XFormItem.A_zimbraSMIMELdapFilter]){
t=e[SMIME_XFormItem.A_zimbraSMIMELdapFilter]
}else{
t=""
}
return t
}
,elementChanged:function(n,t,o){
var e={};
if(t==""||!t){
t={}
}
if(t.name){
e.name=t.name
}
if(t[SMIME_XFormItem.A_zimbraSMIMELdapURL]){
e[SMIME_XFormItem.A_zimbraSMIMELdapURL]=t[SMIME_XFormItem.A_zimbraSMIMELdapURL]
}
if(t[SMIME_XFormItem.A_zimbraSMIMELdapBindDn]){
e[SMIME_XFormItem.A_zimbraSMIMELdapBindDn]=t[SMIME_XFormItem.A_zimbraSMIMELdapBindDn]
}
if(t[SMIME_XFormItem.A_zimbraSMIMELdapBindPassword]){
e[SMIME_XFormItem.A_zimbraSMIMELdapBindPassword]=t[SMIME_XFormItem.A_zimbraSMIMELdapBindPassword]
}
if(t[SMIME_XFormItem.A_zimbraSMIMELdapSearchBase]){
e[SMIME_XFormItem.A_zimbraSMIMELdapSearchBase]=t[SMIME_XFormItem.A_zimbraSMIMELdapSearchBase]
}
if(t[SMIME_XFormItem.A_zimbraSMIMELdapDiscoverSearchBaseEnabled]){
e[SMIME_XFormItem.A_zimbraSMIMELdapDiscoverSearchBaseEnabled]=t[SMIME_XFormItem.A_zimbraSMIMELdapDiscoverSearchBaseEnabled]
}
if(t[SMIME_XFormItem.A_zimbraSMIMELdapAttribute]){
e[SMIME_XFormItem.A_zimbraSMIMELdapAttribute]=t[SMIME_XFormItem.A_zimbraSMIMELdapAttribute]
}
e[SMIME_XFormItem.A_zimbraSMIMELdapFilter]=n;
this.getForm().itemChanged(this.getParentItem(),e,o)
}}
,{
type:_TEXTAREA_,width:"300px",height:"40px",forceUpdate:true,ref:".",labelLocation:_LEFT_,label:com_zimbra_smime_cert_admin.Domain_SMIMELdapAttribute,attributeName:SMIME_XFormItem.A_zimbraSMIMELdapAttribute,getDisplayValue:function(e){
var t;
if(e&&e[SMIME_XFormItem.A_zimbraSMIMELdapAttribute]){
t=e[SMIME_XFormItem.A_zimbraSMIMELdapAttribute]
}else{
t=""
}
return t
}
,elementChanged:function(e,o,n){
var t={};
if(o==""||!o){
o={}
}
if(o.name){
t.name=o.name
}
if(o[SMIME_XFormItem.A_zimbraSMIMELdapURL]){
t[SMIME_XFormItem.A_zimbraSMIMELdapURL]=o[SMIME_XFormItem.A_zimbraSMIMELdapURL]
}
if(o[SMIME_XFormItem.A_zimbraSMIMELdapBindDn]){
t[SMIME_XFormItem.A_zimbraSMIMELdapBindDn]=o[SMIME_XFormItem.A_zimbraSMIMELdapBindDn]
}
if(o[SMIME_XFormItem.A_zimbraSMIMELdapBindPassword]){
t[SMIME_XFormItem.A_zimbraSMIMELdapBindPassword]=o[SMIME_XFormItem.A_zimbraSMIMELdapBindPassword]
}
if(o[SMIME_XFormItem.A_zimbraSMIMELdapSearchBase]){
t[SMIME_XFormItem.A_zimbraSMIMELdapSearchBase]=o[SMIME_XFormItem.A_zimbraSMIMELdapSearchBase]
}
if(o[SMIME_XFormItem.A_zimbraSMIMELdapDiscoverSearchBaseEnabled]){
t[SMIME_XFormItem.A_zimbraSMIMELdapDiscoverSearchBaseEnabled]=o[SMIME_XFormItem.A_zimbraSMIMELdapDiscoverSearchBaseEnabled]
}
if(o[SMIME_XFormItem.A_zimbraSMIMELdapFilter]){
t[SMIME_XFormItem.A_zimbraSMIMELdapFilter]=o[SMIME_XFormItem.A_zimbraSMIMELdapFilter]
}
t[SMIME_XFormItem.A_zimbraSMIMELdapAttribute]=e;
this.getForm().itemChanged(this.getParentItem(),t,n)
}}
,{
type:_CELLSPACER_,height:"40px"}
];
function ZaBackupLabel(){
ZaItem.call(this,"ZaBackupLabel");
this.label="";
this[ZaBackup.A_pageNumber]=1;
this.live=0;
this[ZaBackup.A_accountListOffset]=0;
this[ZaBackup.A_accountListCount]=0;
this[ZaBackup.A_accountListStatus]=ZaBackup.ACC_LIST_STATUS_ALL;
this[ZaModel.currentTab]=1;
this[ZaBackupLabel.A_accounts]=[];
this[ZaBackupLabel.A_accounts]._version=1;
this[ZaBackupLabel.A_failedAccounts]=[];
this[ZaBackupLabel.A_failedAccounts]._version=1
}
ZaItem.loadMethods.ZaBackupLabel=new Array();
ZaItem.initMethods.ZaBackupLabel=new Array();
ZaBackupLabel.prototype=new ZaItem;
ZaBackupLabel.prototype.constructor=ZaBackupLabel;
ZaBackupLabel.A_type="type";
ZaBackupLabel.A_label="label";
ZaBackupLabel.A_live="live";
ZaBackupLabel.A_aborted="aborted";
ZaBackupLabel.A_status="status";
ZaBackupLabel.A_start="start";
ZaBackupLabel.A_total="total";
ZaBackupLabel.A_end="end";
ZaBackupLabel.A_accounts="accounts";
ZaBackupLabel.A_failedAccounts="failedAccounts";
ZaBackupLabel.A_account="account";
ZaBackupLabel.A_error="error";
ZaBackupLabel.A_moreAccounts="more";
ZaBackupLabel.A_content="_content";
ZaBackupLabel.A_completionCount="completionCount";
ZaBackupLabel.A_errorCount="errorCount";
ZaBackupLabel.A_completedAccounts="completedAccounts";
ZaBackupLabel.A_currAccounts="currentAccounts";
ZaBackupLabel.A_errorMessage="errorMessage";
ZaBackupLabel.TYPE_INCREMENTAL="incremental";
ZaBackupLabel.TYPE_FULL="full";
ZaBackupLabel.STATUS_NOTSTARTED="NOTSTARTED";
ZaBackupLabel.STATUS_INPROGRESS="INPROGRESS";
ZaBackupLabel.STATUS_COMPLETED="COMPLETED";
ZaBackupLabel.STATUS_ERROR="ERROR";
ZaBackupLabel.prototype.toString=function(){
return[this[ZaBackupLabel.A_label],this[ZaBackupLabel.A_start],this[ZaBackupLabel.A_end],this[ZaBackupLabel.A_live]].join(",")
};
ZaBackupLabel.prototype.initFromJS=function(o){
if(o instanceof Array){
o=o[0]
}
this[ZaBackupLabel.A_error]=[];
this[ZaBackupLabel.A_type]=o[ZaBackupLabel.A_type];
this[ZaBackupLabel.A_label]=o[ZaBackupLabel.A_label];
this[ZaBackupLabel.A_live]=o[ZaBackupLabel.A_live];
this[ZaBackupLabel.A_aborted]=o[ZaBackupLabel.A_aborted];
this[ZaBackupLabel.A_start]=o[ZaBackupLabel.A_start];
this[ZaBackupLabel.A_end]=o[ZaBackupLabel.A_end];
if(o[ZaBackupLabel.A_error]){
this[ZaBackupLabel.A_error]=o[ZaBackupLabel.A_error]
}
if(o[ZaBackupLabel.A_accounts]&&o[ZaBackupLabel.A_accounts][0]){
this[ZaBackup.A_more]=o[ZaBackupLabel.A_accounts][0][ZaBackup.A_more];
this[ZaBackupLabel.A_total]=o[ZaBackupLabel.A_accounts][0][ZaBackupLabel.A_total];
this[ZaBackupLabel.A_completionCount]=o[ZaBackupLabel.A_accounts][0][ZaBackupLabel.A_completionCount];
this[ZaBackupLabel.A_errorCount]=o[ZaBackupLabel.A_accounts][0][ZaBackupLabel.A_errorCount];
this[ZaBackupLabel.A_moreAccounts]=o[ZaBackupLabel.A_accounts][0][ZaBackupLabel.A_moreAccounts];
if(o[ZaBackupLabel.A_accounts][0][ZaBackupLabel.A_account]&&o[ZaBackupLabel.A_accounts][0][ZaBackupLabel.A_account] instanceof Array){
var t=o[ZaBackupLabel.A_accounts][0][ZaBackupLabel.A_account].length;
for(var e=0;
e<t;
e++){
this[ZaBackupLabel.A_accounts].push(o[ZaBackupLabel.A_accounts][0][ZaBackupLabel.A_account][e])
}}}
if(o[ZaBackupLabel.A_currAccounts]&&o[ZaBackupLabel.A_currAccounts][0]){
if(o[ZaBackupLabel.A_currAccounts][0][ZaBackupLabel.A_account]&&o[ZaBackupLabel.A_currAccounts][0][ZaBackupLabel.A_account] instanceof Array){
this[ZaBackupLabel.A_currAccounts]=o[ZaBackupLabel.A_currAccounts][0][ZaBackupLabel.A_account]
}}
if(o[ZaBackupLabel.A_currAccounts]&&typeof(o[ZaBackupLabel.A_currAccounts])=="string"){
if(o[ZaBackupLabel.A_currAccounts].indexOf(",")>-1){
this[ZaBackupLabel.A_currAccounts]=o[ZaBackupLabel.A_currAccounts].split(",")
}else{
this[ZaBackupLabel.A_currAccounts]=[o[ZaBackupLabel.A_currAccounts]]
}}
this[ZaBackupLabel.A_status]=((this[ZaBackupLabel.A_live]=="0"||this[ZaBackupLabel.A_live]==false)?(((o[ZaBackupLabel.A_error]&&o[ZaBackupLabel.A_error].length>0)||this[ZaBackupLabel.A_errorCount]>0)?com_zimbra_backuprestore.BNR_CompletedErrors:(o[ZaBackupLabel.A_aborted]?com_zimbra_backuprestore.BNR_Aborted:com_zimbra_backuprestore.BNR_Completed)):(((o[ZaBackupLabel.A_error]&&o[ZaBackupLabel.A_error].length>0)||this[ZaBackupLabel.A_errorCount]>0)?com_zimbra_backuprestore.BNR_RunningErrors:com_zimbra_backuprestore.BNR_Status_Running))
};
ZaBackupLabel.loadMethod=function(n,r){
var o=AjxSoapDoc.create("BackupQueryRequest","urn:zimbraAdmin",null);
var t=o.set("query","");
t.setAttribute("target",AjxStringUtil.trim(this[ZaBackup.A_target],true));
t.setAttribute("label",this[ZaBackupLabel.A_label]);
t.setAttribute(ZaBackup.A_accountListStatus,ZaBackup.ACC_LIST_STATUS_ALL);
t.setAttribute(ZaBackup.A_accountListCount,ZaSettings.RESULTSPERPAGE);
var l=new ZmCsfeCommand();
var s=new Object();
s.soapDoc=o;
s.noAuthToken=true;
s.asyncMode=false;
var e=l.invoke(s).Body.BackupQueryResponse.backup;
this.initFromJS(e)
};
ZaItem.loadMethods.ZaBackupLabel.push(ZaBackupLabel.loadMethod);
ZaBackupLabel.prototype.getToolTip=function(){
if(!this._toolTip){
var t=new Array(20);
var e=0;
t[e++]="<table cellpadding='0' cellspacing='0' border='0'>";
t[e++]="<tr valign='center'><td colspan='2' align='left'>";
t[e++]="<div style='border-bottom: 1px solid black; white-space:nowrap; overflow:hidden;width:350' >";
t[e++]="<table cellpadding='0' cellspacing='0' border='0' style='width:100%;'>";
t[e++]="<tr valign='center'><td><b>";
t[e++]=this[ZaBackupLabel.A_label];
t[e++]="</b></td><td align='right'>";
t[e++]=AjxImg.getImageHtml("Backup");
t[e++]="</td>";
t[e++]="</table></div></td></tr>";
if(this[ZaBackupLabel.A_total]){
t[e++]="<tr><td colspan='2' align='center'>";
t[e++]=this[ZaBackupLabel.A_total];
t[e++]=" ";
t[e++]=com_zimbra_backuprestore.BNR_Accounts;
if(this[ZaBackupLabel.A_completionCount]>0){
t[i++]="( ";
t[i++]=com_zimbra_backuprestore.BNR_Completed;
t[i++]=": ";
t[i++]=this[ZaBackupLabel.A_completionCount];
t[i++]=" )"
}
t[e++]="</td></tr>"
}
t[e++]="</table>";
this._toolTip=t.join("")
}
return this._toolTip
};
ZaBackupLabel.myXModel={
items:[{
id:ZaBackupLabel.A_accounts,type:_LIST_,listItem:{
type:_STRING_}}
]};
function ZaBackup(){
ZaItem.call(this,"ZaBackup");
this[ZaBackup.A_label]="";
this.server="";
this.accounts=null;
this.live=0;
this[ZaServerBackup.A_activateOperation]=0;
this[ZaModel.currentStep]=1;
this[ZaBackup.A_pageNumber]=1;
this[ZaBackup.A_target]=ZaHotBackup.DEFAULT_BACKUP_TARGET;
this[ZaBackup.A_accountListStatus]=ZaBackup.ACC_LIST_STATUS_NONE;
this[ZaBackup.A_backupListOffset]=0;
this[ZaBackup.A_backupListCount]=ZaSettings.RESULTSPERPAGE;
this[ZaBackup.A_accountListOffset]=0;
this[ZaBackup.A_accountListCount]=0;
this[ZaBackup.A_create]=false
}
ZaBackup.prototype=new ZaItem;
ZaBackup.prototype.constructor=ZaBackup;
ZaBackup.A_serverId="serverId";
ZaBackup.A_serverName="serverName";
ZaBackup.A_target="target";
ZaBackup.A_label="label";
ZaBackup.A_fromDate="list";
ZaBackup.A_backupLabelList="backupLabelList";
ZaBackup.A_selectedLabels="selectedlabels";
ZaBackup.A_method="method";
ZaBackup.A_accountPool="accountPool";
ZaBackup.A_Accounts="accounts";
ZaBackup.A_more="more";
ZaBackup.A_from="from";
ZaBackup.A_to="to";
ZaBackup.A_type="type";
ZaBackup.A_incrLabel="incr-label";
ZaBackup.A_backupListOffset="backupListOffset";
ZaBackup.A_backupListCount="backupListCount";
ZaBackup.A_accountListStatus="accountListStatus";
ZaBackup.A_accountListOffset="accountListOffset";
ZaBackup.A_accountListCount="accountListCount";
ZaBackup.A_failedAccountListOffset="failedAccountListOffset";
ZaBackup.A_failedAccountListCount="failedccountListCount";
ZaBackup.A_moreFailedAcc="moreFailedAcc";
ZaBackup.A_directory="directory";
ZaBackup.A_create="create";
ZaBackup.A_writable="writable";
ZaBackup.A_readable="readable";
ZaBackup.A_exists="exists";
ZaBackup.A_pageNumber="pageNumber";
ZaBackup.A_failedAccPageNumber="failedAccPageNumber";
ZaBackup.METHOD_INCREMENTAL="incremental";
ZaBackup.METHOD_FULL="full";
ZaBackup.METHOD_ABORT="abort";
ZaBackup.ACC_LIST_STATUS_NONE="NONE";
ZaBackup.ACC_LIST_STATUS_ALL="ALL";
ZaBackup.ACC_LIST_STATUS_ERROR="ERROR";
ZaBackup.queryBackups=function(o,s){
var t=AjxSoapDoc.create("BackupQueryRequest","urn:zimbraAdmin",null);
var e=t.set("query","");
if(o[ZaBackup.A_target]){
e.setAttribute(ZaBackup.A_target,AjxStringUtil.trim(o[ZaBackup.A_target],true))
}
if(o[ZaBackup.A_label]){
e.setAttribute(ZaBackup.A_label,o[ZaBackup.A_label])
}
if(o[ZaBackup.A_backupListOffset]!=null){
e.setAttribute(ZaBackup.A_backupListOffset,o[ZaBackup.A_backupListOffset])
}
if(o[ZaBackup.A_backupListCount]!=null){
e.setAttribute(ZaBackup.A_backupListCount,o[ZaBackup.A_backupListCount])
}
if(o[ZaBackup.A_to]){
e.setAttribute(ZaBackup.A_to,o[ZaBackup.A_to])
}
if(o[ZaBackup.A_from]){
e.setAttribute(ZaBackup.A_from,o[ZaBackup.A_from])
}
if(o[ZaBackup.A_accountListOffset]!=null){
e.setAttribute(ZaBackup.A_accountListOffset,o[ZaBackup.A_accountListOffset])
}
if(o[ZaBackup.A_accountListCount]!=null){
e.setAttribute(ZaBackup.A_accountListCount,o[ZaBackup.A_accountListCount])
}
if(o[ZaBackup.A_accountListStatus]!=null){
e.setAttribute(ZaBackup.A_accountListStatus,o[ZaBackup.A_accountListStatus])
}
if(o[ZaBackup.A_type]!=null){
e.setAttribute(ZaBackup.A_type,o[ZaBackup.A_type])
}
this.asynCommand=new ZmCsfeCommand();
var n=new Object();
n.soapDoc=t;
n.noAuthToken=true;
if(s){
n.asyncMode=true;
n.callback=s;
n.targetServer=o[ZaBackup.A_serverId]
}
this.asynCommand.invoke(n)
};
ZaBackup.queryFailedAccounts=function(o,s){
var t=AjxSoapDoc.create("BackupQueryRequest","urn:zimbraAdmin",null);
var e=t.set("query","");
if(o[ZaBackup.A_target]){
e.setAttribute(ZaBackup.A_target,AjxStringUtil.trim(o[ZaBackup.A_target],true))
}
if(o[ZaBackup.A_label]){
e.setAttribute(ZaBackup.A_label,o[ZaBackup.A_label])
}
if(o[ZaBackup.A_failedAccountListOffset]!=null){
e.setAttribute(ZaBackup.A_accountListOffset,o[ZaBackup.A_failedAccountListOffset])
}
if(o[ZaBackup.A_failedAccountListCount]!=null){
e.setAttribute(ZaBackup.A_accountListCount,o[ZaBackup.A_failedAccountListCount])
}
e.setAttribute(ZaBackup.A_accountListStatus,ZaBackup.ACC_LIST_STATUS_ERROR);
this.asynCommand=new ZmCsfeCommand();
var n=new Object();
n.soapDoc=t;
n.noAuthToken=true;
if(s){
n.asyncMode=true;
n.callback=s;
n.targetServer=o[ZaBackup.A_serverId]
}
this.asynCommand.invoke(n)
};
ZaBackup.runBackupQuery=function(c,e,u,o,s,f){
var m=AjxSoapDoc.create("BackupRequest","urn:zimbraAdmin",null);
var t=m.set("backup","");
if(u&&e!=ZaBackup.METHOD_INCREMENTAL){
t.setAttribute("target",AjxStringUtil.trim(u,true))
}
if(e){
t.setAttribute("method",e);
if(e==ZaBackup.METHOD_ABORT){
if(s){
t.setAttribute("label",AjxStringUtil.trim(s,true))
}else{
throw (new AjxException(com_zimbra_backuprestore.ERROR_BACKUP_TITLE_3,AjxException.INVALID_PARAM,"ZaBackup.runBackupQuery",com_zimbra_backuprestore.ERROR_BACKUP_3))
}}}
if(!o&&e!=ZaBackup.METHOD_ABORT){
throw (new AjxException(com_zimbra_backuprestore.ERROR_BACKUP_TITLE_2,AjxException.INVALID_PARAM,"ZaBackup.runBackupQuery",com_zimbra_backuprestore.ERROR_BACKUP_2))
}else{
if(e!=ZaBackup.METHOD_ABORT){
var n=o.length;
for(var l=0;
l<n;
l++){
var d=m.set("account","",t);
d.setAttribute("name",o[l])
}}}
this.asynCommand=new ZmCsfeCommand();
var r=new Object();
r.soapDoc=m;
r.noAuthToken=true;
if(f){
r.asyncMode=true;
r.callback=f;
r.targetServer=c
}
this.asynCommand.invoke(r)
};
ZaBackup.queryAccountBackup=function(s,d){
var c=AjxSoapDoc.create("BackupAccountQueryRequest","urn:zimbraAdmin",null);
var n=c.set("query","");
if(s[ZaBackup.A_target]){
n.setAttribute(ZaBackup.A_target,AjxStringUtil.trim(s[ZaBackup.A_target],true))
}
if(s[ZaBackup.A_type]){
n.setAttribute(ZaBackup.A_type,s[ZaBackup.A_type])
}
if(s[ZaBackup.A_to]){
n.setAttribute(ZaBackup.A_to,s[ZaBackup.A_to])
}
if(s[ZaBackup.A_from]){
n.setAttribute(ZaBackup.A_from,s[ZaBackup.A_from])
}
if(s[ZaBackup.A_backupListOffset]){
n.setAttribute(ZaBackup.A_backupListOffset,s[ZaBackup.A_backupListOffset])
}
if(s[ZaBackup.A_backupListCount]){
n.setAttribute(ZaBackup.A_backupListCount,s[ZaBackup.A_backupListCount])
}
if(!s[ZaRestore.A_accountNames]){
throw (new AjxException("accounts parameter cannot be null",AjxException.INVALID_PARAM,"ZaBackup.queryAccountBackup",com_zimbra_backuprestore.ERROR_BACKUP_1))
}
var e=s[ZaRestore.A_accountNames];
var t=e.length;
for(var r=0;
r<t;
r++){
var l=c.set("account","",n);
l.setAttribute("name",e[r])
}
this.asynCommand=new ZmCsfeCommand();
var o=new Object();
o.soapDoc=c;
o.noAuthToken=true;
if(d){
o.asyncMode=true;
o.callback=d;
o.targetServer=s[ZaBackup.A_serverId]
}
this.asynCommand.invoke(o)
};
ZaBackup.queryTargetPath=function(o,r){
var t=AjxSoapDoc.create("CheckDirectoryRequest","urn:zimbraAdmin",null);
var e=t.set(ZaBackup.A_directory,"");
if(o[ZaBackup.A_target]){
e.setAttribute("path",AjxStringUtil.trim(o[ZaBackup.A_target],true))
}
if(o[ZaBackup.A_create]){
e.setAttribute("create","1")
}else{
e.setAttribute("create","0")
}
var s=new ZmCsfeCommand();
var n=new Object();
n.soapDoc=t;
n.noAuthToken=true;
if(r){
n.asyncMode=true;
n.callback=r;
n.targetServer=o[ZaBackup.A_serverId];
s.invoke(n)
}else{
return s.invoke(n)
}};
function ZaRestore(){
ZaItem.call(this,"ZaRestore");
this[ZaModel.currentStep]=1;
this.restoreRequest=new Object();
this.accounts=new Array();
this.accounts._version=1;
this.restoreRequest[ZaRestore.A_accountName]="";
this.restoreRequest[ZaRestore.A_accountNames]=new Array();
this.restoreRequest[ZaRestore.A_restoreMethod]=ZaRestore.RA;
this.restoreRequest[ZaRestore.A_includeIncrementals]="FALSE";
this.restoreRequest[ZaRestore.A_prefix]="restored_";
this.restoreRequest[ZaRestore.A_toServer]="";
this.restoreRequest[ZaRestore.A_target]=ZaHotBackup.DEFAULT_BACKUP_TARGET;
this.restoreRequest[ZaRestore.A_restoreAllAcc]=true;
this.restoreRequest[ZaRestore.A_restoreTo]=ZaRestore.TO_LATEST;
this.restoreRequest[ZaRestore.A_skipDeletedAccounts]=false;
this.restoreRequest[ZaRestore.A_ignoreRedoErrors]=false;
this.restoreRequest[ZaRestore.A_skipDeleteOps]=false;
this.restoreRequest[ZaRestore.A_restoreToTime]=new Date()
}
ZaRestore.prototype=new ZaItem;
ZaRestore.prototype.constructor=ZaRestore;
ZaRestore.MB="mb";
ZaRestore.RA="ra";
ZaRestore.CA="ca";
ZaRestore.TO_LABEL="toLabel";
ZaRestore.TO_PIT="toPIT";
ZaRestore.TO_LATEST="toLatest";
ZaRestore.RESTORE_CREATE_CHOICES=[ZaRestore.RA,ZaRestore.CA];
ZaRestore.A_searchStatusMsg="searchStatusMsg";
ZaRestore.A_accountWarning="accountWarning";
ZaRestore.A_accountId="accountId";
ZaRestore.A_currentAccountId="currentAccountId";
ZaRestore.A_accountNames="accountNames";
ZaRestore.A_accountName="accountName";
ZaRestore.A_accounts="accounts";
ZaRestore.A_label="label";
ZaRestore.A_prefix="prefix";
ZaRestore.A_target="target";
ZaRestore.A_restoreMethod="method";
ZaRestore.A_restoreTo="restoreTo";
ZaRestore.A_toServer="toServer";
ZaRestore.A_includeIncrementals="includeIncrementals";
ZaRestore.A_status="status";
ZaRestore.A_status_msg="status_msg";
ZaRestore.A_status_PENDING="pending";
ZaRestore.A_status_RESTORING="restoring";
ZaRestore.A_status_OK="ok";
ZaRestore.A_status_INTERRUPTED="interrupted";
ZaRestore.A_status_ABORTING="aborting";
ZaRestore.A_status_ERROR="err";
ZaRestore.A_restoreAllAcc="restoreAllAcc";
ZaRestore.A_skipDeletedAccounts="skipDeletedAccounts";
ZaRestore.A_restoreToTime="restoreToTime";
ZaRestore.A_stop="stop";
ZaRestore.A_currentAccount="currentAccount";
ZaRestore.A_foundAnyBackups="foundAnyBackups";
ZaRestore.A_ignoreRedoErrors="ignoreRedoErrors";
ZaRestore.A_skipDeleteOps="skipDeleteOps";
ZaRestore.A_foundAnyFullBackups="foundAnyFullBackups";
BNRAccountSummary_XModelItem=function(){};
XModelItemFactory.createItemType("_BNR_ACCOUNTSUMMARY_","bnr_accountsummary",BNRAccountSummary_XModelItem);
BNRAccountSummary_XModelItem.prototype.items=[{
id:ZaRestore.A_accountName,type:_STRING_}
,{
id:ZaRestore.A_accountId,type:_STRING_}
,{
id:ZaRestore.A_currentAccountId,type:_STRING_}
,{
id:ZaRestore.A_prefix,type:_STRING_}
,{
id:ZaRestore.A_toServer,type:_STRING_}
,{
id:ZaRestore.A_restoreToTime,type:_DATETIME_}
,{
id:ZaRestore.A_target,type:_STRING_}
,{
id:ZaRestore.A_accountWarning,type:_STRING_}
,{
id:ZaRestore.A_status,type:_STRING_}
,{
id:ZaRestore.A_status_msg,type:_STRING_}
,{
id:ZaModel.ErrorCode,type:_STRING_}
,{
id:ZaModel.ErrorMessage,type:_STRING_}
,{
id:ZaRestore.A_restoreMethod,type:_ENUM_,ref:ZaRestore.A_restoreMethod,choices:ZaRestore.RESTORE_CREATE_CHOICES}
];
ZaRestore.myXModel=new Object();
ZaRestore.myXModel.items=new Array();
ZaRestore.myXModel.items.push({
id:ZaModel.ErrorCode,type:_STRING_}
);
ZaRestore.myXModel.items.push({
id:ZaModel.ErrorMessage,type:_STRING_}
);
ZaRestore.myXModel.items.push({
id:ZaRestore.A_status,type:_STRING_}
);
ZaRestore.myXModel.items.push({
id:ZaRestore.A_status_msg,type:_STRING_}
);
ZaRestore.myXModel.items.push({
id:ZaRestore.A_accounts,type:_LIST_,listItem:{
type:_BNR_ACCOUNTSUMMARY_}}
);
ZaRestore.myXModel.items.push({
id:ZaRestore.A_searchStatusMsg,type:_STRING_}
);
ZaRestore.myXModel.items.push({
id:ZaRestore.A_includeIncrementals,ref:"restoreRequest/"+ZaRestore.A_includeIncrementals,type:_ENUM_,choices:ZaModel.BOOLEAN_CHOICES}
);
ZaRestore.myXModel.items.push({
id:ZaRestore.A_accountName,ref:"restoreRequest/"+ZaRestore.A_accountName,type:_EMAIL_ADDRESS_}
);
ZaRestore.myXModel.items.push({
id:ZaRestore.A_accountNames,type:_LIST_,ref:"restoreRequest/"+ZaRestore.A_accountNames,listItem:{
type:_EMAIL_ADDRESS_}}
);
ZaRestore.myXModel.items.push({
id:ZaRestore.A_restoreMethod,type:_ENUM_,ref:"restoreRequest/"+ZaRestore.A_restoreMethod,choices:ZaRestore.RESTORE_CREATE_CHOICES}
);
ZaRestore.myXModel.items.push({
id:ZaRestore.A_target,type:_STRING_,ref:"restoreRequest/"+ZaRestore.A_target}
);
ZaRestore.myXModel.items.push({
id:ZaRestore.A_prefix,type:_STRING_,ref:"restoreRequest/"+ZaRestore.A_prefix,constraints:{
type:"method",value:function(n,t,o,e){
if(n&&AjxEmailAddress.accountPat.test(n)){
return n
}else{
if(!n){
throw com_zimbra_backuprestore.BNR_NullPrefix
}else{
throw com_zimbra_backuprestore.BNR_InvalidPrefix
}}}}}
);
ZaRestore.myXModel.items.push({
id:ZaRestore.A_label,type:_STRING_,ref:"restoreRequest/"+ZaRestore.A_label}
);
ZaRestore.myXModel.items.push({
id:ZaRestore.A_toServer,type:_STRING_,ref:"restoreRequest/"+ZaRestore.A_toServer}
);
ZaRestore.myXModel.items.push({
id:ZaRestore.A_restoreToTime,type:_DATETIME_,ref:"restoreRequest/"+ZaRestore.A_restoreToTime}
);
ZaRestore.myXModel.items.push({
id:ZaRestore.A_restoreTo,type:_STRING_,ref:"restoreRequest/"+ZaRestore.A_restoreTo}
);
ZaRestore.myXModel.items.push({
id:ZaModel.currentStep,type:_NUMBER_,ref:ZaModel.currentStep}
);
ZaRestore.myXModel.items.push({
id:ZaRestore.A_restoreAllAcc,type:_ENUM_,choices:[true,false],ref:"restoreRequest/"+ZaRestore.A_restoreAllAcc}
);
ZaRestore.myXModel.items.push({
id:ZaRestore.A_skipDeletedAccounts,type:_ENUM_,choices:[true,false],ref:"restoreRequest/"+ZaRestore.A_skipDeletedAccounts}
);
ZaRestore.myXModel.items.push({
id:ZaRestore.A_foundAnyBackups,type:_ENUM_,choices:[true,false]}
);
ZaRestore.myXModel.items.push({
id:ZaRestore.A_foundAnyFullBackups,type:_ENUM_,choices:[true,false],defaultValue:false}
);
ZaRestore.myXModel.items.push({
id:ZaRestore.A_ignoreRedoErrors,type:_ENUM_,choices:[true,false],ref:"restoreRequest/"+ZaRestore.A_ignoreRedoErrors}
);
ZaRestore.myXModel.items.push({
id:ZaRestore.A_skipDeleteOps,type:_ENUM_,choices:[true,false],ref:"restoreRequest/"+ZaRestore.A_skipDeleteOps}
);
ZaRestore.abortRestore=function(t,s){
var o=AjxSoapDoc.create("RestoreRequest","urn:zimbraAdmin",null);
var e=o.set("restore","");
e.setAttribute("method","abort");
this.asynCommand=new ZmCsfeCommand();
var n=new Object();
n.soapDoc=o;
n.noAuthToken=true;
if(s){
n.asyncMode=true;
n.callback=s;
n.targetServer=t[ZaRestore.A_toServer]
}
this.asynCommand.invoke(n)
};
ZaRestore.restoreAccount=function(t,c){
var r=AjxSoapDoc.create("RestoreRequest","urn:zimbraAdmin",null);
var e=r.set("restore","");
if(!t[ZaRestore.A_restoreMethod]){
throw (new AjxException("method parameter cannot be null",AjxException.INVALID_PARAM,"ZaRestore.restoreAccount",com_zimbra_backuprestore.ERROR_RESTORE_3))
}
if(t[ZaRestore.A_restoreMethod]==ZaRestore.CA&&(!t[ZaRestore.A_prefix]||t[ZaRestore.A_prefix].length<1)){
throw (new AjxException(com_zimbra_backuprestore.BNR_MustGivePrefix,AjxException.INVALID_PARAM,"ZaRestore.restoreAccount",com_zimbra_backuprestore.ERROR_RESTORE_1))
}
e.setAttribute("method",t[ZaRestore.A_restoreMethod]);
if(t[ZaRestore.A_target]){
e.setAttribute("target",t[ZaRestore.A_target])
}
if(t[ZaRestore.A_prefix]&&t[ZaRestore.A_restoreMethod]==ZaRestore.CA){
e.setAttribute("prefix",t[ZaRestore.A_prefix])
}
if(t[ZaRestore.A_restoreAllAcc]){
s=r.set("account","",e);
s.setAttribute("name","all");
if(t[ZaRestore.A_skipDeletedAccounts]){
e.setAttribute(ZaRestore.A_skipDeletedAccounts,"1")
}else{
e.setAttribute(ZaRestore.A_skipDeletedAccounts,"0")
}}else{
if(t[ZaRestore.A_accountNames]){
if(!t[ZaRestore.A_accountNames] instanceof Array){
t[ZaRestore.A_accountNames]=[t[ZaRestore.A_accountNames]]
}
var n=t[ZaRestore.A_accountNames].length;
var s=null;
for(var o=0;
o<n;
o++){
s=r.set("account","",e);
s.setAttribute("name",t[ZaRestore.A_accountNames][o])
}}
e.setAttribute(ZaRestore.A_skipDeletedAccounts,"0")
}
if(t[ZaRestore.A_ignoreRedoErrors]){
e.setAttribute(ZaRestore.A_ignoreRedoErrors,"1")
}else{
e.setAttribute(ZaRestore.A_ignoreRedoErrors,"0")
}
if(t[ZaRestore.A_skipDeleteOps]){
e.setAttribute(ZaRestore.A_skipDeleteOps,"1")
}else{
e.setAttribute(ZaRestore.A_skipDeleteOps,"0")
}
if(t[ZaRestore.A_restoreTo]==ZaRestore.TO_PIT){
e.setAttribute(ZaRestore.A_restoreToTime,t[ZaRestore.A_restoreToTime].getTime())
}
this.asynCommand=new ZmCsfeCommand();
var l=new Object();
l.soapDoc=r;
l.noAuthToken=true;
if(c){
l.asyncMode=true;
l.callback=c;
l.targetServer=t[ZaRestore.A_toServer]
}
this.asynCommand.invoke(l)
};
function ZaBackupListView(n,o,t,e){
t=DwtControl.ABSOLUTE_STYLE;
ZaListView.call(this,n,o,t,e,undefined,"ZaBackupListView",true);
this._appCtxt=this.shell.getData(ZaAppCtxt.LABEL)
}
ZaBackupListView.prototype=new ZaListView;
ZaBackupListView.prototype.toString=function(){
return"ZaBackupListView"
};
ZaBackupListView.prototype.getTitle=function(){
return com_zimbra_backuprestore.BNR_view_title
};
ZaBackupListView.prototype._createItemHtml=function(c,o,m){
var d=new Array(50);
var e=document.createElement("DIV");
e.id=Dwt.getNextId();
var f=AjxBuffer.concat(this._className,"Row");
if(c[ZaBackupLabel.A_errors]&&c[ZaBackupLabel.A_errors].length>0){
e[DwtListView._STYLE_CLASS]=AjxBuffer.concat("Row ","-error")
}else{
e[DwtListView._STYLE_CLASS]=AjxBuffer.concat("Row ",f)
}
e[DwtListView._SELECTED_STYLE_CLASS]=AjxBuffer.concat("Row-",DwtCssStyle.SELECTED," ",f);
e[DwtListView._SELECTED_DIS_STYLE_CLASS]=AjxBuffer.concat("Row-",DwtCssStyle.SELECTED,"-",DwtCssStyle.DISABLED," ",f);
e.className=e[DwtListView._STYLE_CLASS];
this.associateItemWithElement(c,e,DwtListView.TYPE_LIST_ITEM);
var p=0;
d[p++]="<table width='100%' cellspacing='0' cellpadding='0'>";
d[p++]="<tr>";
var n=this._headerList.length;
var u=Dwt.getNextId();
var r="backup_list";
for(var l=0;
l<n;
l++){
var t=this._headerList[l]._field;
if(t!=null){
if(t.indexOf(ZaBackupLabel.A_label)==0){
d[p++]='<td id="'+r+"_data_label_"+u+"\" align=left height=20px  width='";
d[p++]=this._headerList[l]._width;
d[p++]="'>";
d[p++]=AjxStringUtil.htmlEncode(c[ZaBackupLabel.A_label]);
d[p++]="</td>"
}else{
if(t.indexOf(ZaBackupLabel.A_start)==0){
d[p++]='<td id="'+r+"_data_start_"+u+"\" align=left height=20px  width='";
d[p++]=this._headerList[l]._width;
d[p++]="'>";
var s=new Date(parseInt(c[ZaBackupLabel.A_start]));
d[p++]=AjxDateUtil.computeDateTimeString(s);
d[p++]="</td>"
}else{
if(t.indexOf(ZaBackupLabel.A_end)==0){
d[p++]='<td id="'+r+"_data_end_"+u+"\" align=left height=20px  width='";
d[p++]=this._headerList[l]._width;
d[p++]="'>";
if(c[ZaBackupLabel.A_end]){
var s=new Date(parseInt(c[ZaBackupLabel.A_end]));
d[p++]=AjxDateUtil.computeDateTimeString(s)
}else{
if(c[ZaBackupLabel.A_live]){
d[p++]=com_zimbra_backuprestore.BNR_Status_Running
}else{
d[p++]="&nbsp;"
}}
d[p++]="</td>"
}else{
if(t.indexOf(ZaBackupLabel.A_status)==0){
d[p++]='<td id="'+r+"_data_status_"+u+"\" align=left height=20px  width='";
d[p++]=this._headerList[l]._width;
d[p++]="'>";
d[p++]=AjxStringUtil.htmlEncode(c[ZaBackupLabel.A_status]);
d[p++]="</td>"
}}}}}}
d[p++]="</tr></table>";
e.innerHTML=d.join("");
return e
};
ZaBackupListView.prototype._setNoResultsHtml=function(){
var e=new AjxBuffer();
var o=document.createElement("div");
var t=com_zimbra_backuprestore.BNR_NOLabelsfound;
if(this.parent&&this.parent.instance){
t=AjxMessageFormat.format(com_zimbra_backuprestore.BNR_NOLabelsfoundIn,this.parent.instance[ZaBackup.A_target])
}
e.append("<table width='100%' cellspacing='0' cellpadding='1'>","<tr><td class='NoResults'><br>",t,"</td></tr></table>");
o.innerHTML=e.toString();
this._addRow(o)
};
ZaBackupListView.prototype.setCrtInstance=function(e){
this._crtInstance=ZaUtil.deepCloneObject(e)
};
ZaBackupListView.prototype._loadMsg=function(t){
var e=new AjxCallback(this,this.updateMoreItems);
this._crtInstance[ZaBackup.A_backupListOffset]=this._crtInstance[ZaBackup.A_backupListOffset]+this._crtInstance[ZaBackup.A_backupListCount];
this._crtInstance[ZaBackup.A_pageNumber]=this._crtInstance[ZaBackup.A_pageNumber]++;
ZaBackup.queryBackups(this._crtInstance,e)
};
ZaBackupListView.prototype.updateMoreItems=function(c){
if(c.isException&&c.isException()){
ZaApp.getInstance().getCurrentController()._handleException(c.getException(),"ZaBackupListView.prototype.updateMoreItems");
return
}else{
var t;
if(c.getResponse){
t=c.getResponse()
}else{
if(c.Body.BackupQueryResponse){
t=c
}}
var r=[];
var o=null;
if(t.Body.BackupQueryResponse.backup){
o=t.Body.BackupQueryResponse.backup;
if(!(o instanceof Array)){
o=[o]
}
var s=o.length;
for(var n=0;
n<s;
n++){
var l=new ZaBackupLabel();
l.initFromJS(o[n]);
l[ZaBackup.A_target]=this._crtInstance[ZaBackup.A_target];
l[ZaBackup.A_serverId]=this._crtInstance[ZaBackup.A_serverId];
l[ZaBackup.A_serverName]=this._crtInstance[ZaBackup.A_serverName];
r.push(l)
}
this.replenish(AjxVector.fromArray(r))
}
if(t.Body.BackupQueryResponse[ZaBackup.A_more]){
var e=this._localXForm.getItemById(this._localXForm.getId()+"_backupList").getWidget();
e.setScrollHasMore(true)
}}};
function ZaBackupsXFormView(e){
ZaTabView.call(this,e,"ZaBackupsXFormView","DwtTabView ZaXFormListView","BACKUP_VIEW");
this.initForm(ZaServerBackup.myXModel,this.getMyXForm());
this._localXForm.removeListener(DwtEvent.XFORMS_VALUE_CHANGED,this.formChangeListener);
this._localXForm.setController(ZaApp.getInstance())
}
ZaBackupsXFormView.prototype=new ZaTabView();
ZaBackupsXFormView.prototype.constructor=ZaBackupsXFormView;
ZaTabView.XFormModifiers.ZaBackupsXFormView=new Array();
ZaBackupsXFormView.prototype.getTabIcon=function(){
return"Backup"
};
ZaBackupsXFormView.prototype.getTabToolTip=function(){
if(this._containedObject){
return com_zimbra_backuprestore.BNR_tt_tab_backup+" "+this._containedObject.type+" "+this._containedObject.name
}else{
return""
}};
ZaBackupsXFormView.prototype.setObject=function(e){
this._containedObject=new ZaBackup();
this._containedObject.type=e.type;
this._containedObject.name=e.name;
this._containedObject.id=e.id;
this._containedObject[ZaBackup.A_serverId]=e.id;
this._containedObject[ZaBackup.A_target]=e.attrs[ZaGlobalConfig.A_zimbraBackupTarget];
this._containedObject[ZaBackup.A_pageNumber]=e[ZaBackup.A_pageNumber];
this._containedObject[ZaBackup.A_serverName]=e.attrs[ZaServer.A_ServiceHostname];
this._containedObject[ZaBackup.A_backupLabelList]=e[ZaBackup.A_backupLabelList];
this._containedObject[ZaBackup.A_accountListStatus]=e[ZaBackup.A_accountListStatus];
this._containedObject[ZaBackup.A_backupListOffset]=e[ZaBackup.A_backupListOffset];
this._containedObject[ZaBackup.A_backupListCount]=ZaSettings.RESULTSPERPAGE;
this._containedObject.activeOperation+=ZaHotBackup.SEARCH_OPERATION;
this._localXForm.setInstance(this._containedObject);
var t=new AjxCallback(this,ZaBackupsXFormView.prototype.queryBackupsCallback,{
show:true}
);
ZaBackup.queryBackups(this._containedObject,t);
if(!appNewUI){
this.updateTab()
}};
ZaBackupsXFormView.prototype.getTitle=function(){
return com_zimbra_backuprestore.BNR_view_title
};
ZaBackupsXFormView.prototype.refresh=function(){
this._localXForm.getInstance().activeOperation+=ZaHotBackup.SEARCH_OPERATION;
var e=new AjxCallback(this,ZaBackupsXFormView.prototype.queryBackupsCallback,{
show:true}
);
ZaBackup.queryBackups(this._localXForm.getInstance(),e)
};
ZaBackupsXFormView._listObjects={};
ZaBackupsXFormView.labelSelectionListener=function(e){
if(e.detail==DwtListView.ITEM_DBL_CLICKED){
if(e.item){
this._selectedItem=e.item;
ZaApp.getInstance().getBackupLabelViewController().show(e.item)
}}else{
ZaApp.getInstance().getCurrentController().changeActionsState()
}};
ZaBackupsXFormView.createPopupMenu=function(e){
ZaApp.getInstance().getCurrentController()._actionMenu=e.actionMenu=new ZaPopupMenu(e,"ActionMenu",null,ZaApp.getInstance().getCurrentController()._popupOperations);
e.addActionListener(new AjxListener(ZaApp.getInstance().getCurrentController(),ZaApp.getInstance().getCurrentController().listActionListener));
e.xFormItem=this
};
ZaBackupsXFormView.queryBackups=function(t){
var e=this.getInstance();
this.getInstance().activeOperation+=ZaHotBackup.SEARCH_OPERATION;
var o=new AjxCallback(this.getForm().parent,ZaBackupsXFormView.prototype.queryBackupsCallback,{
show:true}
);
ZaBackup.queryBackups(e,o)
};
ZaBackupsXFormView.prototype.queryBackupsCallback=function(n,s){
this._localXForm.getInstance().activeOperation-=ZaHotBackup.SEARCH_OPERATION;
this._localXForm.refresh();
if(!s){
var f=new ZmCsfeException(ZMsg.errorEmptyResponse,ZmCsfeException.CSFE_SVC_ERROR,"ZaBackupsXFormView.prototype.queryBackupsCallback");
ZaApp.getInstance().getCurrentController()._handleException(f,"ZaBackupsXFormView.prototype.queryBackupsCallback");
return
}
if(s.isException&&s.isException()){
ZaApp.getInstance().getCurrentController()._handleException(s.getException(),"ZaBackupsXFormView.prototype.queryBackupsCallback");
return
}else{
var r;
if(s.getResponse){
r=s.getResponse()
}else{
if(s.Body.BackupQueryResponse){
r=s
}}
var e=[];
var d=null;
var p=new ZaBackup();
var t=this._localXForm.getInstance();
p[ZaBackup.A_target]=t[ZaBackup.A_target];
p[ZaBackup.A_serverName]=t[ZaBackup.A_serverName];
p[ZaBackup.A_serverId]=t[ZaBackup.A_serverId];
p[ZaBackup.A_backupListOffset]=t[ZaBackup.A_backupListOffset];
p[ZaBackup.A_backupListCount]=t[ZaBackup.A_backupListCount];
p[ZaBackup.A_pageNumber]=t[ZaBackup.A_pageNumber];
p[ZaBackup.A_more]=(r.Body.BackupQueryResponse[ZaBackup.A_more]!=null);
p.activeOperation=t.activeOperation-ZaHotBackup.SEARCH_OPERATION;
if(r.Body.BackupQueryResponse.freeSpace){
p[ZaServerBackup.A_freeSpace]=Math.floor(r.Body.BackupQueryResponse.freeSpace/(1024*1024))
}else{
p[ZaServerBackup.A_freeSpace]=0
}
if(r.Body.BackupQueryResponse.totalSpace){
p[ZaServerBackup.A_totalSpace]=Math.floor(r.Body.BackupQueryResponse.totalSpace/(1024*1024))
}else{
p[ZaServerBackup.A_totalSpace]=0
}
if(r.Body.BackupQueryResponse.backup){
d=r.Body.BackupQueryResponse.backup;
if(!(d instanceof Array)){
d=[d]
}
var o=d.length;
for(var c=0;
c<o;
c++){
var u=new ZaBackupLabel();
u.initFromJS(d[c]);
u[ZaBackup.A_target]=p[ZaBackup.A_target];
u[ZaBackup.A_serverId]=p[ZaBackup.A_serverId];
u[ZaBackup.A_serverName]=p[ZaBackup.A_serverName];
e.push(u)
}}
p[ZaBackup.A_backupLabelList]=e;
var l=ZaApp.getInstance().getCurrentController();
if(l){
var g=l.getPopUpMenu();
if(g!=null){
g.enable([ZaOperation.ABORT_BACKUP],false)
}}
this._localXForm.setInstance(p);
if(p[ZaBackup.A_more]){
var m=this._localXForm.getItemById(ZaBackup.A_backupLabelList).getWidget();
m.setCrtInstance(p);
m.setScrollHasMore(true)
}}};
ZaBackupsXFormView.isPleaseWaitVisible=function(){
return(this.getInstanceValue(ZaServerBackup.A_activateOperation)>0)
};
ZaBackupsXFormView.getCustomWidth=function(){
try{
var t=this.getForm().parent.getHtmlElement();
var e=parseInt(t.style.width);
if(isNaN(e)){
e=t.clientWidth?t.clientWidth:t.offsetWidth
}
return e
}
catch(o){}
return"100%"
};
ZaBackupsXFormView.getCustomHeight=function(){
var e=this.getForm().parent;
try{
var o=e.getSize().y;
var l=this.getForm().getItemsById("header_group");
var r=0;
if(l){
var n=l[0];
if(n.getContainer()){
n=n.getContainer()
}else{
n=n.getHtmlElement()
}
r=Dwt.getSize(n).y
}
var s=2;
if(AjxEnv.isIE){
s=3
}
if(o>(r+s)){
return o-r-s
}}
catch(t){}
return"100%"
};
ZaBackupsXFormView.myXFormModifier=function(t){
t.tableCssStyle="width:100%;overflow:auto;";
var e=new Array();
e[0]=new ZaListHeaderItem(ZaBackupLabel.A_label,com_zimbra_backuprestore.BNR_Label_col,null,"160px",null,null,true,true);
e[1]=new ZaListHeaderItem(ZaBackupLabel.A_start,com_zimbra_backuprestore.BNR_StartTime_col,null,"200px",null,null,true,true);
e[2]=new ZaListHeaderItem(ZaBackupLabel.A_end,com_zimbra_backuprestore.BNR_EndTime_col,null,"200px",null,null,true,true);
e[3]=new ZaListHeaderItem(ZaBackupLabel.A_status,com_zimbra_backuprestore.BNR_Status_col,null,"auto",null,null,true,true);
t.items=[{
type:_GROUP_,id:"header_group",colSizes:["auto"],numCols:1,colSpan:2,width:"100%",items:[{
type:_GROUP_,visibilityChecks:[],colSizes:["250px","*","150px"],colSpan:2,numCols:3,width:"100%",id:"xform_header",items:[{
type:_TEXTFIELD_,width:"100%",ref:ZaBackup.A_target,containerCssClass:"search_field_container",label:com_zimbra_backuprestore.BNR_TargetPath,cssClass:"search_input",visibilityChecks:[],enableDisableChecks:[]}
,{
type:_DWT_BUTTON_,label:com_zimbra_backuprestore.BNR_FindBackups,name:"backupsSearchButton",onActivate:ZaBackupsXFormView.queryBackups,visibilityChecks:[],enableDisableChecks:[]}
]}
,{
type:_GROUP_,colSpan:2,numCols:4,colSizes:["25%","25%","15%","35%"],width:"100%",items:[{
type:_OUTPUT_,label:com_zimbra_backuprestore.BNR_FreeSpace,ref:ZaServerBackup.A_freeSpace}
,{
type:_OUTPUT_,label:com_zimbra_backuprestore.BNR_TotalSpace,ref:ZaServerBackup.A_totalSpace}
]}
,{
type:_SPACER_,colSpan:2}
]}
,{
type:_DWT_ALERT_,style:DwtAlert.INFORMATION,iconVisible:true,content:ZaMsg.pleaseWait,width:"200px",align:_CENTER_,visibilityChecks:[ZaBackupsXFormView.isPleaseWaitVisible],visibilityChangeEventSources:[ZaServerBackup.A_activateOperation]}
,{
ref:ZaBackup.A_backupLabelList,colSpan:2,cssClass:"ZaFullPageXFormListView",onSelection:ZaBackupsXFormView.labelSelectionListener,type:_DWT_LIST_,forceUpdate:true,createPopupMenu:ZaBackupsXFormView.createPopupMenu,multiselect:false,widgetClass:ZaBackupListView,headerList:e,visibilityChecks:[],enableDisableChecks:[],getCustomWidth:ZaBackupsXFormView.getCustomWidth,getCustomHeight:ZaBackupsXFormView.getCustomHeight}
]
};
ZaTabView.XFormModifiers.ZaBackupsXFormView.push(ZaBackupsXFormView.myXFormModifier);
function AccountRestoreXWizard(e){
ZaXWizardDialog.call(this,e,null,com_zimbra_backuprestore.BNR_Restore_WizTitle,"700px","300px",null);
this.TAB_INDEX=0;
AccountRestoreXWizard.GENTERAL_STEP=++this.TAB_INDEX;
AccountRestoreXWizard.SERVER_STEP=++this.TAB_INDEX;
AccountRestoreXWizard.LOOKFOR_LABEL_STEP=++this.TAB_INDEX;
AccountRestoreXWizard.SELECT_LABEL_STEP=++this.TAB_INDEX;
AccountRestoreXWizard.RESTORE_STEP=++this.TAB_INDEX;
this.stepChoices=[{
label:com_zimbra_backuprestore.BNR_AccountNameStep_Title,value:AccountRestoreXWizard.GENTERAL_STEP}
,{
label:com_zimbra_backuprestore.BNR_SelectServersStep_Title,value:AccountRestoreXWizard.SERVER_STEP}
,{
label:com_zimbra_backuprestore.BNR_LookingForLabelsStep_Title,value:AccountRestoreXWizard.LOOKFOR_LABEL_STEP}
,{
label:com_zimbra_backuprestore.BNR_SelectLabelsStep_Title,value:AccountRestoreXWizard.SELECT_LABEL_STEP}
,{
label:com_zimbra_backuprestore.BNR_RestoringStepTitle,value:AccountRestoreXWizard.RESTORE_STEP}
];
this._lastStep=this.stepChoices.length;
this.initForm(ZaRestore.myXModel,this.getMyXForm());
this._helpURL=AccountRestoreXWizard.helpURL
}
AccountRestoreXWizard.prototype=new ZaXWizardDialog;
AccountRestoreXWizard.prototype.constructor=AccountRestoreXWizard;
AccountRestoreXWizard.prototype.miniType=2;
AccountRestoreXWizard.helpURL=location.pathname+"help/admin/html/managing_accounts/restoring_a_mailbox.htm?locid="+AjxEnv.DEFAULT_LOCALE;
AccountRestoreXWizard.labelChoices=new XFormChoices([],XFormChoices.OBJECT_LIST,"label","label");
AccountRestoreXWizard.prototype.handleXFormChange=function(){
if(this._containedObject[ZaModel.currentStep]!=this._lastStep){
this._button[DwtWizardDialog.NEXT_BUTTON].setEnabled(true)
}else{
this._button[DwtWizardDialog.NEXT_BUTTON].setEnabled(false);
this._button[DwtWizardDialog.FINISH_BUTTON].setEnabled(true)
}};
AccountRestoreXWizard.prototype.setObject=function(e){
this._containedObject=e;
if(!this._containedObject.restoreRequest[ZaRestore.A_toServer]){
this._containedObject.restoreRequest[ZaRestore.A_toServer]=ZaApp.getInstance().getServerList().getArray()[0].id
}
this._containedObject[ZaModel.currentStep]=e[ZaModel.currentStep]||1;
if(e._uuid){
this._containedObject._uuid=e._uuid
}
this._localXForm.setInstance(this._containedObject)
};
AccountRestoreXWizard.prototype.popup=function(e){
ZaXWizardDialog.prototype.popup.call(this,e);
this._button[DwtWizardDialog.NEXT_BUTTON].setEnabled(true);
this._button[DwtWizardDialog.FINISH_BUTTON].setEnabled(false);
this._button[DwtWizardDialog.PREV_BUTTON].setEnabled(false)
};
AccountRestoreXWizard.prototype.restoreCallBack=function(t,c){
if(!c){
var n=new ZmCsfeException(ZMsg.errorEmptyResponse,ZmCsfeException.CSFE_SVC_ERROR,"AccountRestoreXWizard.prototype.restoreCallBack");
ZaApp.getInstance().getCurrentController()._handleException(n,"AccountRestoreXWizard.prototype.restoreCallBack");
this.goPrev();
return
}
var e=this._localXForm.getInstance();
var s=e[ZaRestore.A_accounts];
var o=s.length;
if(c.isException&&c.isException()){
var n=c.getException();
s[t][ZaRestore.A_status]=ZaRestore.A_status_ERROR;
var l=com_zimbra_backuprestore.ERROR_RESTORING;
s[t][ZaModel.ErrorMessage]=l;
s._version++;
this._localXForm.getModel().setInstanceValue(e,ZaRestore.A_accounts,s)
}else{
var r;
if(c.getResponse){
r=c.getResponse().Body.RestoreResponse
}else{
if(c.Body.RestoreResponse){
r=c.Body.RestoreResponse
}}
if(r){
s[t][ZaRestore.A_status]=r[ZaRestore.A_status];
switch(r[ZaRestore.A_status]){
case ZaRestore.A_status_OK:s[t][ZaRestore.A_status_msg]=AjxMessageFormat.format(com_zimbra_backuprestore.BNR_RestoreSuccess,[e.accounts[t][ZaRestore.A_accountName]]);
break;
case ZaRestore.A_status_INTERRUPTED:s[t][ZaRestore.A_status_msg]=AjxMessageFormat.format(com_zimbra_backuprestore.BNR_RestoreInterrupted,[e.accounts[t][ZaRestore.A_accountName]]);
break;
case ZaRestore.A_status_ABORTING:s[t][ZaRestore.A_status_msg]=AjxMessageFormat.format(com_zimbra_backuprestore.BNR_RestoreAborting,[e.accounts[t][ZaRestore.A_accountName]]);
break;
case ZaRestore.A_status_ERROR:s[t][ZaRestore.A_status_msg]=AjxMessageFormat.format(com_zimbra_backuprestore.BNR_RestoreFailed,[e.accounts[t][ZaRestore.A_accountName]]);
s[t][ZaModel.ErrorMessage]=AjxMessageFormat.format(com_zimbra_backuprestore.BNR_RestoreFailed,[e.accounts[t][ZaRestore.A_accountName]]);
break
}
s[t][ZaModel.ErrorMessage]="";
s._version++;
this._localXForm.getModel().setInstanceValue(e,ZaRestore.A_accounts,s)
}}
t++;
if(t<o){
this.restoreAccount(t)
}else{
this.doneRestoring()
}};
AccountRestoreXWizard.prototype.restoreAllCallBack=function(s){
if(!s){
var t=new ZmCsfeException(ZMsg.errorEmptyResponse,ZmCsfeException.CSFE_SVC_ERROR,"AccountRestoreXWizard.prototype.restoreAllCallBack");
ZaApp.getInstance().getCurrentController()._handleException(t,"AccountRestoreXWizard.prototype.restoreAllCallBack");
this.goPrev();
return
}
var e=this._localXForm.getInstance();
if(s.isException&&s.isException()){
var t=s.getException();
this._localXForm.getModel().setInstanceValue(e,ZaRestore.A_status,ZaRestore.A_status_ERROR);
var n=com_zimbra_backuprestore.ERROR_RESTORING;
this._localXForm.getModel().setInstanceValue(e,ZaModel.ErrorMessage,n)
}else{
var o;
if(s.getResponse){
o=s.getResponse().Body.RestoreResponse
}else{
if(s.Body.RestoreResponse){
o=s.Body.RestoreResponse
}}
if(o){
this._localXForm.getModel().setInstanceValue(e,ZaRestore.A_status,o[ZaRestore.A_status]);
switch(o[ZaRestore.A_status]){
case ZaRestore.A_status_OK:this._localXForm.getModel().setInstanceValue(e,ZaRestore.A_status_msg,com_zimbra_backuprestore.BNR_RestoreAllSuccess);
break;
case ZaRestore.A_status_INTERRUPTED:this._localXForm.getModel().setInstanceValue(e,ZaRestore.A_status_msg,com_zimbra_backuprestore.BNR_RestoreAllInterrupted);
break;
case ZaRestore.A_status_ABORTING:this._localXForm.getModel().setInstanceValue(e,ZaRestore.A_status_msg,com_zimbra_backuprestore.BNR_RestoreAllAborting);
break;
case ZaRestore.A_status_ERROR:this._localXForm.getModel().setInstanceValue(e,ZaRestore.A_status_msg,com_zimbra_backuprestore.BNR_RestoreAllFailed);
break
}
this._localXForm.getModel().setInstanceValue(e,ZaModel.ErrorMessage,"")
}}
this.doneRestoring()
};
AccountRestoreXWizard.prototype.restoreAll=function(){
var e=this._localXForm.getInstance();
if(e[ZaRestore.A_stop]){
this._button[DwtWizardDialog.NEXT_BUTTON].setEnabled(false);
this._button[DwtWizardDialog.FINISH_BUTTON].setEnabled(true);
this._button[DwtWizardDialog.PREV_BUTTON].setEnabled(true);
this._localXForm.getModel().setInstanceValue(e,ZaRestore.A_status,ZaRestore.A_status_INTERRUPTED);
this._localXForm.getModel().setInstanceValue(e,ZaRestore.A_status_msg,com_zimbra_backuprestore.BNR_RestoreAllInterrupted);
return
}
var t=e.restoreRequest;
this._localXForm.getModel().setInstanceValue(e,ZaRestore.A_status,ZaRestore.A_status_RESTORING);
this._localXForm.getModel().setInstanceValue(e,ZaRestore.A_status_msg,com_zimbra_backuprestore.BNR_AllRestoring);
this._localXForm.refresh();
var o=new AjxCallback(this,this.restoreAllCallBack);
ZaRestore.restoreAccount(t,o)
};
AccountRestoreXWizard.prototype.restoreAccount=function(o){
var e=this._localXForm.getInstance();
var r=e[ZaRestore.A_accounts];
var s=r.length;
if(e[ZaRestore.A_stop]){
this._button[DwtWizardDialog.NEXT_BUTTON].setEnabled(false);
this._button[DwtWizardDialog.FINISH_BUTTON].setEnabled(true);
this._button[DwtWizardDialog.PREV_BUTTON].setEnabled(true);
for(var n=o;
n<s;
n++){
r[n][ZaRestore.A_status]=ZaRestore.A_status_INTERRUPTED;
r[n][ZaRestore.A_status_msg]=AjxMessageFormat.format(com_zimbra_backuprestore.BNR_RestoreInterrupted,[r[o][ZaRestore.A_accountName]])
}
this._localXForm.getModel().setInstanceValue(e,ZaRestore.A_accounts,r);
return
}
while(o<s&&r[o][ZaRestore.A_accountId]==null){
o++
}
if(o<s){
this._localXForm.getModel().setInstanceValue(e,ZaRestore.A_currentAccount,o);
var t={};
t[ZaRestore.A_accountNames]=[r[o][ZaRestore.A_accountName]];
t[ZaRestore.A_restoreAllAcc]=false;
t[ZaRestore.A_prefix]=r[o][ZaRestore.A_prefix];
t[ZaRestore.A_target]=r[o][ZaRestore.A_target];
t[ZaRestore.A_restoreMethod]=r[o][ZaRestore.A_restoreMethod];
t[ZaRestore.A_restoreTo]=e.restoreRequest[ZaRestore.A_restoreTo];
t[ZaRestore.A_restoreToTime]=e.restoreRequest[ZaRestore.A_restoreToTime];
t[ZaRestore.A_toServer]=r[o][ZaRestore.A_toServer];
r[o][ZaRestore.A_status]=ZaRestore.A_status_RESTORING;
r[o][ZaRestore.A_status_msg]=AjxMessageFormat.format(com_zimbra_backuprestore.BNR_Restoring,[r[o][ZaRestore.A_accountName]]);
r._version++;
this._localXForm.getModel().setInstanceValue(e,ZaRestore.A_accounts,r);
var l=new AjxCallback(this,this.restoreCallBack,o);
ZaRestore.restoreAccount(t,l)
}else{
this.doneRestoring()
}};
AccountRestoreXWizard.prototype.doneRestoring=function(){
this._button[DwtWizardDialog.NEXT_BUTTON].setEnabled(false);
this._button[DwtWizardDialog.FINISH_BUTTON].setEnabled(true);
this._button[DwtWizardDialog.PREV_BUTTON].setEnabled(true)
};
AccountRestoreXWizard.prototype.startDiscovery=function(){
this.serverArray=ZaServerBackup.getAll().getArray();
var e=this._localXForm.getInstance();
var n=[];
var r=e.restoreRequest[ZaRestore.A_accountNames];
var o=r.length;
for(var t=0;
t<o;
t++){
var s={};
s[ZaRestore.A_accountName]=r[t];
s[ZaRestore.A_restoreToTime]=e.restoreRequest[ZaRestore.A_restoreToTime];
s[ZaRestore.A_restoreTo]=e.restoreRequest[ZaRestore.A_restoreTo];
n.push(s)
}
this._localXForm.getModel().setInstanceValue(e,ZaRestore.A_accounts,n);
this._localXForm.getModel().setInstanceValue(e,ZaRestore.A_searchStatusMsg,com_zimbra_backuprestore.BNR_SearchingAccounts);
this.doAccountQuery(0)
};
AccountRestoreXWizard.prototype.doAccountQuery=function(t){
try{
var e=this._localXForm.getInstance();
var r=e.restoreRequest[ZaRestore.A_accountNames];
var s=new Object();
var n=new AjxCallback(this,this.searchAccountCallback,t);
s.types=[ZaSearch.ACCOUNTS,ZaSearch.RESOURCES];
s.callback=n;
s.sortBy=ZaAccount.A_name;
s.query=ZaSearch.getSearchByNameQuery(r[t],s.types);
ZaSearch.searchDirectory(s)
}
catch(o){
ZaApp.getInstance().getCurrentController()._handleException(o,"AccountRestoreXWizard.prototype.doAccountQuery")
}};
AccountRestoreXWizard.prototype.doBackupAccountQuery=function(n){
if(n>=this.serverArray.length){}else{
try{
var e=this._localXForm.getInstance();
var r=e.restoreRequest[ZaRestore.A_accountNames];
var o=new AjxCallback(this,this.searchAccountBackupCallback,n);
var s={};
s[ZaBackup.A_target]=e.restoreRequest[ZaBackup.A_target];
if(e.restoreRequest[ZaRestore.A_restoreTo]==ZaRestore.TO_LATEST){
s[ZaBackup.A_type]=ZaBackupLabel.TYPE_FULL
}else{
if(e.restoreRequest[ZaRestore.A_restoreTo]==ZaRestore.TO_PIT){
s[ZaBackup.A_to]=e.restoreRequest[ZaRestore.A_restoreToTime].getTime();
s[ZaBackup.A_type]=null
}}
s[ZaRestore.A_accountNames]=r;
s[ZaBackup.A_serverId]=this.serverArray[n].id;
s[ZaBackup.A_backupListCount]=1;
this._localXForm.getModel().setInstanceValue(e,ZaRestore.A_searchStatusMsg,AjxMessageFormat.format(com_zimbra_backuprestore.BNR_SearchingBackupsServ,[this.serverArray[n][ZaServer.A_ServiceHostname]]));
ZaBackup.queryAccountBackup(s,o)
}
catch(t){
ZaApp.getInstance().getCurrentController()._handleException(t,"AccountRestoreXWizard.prototype.doBackupAccountQuery")
}}};
AccountRestoreXWizard.prototype.searchAccountBackupCallback=function(u,o){
var m=this._localXForm.getInstance();
try{
if(!o){
throw (new AjxException(ZaMsg.ERROR_EMPTY_RESPONSE_ARG,AjxException.UNKNOWN,"AccountRestoreXWizard.prototype.searchAccountBackupCallback"))
}
if(o.isException()){
throw (o.getException())
}else{
var n=o.getResponse().Body.BackupAccountQueryResponse;
var e=n.account;
var t=e.length;
var l=m[ZaRestore.A_accounts];
for(var r=0;
r<t;
r++){
if(e[r]&&e[r].name&&e[r].backup){
var c=e[r].backup[0];
if(l[r][ZaRestore.A_accountName].toLowerCase()==e[r].name.toLowerCase()){
l[r][ZaRestore.A_accountId]=c[ZaRestore.A_accountId];
l[r][ZaRestore.A_toServer]=this.serverArray[u].id;
l[r][ZaRestore.A_target]=m.restoreRequest[ZaRestore.A_target];
l[r][ZaRestore.A_prefix]=m.restoreRequest[ZaRestore.A_prefix];
l[r][ZaRestore.A_restoreMethod]=m.restoreRequest[ZaRestore.A_restoreMethod];
if(l[r][ZaRestore.A_accountId]!=m[ZaRestore.A_accounts][r][ZaRestore.A_currentAccountId]&&m[ZaRestore.A_accounts][r][ZaRestore.A_currentAccountId]!=null){
l[r][ZaRestore.A_restoreMethod]=ZaRestore.CA
}}}}
this._localXForm.getModel().setInstanceValue(m,ZaRestore.A_accounts,l);
var t=this.serverArray.length;
u++;
if(u<t){
this.doBackupAccountQuery(u)
}else{
this.goNext();
var s=m.restoreRequest[ZaRestore.A_accountNames];
var t=m[ZaRestore.A_accounts].length;
for(var r=0;
r<t;
r++){
if(m[ZaRestore.A_accounts][r][ZaRestore.A_accountId]){
this._button[DwtWizardDialog.NEXT_BUTTON].setEnabled(true);
this._button[DwtWizardDialog.NEXT_BUTTON].setText(com_zimbra_backuprestore.BNR_Restore);
break
}}}}}
catch(d){
ZaApp.getInstance().getCurrentController()._handleException(d,"AccountRestoreXWizard.prototype.searchAccountBackupCallback")
}};
AccountRestoreXWizard.prototype.searchAccountCallback=function(o,n){
var u=this._localXForm.getInstance();
try{
if(!n){
throw (new AjxException(ZaMsg.ERROR_EMPTY_RESPONSE_ARG,AjxException.UNKNOWN,"AccountRestoreXWizard.prototype.searchAccountCallback"))
}
if(n.isException()){
throw (n.getException())
}else{
var s=n.getResponse().Body.SearchDirectoryResponse;
var c=new ZaItemList(null);
c.loadFromJS(s);
var l=c.getArray();
var e=u[ZaRestore.A_accounts];
if(l[0]&&o!=null){
e[o][ZaRestore.A_currentAccountId]=l[0].id
}
this._localXForm.getModel().setInstanceValue(u,ZaRestore.A_accounts,e);
var r=u.restoreRequest[ZaRestore.A_accountNames];
var t=r.length;
o++;
if(o<t){
this.doAccountQuery(o)
}else{
this._localXForm.getModel().setInstanceValue(u,ZaRestore.A_searchStatusMsg,com_zimbra_backuprestore.BNR_SearchingBackups);
this.doBackupAccountQuery(0)
}}}
catch(d){
ZaApp.getInstance().getCurrentController()._handleException(d,"AccountRestoreXWizard.prototype.searchAccountCallback")
}};
AccountRestoreXWizard.prototype.doBackupQuery=function(n){
if(n>=this.serverArray.length){}else{
try{
var e=this._localXForm.getInstance();
var r=["all"];
var o=new AjxCallback(this,this.searchBackupCallback,n);
var s={};
s[ZaBackup.A_target]=e.restoreRequest[ZaBackup.A_target];
if(e.restoreRequest[ZaRestore.A_restoreTo]==ZaRestore.TO_LATEST){
s[ZaBackup.A_type]=ZaBackupLabel.TYPE_FULL;
s[ZaBackup.A_backupListCount]=1
}else{
if(e.restoreRequest[ZaRestore.A_restoreTo]==ZaRestore.TO_PIT){
s[ZaBackup.A_to]=e.restoreRequest[ZaRestore.A_restoreToTime].getTime();
s[ZaBackup.A_type]=null;
s[ZaBackup.A_backupListCount]=-1
}}
s[ZaRestore.A_accountNames]=r;
s[ZaBackup.A_serverId]=this.serverArray[n].id;
s[ZaBackup.A_accountListCount]=1;
this._localXForm.getModel().setInstanceValue(e,ZaRestore.A_searchStatusMsg,AjxMessageFormat.format(com_zimbra_backuprestore.BNR_SearchingBackupsServ,[this.serverArray[n][ZaServer.A_ServiceHostname]]));
ZaBackup.queryBackups(s,o)
}
catch(t){
ZaApp.getInstance().getCurrentController()._handleException(t,"AccountRestoreXWizard.prototype.doBackupQuery")
}}};
AccountRestoreXWizard.prototype.searchBackupCallback=function(c,t){
var d=this._localXForm.getInstance();
try{
if(!t){
throw (new AjxException(ZaMsg.ERROR_EMPTY_RESPONSE_ARG,AjxException.UNKNOWN,"AccountRestoreXWizard.prototype.searchAccountBackupCallback"))
}
if(t.isException()){
throw (t.getException())
}else{
var o=t.getResponse();
var r=o.Body.BackupQueryResponse.backup;
if(r){
this._localXForm.getModel().setInstanceValue(d,ZaRestore.A_foundAnyBackups,true);
var n=false;
if(!AjxUtil.isArray(r)){
r=[r]
}
for(var s=0;
s<r.length;
s++){
if(r[s][ZaBackup.A_type]==ZaBackupLabel.TYPE_FULL){
n=true;
break
}}
this._localXForm.getModel().setInstanceValue(d,ZaRestore.A_foundAnyFullBackups,n);
if(n){
this._button[DwtWizardDialog.NEXT_BUTTON].setEnabled(true);
this._button[DwtWizardDialog.NEXT_BUTTON].setText(com_zimbra_backuprestore.BNR_Restore)
}
this.goNext()
}else{
var e=this.serverArray.length;
c++;
if(c<e){
this.doBackupQuery(c)
}else{
this.goNext()
}}}}
catch(l){
ZaApp.getInstance().getCurrentController()._handleException(l,"AccountRestoreXWizard.prototype.searchAccountCallback")
}};
AccountRestoreXWizard.prototype.findBackupsAfter=function(){
this.serverArray=ZaServerBackup.getAll().getArray();
var e=this._localXForm.getInstance();
this._localXForm.getModel().setInstanceValue(e,ZaRestore.A_searchStatusMsg,com_zimbra_backuprestore.BNR_SearchingAccounts);
this._localXForm.getModel().setInstanceValue(e,ZaRestore.A_foundAnyBackups,false);
this._localXForm.getModel().setInstanceValue(e,ZaRestore.A_foundAnyFullBackups,false);
this.doBackupQuery(0)
};
AccountRestoreXWizard.prototype.goPrev=function(){
if(this._containedObject[ZaModel.currentStep]==2){
this._button[DwtWizardDialog.PREV_BUTTON].setEnabled(false)
}else{
if(this._containedObject[ZaModel.currentStep]==3){
if(this._localXForm.hasErrors()){
this._localXForm.clearErrors()
}}else{
if(this._containedObject[ZaModel.currentStep]==4){
if(this._localXForm.hasErrors()){
this._localXForm.clearErrors()
}
this._containedObject[ZaModel.currentStep]--;
this._button[DwtWizardDialog.NEXT_BUTTON].setEnabled(true);
this._button[DwtWizardDialog.FINISH_BUTTON].setEnabled(false);
this._button[DwtWizardDialog.NEXT_BUTTON].setText(AjxMsg._next)
}else{
if(this._containedObject[ZaModel.currentStep]==5){
this._button[DwtWizardDialog.NEXT_BUTTON].setText(com_zimbra_backuprestore.BNR_Restore);
this._button[DwtWizardDialog.NEXT_BUTTON].setEnabled(true);
this._button[DwtWizardDialog.FINISH_BUTTON].setEnabled(false)
}}}}
this.goPage(this._containedObject[ZaModel.currentStep]-1)
};
AccountRestoreXWizard.prototype.goNext=function(){
if(this._containedObject[ZaModel.currentStep]==1){
var t=this._containedObject.restoreRequest;
var r=t[ZaRestore.A_accountNames]=AjxUtil.collapseList(t[ZaRestore.A_accountNames]);
if(!t[ZaRestore.A_restoreAllAcc]&&(!r||r.length<1)){
ZaApp.getInstance().getCurrentController().popupErrorDialog(com_zimbra_backuprestore.ERROR_EMAIL_ADDR_REQUIRED);
return false
}
this._button[DwtWizardDialog.PREV_BUTTON].setEnabled(true)
}else{
if(this._containedObject[ZaModel.currentStep]==2){
var e=this._localXForm.getInstance();
if(!e.restoreRequest[ZaRestore.A_restoreAllAcc]){
this._button[DwtWizardDialog.NEXT_BUTTON].setEnabled(false);
this._button[DwtWizardDialog.PREV_BUTTON].setEnabled(false);
this.startDiscovery()
}else{
this._button[DwtWizardDialog.NEXT_BUTTON].setEnabled(false);
this._button[DwtWizardDialog.PREV_BUTTON].setEnabled(false);
this.findBackupsAfter()
}}else{
if(this._containedObject[ZaModel.currentStep]==3){
this._button[DwtWizardDialog.PREV_BUTTON].setEnabled(true)
}else{
if(this._containedObject[ZaModel.currentStep]==4){
this._button[DwtWizardDialog.NEXT_BUTTON].setEnabled(false);
this._button[DwtWizardDialog.PREV_BUTTON].setEnabled(false);
this._button[DwtWizardDialog.FINISH_BUTTON].setEnabled(false);
var e=this._localXForm.getInstance();
this._localXForm.getModel().setInstanceValue(e,ZaRestore.A_stop,false);
if(e.restoreRequest[ZaRestore.A_restoreAllAcc]){
this.restoreAll()
}else{
var s=e[ZaRestore.A_accounts];
var n=s.length;
for(var o=0;
o<n;
o++){
if(s[o][ZaRestore.A_accountId]){
s[o][ZaRestore.A_status]=ZaRestore.A_status_PENDING;
s[o][ZaRestore.A_status_msg]=AjxMessageFormat.format(com_zimbra_backuprestore.BNR_Waiting,[s[o][ZaRestore.A_accountName]])
}}
this._localXForm.getModel().setInstanceValue(e,ZaRestore.A_accounts,s);
this.restoreAccount(0)
}
this._button[DwtWizardDialog.NEXT_BUTTON].setText(com_zimbra_backuprestore.BNR_Abort);
this._button[DwtWizardDialog.NEXT_BUTTON].setEnabled(true)
}else{
if(this._containedObject[ZaModel.currentStep]==5){
this.abortRestore();
this._button[DwtWizardDialog.NEXT_BUTTON].setEnabled(false);
return
}}}}}
this.goPage(this._containedObject[ZaModel.currentStep]+1)
};
AccountRestoreXWizard.prototype.abortRestore=function(){
try{
var e=this._localXForm.getInstance();
e[ZaRestore.A_stop]=true;
if(e.restoreRequest[ZaRestore.A_restoreAllAcc]){
var t=e.restoreRequest;
ZaRestore.abortRestore(t,new AjxCallback(this,this.restoreAllCallBack))
}else{
var t=e.accounts[e[ZaRestore.A_currentAccount]];
ZaRestore.abortRestore(t,new AjxCallback(this,this.restoreCallBack,e[ZaRestore.A_currentAccount]))
}}
catch(o){
ZaApp.getInstance().getCurrentController()._handleException(o,"AccountRestoreXWizard.abortRestore",null,false)
}};
AccountRestoreXWizard.isAccountIdTheSame=function(s){
if(this.refPath){
var e=this.getInstance();
var o=s?this.refPath.substring(0,this.refPath.indexOf(s)):this.refPath+"/";
if(o&&o.length){
var n=o+ZaRestore.A_accountId;
var t=o+ZaRestore.A_currentAccountId;
if(this.getInstanceValue(t)!=null){
return(this.getInstanceValue(n)==this.getInstanceValue(t))
}else{
return true
}}else{
return true
}}else{
return true
}};
AccountRestoreXWizard.isAccountIdNotTheSame=function(s){
if(this.refPath){
var e=this.getInstance();
var o=s?this.refPath.substring(0,this.refPath.indexOf(s)):this.refPart+"/";
if(o&&o.length){
var n=o+ZaRestore.A_accountId;
var t=o+ZaRestore.A_currentAccountId;
if(this.getInstanceValue(t)!=null){
return !((this.getInstanceValue(n)==this.getInstanceValue(t)))
}else{
return false
}}else{
return false
}}else{
return false
}};
AccountRestoreXWizard.accountBackupNotFound=function(e){
return !AccountRestoreXWizard.accountBackupFound.call(this,e)
};
AccountRestoreXWizard.accountBackupFound=function(n){
if(this.refPath){
var e=this.getInstance();
var t=n?this.refPath.substring(0,this.refPath.indexOf(n)):this.refPath+"/";
if(t&&t.length){
var o=t+ZaRestore.A_accountId;
return(this.getInstanceValue(o)!=null)
}else{
return false
}}else{
return false
}};
AccountRestoreXWizard.getAccountStatus=function(n){
if(this.refPath){
var e=this.getInstance();
var o=n?this.refPath.substring(0,this.refPath.indexOf(n)):this.refPath+"/";
if(o&&o.length){
var t=o+ZaRestore.A_status;
return this.getInstanceValue(t)
}}};
AccountRestoreXWizard.isStatusNormal=function(){
return(this.getInstanceValue(ZaRestore.A_status)==ZaRestore.A_status_PENDING||this.getInstanceValue(ZaRestore.A_status)==ZaRestore.A_status_OK||this.getInstanceValue(ZaRestore.A_status)==ZaRestore.A_status_RESTORING)
};
AccountRestoreXWizard.isStatusAbortingOrInterrupted=function(){
return(this.getInstanceValue(ZaRestore.A_status)==ZaRestore.A_status_ABORTING||this.getInstanceValue(ZaRestore.A_status)==ZaRestore.A_status_INTERRUPTED)
};
AccountRestoreXWizard.isStatusError=function(){
return(this.getInstanceValue(ZaRestore.A_status)==ZaRestore.A_status_ERROR)
};
AccountRestoreXWizard.isLocalStatusNormal=function(n){
if(this.refPath){
var e=this.getInstance();
var o=n?this.refPath.substring(0,this.refPath.indexOf(n)):this.refPath+"/";
if(o&&o.length){
var t=o+ZaRestore.A_status;
return(this.getInstanceValue(t)==ZaRestore.A_status_PENDING||this.getInstanceValue(t)==ZaRestore.A_status_OK||this.getInstanceValue(t)==ZaRestore.A_status_RESTORING)
}else{
return false
}}else{
return false
}};
AccountRestoreXWizard.isLocalAbortingOrInterrupted=function(n){
if(this.refPath){
var e=this.getInstance();
var o=n?this.refPath.substring(0,this.refPath.indexOf(n)):this.refPath+"/";
if(o&&o.length){
var t=o+ZaRestore.A_status;
return(this.getInstanceValue(t)==ZaRestore.A_status_ABORTING||this.getInstanceValue(t)==ZaRestore.A_status_INTERRUPTED)
}else{
return false
}}else{
return false
}};
AccountRestoreXWizard.isLocalStatusError=function(n){
if(this.refPath){
var e=this.getInstance();
var o=n?this.refPath.substring(0,this.refPath.indexOf(n)):this.refPath+"/";
if(o&&o.length){
var t=o+ZaRestore.A_status;
return(this.getInstanceValue(t)==ZaRestore.A_status_ERROR)
}else{
return false
}}else{
return false
}};
AccountRestoreXWizard.noPITLabelsFound=function(){
return(!this.getInstanceValue(ZaRestore.A_foundAnyFullBackups)&&(this.getInstanceValue(ZaRestore.A_restoreTo)==ZaRestore.TO_PIT)&&(this.getInstanceValue(ZaRestore.A_restoreAllAcc)))
};
AccountRestoreXWizard.noLatestLabelsFound=function(){
return(!this.getInstanceValue(ZaRestore.A_foundAnyFullBackups)&&(this.getInstanceValue(ZaRestore.A_restoreTo)==ZaRestore.TO_LATEST)&&(this.getInstanceValue(ZaRestore.A_restoreAllAcc)))
};
AccountRestoreXWizard.isPrefixEnable=function(){
var e=true;
if(this.getInstanceValue(ZaRestore.A_restoreMethod)!=ZaRestore.CA){
if(this.hasError()){
this.clearError();
this.setInstanceValue("restored_",ZaRestore.A_prefix);
this.getForm().parent.setDirty(true)
}
e=false
}
return e
};
AccountRestoreXWizard.prototype.getMyXForm=function(){
var e;
if(ZaSettings.DOMAINS_ENABLED){
e=ZaApp.getInstance().getGlobalConfig().attrs[ZaGlobalConfig.A_zimbraDefaultDomainName];
if(!e){
e=ZaApp.getInstance().getDomainList().getArray()[0].name
}}else{
e=ZaSettings.myDomainName
}
var o=" @"+e;
var t={
items:[{
type:_OUTPUT_,colSpan:2,valign:_TOP_,cssStyle:"white-space: normal",ref:ZaModel.currentStep,choices:this.stepChoices,valueChangeEventSources:[ZaModel.currentStep]}
,{
type:_SEPARATOR_,align:_CENTER_,valign:_TOP_}
,{
type:_SPACER_,align:_CENTER_,valign:_TOP_}
,{
type:_SWITCH_,width:650,valign:_TOP_,cssStyle:"white-space: normal",items:[{
type:_CASE_,numCols:1,caseKey:AccountRestoreXWizard.GENTERAL_STEP,id:"restore_wiz_accounts_step",align:_LEFT_,valign:_TOP_,items:[{
type:_ZAWIZ_TOP_GROUPER_,label:com_zimbra_backuprestore.BNR_SelectAccountsGrouper,id:"restore_wiz_accounts_group",numCols:2,items:[{
ref:ZaRestore.A_restoreAllAcc,type:_RADIO_,groupname:"restore_all_acc_grp",label:com_zimbra_backuprestore.BNR_allAccounts,labelLocation:_RIGHT_,updateElement:function(n){
this.getElement().checked=n
}
,elementChanged:function(r,s,n){
this.getForm().itemChanged(this,true,n)
}
,visibilityChecks:[],enableDisableChecks:[]}
,{
ref:ZaRestore.A_skipDeletedAccounts,type:_CHECKBOX_,labelLocation:_RIGHT_,align:_RIGHT_,subLabel:"",label:com_zimbra_backuprestore.BNR_SkipDeletedAcc,trueValue:true,falseValue:false,enableDisableChecks:[[XForm.checkInstanceValue,ZaRestore.A_restoreAllAcc,true]],enableDisableChangeEventSources:[ZaRestore.A_restoreAllAcc],visibilityChecks:[]}
,{
ref:ZaRestore.A_restoreAllAcc,type:_RADIO_,groupname:"restore_all_acc_grp",label:com_zimbra_backuprestore.BNR_SelectedAcc,updateElement:function(n){
this.getElement().checked=!n
}
,elementChanged:function(r,s,n){
this.getForm().itemChanged(this,false,n)
}
,visibilityChecks:[],enableDisableChecks:[]}
,{
type:_DWT_ALERT_,visibilityChecks:[[XForm.checkInstanceValue,ZaRestore.A_restoreAllAcc,false]],visibilityChangeEventSources:[ZaRestore.A_restoreAllAcc],containerCssStyle:"padding-bottom:0px",style:DwtAlert.INFORMATION,iconVisible:true,align:_CENTER_,colSpan:2,content:com_zimbra_backuprestore.BNR_AccountsNote}
,{
ref:ZaRestore.A_accountNames,type:_REPEAT_,visibilityChecks:[[XForm.checkInstanceValue,ZaRestore.A_restoreAllAcc,false]],visibilityChangeEventSources:[ZaRestore.A_restoreAllAcc],enableDisableChecks:[],label:com_zimbra_backuprestore.BNR_EmailAddress,labelLocation:_LEFT_,addButtonLabel:ZaMsg.NAD_AddAddress,align:_LEFT_,colSpan:"*",repeatInstance:o,showAddButton:true,showRemoveButton:true,showAddOnNextRow:true,removeButtonLabel:ZaMsg.NAD_RemoveAddress,items:[{
ref:".",type:_DYNSELECT_,editable:true,width:"200px",inputSize:30,label:null,dataFetcherClass:ZaSearch,dataFetcherTypes:[ZaSearch.ACCOUNTS,ZaSearch.RESOURCES],dataFetcherAttrs:[ZaItem.A_zimbraId,ZaItem.A_cn,ZaAccount.A_name,ZaAccount.A_displayname,ZaAccount.A_mail],dataFetcherMethod:ZaSearch.prototype.dynSelectSearch,visibilityChecks:[],enableDisableChecks:[],autoCompleteEnabled:true}
]}
,{
type:_CELLSPACER_,height:"20px",align:_CENTER_,colSpan:2}
,{
ref:ZaRestore.A_ignoreRedoErrors,type:_CHECKBOX_,labelLocation:_RIGHT_,align:_RIGHT_,subLabel:"",label:com_zimbra_backuprestore.BNR_IgnoreRedoErrors,trueValue:true,falseValue:false,visibilityChecks:[]}
,{
ref:ZaRestore.A_skipDeleteOps,type:_CHECKBOX_,labelLocation:_RIGHT_,align:_RIGHT_,subLabel:"",label:com_zimbra_backuprestore.BNR_skipDeleteOps,trueValue:true,falseValue:false,visibilityChecks:[]}
]}
]}
,{
type:_CASE_,numCols:1,caseKey:AccountRestoreXWizard.SERVER_STEP,items:[{
type:_ZAWIZ_TOP_GROUPER_,label:com_zimbra_backuprestore.BNR_TimeOptionsGrouper,id:"restore_wiz_time_group",numCols:2,items:[{
ref:ZaRestore.A_restoreTo,type:_RADIO_,groupname:"restore_to_grp",label:com_zimbra_backuprestore.BNR_toLatest,updateElement:function(n){
this.getElement().checked=(n==ZaRestore.TO_LATEST)
}
,elementChanged:function(r,s,n){
this.getForm().itemChanged(this,ZaRestore.TO_LATEST,n)
}
,visibilityChecks:[],enableDisableChecks:[]}
,{
ref:ZaRestore.A_restoreTo,type:_RADIO_,groupname:"restore_to_grp",label:com_zimbra_backuprestore.BNR_toPIT,updateElement:function(n){
this.getElement().checked=(n==ZaRestore.TO_PIT)
}
,elementChanged:function(r,s,n){
this.getForm().itemChanged(this,ZaRestore.TO_PIT,n)
}
,visibilityChecks:[],enableDisableChecks:[]}
,{
ref:ZaRestore.A_restoreToTime,type:_DWT_DATETIME_,visibilityChecks:[[XForm.checkInstanceValue,ZaRestore.A_restoreTo,ZaRestore.TO_PIT]],visibilityChangeEventSources:[ZaRestore.A_restoreTo],enableDisableChecks:[],bmolsnr:true,firstDayOfWeek:ZaZimbraAdmin.FIRST_DAY_OF_WEEK,label:com_zimbra_backuprestore.BNR_ChoosePIT,labelLocation:_LEFT_}
]}
,{
type:_ZAWIZ_TOP_GROUPER_,label:com_zimbra_backuprestore.BNR_NameOptionsGrouper,id:"restore_wiz_name_group",numCols:2,items:[{
ref:ZaRestore.A_restoreMethod,type:_RADIO_,groupname:"restore_method_grp",label:com_zimbra_backuprestore.BNR_PreserveAccNames,updateElement:function(n){
this.getElement().checked=(n==ZaRestore.RA)
}
,elementChanged:function(r,s,n){
this.getForm().itemChanged(this,ZaRestore.RA,n)
}
,visibilityChecks:[],enableDisableChecks:[]}
,{
ref:ZaRestore.A_restoreMethod,type:_RADIO_,groupname:"restore_method_grp",label:com_zimbra_backuprestore.BNR_UsePrefix,updateElement:function(n){
this.getElement().checked=(n==ZaRestore.CA)
}
,elementChanged:function(r,s,n){
this.getForm().itemChanged(this,ZaRestore.CA,n)
}
,visibilityChecks:[],enableDisableChecks:[]}
,{
ref:ZaRestore.A_prefix,type:_TEXTFIELD_,label:com_zimbra_backuprestore.BNR_Prefix,enableDisableChecks:[[AccountRestoreXWizard.isPrefixEnable]],enableDisableChangeEventSources:[ZaRestore.A_restoreMethod],visibilityChecks:[]}
,{
type:_DWT_ALERT_,ref:ZaRestore.A_prefix,valueChangeEventSources:[ZaRestore.A_prefix,ZaRestore.A_restoreMethod],visibilityChecks:[[XForm.checkInstanceValue,ZaRestore.A_restoreMethod,ZaRestore.CA]],visibilityChangeEventSources:[ZaRestore.A_restoreMethod],containerCssStyle:"padding-bottom:0px",style:DwtAlert.INFORMATION,iconVisible:true,bmolsnr:true,align:_CENTER_,colSpan:2,getDisplayValue:function(n){
return AjxMessageFormat.format(com_zimbra_backuprestore.BNR_Restore_to_different,[n])
}}
]}
,{
type:_ZAWIZ_TOP_GROUPER_,label:com_zimbra_backuprestore.BNR_ServerOptionsGrouper,id:"restore_wiz_server_group",numCols:2,visibilityChecks:[[XForm.checkInstanceValue,ZaRestore.A_restoreAllAcc,true]],visibilityChangeEventSources:[ZaRestore.A_restoreAllAcc],items:[{
ref:ZaRestore.A_toServer,type:_OUTPUT_,label:com_zimbra_backuprestore.BNR_SelectServer,nowrap:false,labelWrap:true,choices:ZaServerBackup.getBackupServerListChoices()}
,{
ref:ZaRestore.A_target,type:_TEXTFIELD_,label:com_zimbra_backuprestore.BNR_SelectPath,width:"250px",labelLocation:_LEFT_,visibilityChecks:[],enableDisableChecks:[]}
]}
]}
,{
type:_CASE_,id:"restore_wiz_find_searching_step",numCols:1,caseKey:AccountRestoreXWizard.LOOKFOR_LABEL_STEP,items:[{
type:_DWT_ALERT_,style:DwtAlert.INFORMATION,iconVisible:true,bmolsnr:true,ref:ZaRestore.A_searchStatusMsg,width:"100%",align:_CENTER_,valueChangeEventSources:[ZaRestore.A_searchStatusMsg]}
]}
,{
type:_CASE_,id:"restore_wiz_review_step",numCols:1,caseKey:AccountRestoreXWizard.SELECT_LABEL_STEP,items:[{
type:_ZAWIZ_TOP_GROUPER_,colSizes:["auto"],numCols:1,label:com_zimbra_backuprestore.BNR_ReviewGrouper,id:"restore_wiz_review_group",items:[{
type:_DWT_ALERT_,ref:".",content:com_zimbra_backuprestore.BNR_NoBackupForPITFound,containerCssStyle:"padding-bottom:0px",style:DwtAlert.CRITICAL,iconVisible:true,bmolsnr:true,align:_CENTER_,width:"100%",visibilityChecks:[AccountRestoreXWizard.noPITLabelsFound],visibilityChangeEventSources:[ZaRestore.A_foundAnyFullBackups,ZaRestore.A_restoreTo,ZaRestore.A_restoreAllAcc]}
,{
type:_DWT_ALERT_,ref:".",content:com_zimbra_backuprestore.BNR_NoBackupForFound,containerCssStyle:"padding-bottom:0px",style:DwtAlert.CRITICAL,iconVisible:true,bmolsnr:true,align:_CENTER_,width:"100%",visibilityChecks:[AccountRestoreXWizard.noLatestLabelsFound],visibilityChangeEventSources:[ZaRestore.A_foundAnyFullBackups,ZaRestore.A_restoreTo,ZaRestore.A_restoreAllAcc]}
,{
type:_ZAWIZ_TOP_GROUPER_,colSizes:["auto"],numCols:1,label:com_zimbra_backuprestore.BNR_TimeOptionsGrouper,id:"restore_wiz_review_time_group",items:[{
type:_GROUP_,visibilityChecks:[[XForm.checkInstanceValue,ZaRestore.A_restoreTo,ZaRestore.TO_LATEST]],visibilityChangeEventSources:[ZaRestore.A_restoreTo],items:[{
ref:ZaRestore.A_restoreToTime,label:null,type:_OUTPUT_,labelLocation:_NONE_,getDisplayValue:function(n){
return com_zimbra_backuprestore.BNR_RestoretoLatest
}}
]}
,{
type:_GROUP_,visibilityChecks:[[XForm.checkInstanceValue,ZaRestore.A_restoreTo,ZaRestore.TO_PIT]],visibilityChangeEventSources:[ZaRestore.A_restoreTo],items:[{
ref:ZaRestore.A_restoreToTime,label:null,type:_OUTPUT_,labelLocation:_NONE_,getDisplayValue:function(n){
return AjxMessageFormat.format(com_zimbra_backuprestore.BNR_RestoreToTime,[n])
}}
]}
]}
,{
type:_ZAWIZ_TOP_GROUPER_,colSizes:["auto"],numCols:1,label:com_zimbra_backuprestore.BNR_AccountsGrouper,id:"restore_wiz_review_accounts_group",visibilityChecks:[[XForm.checkInstanceValue,ZaRestore.A_restoreAllAcc,false]],visibilityChangeEventSources:[ZaRestore.A_restoreAllAcc],items:[{
type:_REPEAT_,ref:ZaRestore.A_accounts,showRemoveButton:false,showAddButton:false,items:[{
type:_ZA_PLAIN_GROUPER_,items:[{
type:_OUTPUT_,ref:ZaRestore.A_accountName,label:ZaMsg.NAD_AccountName,valueChangeEventSources:[ZaRestore.A_accountName]}
,{
type:_OUTPUT_,ref:ZaRestore.A_currentAccountId,label:com_zimbra_backuprestore.BNR_current_acc_id,visibilityChecks:[[AccountRestoreXWizard.isAccountIdNotTheSame,ZaRestore.A_currentAccountId],[AccountRestoreXWizard.accountBackupFound,ZaRestore.A_currentAccountId]],valueChangeEventSources:[ZaRestore.A_currentAccountId]}
,{
type:_OUTPUT_,ref:ZaRestore.A_accountId,label:com_zimbra_backuprestore.BNR_old_acc_id,visibilityChecks:[[AccountRestoreXWizard.isAccountIdNotTheSame,ZaRestore.A_accountId],[AccountRestoreXWizard.accountBackupFound,ZaRestore.A_accountId]],valueChangeEventSources:[ZaRestore.A_accountId]}
,{
type:_OUTPUT_,ref:ZaRestore.A_toServer,label:com_zimbra_backuprestore.BNR_SelectServer,nowrap:false,labelWrap:true,choices:ZaServerBackup.getBackupServerListChoices(),visibilityChecks:[[AccountRestoreXWizard.accountBackupFound,ZaRestore.A_toServer]],valueChangeEventSources:[ZaRestore.A_toServer]}
,{
type:_TEXTFIELD_,ref:ZaRestore.A_target,label:com_zimbra_backuprestore.BNR_SelectPath,width:"250px",labelLocation:_LEFT_,visibilityChecks:[[AccountRestoreXWizard.accountBackupFound,ZaRestore.A_toServer]],enableDisableChecks:[],valueChangeEventSources:[ZaRestore.A_target]}
,{
type:_TEXTFIELD_,ref:ZaRestore.A_prefix,label:com_zimbra_backuprestore.BNR_Prefix,visibilityChecks:[[AccountRestoreXWizard.accountBackupFound,ZaRestore.A_prefix],[AccountRestoreXWizard.isAccountIdNotTheSame,ZaRestore.A_prefix]],enableDisableChecks:[]}
,{
type:_DWT_ALERT_,ref:".",content:com_zimbra_backuprestore.BNR_MustGivePrefix,containerCssStyle:"padding-bottom:0px",style:DwtAlert.WARNING,iconVisible:true,bmolsnr:true,align:_CENTER_,colSpan:2,width:"100%",visibilityChecks:[[AccountRestoreXWizard.accountBackupFound,null],[AccountRestoreXWizard.isAccountIdNotTheSame,null]]}
,{
type:_DWT_ALERT_,ref:".",content:com_zimbra_backuprestore.BNR_NoAccBackupFound,containerCssStyle:"padding-bottom:0px",style:DwtAlert.CRITICAL,iconVisible:true,bmolsnr:true,align:_CENTER_,colSpan:2,width:"100%",visibilityChecks:[[AccountRestoreXWizard.accountBackupNotFound,null],[XForm.checkInstanceValue,ZaRestore.A_restoreTo,ZaRestore.TO_LATEST]]}
,{
type:_DWT_ALERT_,ref:".",content:com_zimbra_backuprestore.BNR_NoAccBackupForPITFound,containerCssStyle:"padding-bottom:0px",style:DwtAlert.CRITICAL,iconVisible:true,bmolsnr:true,align:_CENTER_,colSpan:2,width:"100%",visibilityChecks:[[AccountRestoreXWizard.accountBackupNotFound,null],[XForm.checkInstanceValue,ZaRestore.A_restoreTo,ZaRestore.TO_PIT]]}
,{
type:_SEPARATOR_,colSpan:2}
]}
]}
]}
,{
type:_ZAWIZ_TOP_GROUPER_,colSizes:["auto"],numCols:1,label:com_zimbra_backuprestore.BNR_MethodOptionsGrouper,id:"restore_wiz_review_server_group",visibilityChecks:[[XForm.checkInstanceValue,ZaRestore.A_restoreAllAcc,true],[XForm.checkInstanceValue,ZaRestore.A_foundAnyFullBackups,true]],items:[{
type:_GROUP_,visibilityChecks:[[XForm.checkInstanceValue,ZaRestore.A_skipDeletedAccounts,false]],items:[{
ref:null,label:null,type:_OUTPUT_,value:com_zimbra_backuprestore.BNR_allAccountsIncludeDeleted}
]}
,{
type:_GROUP_,visibilityChecks:[[XForm.checkInstanceValue,ZaRestore.A_skipDeletedAccounts,true]],items:[{
ref:null,label:null,type:_OUTPUT_,value:com_zimbra_backuprestore.BNR_allAccountsSkipDeleted}
]}
]}
,{
type:_ZAWIZ_TOP_GROUPER_,colSizes:["auto"],numCols:1,label:com_zimbra_backuprestore.BNR_NameOptionsGrouper,id:"restore_wiz_review_name_group",visibilityChecks:[[XForm.checkInstanceValue,ZaRestore.A_restoreAllAcc,true],[XForm.checkInstanceValue,ZaRestore.A_foundAnyFullBackups,true]],visibilityChangeEventSources:[ZaRestore.A_restoreAllAcc,ZaRestore.A_foundAnyFullBackups],items:[{
type:_GROUP_,visibilityChecks:[[XForm.checkInstanceValue,ZaRestore.A_restoreMethod,ZaRestore.RA]],visibilityChangeEventSources:[ZaRestore.A_restoreTo],items:[{
ref:null,type:_OUTPUT_,value:com_zimbra_backuprestore.BNR_PreserveAccNames,label:null,labelLocation:_NONE_}
]}
,{
type:_GROUP_,visibilityChecks:[[XForm.checkInstanceValue,ZaRestore.A_restoreMethod,ZaRestore.CA]],visibilityChangeEventSources:[ZaRestore.A_restoreTo],items:[{
ref:ZaRestore.A_prefix,type:_OUTPUT_,valueChangeEventSources:[ZaRestore.A_prefix],label:null,labelLocation:_NONE_,getDisplayValue:function(n){
return AjxMessageFormat.format(com_zimbra_backuprestore.BNR_AddPrefix,[n])
}}
]}
]}
,{
type:_ZAWIZ_TOP_GROUPER_,label:com_zimbra_backuprestore.BNR_ServerOptionsGrouper,id:"restore_wiz_review_server_group",visibilityChecks:[[XForm.checkInstanceValue,ZaRestore.A_restoreAllAcc,true]],visibilityChangeEventSources:[ZaRestore.A_restoreAllAcc],items:[{
ref:ZaRestore.A_toServer,type:_OUTPUT_,label:com_zimbra_backuprestore.BNR_SelectServer,valueChangeEventSources:[ZaRestore.A_toServer],nowrap:false,labelWrap:true,choices:ZaServerBackup.getBackupServerListChoices()}
,{
ref:ZaRestore.A_target,type:_OUTPUT_,label:com_zimbra_backuprestore.BNR_SelectPath,width:"250px",labelLocation:_LEFT_,valueChangeEventSources:[ZaRestore.A_target]}
]}
]}
]}
,{
type:_CASE_,numCols:1,caseKey:AccountRestoreXWizard.RESTORE_STEP,items:[{
type:_GROUP_,visibilityChecks:[[XForm.checkInstanceValue,ZaRestore.A_restoreAllAcc,false]],visibilityChangeEventSources:[ZaRestore.A_restoreTo],items:[{
type:_REPEAT_,ref:ZaRestore.A_accounts,showRemoveButton:false,showAddButton:false,width:"100%",items:[{
type:_ZA_PLAIN_GROUPER_,width:"90%",items:[{
type:_DWT_ALERT_,ref:ZaRestore.A_status_msg,containerCssStyle:"padding-bottom:0px",style:DwtAlert.INFO,iconVisible:true,bmolsnr:true,align:_CENTER_,colSpan:2,width:"100%",visibilityChecks:[[AccountRestoreXWizard.isLocalStatusNormal,ZaRestore.A_status_msg]],visibilityChangeEventSources:[ZaRestore.A_restoreTo,ZaRestore.A_accounts]}
,{
type:_DWT_ALERT_,ref:ZaRestore.A_status_msg,containerCssStyle:"padding-bottom:0px",style:DwtAlert.WARNING,iconVisible:true,bmolsnr:true,align:_CENTER_,colSpan:2,width:"100%",visibilityChecks:[[AccountRestoreXWizard.isLocalAbortingOrInterrupted,ZaRestore.A_status_msg]],visibilityChangeEventSources:[ZaRestore.A_restoreTo,ZaRestore.A_accounts]}
,{
type:_DWT_ALERT_,containerCssStyle:"padding-bottom:0px",style:DwtAlert.CRITICAL,iconVisible:true,bmolsnr:true,align:_CENTER_,colSpan:2,width:"100%",ref:ZaModel.ErrorMessage,visibilityChecks:[[AccountRestoreXWizard.isLocalStatusError,ZaModel.ErrorMessage]],visibilityChangeEventSources:[ZaRestore.A_restoreTo,ZaRestore.A_accounts]}
,{
type:_SEPARATOR_,colSpan:2,visibilityChecks:[[AccountRestoreXWizard.accountBackupFound,null]],visibilityChangeEventSources:[ZaRestore.A_restoreTo,ZaRestore.A_accounts]}
]}
]}
]}
,{
type:_GROUP_,visibilityChecks:[[XForm.checkInstanceValue,ZaRestore.A_restoreAllAcc,true]],visibilityChangeEventSources:[ZaRestore.A_restoreTo],items:[{
type:_ZA_PLAIN_GROUPER_,width:"90%",items:[{
type:_DWT_ALERT_,ref:ZaRestore.A_status_msg,containerCssStyle:"padding-bottom:0px",style:DwtAlert.INFO,iconVisible:true,bmolsnr:true,align:_CENTER_,colSpan:2,width:"100%",visibilityChecks:[[AccountRestoreXWizard.isStatusNormal]],visibilityChangeEventSources:[ZaRestore.A_status]}
,{
type:_DWT_ALERT_,ref:ZaRestore.A_status_msg,containerCssStyle:"padding-bottom:0px",style:DwtAlert.WARNING,iconVisible:true,bmolsnr:true,align:_CENTER_,colSpan:2,width:"100%",visibilityChecks:[AccountRestoreXWizard.isStatusAbortingOrInterrupted],visibilityChangeEventSources:[ZaRestore.A_status]}
,{
type:_DWT_ALERT_,containerCssStyle:"padding-bottom:0px",style:DwtAlert.CRITICAL,iconVisible:true,bmolsnr:true,align:_CENTER_,colSpan:2,width:"100%",ref:ZaModel.ErrorMessage,visibilityChecks:[AccountRestoreXWizard.isStatusError],visibilityChangeEventSources:[ZaRestore.A_status]}
]}
]}
]}
]}
]};
return t
};
function ZaBackupsViewController(t,e){
ZaXFormViewController.call(this,t,e,"ZaBackupsViewController");
this._UICreated=false;
this._helpURL=ZaBackupsViewController.helpURL;
this.tabConstructor=ZaBackupsXFormView
}
ZaBackupsViewController.prototype=new ZaXFormViewController();
ZaBackupsViewController.prototype.constructor=ZaBackupsViewController;
ZaBackupsViewController.helpURL=location.pathname+"help/admin/html/backup_feature/backing_up_the_zimbra_server.htm?locid="+AjxEnv.DEFAULT_LOCALE;
ZaController.initPopupMenuMethods.ZaBackupsViewController=new Array();
ZaController.setViewMethods.ZaBackupsViewController=new Array();
ZaController.changeActionsStateMethods.ZaBackupsViewController=new Array();
ZaBackupsViewController.prototype.show=function(e){
if(!this.selectExistingTabByItemId(e.id)){
this._setView(e,true);
this.setDirty(false)
}};
ZaBackupsViewController.initPopupMenuMethod=function(){
this._popupOperations[ZaOperation.IMMEDIATE_BACKUP]=new ZaOperation(ZaOperation.IMMEDIATE_BACKUP,com_zimbra_backuprestore.BNRTBB_Backup,com_zimbra_backuprestore.BNRTBB_Backup_tt,"Backup","Backup",new AjxListener(this,ZaBackupsViewController.prototype._immediateBackupListener));
this._popupOrder.push(ZaOperation.IMMEDIATE_BACKUP);
this._popupOperations[ZaOperation.MAIL_RESTORE]=new ZaOperation(ZaOperation.MAIL_RESTORE,com_zimbra_backuprestore.BNR_TBB_RestoreMailbox,com_zimbra_backuprestore.BNR_TBB_Restore_tt,"RestoreMailbox","RestoreMailboxDis",new AjxListener(this,this.restoreMailListener));
this._popupOrder.push(ZaOperation.MAIL_RESTORE);
this._popupOperations[ZaOperation.ABORT_BACKUP]=new ZaOperation(ZaOperation.ABORT_BACKUP,com_zimbra_backuprestore.BNRTBB_AbortBackup,com_zimbra_backuprestore.BNRTBB_AbortBackup_tt,"Cancel","Cancel",new AjxListener(this,this.abortBackupListener));
this._popupOrder.push(ZaOperation.ABORT_BACKUP);
this._popupOperations[ZaOperation.CONFIGURE_BACKUP]=new ZaOperation(ZaOperation.CONFIGURE_BACKUP,com_zimbra_backuprestore.BNRTBB_ConfigureBackup,com_zimbra_backuprestore.BNRTBB_ConfigureBackup_tt,"AdvancedTools","Configure",new AjxListener(this,ZaHotBackup.configureBackup));
this._popupOrder.push(ZaOperation.CONFIGURE_BACKUP);
this._popupOperations[ZaOperation.REFRESH]=new ZaOperation(ZaOperation.REFRESH,ZaMsg.TBB_Refresh,ZaMsg.TBB_Refresh_tt,"Refresh","Refresh",new AjxListener(this,this.refreshListener));
this._popupOrder.push(ZaOperation.REFRESH)
};
ZaController.initPopupMenuMethods.ZaBackupsViewController.push(ZaBackupsViewController.initPopupMenuMethod);
ZaBackupsViewController.setViewMethod=function(e){
if(!this._UICreated){
this._createUI()
}
e.refresh();
ZaApp.getInstance().pushView(this.getContentViewId());
this._view.setDirty(false);
this._view.setObject(e);
this._currentObject=e
};
ZaController.setViewMethods.ZaBackupsViewController.push(ZaBackupsViewController.setViewMethod);
ZaBackupsViewController.prototype.nextPageListener=function(e){
this._currentObject[ZaBackup.A_backupListOffset]=(this._currentObject[ZaBackup.A_pageNumber]*ZaSettings.RESULTSPERPAGE);
this._currentObject[ZaBackup.A_backupListCount]=ZaSettings.RESULTSPERPAGE;
this._currentObject[ZaBackup.A_pageNumber]++;
this._view.setObject(this._currentObject)
};
ZaBackupsViewController.prototype.prevPageListener=function(e){
if(this._currentObject[ZaBackup.A_pageNumber]<1){
return
}
this._currentObject[ZaBackup.A_pageNumber]--;
this._currentObject[ZaBackup.A_backupListOffset]=((this._currentObject[ZaBackup.A_pageNumber]-1)*ZaSettings.RESULTSPERPAGE);
this._currentObject[ZaBackup.A_backupListCount]=ZaSettings.RESULTSPERPAGE;
this._view.setObject(this._currentObject)
};
ZaBackupsViewController.prototype.listActionListener=function(e){
this.changeActionsState();
this._actionMenu.popup(0,e.docX,e.docY)
};
ZaBackupsViewController.prototype.restoreMailListener=function(l){
try{
this._accountRestoreWizard=new AccountRestoreXWizard(this._container);
var r=new ZaRestore();
var e=this._view.getMyForm();
if(e){
var u=e.getInstance();
if(u){
r.restoreRequest[ZaRestore.A_target]=u[ZaBackup.A_target];
r.restoreRequest[ZaRestore.A_toServer]=u[ZaBackup.A_serverId]
}
var t=e.getItemsById(ZaBackup.A_backupLabelList);
if(t&&t.length){
var c=t[0].widget;
var d=c.getSelection();
var n=(d instanceof AjxVector)?d.getArray():(d instanceof Array)?d:[d];
if(n&&n.length){
var o=n[0];
if(o){
r.restoreRequest[ZaRestore.A_restoreToTime]=new Date(o.start);
r.restoreRequest[ZaRestore.A_restoreTo]=ZaRestore.TO_PIT
}}}}
this._accountRestoreWizard.setObject(r);
this._accountRestoreWizard.popup()
}
catch(s){
this._handleException(s,"ZaBackupsViewController.prototype.restoreMailListener",null,false)
}
return
};
ZaBackupsViewController.prototype.abortBackupListener=function(r){
if(this._view){
var e=this._view.getMyForm();
if(e){
var t=e.getItemsById(ZaBackup.A_backupLabelList);
var d=e.getInstance();
var n=d[ZaBackup.A_target];
if(n&&t&&t.length&&t[0]){
var l=t[0].widget;
var c=l.getSelection();
var s=(c instanceof AjxVector)?c.getArray():(c instanceof Array)?c:[c];
if(s&&s.length){
var o=s[0];
var u=new AjxCallback(this,this.abortBackupCallback);
ZaBackup.runBackupQuery(this._currentObject.id,ZaBackup.METHOD_ABORT,n,null,o[ZaBackupLabel.A_label],u);
d.activeOperation+=ZaHotBackup.ABORT_OPERATION;
e.setInstance(d);
if(this._popupOperations[ZaOperation.ABORT_BACKUP]){
this._popupOperations[ZaOperation.ABORT_BACKUP].enabled=false
}}}}}};
ZaBackupsViewController.prototype.abortBackupCallback=function(n){
var o=this._view.getMyForm();
var e=o.getInstance();
e.activeOperation-=ZaHotBackup.ABORT_OPERATION;
o.setInstance(e);
if(n.isException&&n.isException()){
var t=n.getException();
if(t.code==ZmCsfeException.CANNOT_ABORT_COMPLETED_BACKUP){
this.popupErrorDialog(com_zimbra_backuprestore.BNR_CannotAbortCompletedBckup,t,null,DwtMessageDialog.WARNING_STYLE)
}else{
ZaApp.getInstance().getCurrentController()._handleException(n.getException(),"ZaBackupsViewController.prototype.abortBackupCallback")
}}else{
this.popupMsgDialog(com_zimbra_backuprestore.BNR_Aborting)
}
this._view.refresh()
};
ZaBackupsViewController.prototype.refresh=function(){
this._view.refresh()
};
ZaBackupsViewController.prototype.refreshListener=function(e){
this._view.refresh()
};
ZaBackupsViewController.prototype._immediateBackupListener=function(o){
try{
this._ImmediateBackupWizard=new ZaBackupXWizard(this._container);
var e=new ZaBackup();
e[ZaBackup.A_method]=ZaBackup.METHOD_FULL;
if(this._currentObject.attrs[ZaGlobalConfig.A_zimbraBackupTarget]){
e[ZaBackup.A_target]=AjxStringUtil.trim(this._currentObject.attrs[ZaGlobalConfig.A_zimbraBackupTarget])
}else{
e[ZaBackup.A_target]=ZaHotBackup.DEFAULT_BACKUP_TARGET
}
e[ZaServerBackup.A_backupAll]=0;
e[ZaBackup.A_serverName]=this._currentObject[ZaServer.A_ServiceHostname];
this._ImmediateBackupWizard.setObject(e);
this._ImmediateBackupWizard.popup()
}
catch(t){
this._handleException(t,"ZaBackupServerListController.prototype._immediateBackupListener",null,false)
}
return
};
ZaBackupsViewController.prototype._createUI=function(){
this._contentView=this._view=new this.tabConstructor(this._container);
this._initPopupMenu();
var e=new Object();
e[ZaAppViewMgr.C_APP_CONTENT]=this._view;
ZaApp.getInstance().getAppViewMgr().createView(this.getContentViewId(),e);
this._UICreated=true;
ZaApp.getInstance()._controllers[this.getContentViewId()]=this
};
ZaBackupsViewController.prototype.searchCallback=function(n,o){
try{
if(!o){
throw (new AjxException(ZaMsg.ERROR_EMPTY_RESPONSE_ARG,AjxException.UNKNOWN,"ZaListViewController.prototype.searchCallback"))
}
if(o.isException()){
throw (o.getException())
}else{
var e=o.getResponse().Body.BackupQueryResponse;
this._list=new ZaItemList(ZaBackupLabel);
this._list.loadFromJS(e);
if(n.show){
this._show(this._list)
}else{
this._updateUI(this._list)
}}}
catch(t){
if(t.code!=ZmCsfeException.MAIL_QUERY_PARSE_ERROR){
this._handleException(t,"ZaBackupsViewController.prototype.searchCallback")
}else{
this.popupErrorDialog(ZaMsg.queryParseError,t);
if(this._searchField){
this._searchField.setEnabled(true)
}}}};
ZaBackupsViewController.prototype._handleException=function(e,s,n,t,o){
if(e.code&&(e.code==ZmCsfeException.INVALID_BACKUP_TARGET)){
this._execFrame={
obj:o,func:s,args:n,restartOnError:t};
this._errorDialog.registerCallback(DwtDialog.OK_BUTTON,this._errorDialogCallback,this);
this.popupErrorDialog(com_zimbra_backuprestore.BNR_InvalidBackupTargetERROR,e)
}else{
if(e.code&&(e.code==ZmCsfeException.NO_LABELS_FOUND)){
this._execFrame={
obj:o,func:s,args:n,restartOnError:t};
this._errorDialog.registerCallback(DwtDialog.OK_BUTTON,this._errorDialogCallback,this);
this.popupErrorDialog(com_zimbra_backuprestore.BNR_NoLabelsFoundTitle,e)
}else{
ZaController.prototype._handleException.call(this,e,s,n,t,o)
}}};
ZaBackupsViewController.changeActionsStateMethod=function(){
var e=this._view.getMyForm();
if(e){
var o=e.getItemsById(ZaBackup.A_backupLabelList);
var l=e.getInstance()[ZaBackup.A_target];
if(l&&o&&o.length&&o[0]){
var c=o[0].widget;
var d=c.getSelection();
var r=(d instanceof AjxVector)?d.getArray():(d instanceof Array)?d:[d];
var t=c.getSelectionCount();
if(r&&r.length&&t==1){
var n=r[0];
var u=n[ZaBackupLabel.A_live];
var s=(u==1||u==true);
if(this._popupOperations[ZaOperation.ABORT_BACKUP]){
this._popupOperations[ZaOperation.ABORT_BACKUP].enabled=s
}}else{
if(this._popupOperations[ZaOperation.ABORT_BACKUP]){
this._popupOperations[ZaOperation.ABORT_BACKUP].enabled=false
}}}}};
ZaController.changeActionsStateMethods.ZaBackupsViewController.push(ZaBackupsViewController.changeActionsStateMethod);
ZaBackupsViewController.prototype.getAppBarAction=function(){
if(AjxUtil.isEmpty(this._appbarOperation)){
this._appbarOperation[ZaOperation.HELP]=new ZaOperation(ZaOperation.HELP,ZaMsg.TBB_Help,ZaMsg.TBB_Help_tt,"Help","Help",new AjxListener(this,this._helpButtonListener));
this._appbarOperation[ZaOperation.CLOSE]=new ZaOperation(ZaOperation.CLOSE,ZaMsg.TBB_Close,ZaMsg.ALTBB_Close_tt,"","",new AjxListener(this,this.closeButtonListener))
}
return this._appbarOperation
};
ZaBackupsViewController.prototype.getAppBarOrder=function(){
if(AjxUtil.isEmpty(this._appbarOrder)){
this._appbarOrder.push(ZaOperation.HELP);
this._appbarOrder.push(ZaOperation.CLOSE)
}
return this._appbarOrder
};
function ZaBackupLabelViewController(t,e){
ZaXFormViewController.call(this,t,e,"ZaBackupLabelViewController");
this._UICreated=false;
this._helpURL=location.pathname+"help/admin/html/backup_feature/starting_a_backup_session.htm?locid="+AjxEnv.DEFAULT_LOCALE;
this.objType=0;
this.tabConstructor=ZaBackupLabelXFormView
}
ZaBackupLabelViewController.prototype=new ZaXFormViewController();
ZaBackupLabelViewController.prototype.constructor=ZaBackupLabelViewController;
ZaController.initPopupMenuMethods.ZaBackupLabelViewController=new Array();
ZaController.setViewMethods.ZaBackupLabelViewController=new Array();
ZaBackupLabelViewController.prototype.show=function(e){
if(!this.selectExistingTabByItemId(e[ZaBackupLabel.A_label])){
this._setView(e,true);
this.setDirty(false)
}};
ZaBackupLabelViewController.setViewMethod=function(e){
if(!this._UICreated){
this._createUI()
}
ZaApp.getInstance().pushView(this.getContentViewId());
this._view.setDirty(false);
this._view.setObject(e);
this._currentObject=e
};
ZaController.setViewMethods.ZaBackupLabelViewController.push(ZaBackupLabelViewController.setViewMethod);
ZaBackupLabelViewController.initPopupMenuMethod=function(){
this._popupOperations.push(new ZaOperation(ZaOperation.MAIL_RESTORE,com_zimbra_backuprestore.BNR_TBB_RestoreMailbox,com_zimbra_backuprestore.BNR_TBB_Restore_tt,"RestoreMailbox","RestoreMailboxDis",new AjxListener(this,ZaBackupLabelViewController.prototype._restoreMailListener)))
};
ZaController.initPopupMenuMethods.ZaBackupLabelViewController.push(ZaBackupLabelViewController.initPopupMenuMethod);
ZaBackupLabelViewController.prototype.nextPageListener=function(e){
this._currentObject=this._view.getObject();
if(this._currentObject[ZaModel.currentTab]==1){
this._currentObject[ZaBackup.A_accountListOffset]=(this._currentObject[ZaBackup.A_pageNumber]*ZaSettings.RESULTSPERPAGE);
this._currentObject[ZaBackup.A_accountListCount]=ZaSettings.RESULTSPERPAGE;
this._currentObject[ZaBackup.A_pageNumber]++
}else{
if(this._currentObject[ZaModel.currentTab]==2){
this._currentObject[ZaBackup.A_failedAccountListOffset]=(this._currentObject[ZaBackup.A_failedAccPageNumber]*ZaSettings.RESULTSPERPAGE);
this._currentObject[ZaBackup.A_failedAccountListCount]=ZaSettings.RESULTSPERPAGE;
this._currentObject[ZaBackup.A_failedAccPageNumber]++
}}
this._view.setObject(this._currentObject)
};
ZaBackupLabelViewController.prototype.prevPageListener=function(e){
this._currentObject=this._view.getObject();
if(this._currentObject[ZaModel.currentTab]==1){
if(this._currentObject[ZaBackup.A_pageNumber]<1){
return
}
this._currentObject[ZaBackup.A_pageNumber]--;
this._currentObject[ZaBackup.A_accountListOffset]=((this._currentObject[ZaBackup.A_pageNumber]-1)*ZaSettings.RESULTSPERPAGE);
this._currentObject[ZaBackup.A_accountListCount]=ZaSettings.RESULTSPERPAGE
}
if(this._currentObject[ZaModel.currentTab]==2){
if(this._currentObject[ZaBackup.A_failedAccPageNumber]<1){
return
}
this._currentObject[ZaBackup.A_failedAccPageNumber]--;
this._currentObject[ZaBackup.A_failedAccountListOffset]=((this._currentObject[ZaBackup.A_failedAccPageNumber]-1)*ZaSettings.RESULTSPERPAGE);
this._currentObject[ZaBackup.A_failedAccountListCount]=ZaSettings.RESULTSPERPAGE
}
this._view.setObject(this._currentObject)
};
ZaBackupLabelViewController.prototype._restoreMailListener=function(c){
try{
this._newSingleAccountRestoreWizard=new AccountRestoreXWizard(this._container);
var l=new ZaRestore();
var e=this._view.getMyForm();
if(e){
var t=e.getItemsById("accounts_list")[0].widget.getSelection();
var o=t.length;
if(t&&o>0){
l.restoreRequest[ZaRestore.A_restoreAllAcc]=false;
var n=[];
for(var s=0;
s<o;
s++){
n.push(t[s].name)
}
l.restoreRequest[ZaRestore.A_accountNames]=n
}
var d=e.getInstance();
if(d){
l.restoreRequest[ZaRestore.A_target]=d[ZaBackup.A_target];
l.restoreRequest[ZaRestore.A_toServer]=d[ZaBackup.A_serverId];
l.restoreRequest[ZaRestore.A_restoreTo]=ZaRestore.TO_PIT;
l.restoreRequest[ZaRestore.A_restoreToTime]=new Date(d.start)
}}
this._newSingleAccountRestoreWizard.setObject(l);
this._newSingleAccountRestoreWizard.popup()
}
catch(r){
this._handleException(r,"ZaBackupLabelViewController.prototype._restoreMailListener",null,false)
}
return
};
ZaBackupLabelViewController.prototype._createUI=function(){
this._contentView=this._view=new this.tabConstructor(this._container);
this._initPopupMenu();
var e=new Object();
e[ZaAppViewMgr.C_APP_CONTENT]=this._view;
ZaApp.getInstance().getAppViewMgr().createView(this.getContentViewId(),e);
this._UICreated=true;
ZaApp.getInstance()._controllers[this.getContentViewId()]=this
};
ZaBackupLabelViewController.prototype._handleException=function(e,s,n,t,o){
if(e.code&&(e.code==ZmCsfeException.INVALID_BACKUP_TARGET)){
this._execFrame={
obj:o,func:s,args:n,restartOnError:t};
this._errorDialog.registerCallback(DwtDialog.OK_BUTTON,this._errorDialogCallback,this);
this.popupErrorDialog(com_zimbra_backuprestore.BNR_InvalidBackupTargetERROR,e)
}else{
if(e.code&&(e.code==ZmCsfeException.NO_LABELS_FOUND)){
this._execFrame={
obj:o,func:s,args:n,restartOnError:t};
this._errorDialog.registerCallback(DwtDialog.OK_BUTTON,this._errorDialogCallback,this);
this.popupErrorDialog(com_zimbra_backuprestore.BNR_NoLabelsFoundTitle,e)
}else{
ZaController.prototype._handleException.call(this,e,s,n,t,o)
}}};
ZaBackupLabelViewController.prototype.getAppBarAction=function(){
if(AjxUtil.isEmpty(this._appbarOperation)){
this._appbarOperation[ZaOperation.HELP]=new ZaOperation(ZaOperation.HELP,ZaMsg.TBB_Help,ZaMsg.TBB_Help_tt,"Help","Help",new AjxListener(this,this._helpButtonListener));
this._appbarOperation[ZaOperation.CLOSE]=new ZaOperation(ZaOperation.CLOSE,ZaMsg.TBB_Close,ZaMsg.ALTBB_Close_tt,"","",new AjxListener(this,this.closeButtonListener))
}
return this._appbarOperation
};
ZaBackupLabelViewController.prototype.getAppBarOrder=function(){
if(AjxUtil.isEmpty(this._appbarOrder)){
this._appbarOrder.push(ZaOperation.HELP);
this._appbarOrder.push(ZaOperation.CLOSE)
}
return this._appbarOrder
};
function ZaBNRAccMiniListView(n,o,t,e){
t=DwtControl.ABSOLUTE_STYLE;
ZaAccMiniListView.call(this,n,o,t,e,undefined,"ZaBNRAccMiniListView",true)
}
ZaBNRAccMiniListView.prototype=new ZaAccMiniListView;
ZaBNRAccMiniListView.prototype.constructor=ZaBNRAccMiniListView;
ZaBNRAccMiniListView.prototype.toString=function(){
return"ZaBNRAccMiniListView"
};
ZaBNRAccMiniListView.prototype._createItemHtml=function(l,o,c){
var r=new Array(50);
var e=document.createElement("div");
e[DwtListView._STYLE_CLASS]="Row";
e[DwtListView._SELECTED_STYLE_CLASS]=e[DwtListView._STYLE_CLASS]+"-"+DwtCssStyle.SELECTED;
e.className=e[DwtListView._STYLE_CLASS];
this.associateItemWithElement(l,e,DwtListView.TYPE_LIST_ITEM);
var d=0;
r[d++]="<table width='100%' cellspacing='2' cellpadding='0'>";
r[d++]="<tr>";
if(this._headerList){
var n=this._headerList.length;
for(var s=0;
s<n;
s++){
var t=this._headerList[s]._field;
if(t!=null){
if(t.indexOf(ZaAccount.A_name)==0){
r[d++]="<td align='left' width="+this._headerList[s]._width+"><nobr>";
r[d++]=AjxStringUtil.htmlEncode(l[ZaAccount.A_name]);
r[d++]="</nobr></td>"
}else{
if(t.indexOf(ZaBackupLabel.A_status)==0){
r[d++]="<td align=left height=20px  width='";
r[d++]=this._headerList[s]._width;
r[d++]="'>";
switch(l[ZaBackupLabel.A_status]){
case ZaBackupLabel.STATUS_NOTSTARTED:r[d++]=AjxStringUtil.htmlEncode(com_zimbra_backuprestore.BNR_NotStarted);
break;
case ZaBackupLabel.STATUS_INPROGRESS:r[d++]=AjxStringUtil.htmlEncode(com_zimbra_backuprestore.BNR_InProgress);
break;
case ZaBackupLabel.STATUS_COMPLETED:r[d++]=AjxStringUtil.htmlEncode(com_zimbra_backuprestore.BNR_Completed);
break;
case ZaBackupLabel.STATUS_ERROR:r[d++]=AjxStringUtil.htmlEncode(com_zimbra_backuprestore.BNR_Error);
break
}
r[d++]="</td>"
}else{
if(t.indexOf(ZaBackupLabel.A_errorMessage)==0){
r[d++]="<td align='left' width="+this._headerList[s]._width+"><nobr>";
r[d++]=AjxStringUtil.htmlEncode(l[ZaBackupLabel.A_errorMessage]);
r[d++]="</nobr></td>"
}}}}}}else{
if(typeof(l)=="object"){
r[d++]="<td width=100%>";
r[d++]=AjxStringUtil.htmlEncode(l.name);
r[d++]="</td>"
}else{
r[d++]="<td width=100%>";
r[d++]=AjxStringUtil.htmlEncode(String(l));
r[d++]="</td>"
}}
r[d++]="</tr></table>";
e.innerHTML=r.join("");
return e
};
ZaBNRAccMiniListView.prototype._setNoResultsHtml=function(){
var e=new AjxBuffer();
var t=document.createElement("div");
e.append("<table width='100%' cellspacing='0' cellpadding='1'>","<tr><td class='NoResults'><br>&nbsp","</td></tr></table>");
t.innerHTML=e.toString();
this._addRow(t)
};
ZaBNRAccMiniListView.prototype._sortColumn=function(t,o){
if(o){
var e=function(s,n){
return(s<n)?1:((s>n)?-1:0)
};
this.getList().sort(e)
}else{
this.getList().sort()
}};
ZaBNRAccMiniListView.prototype.setCrtInstance=function(e,t){
this._crtInstance=ZaUtil.deepCloneObject(e);
this._isFaieldAccount=t
};
ZaBNRAccMiniListView.prototype._loadMsg=function(t){
var e=new AjxCallback(this,this.updateMoreItems);
if(!this._isFaieldAccount){
this._crtInstance[ZaBackup.A_accountListOffset]=this._crtInstance[ZaBackup.A_pageNumber]*ZaSettings.RESULTSPERPAGE;
this._crtInstance[ZaBackup.A_accountListCount]=ZaSettings.RESULTSPERPAGE;
this._crtInstance[ZaBackup.A_pageNumber]++;
ZaBackup.queryBackups(this._crtInstance,e)
}else{
if(this._currentObject[ZaModel.currentTab]==2){
this._crtInstance[ZaBackup.A_failedAccountListOffset]=(this._crtInstance[ZaBackup.A_failedAccPageNumber]*ZaSettings.RESULTSPERPAGE);
this._crtInstance[ZaBackup.A_failedAccountListCount]=ZaSettings.RESULTSPERPAGE;
this._crtInstance[ZaBackup.A_failedAccPageNumber]++;
ZaBackup.queryFailedAccounts(this._crtInstance,e)
}}};
ZaBNRAccMiniListView.prototype.updateMoreItems=function(s){
if(s.isException&&s.isException()){
ZaApp.getInstance().getCurrentController()._handleException(s.getException(),"ZaBackupListView.prototype.updateMoreItems");
return
}else{
var t;
if(s.getResponse){
t=s.getResponse()
}else{
if(s.Body.BackupQueryResponse){
t=s
}}
var n=null;
var e=new ZaBackupLabel();
if(t.Body.BackupQueryResponse.backup){
n=t.Body.BackupQueryResponse.backup;
if(!(n instanceof Array)){
e.initFromJS(n)
}else{
e.initFromJS(n[0])
}
var o=e[ZaBackupLabel.A_accounts];
this.replenish(AjxVector.fromArray(o))
}
if(e[ZaBackup.A_more]){
this.setScrollHasMore(true)
}}};
function ZaBackupLabelXFormView(e){
ZaTabView.call(this,e,"ZaBackupLabelXFormView","DwtTabView ZaXFormListView","BACKUP_LABEL_VIEW");
this.initForm(ZaBackupLabel.myXModel,this.getMyXForm());
this._localXForm.addListener(DwtEvent.XFORMS_FORM_DIRTY_CHANGE,new AjxListener(this,ZaBackupLabelXFormView.prototype.handleXFormChange));
this._localXForm.setController(ZaApp.getInstance())
}
ZaBackupLabelXFormView.prototype=new ZaTabView();
ZaBackupLabelXFormView.prototype.constructor=ZaBackupLabelXFormView;
ZaTabView.XFormModifiers.ZaBackupLabelXFormView=new Array();
ZaBackupLabelXFormView.prototype.handleXFormChange=function(){
var e=this._localXForm.getInstance();
if(e&&e[ZaModel.currentTab]==2){
if(ZaApp.getInstance().getCurrentController()){}}else{
if(e&&e[ZaModel.currentTab]==1){
if(ZaApp.getInstance().getCurrentController()){}}}};
ZaBackupLabelXFormView.prototype.getTabIcon=function(){
return"Backup"
};
ZaBackupLabelXFormView.prototype.getTabTitle=function(){
if(this._containedObject){
return this._containedObject.label
}else{
return this.getTitle()
}};
ZaBackupLabelXFormView.prototype.getTabToolTip=function(){
if(this._containedObject){
return com_zimbra_backuprestore.BNR_tt_tab_backuplabel+" "+this._containedObject.label
}else{
return""
}};
ZaBackupLabelXFormView.prototype.getObject=function(){
return this._localXForm.getInstance()
};
ZaBackupLabelXFormView.prototype.setObject=function(e){
this._containedObject=e;
this._containedObject.id=e[ZaBackupLabel.A_label];
if(!e[ZaModel.currentTab]){
this._containedObject[ZaModel.currentTab]="1"
}else{
this._containedObject[ZaModel.currentTab]=e[ZaModel.currentTab]
}
this._containedObject[ZaBackup.A_accountListCount]=ZaSettings.RESULTSPERPAGE;
this._localXForm.setInstance(this._containedObject);
var t=new AjxCallback(this,ZaBackupLabelXFormView.prototype.queryBackupsCallback,{
show:true}
);
ZaBackup.queryBackups(this._containedObject,t);
if(!appNewUI){
this.updateTab()
}};
ZaBackupLabelXFormView.prototype.getTitle=function(){
return com_zimbra_backuprestore.BNR_view_title
};
ZaBackupLabelXFormView.accSelectionListener=function(e){
if(e.detail==DwtListView.ITEM_DBL_CLICKED){
if(e.item){
var t="";
if(e.item[ZaBackupLabel.A_status]==ZaBackupLabel.STATUS_ERROR){
t=AjxMessageFormat.format(com_zimbra_backuprestore.BNR_accountErrorMsg,[e.item.name]);
ZaApp.getInstance().getCurrentController().popupErrorDialog(t,{
msg:e.item[ZaBackupLabel.A_errorMessage],detail:e.item[ZaBackupLabel.A_content]}
,null,DwtMessageDialog.INFO_STYLE)
}else{
if(e.item[ZaBackupLabel.A_status]==ZaBackupLabel.STATUS_COMPLETED){
t=AjxMessageFormat.format(com_zimbra_backuprestore.BNR_accountCompletedMsg,[e.item.name])
}else{
if(e.item[ZaBackupLabel.A_status]==ZaBackupLabel.STATUS_INPROGRESS){
t=AjxMessageFormat.format(com_zimbra_backuprestore.BNR_accountInProgressMsg,[e.item.name])
}else{
if(e.item[ZaBackupLabel.A_status]==ZaBackupLabel.STATUS_NOTSTARTED){
t=AjxMessageFormat.format(com_zimbra_backuprestore.BNR_accountNotStartedMsg,[e.item.name])
}}}
ZaApp.getInstance().getCurrentController().popupMsgDialog(t)
}}}};
ZaBackupLabelXFormView.prototype.queryFailedAccCallback=function(n,s){
if(!s){
var c=new ZmCsfeException(ZMsg.errorEmptyResponse,ZmCsfeException.CSFE_SVC_ERROR,"ZaBackupLabelXFormView.prototype.queryBackupsCallback");
ZaApp.getInstance().getCurrentController()._handleException(c,"ZaBackupLabelXFormView.prototype.queryBackupsCallback");
return
}
if(s.isException&&s.isException()){
ZaApp.getInstance().getCurrentController()._handleException(s.getException(),"ZaBackupLabelXFormView.prototype.queryBackupsCallback");
return
}else{
var r;
if(s.getResponse){
r=s.getResponse()
}else{
if(s.Body.BackupQueryResponse){
r=s
}}
var t=[];
var d=null;
var u=this._localXForm.getInstance();
var o=new ZaBackupLabel();
if(r.Body.BackupQueryResponse.backup){
d=r.Body.BackupQueryResponse.backup;
if(!(d instanceof Array)){
o.initFromJS(d)
}else{
o.initFromJS(d[0])
}}
var l=u[ZaBackupLabel.A_failedAccounts]._version?u[ZaBackupLabel.A_failedAccounts]._version:1;
u[ZaBackupLabel.A_failedAccounts]=o[ZaBackupLabel.A_accounts];
u[ZaBackupLabel.A_failedAccounts]._version=l+1;
u[ZaBackup.A_moreFailedAcc]=o[ZaBackup.A_more];
if(u[ZaModel.currentTab]==2){
if(ZaApp.getInstance().getCurrentController()){}}
if(u[ZaBackup.A_more]){
var e=this._localXForm.getItemById(this._localXForm.getId()+"_failed_accounts_list").getWidget();
if(e){
e.setCrtInstance(u,true);
e.setScrollHasMore(true)
}}
this._localXForm.setInstance(u)
}};
ZaBackupLabelXFormView.prototype.queryBackupsCallback=function(n,s){
ZaBackup.queryFailedAccounts(this._containedObject,this.queryFailedAccCallback.bind(this,{
show:true}
));
if(!s){
var l=new ZmCsfeException(ZMsg.errorEmptyResponse,ZmCsfeException.CSFE_SVC_ERROR,"ZaBackupLabelXFormView.prototype.queryBackupsCallback");
ZaApp.getInstance().getCurrentController()._handleException(l,"ZaBackupLabelXFormView.prototype.queryBackupsCallback");
return
}
if(s.isException&&s.isException()){
ZaApp.getInstance().getCurrentController()._handleException(s.getException(),"ZaBackupLabelXFormView.prototype.queryBackupsCallback");
return
}else{
var r;
if(s.getResponse){
r=s.getResponse()
}else{
if(s.Body.BackupQueryResponse){
r=s
}}
var e=[];
var c=null;
var d=new ZaBackupLabel();
var t=this._localXForm.getInstance();
if(t[ZaBackupLabel.A_accounts]){
d[ZaBackupLabel.A_accounts]._version=t[ZaBackupLabel.A_accounts]._version+1
}else{
d[ZaBackupLabel.A_accounts]._version=0
}
if(r.Body.BackupQueryResponse.backup){
c=r.Body.BackupQueryResponse.backup;
if(!(c instanceof Array)){
d.initFromJS(c)
}else{
d.initFromJS(c[0])
}}
if(t[ZaBackup.A_target]){
d[ZaBackup.A_target]=t[ZaBackup.A_target]
}
if(t[ZaBackup.A_serverName]){
d[ZaBackup.A_serverName]=t[ZaBackup.A_serverName]
}
if(t[ZaBackup.A_serverId]){
d[ZaBackup.A_serverId]=t[ZaBackup.A_serverId]
}
d[ZaBackup.A_backupListOffset]=null;
d[ZaBackup.A_backupListCount]=null;
d[ZaModel.currentTab]=t[ZaModel.currentTab];
if(t[ZaBackup.A_accountListOffset]){
d[ZaBackup.A_accountListOffset]=t[ZaBackup.A_accountListOffset]
}
if(t[ZaBackup.A_accountListCount]){
d[ZaBackup.A_accountListCount]=t[ZaBackup.A_accountListCount]
}
if(t[ZaBackup.A_pageNumber]){
d[ZaBackup.A_pageNumber]=t[ZaBackup.A_pageNumber]
}
if(d[ZaModel.currentTab]==1){
if(ZaApp.getInstance().getCurrentController()){}}
if(d[ZaBackup.A_more]){
var o=this._localXForm.getItemById(this._localXForm.getId()+"_accounts_list").getWidget();
o.setCrtInstance(d,false);
o.setScrollHasMore(true)
}
this._localXForm.setInstance(d)
}};
ZaBackupLabelXFormView.getCustomWidth=function(){
try{
var t=this.getForm().parent.getHtmlElement();
var e=parseInt(t.style.width);
if(isNaN(e)){
e=t.clientWidth?t.clientWidth:t.offsetWidth
}
return e
}
catch(o){}
return"100%"
};
ZaBackupLabelXFormView.getCustomHeight=function(){
var d=this.getForm().parent;
try{
var r=d.getSize().y;
var n=this.getForm().getItemsById("xform_header");
var o=0;
if(n){
var e=n[0];
if(e.getContainer()){
e=e.getContainer()
}else{
e=e.getHtmlElement()
}
o=Dwt.getSize(e).y
}
var c=this.getForm().getItemsById("xform_tabbar");
var l=0;
if(c){
var t=c[0];
if(t.getContainer()){
t=t.getContainer()
}else{
t=t.getHtmlElement()
}
l=Dwt.getSize(t).y
}
var u=2;
if(AjxEnv.isIE){
u=3
}
if(r>(o+u+l)){
return r-o-u-l
}}
catch(s){}
return"100%"
};
ZaBackupLabelXFormView.myXFormModifier=function(t){
var e=new Array();
var o=1;
e[0]=new ZaListHeaderItem(ZaAccount.A_name,ZaMsg.ALV_NameAddress_col,null,"250",null,null,true,true);
e[1]=new ZaListHeaderItem(ZaBackupLabel.A_status,com_zimbra_backuprestore.BNR_Status_col,null,"250",null,null,true,true);
e[2]=new ZaListHeaderItem(ZaBackupLabel.A_errorMessage,com_zimbra_backuprestore.BNR_ErrorMsg_col,null,"auto",null,null,true,true);
e[3]=new ZaListHeaderItem(null,null,null,5,null,null,false,true);
t.tableCssStyle="width:100%;overflow:auto;";
t.numCols=1;
t.items=[{
type:_GROUP_,cssClass:"ZmSelectedHeaderBg",colSpan:"2",id:"xform_header",items:[{
type:_GROUP_,numCols:4,colSizes:["32px","350px","100px","*"],items:[{
type:_AJX_IMAGE_,src:"Server_32",label:null,rowSpan:2,visibilityChecks:[]}
,{
type:_OUTPUT_,ref:ZaBackup.A_serverName,label:null,cssClass:"AdminTitle",rowSpan:2,visibilityChecks:[]}
,{
type:_OUTPUT_,ref:ZaBackupLabel.A_label,label:com_zimbra_backuprestore.BNR_Label,visibilityChecks:[]}
,{
type:_OUTPUT_,ref:ZaBackupLabel.A_status,label:com_zimbra_backuprestore.BNR_Status,visibilityChecks:[]}
]}
],cssStyle:"padding-top:5px; padding-bottom:5px"}
,{
type:_TAB_BAR_,ref:ZaModel.currentTab,colSpan:"2",choices:[{
value:1,label:com_zimbra_backuprestore.BNR_TABT_Accounts}
,{
value:2,label:com_zimbra_backuprestore.BNR_TABT_Errors}
,{
value:3,label:com_zimbra_backuprestore.BNR_TABT_FailedAccounts}
],cssClass:"ZaTabBar",id:"xform_tabbar"}
,{
type:_SWITCH_,items:[{
type:_ZATABCASE_,caseKey:1,numCols:1,width:"100%",paddingStyle:"padding:0px",getCustomPaddingStyle:"return 0",items:[{
ref:ZaBackupLabel.A_accounts,cssClass:"ZaFullPageXFormListView",onSelection:ZaBackupLabelXFormView.accSelectionListener,type:_DWT_LIST_,forceUpdate:true,createPopupMenu:ZaBackupsXFormView.createPopupMenu,hideHeader:false,multiselect:true,widgetClass:ZaBNRAccMiniListView,headerList:e,id:"accounts_list",visibilityChecks:[],enableDisableChecks:[],getCustomWidth:ZaBackupLabelXFormView.getCustomWidth,getCustomHeight:ZaBackupLabelXFormView.getCustomHeight}
]}
,{
type:_ZATABCASE_,caseKey:2,numCols:1,items:[{
type:_SPACER_}
,{
type:_REPEAT_,showRemoveButton:false,showAddButton:false,ref:ZaBackupLabel.A_error,visibilityChecks:[[XForm.checkInstanceValueNotEmty,ZaBackupLabel.A_error]],visibilityChangeEventSources:[ZaBackupLabel.A_error],items:[{
type:_DWT_ALERT_,style:DwtAlert.CRITICAL,iconVisible:true,content:null,width:"400px",ref:".",getDisplayValue:function(n){
if(n){
return[n[ZaBackupLabel.A_errorMessage],n[ZaBackupLabel.A_content]].join("<br/>")
}else{
return""
}}
,align:_CENTER_}
]}
,{
type:_DWT_ALERT_,style:DwtAlert.INFORMATION,iconVisible:true,content:com_zimbra_backuprestore.BNR_AccNoErrors,width:"400px",ref:null,visibilityChecks:[[XForm.checkInstanceValueEmty,ZaBackupLabel.A_error]],visibilityChangeEventSources:[ZaBackupLabel.A_error],align:_CENTER_}
]}
,{
type:_ZATABCASE_,caseKey:3,numCols:1,width:"100%",paddingStyle:"padding:0px",getCustomPaddingStyle:"return 0",items:[{
ref:ZaBackupLabel.A_failedAccounts,cssClass:"ZaFullPageXFormListView",visibilityChecks:[],enableDisableChecks:[],onSelection:ZaBackupLabelXFormView.accSelectionListener,type:_DWT_LIST_,forceUpdate:true,createPopupMenu:ZaBackupsXFormView.createPopupMenu,hideHeader:false,multiselect:true,widgetClass:ZaBNRAccMiniListView,headerList:e,id:"failed_accounts_list",getCustomWidth:ZaBackupLabelXFormView.getCustomWidth,getCustomHeight:ZaBackupLabelXFormView.getCustomHeight}
]}
]}
]
};
ZaTabView.XFormModifiers.ZaBackupLabelXFormView.push(ZaBackupLabelXFormView.myXFormModifier);
function ZaBackupXWizard(e){
ZaXWizardDialog.call(this,e,null,com_zimbra_backuprestore.BNR_BackupWizardTitle,"550px","400px","ZaBackupXWizard");
this.stepChoices=[{
label:com_zimbra_backuprestore.BNR_SelectDestinationStep_Title,value:1}
,{
label:com_zimbra_backuprestore.BNR_BackupSelectAccountsStep_Title,value:2}
,{
label:com_zimbra_backuprestore.BNR_BackupBackingUp_Title,value:3}
];
this.backupMethodChoices=[{
value:ZaBackup.METHOD_FULL,label:com_zimbra_backuprestore.BNR_BackupMethodFull}
,{
value:ZaBackup.METHOD_INCREMENTAL,label:com_zimbra_backuprestore.BNR_BackupMethodIncremental}
];
this.initForm(ZaServerBackup.myXModel,this.getMyXForm());
this._helpURL=ZaBackupXWizard.helpURL
}
ZaBackupXWizard.helpURL=location.pathname+"help/admin/html/backup_feature/starting_a_backup_session.htm?locid="+AjxEnv.DEFAULT_LOCALE;
ZaBackupXWizard.prototype=new ZaXWizardDialog;
ZaBackupXWizard.prototype.constructor=ZaBackupXWizard;
ZaBackupXWizard.prototype.miniType=2;
ZaXDialog.XFormModifiers.ZaBackupXWizard=new Array();
ZaBackupXWizard.prototype.handleXFormChange=function(){
if(this._containedObject[ZaModel.currentStep]==2){
this._button[DwtWizardDialog.PREV_BUTTON].setEnabled(true);
if((this._containedObject[ZaBackup.A_Accounts]&&this._containedObject[ZaBackup.A_Accounts].length>0)||this._containedObject[ZaServerBackup.A_backupAll]==1){
this._button[DwtWizardDialog.NEXT_BUTTON].setEnabled(true)
}else{
this._button[DwtWizardDialog.NEXT_BUTTON].setEnabled(false)
}
this._button[DwtWizardDialog.FINISH_BUTTON].setEnabled(false)
}
if(this._containedObject[ZaModel.currentStep]==3){
this._button[DwtWizardDialog.PREV_BUTTON].setEnabled(true);
this._button[DwtWizardDialog.NEXT_BUTTON].setEnabled(false);
this._button[DwtWizardDialog.FINISH_BUTTON].setEnabled(true)
}};
ZaBackupXWizard.prototype.setObject=function(e){
this._containedObject=e;
this._containedObject[ZaModel.currentStep]=e[ZaModel.currentStep]||1;
this._containedObject.activateSearch=e.activateSearch||1;
this._containedObject.poolNumPages=e.poolNumPages||1;
this._containedObject.poolPagenum=e.poolPagenum||0;
if(e._uuid){
this._containedObject._uuid=e._uuid
}
this._localXForm.setInstance(this._containedObject)
};
ZaBackupXWizard.prototype.popup=function(e){
ZaXWizardDialog.prototype.popup.call(this,e);
this._button[DwtWizardDialog.NEXT_BUTTON].setEnabled(true);
this._button[DwtWizardDialog.FINISH_BUTTON].setEnabled(false);
this._button[DwtWizardDialog.PREV_BUTTON].setEnabled(false)
};
ZaBackupXWizard.prototype.goNext=function(){
var e=this._localXForm.getInstance();
if(e[ZaModel.currentStep]==2||(e[ZaBackup.A_method]==ZaBackup.METHOD_INCREMENTAL&&e[ZaModel.currentStep]==1)){
var n=ZaApp.getInstance().getServerByName(e[ZaBackup.A_serverName]);
var t=false;
if((n.attrs[ZaServer.A_zimbraBackupMode]==ZaHotBackup.BACKUP_MODE_AUTOGROUP)||(!n.attrs[ZaServer.A_zimbraBackupMode]&&ZaApp.getInstance().getGlobalConfig().attrs[ZaGlobalConfig.A_zimbraBackupMode]==ZaHotBackup.BACKUP_MODE_AUTOGROUP)){
t=true;
if(e[ZaBackup.A_method]==ZaBackup.METHOD_INCREMENTAL){
ZaApp.getInstance().getCurrentController().popupErrorDialog(com_zimbra_backuprestore.ERROR_NO_INCREMENTALS_IN_AUTOGROUPED_MODE);
return
}}
this._button[DwtWizardDialog.NEXT_BUTTON].setEnabled(false);
this._button[DwtWizardDialog.PREV_BUTTON].setEnabled(true);
this._button[DwtWizardDialog.FINISH_BUTTON].setEnabled(true);
var o=[];
if((e[ZaBackup.A_method]==ZaBackup.METHOD_INCREMENTAL)){}else{
if(e[ZaServerBackup.A_backupAll]==1){
o=["all"]
}else{
o=e[ZaBackup.A_Accounts]
}}
if(e[ZaBackup.A_method]==ZaBackup.METHOD_INCREMENTAL&&this._containedObject[ZaModel.currentStep]==1){
this._containedObject[ZaModel.currentStep]++;
e.doneMsg=com_zimbra_backuprestore.BNR_BackupStarting
}
ZaBackup.runBackupQuery(n.id,e[ZaBackup.A_method],(t?null:e[ZaBackup.A_target]),o,null,new AjxCallback(this,ZaBackupXWizard.prototype.backupQueryCallback))
}else{
if(e[ZaModel.currentStep]==1){
if(this.checkPath(e)){
this._button[DwtWizardDialog.PREV_BUTTON].setEnabled(true);
this._button[DwtWizardDialog.NEXT_BUTTON].setText(com_zimbra_backuprestore.BNR_BtnRunbackup);
if((e[ZaBackup.A_Accounts]&&e[ZaBackup.A_Accounts].length>0)||e[ZaServerBackup.A_backupAll]==1){
this._button[DwtWizardDialog.NEXT_BUTTON].setEnabled(true)
}else{
this._button[DwtWizardDialog.NEXT_BUTTON].setEnabled(false)
}}else{
return
}}}
ZaXWizardDialog.prototype.goNext.call(this)
};
ZaBackupXWizard.prototype.goPrev=function(){
var e=this._localXForm.getInstance();
if(this._containedObject[ZaModel.currentStep]==2||(this._containedObject[ZaModel.currentStep]==3&&(e[ZaBackup.A_method]==ZaBackup.METHOD_INCREMENTAL))){
this._button[DwtWizardDialog.PREV_BUTTON].setEnabled(false);
this._button[DwtWizardDialog.NEXT_BUTTON].setText(AjxMsg._next);
if(this._containedObject[ZaModel.currentStep]==3&&(e[ZaBackup.A_method]==ZaBackup.METHOD_INCREMENTAL)){
this._containedObject[ZaModel.currentStep]--
}}
this._button[DwtWizardDialog.NEXT_BUTTON].setEnabled(true);
this._button[DwtWizardDialog.FINISH_BUTTON].setEnabled(false);
ZaXWizardDialog.prototype.goPrev.call(this)
};
ZaBackupXWizard.prototype.createPathCallback=function(n){
try{
if(!n){
var t=new ZmCsfeException(ZMsg.errorEmptyResponse,ZmCsfeException.CSFE_SVC_ERROR,"ZaBackupXWizard.prototype.createPathCallback");
throw (t)
}
if(n.isException&&n.isException()){
throw (n.getException())
}else{
var e;
if(n.getResponse){
var e=n.getResponse();
if(e.Body.CheckDirectoryResponse.directory[0].exists){
this.goNext()
}else{
if(e.Body.CheckDirectoryResponse.directory[0].path){
var o=e.Body.CheckDirectoryResponse.directory[0].path.split("/");
if((o.length=4&&o[1]=="opt"&&o[2]=="zimbra")||(o.length=5&&o[1]=="opt"&&o[2]=="zimbra"&&o[4]=="")){
throw (new ZmCsfeException(AjxMessageFormat.format(com_zimbra_backuprestore.BNR_FailedToCreateTargetFolderOptZimbra,[e.Body.CheckDirectoryResponse.directory[0].path,"/opt/zimbra"]),ZmCsfeException.CSFE_SVC_ERROR,"ZaBackupXWizard.prototype.createPathCallback"))
}}
throw (new ZmCsfeException(AjxMessageFormat.format(com_zimbra_backuprestore.BNR_FailedToCreateTargetFolder,[e.Body.CheckDirectoryResponse.directory[0].path]),ZmCsfeException.CSFE_SVC_ERROR,"ZaBackupXWizard.prototype.createPathCallback"))
}}}
if(ZaApp.getInstance().dialogs.BackupTargetPathWarningDialog){
ZaApp.getInstance().dialogs.BackupTargetPathWarningDialog.popdown()
}}
catch(t){
if(ZaApp.getInstance().dialogs.BackupTargetPathWarningDialog){
ZaApp.getInstance().dialogs.BackupTargetPathWarningDialog.popdown()
}
ZaApp.getInstance().getCurrentController()._handleException(t,"ZaBackupXWizard.prototype.createPathCallback")
}};
ZaBackupXWizard.prototype.createPath=function(e){
try{
e[ZaBackup.A_create]=true;
var o=ZaBackup.queryTargetPath(e,new AjxCallback(this,ZaBackupXWizard.prototype.createPathCallback))
}
catch(t){
ZaApp.getInstance().getCurrentController()._handleException(t,"ZaBackupXWizard.prototype.createPath")
}};
ZaBackupXWizard.prototype.checkPath=function(e,o){
try{
var n=ZaBackup.queryTargetPath(e,null);
if(n&&n.Body&&n.Body.CheckDirectoryResponse&&n.Body.CheckDirectoryResponse.directory&&n.Body.CheckDirectoryResponse.directory[0]){
if(n.Body.CheckDirectoryResponse.directory[0].exists&&n.Body.CheckDirectoryResponse.directory[0].readable&&n.Body.CheckDirectoryResponse.directory[0].writable){
return true
}else{
if(!n.Body.CheckDirectoryResponse.directory[0].exists){
var e=this._localXForm.getInstance();
var s=e[ZaBackup.A_create];
if(!s){
if(!ZaApp.getInstance().dialogs.BackupTargetPathWarningDialog){
ZaApp.getInstance().dialogs.BackupTargetPathWarningDialog=new ZaMsgDialog(ZaApp.getInstance().getAppCtxt().getShell(),null,[DwtDialog.YES_BUTTON,DwtDialog.NO_BUTTON,DwtDialog.CANCEL_BUTTON])
}
ZaApp.getInstance().dialogs.BackupTargetPathWarningDialog.setMessage(AjxMessageFormat.format(com_zimbra_backuprestore.BNR_CreateTargetFolderQ,AjxStringUtil.htmlEncode(e[ZaBackup.A_target])),DwtMessageDialog.WARNING_STYLE);
ZaApp.getInstance().dialogs.BackupTargetPathWarningDialog.registerCallback(DwtDialog.YES_BUTTON,new AjxCallback(this,ZaBackupXWizard.prototype.createPath,[e]));
ZaApp.getInstance().dialogs.BackupTargetPathWarningDialog.popup()
}else{
ZaBackupXWizard.prototype.createPath.call(this,e)
}}else{
if(!n.Body.CheckDirectoryResponse.directory[0].writable){
var t=new ZmCsfeException(AjxMessageFormat.format(com_zimbra_backuprestore.BNR_TargetFolderNotWritable,[n.Body.CheckDirectoryResponse.directory[0].path]),ZmCsfeException.CSFE_SVC_ERROR,"ZaBackupXWizard.prototype.createPath");
throw (t)
}else{
if(!n.Body.CheckDirectoryResponse.directory[0].readable){
var t=new ZmCsfeException(AjxMessageFormat.format(com_zimbra_backuprestore.BNR_TargetFolderNotReadable,[n.Body.CheckDirectoryResponse.directory[0].path]),ZmCsfeException.CSFE_SVC_ERROR,"ZaBackupXWizard.prototype.createPath");
throw (t)
}}}}}}
catch(t){
ZaApp.getInstance().getCurrentController()._handleException(t,"ZaBackupXWizard.prototype.checkPath")
}
return false
};
ZaBackupXWizard.prototype.backupQueryCallback=function(l){
try{
if(!l){
var o=new ZmCsfeException(ZMsg.errorEmptyResponse,ZmCsfeException.CSFE_SVC_ERROR,"ZaBackupXWizard.prototype.backupQueryCallback");
throw (o)
}
if(l.isException&&l.isException()){
throw (l.getException())
}else{
var r;
if(l.getResponse){
r=l.getResponse();
if(r){
var e=this._localXForm.getInstance();
e[ZaBackup.A_label]=r.Body.BackupResponse.backup[0][ZaBackup.A_label];
e[ZaBackup.A_incrLabel]=r.Body.BackupResponse.backup[0][ZaBackup.A_incrLabel];
var s=[com_zimbra_backuprestore.BNR_BackupStarted,"<br/>"];
if(e[ZaBackup.A_label]){
s.push(com_zimbra_backuprestore.BNR_FullLabel);
s.push(" ");
s.push(e[ZaBackup.A_label]);
s.push("<br/>")
}
if(e[ZaBackup.A_incrLabel]){
s.push(com_zimbra_backuprestore.BNR_IncrementalLabel);
s.push(" ");
s.push(e[ZaBackup.A_incrLabel])
}
e.doneMsg=s.join("");
this._localXForm.setInstance(e);
var t=ZaApp.getInstance().getCurrentController();
if(t instanceof ZaBackupsViewController&&t._view&&t._view._localXForm){
var n=t._view._localXForm;
n.setInstanceValue(e[ZaBackup.A_target],ZaBackup.A_target)
}
if(t.refresh){
t.refresh()
}}}}}
catch(o){
ZaApp.getInstance().getCurrentController()._handleException(o,"ZaBackupXWizard.prototype.backupQueryCallback");
this.goPrev();
return
}};
ZaBackupXWizard.removeAllButtonHndlr=function(o){
var t=this.getForm();
var e=t.getInstance();
e[ZaBackup.A_Accounts]=new Array();
var n=e[ZaBackup.A_Accounts]?e[ZaBackup.A_Accounts]:[];
if(n.length>0){
t.parent._button[DwtWizardDialog.NEXT_BUTTON].setEnabled(true)
}else{
t.parent._button[DwtWizardDialog.NEXT_BUTTON].setEnabled(false)
}
this.getForm().setInstance(e)
};
ZaBackupXWizard.addAllButtonHndlr=function(d){
var t=this.getForm();
var m=t.getInstance();
var e=m[ZaBackup.A_Accounts]?m[ZaBackup.A_Accounts]:[];
var l=m[ZaBackup.A_accountPool];
var c=new Array();
if(l){
var o=l.length;
var u=e.length;
for(var n=0;
n<o;
n++){
var f=false;
for(var r=u-1;
r>=0;
r--){
if(e[r].id==l[n].id){
f=true;
break
}}
if(!f){
c.push(l[n])
}}}
c=c.concat(e);
m[ZaBackup.A_Accounts]=c;
m[ZaBackup.A_accountPool]=new Array();
var s=m[ZaBackup.A_Accounts]?m[ZaBackup.A_Accounts]:[];
if(s.length>0){
t.parent._button[DwtWizardDialog.NEXT_BUTTON].setEnabled(true)
}else{
t.parent._button[DwtWizardDialog.NEXT_BUTTON].setEnabled(false)
}
this.getForm().setInstance(m)
};
ZaBackupXWizard.addButtonHndlr=function(m){
var e=this.getForm();
var g=e.getInstance();
var f=e.getItemsById(ZaBackup.A_accountPool);
if(f&&(f instanceof Array)&&f[0]&&f[0].widget){
var p=f[0].widget.getSelection();
var n=g[ZaBackup.A_Accounts]?g[ZaBackup.A_Accounts]:[];
var u=(p instanceof AjxVector)?p.getArray():(p instanceof Array)?p:[p];
if(u){
u.sort(ZaItem.compareNamesDesc);
var s=[];
var c=n.length;
for(var l=0;
l<c;
l++){
s.push(n[l])
}
s.sort(ZaItem.compareNamesDesc);
var d=[];
var o=u.length;
for(var l=o-1;
l>=0;
l--){
var t=false;
c=s.length;
for(var r=c-1;
r>=0;
r--){
if(u[l].name==s[r].name){
t=true;
s.splice(r,c-r);
break
}}
if(!t){
n.push(u[l])
}}
g[ZaBackup.A_Accounts]=n
}}
if(n.length>0){
e.parent._button[DwtWizardDialog.NEXT_BUTTON].setEnabled(true)
}else{
e.parent._button[DwtWizardDialog.NEXT_BUTTON].setEnabled(false)
}
this.getForm().setInstance(g)
};
ZaBackupXWizard.removeButtonHndlr=function(u){
var e=this.getForm();
var f=e.getInstance();
var d=e.getItemsById(ZaBackup.A_Accounts);
if(d&&(d instanceof Array)&&d[0]&&d[0].widget){
var m=d[0].widget.getSelection();
var o=f[ZaBackup.A_Accounts]?f[ZaBackup.A_Accounts]:[];
o.sort(ZaItem.compareNamesDesc);
var n=[];
var c=(m instanceof AjxVector)?m.getArray():(m instanceof Array)?m:[m];
if(c){
c.sort(ZaItem.compareNamesDesc);
var t=c.length;
var l=o.length;
for(var r=0;
r<l;
r++){
n.push(o[r])
}
for(var r=t-1;
r>=0;
r--){
var l=n.length;
for(var s=l-1;
s>=0;
s--){
if(c[r].name==n[s].name){
o.splice(s,1);
n.splice(s,l-s)
}}}
f[ZaBackup.A_Accounts]=o
}}
if(o.length>0){
e.parent._button[DwtWizardDialog.NEXT_BUTTON].setEnabled(true)
}else{
e.parent._button[DwtWizardDialog.NEXT_BUTTON].setEnabled(false)
}
this.getForm().setInstance(f)
};
ZaBackupXWizard.addAllBtnEnabled=function(){
return !AjxUtil.isEmpty(this.getInstanceValue(ZaBackup.A_accountPool))
};
ZaBackupXWizard.removeAllBtnEnabled=function(){
return(this.instance&&this.instance[ZaBackup.A_Accounts]&&this.instance[ZaBackup.A_Accounts].length>0)
};
ZaBackupXWizard.forwardBtnEnabled=function(){
return(parseInt(this.getInstanceValue(ZaServerBackup.A_poolPagenum))<(parseInt(this.getInstanceValue(ZaServerBackup.A_poolNumPages))-1)&&this.getInstanceValue(ZaServerBackup.A_activateSearch)==1)
};
ZaBackupXWizard.backBtnEnabled=function(){
return(parseInt(this.getInstanceValue(ZaServerBackup.A_poolPagenum))>0&&this.getInstanceValue(ZaServerBackup.A_activateSearch)==1)
};
ZaBackupXWizard.accPoolSelectionListener=function(){
var e=this.widget.getSelection();
if(e&&e.length){
e.sort();
this.getModel().setInstanceValue(this.getInstance(),ZaServerBackup.A_src_acct_selection_pool,e)
}else{
this.getModel().setInstanceValue(this.getInstance(),ZaServerBackup.A_src_acct_selection_pool,null)
}};
ZaBackupXWizard.accTargetSelectionListener=function(){
var e=this.widget.getSelection();
if(e&&e.length){
e.sort();
this.getModel().setInstanceValue(this.getInstance(),ZaServerBackup.A_tgt_acct_selection_pool,e)
}else{
this.getModel().setInstanceValue(this.getInstance(),ZaServerBackup.A_tgt_acct_selection_pool,null)
}};
ZaBackupXWizard.isAutogroupedMode=function(){
var e=this.getInstance();
if(e){
var t=ZaApp.getInstance().getServerByName(e[ZaBackup.A_serverName]);
if(t.attrs[ZaServer.A_zimbraBackupMode]==ZaHotBackup.BACKUP_MODE_AUTOGROUP){
return true
}
if(!t.attrs[ZaServer.A_zimbraBackupMode]&&ZaApp.getInstance().getGlobalConfig().attrs[ZaGlobalConfig.A_zimbraBackupMode]==ZaHotBackup.BACKUP_MODE_AUTOGROUP){
return true
}}
return false
};
ZaBackupXWizard.isNotAutogroupedMode=function(){
return !ZaBackupXWizard.isAutogroupedMode.call(this)
};
ZaBackupXWizard.fwdPoolButtonHndlr=function(e){
var t=parseInt(this.getInstanceValue("/poolPagenum"));
this.setInstanceValue(t+1,"/poolPagenum");
ZaBackupXWizard.srchButtonHndlr.call(this,e)
};
ZaBackupXWizard.backPoolButtonHndlr=function(e){
var t=parseInt(this.getInstanceValue("/poolPagenum"))-1;
this.setInstanceValue(t,"/poolPagenum");
ZaBackupXWizard.srchButtonHndlr.call(this,e)
};
ZaBackupXWizard.srchButtonHndlr=function(o){
var t=this.getForm().getInstance();
var e=this.getForm().parent;
var n={};
n.types=[ZaSearch.ACCOUNTS,ZaSearch.RESOURCES];
n.query=["(","&",ZaSearch.getSearchByNameQuery(t[ZaSearch.A_query]),"(zimbraMailHost=",t[ZaBackup.A_serverName],"))"].join("");
n.limit=ZaSettings.RESULTSPERPAGE;
n.offset=t.poolPagenum*ZaSettings.RESULTSPERPAGE;
n.attrs=[ZaItem.A_zimbraId,ZaAccount.A_uid,ZaAccount.A_displayname,ZaResource.A_zimbraCalResType].join(",");
n.callback=new AjxCallback(e,ZaBackupXWizard.srchAccountsClbck);
t.activateSearch=0;
this.getForm().setInstance(t);
ZaSearch.searchDirectory(n)
};
ZaBackupXWizard.srchAccountsClbck=function(r){
var e=this._localXForm.getInstance();
try{
if(!r){
throw (new AjxException(ZaMsg.ERROR_EMPTY_RESPONSE_ARG,AjxException.UNKNOWN,"ZaBackupXWizard.srchAccountsClbck"))
}
if(r.isException()){
throw (r.getException())
}else{
var o=r.getResponse().Body.SearchDirectoryResponse;
var s=new ZaItemList(null);
s.loadFromJS(o);
e[ZaBackup.A_accountPool]=s.getArray();
var t=Math.ceil(o.searchTotal/ZaSettings.RESULTSPERPAGE);
e.poolNumPages=t
}}
catch(n){
ZaApp.getInstance().getCurrentController()._handleException(n,"ZaBackupXWizard.srchAccountsClbck")
}
e.activateSearch=1;
this._localXForm.setInstance(e)
};
ZaBackupXWizard.switchNextButton=function(o,t,e){
if(o==1||(e.getInstance()[ZaBackup.A_Accounts]&&e.getInstance()[ZaBackup.A_Accounts].length>0)){
e.parent._button[DwtWizardDialog.NEXT_BUTTON].setEnabled(true)
}else{
e.parent._button[DwtWizardDialog.NEXT_BUTTON].setEnabled(false)
}
this.setInstanceValue(o)
};
ZaBackupXWizard.myXFormModifier=function(s){
var n=new Array();
n[0]=new ZaListHeaderItem("type",ZaMsg.ALV_Type_col,null,"34px",null,"objectClass",true,true);
n[1]=new ZaListHeaderItem(ZaAccount.A_name,ZaMsg.ALV_Name_col,null,"auto",null,ZaAccount.A_name,true,true);
var o={
type:_CASE_,numCols:2,caseKey:1,align:_LEFT_,valign:_TOP_,items:[{
ref:ZaBackup.A_serverName,type:_OSELECT1_,label:com_zimbra_backuprestore.BNR_BackupSourceServer,labelLocation:_LEFT_,choices:ZaApp.getInstance().getServerListChoices(),visibilityChecks:[],enableDisableChecks:[]}
,{
ref:ZaBackup.A_method,type:_OSELECT1_,label:com_zimbra_backuprestore.BNR_BackupMethod,labelLocation:_LEFT_,choices:this.backupMethodChoices,visibilityChecks:[],enableDisableChecks:[]}
,{
ref:ZaBackup.A_target,type:_TEXTFIELD_,label:com_zimbra_backuprestore.BNR_BackupTargetPath,labelLocation:_LEFT_,width:250,visibilityChecks:[ZaBackupXWizard.isNotAutogroupedMode,[XForm.checkInstanceValue,ZaBackup.A_method,ZaBackup.METHOD_FULL]],visibilityChangeEventSources:[ZaBackup.A_method],enableDisableChecks:[]}
,{
ref:ZaBackup.A_create,type:_CHECKBOX_,label:com_zimbra_backuprestore.BNR_CreateFolderIfDoesnotExist,visibilityChecks:[ZaBackupXWizard.isNotAutogroupedMode,[XForm.checkInstanceValue,ZaBackup.A_method,ZaBackup.METHOD_FULL]],visibilityChangeEventSources:[ZaBackup.A_method],enableDisableChecks:[],trueValue:true,falseValue:false}
,{
type:_DWT_ALERT_,style:DwtAlert.WARNING,colSpan:2,iconVisible:true,content:com_zimbra_backuprestore.WARNING_MANUAL_AUTOGROUP,width:"500px",visibilityChecks:[ZaBackupXWizard.isAutogroupedMode]}
]};
var t={
type:_CASE_,numCols:1,caseKey:2,width:"100%",items:[{
type:_GROUP_,numCols:2,items:[{
ref:ZaServerBackup.A_backupAll,type:_CHECKBOX_,label:com_zimbra_backuprestore.BNR_BackupAllAccounts,align:_LEFT_,labelLocation:_LEFT_,trueValue:1,falseValue:0,labelCssClass:"xform_label",onChange:ZaBackupXWizard.switchNextButton,visibilityChecks:[],enableDisableChecks:[]}
]}
,{
type:_SPACER_}
,{
type:_GROUP_,numCols:3,width:"100%",colSizes:["170px","85px","170px"],cellspacing:"5px",visibilityChecks:[[XForm.checkInstanceValue,ZaServerBackup.A_backupAll,0]],visibilityChangeEventSources:[ZaServerBackup.A_backupAll],items:[{
type:_TEXTFIELD_,cssClass:"admin_xform_name_input",width:"160px",ref:ZaSearch.A_query,label:null,elementChanged:function(d,c,l){
var r=l.charCode;
if(r==13||r==3){
ZaBackupXWizard.srchButtonHndlr.call(this)
}else{
this.getForm().itemChanged(this,d,l)
}}
,visibilityChecks:[],enableDisableChecks:[]}
,{
type:_DWT_BUTTON_,label:ZaMsg.DLXV_ButtonSearch,width:"80px",onActivate:ZaBackupXWizard.srchButtonHndlr,align:_CENTER_,enableDisableChecks:[[XForm.checkInstanceValue,"activateSearch",1]],enableDisableChangeEventSources:["activateSearch"]}
,{
type:_OUTPUT_,value:com_zimbra_backuprestore.BNR_AccountsTobackup,visibilityChecks:[]}
,{
type:_SPACER_,colSpan:3}
,{
ref:ZaBackup.A_accountPool,type:_DWT_LIST_,height:"200px",width:"170px",cssClass:"DLSource",widgetClass:ZaAccMiniListView,headerList:n,rowSpan:5,hideHeader:true,onSelection:ZaBackupXWizard.accPoolSelectionListener,visibilityChecks:[],enableDisableChecks:[]}
,{
type:_DWT_BUTTON_,label:AjxMsg.addAll,width:"80px",onActivate:ZaBackupXWizard.addAllButtonHndlr,enableDisableChecks:[[XForm.checkInstanceValueNotEmty,ZaBackup.A_accountPool]],enableDisableChangeEventSources:[ZaBackup.A_accountPool]}
,{
ref:ZaBackup.A_Accounts,type:_DWT_LIST_,height:"200px",width:"170px",cssClass:"DLSource",widgetClass:ZaAccMiniListView,headerList:n,rowSpan:5,hideHeader:true,onSelection:ZaBackupXWizard.accTargetSelectionListener,visibilityChecks:[],enableDisableChecks:[]}
,{
type:_DWT_BUTTON_,label:AjxMsg.add,width:"80px",onActivate:ZaBackupXWizard.addButtonHndlr,enableDisableChecks:[[XForm.checkInstanceValueNotEmty,ZaServerBackup.A_src_acct_selection_pool]],enableDisableChangeEventSources:[ZaServerBackup.A_src_acct_selection_pool]}
,{
type:_DWT_BUTTON_,label:AjxMsg.remove,width:"80px",onActivate:ZaBackupXWizard.removeButtonHndlr,enableDisableChecks:[[XForm.checkInstanceValueNotEmty,ZaServerBackup.A_tgt_acct_selection_pool]],enableDisableChangeEventSources:[ZaServerBackup.A_tgt_acct_selection_pool]}
,{
type:_DWT_BUTTON_,label:AjxMsg.removeAll,width:"80px",onActivate:ZaBackupXWizard.removeAllButtonHndlr,enableDisableChecks:[[XForm.checkInstanceValueNotEmty,ZaBackup.A_Accounts]],enableDisableChangeEventSources:[ZaBackup.A_Accounts]}
,{
type:_SPACER_}
,{
type:_GROUP_,numCols:3,colSizes:["80px","*","80px"],items:[{
type:_SPACER_,colSpan:3}
,{
type:_DWT_BUTTON_,label:ZaMsg.Previous,width:75,id:"backButton",icon:"LeftArrow",disIcon:"LeftArrowDis",onActivate:ZaBackupXWizard.backPoolButtonHndlr,align:_CENTER_,enableDisableChecks:[ZaBackupXWizard.backBtnEnabled],enableDisableChangeEventSources:[ZaServerBackup.A_poolPagenum,ZaServerBackup.A_activateSearch]}
,{
type:_CELLSPACER_}
,{
type:_DWT_BUTTON_,label:ZaMsg.Next,width:75,id:"fwdButton",icon:"RightArrow",disIcon:"RightArrowDis",onActivate:ZaBackupXWizard.fwdPoolButtonHndlr,align:_CENTER_,enableDisableChecks:[ZaBackupXWizard.forwardBtnEnabled],enableDisableChangeEventSources:[ZaServerBackup.A_poolPagenum,ZaServerBackup.A_activateSearch]}
]}
,{
type:_CELLSPACER_}
,{
type:_DWT_ALERT_,style:DwtAlert.INFORMATION,iconVisible:true,content:ZaMsg.pleaseWaitSearching,width:"200px",align:_CENTER_,cssStyle:"position: relative; top: -200; left: 125; opacity: 0.8",visibilityChecks:[[XForm.checkInstanceValue,ZaServerBackup.A_activateSearch,0]],visibilityChangeEventSources:[ZaServerBackup.A_activateSearch]}
]}
]};
var e={
type:_CASE_,numCols:1,caseKey:3,width:"100%",items:[{
ref:"doneMsg",style:DwtAlert.INFORMATION,type:_DWT_ALERT_,width:"420px",iconVisible:true,content:null}
]};
s.items=[{
type:_OUTPUT_,colSpan:2,valign:_TOP_,cssStyle:"white-space: normal",ref:ZaModel.currentStep,choices:this.stepChoices,visibilityChecks:[],valueChangeEventSources:[ZaModel.currentStep]}
,{
type:_SEPARATOR_,align:_CENTER_,valign:_TOP_}
,{
type:_SPACER_,align:_CENTER_,valign:_TOP_}
,{
type:_SWITCH_,width:500,align:_LEFT_,valign:_TOP_,cssStyle:"white-space: normal",items:[o,t,e]}
]
};
ZaXDialog.XFormModifiers.ZaBackupXWizard.push(ZaBackupXWizard.myXFormModifier);
function ZaBackupServerListController(t,e){
ZaController.call(this,t,e,"ZaBackupServerListController");
this._popupOperations=new Array();
this.ServerPool=[];
this._helpURL=location.pathname+"help/admin/html/backup_feature/backing_up_the_zimbra_server.htm?locid="+AjxEnv.DEFAULT_LOCALE
}
ZaBackupServerListController.prototype=new ZaController();
ZaBackupServerListController.prototype.constructor=ZaBackupServerListController;
ZaController.initPopupMenuMethods.ZaBackupServerListController=new Array();
ZaBackupServerListController.prototype.show=function(l,r){
if(!this._UICreated){
this._createUI()
}
if(l!=null){
this._contentView.set(l.getVector());
this.ServerPool=[];
var s=l.getArray();
var c=s.length;
for(var e=0;
e<c;
e++){
this.ServerPool.push(s[e])
}
var n=0;
var o=[];
var t=c>5?5:c;
for(n=0;
n<t;
n++){
o[n]=this.ServerPool.shift()
}
ZaMTA._quecountsArr=new Array();
for(n=t-1;
n>=0;
n--){
o[n].loadBackups()
}}
ZaApp.getInstance().pushView(this.getContentViewId());
this._removeList=new Array();
if(l!=null){
this._list=l
}
this.changeActionsState()
};
ZaBackupServerListController.initPopupMenuMethod=function(){
if(appNewUI){
this._popupOperations.push(new ZaOperation(ZaOperation.VIEW,ZaMsg.TBB_View,ZaMsg.PQTBB_View_tt,"Properties","PropertiesDis",new AjxListener(this,ZaBackupServerListController.prototype._viewButtonListener)));
this._popupOperations.push(new ZaOperation(ZaOperation.IMMEDIATE_BACKUP,com_zimbra_backuprestore.BNRTBB_Backup,com_zimbra_backuprestore.BNRTBB_Backup_tt,"Backup","Backup",new AjxListener(this,ZaBackupServerListController.prototype._immediateBackupListener)));
this._popupOperations.push(new ZaOperation(ZaOperation.MAIL_RESTORE,com_zimbra_backuprestore.BNR_TBB_RestoreMailbox,com_zimbra_backuprestore.BNR_TBB_Restore_tt,"RestoreMailbox","RestoreMailboxDis",new AjxListener(this,ZaHotBackup._restoreMailListener)));
this._popupOperations.push(new ZaOperation(ZaOperation.CONFIGURE_BACKUP,com_zimbra_backuprestore.BNRTBB_ConfigureBackup,com_zimbra_backuprestore.BNRTBB_ConfigureBackup_tt,"AdvancedTools","Configure",new AjxListener(this,ZaHotBackup.configureBackup)));
this._popupOperations.push(new ZaOperation(ZaOperation.REFRESH,ZaMsg.TBB_Refresh,ZaMsg.TBB_Refresh_tt,"Refresh","Refresh",new AjxListener(this,this.refreshListener)))
}else{
this._popupOperations.push(new ZaOperation(ZaOperation.VIEW,ZaMsg.TBB_View,ZaMsg.PQTBB_View_tt,"Properties","PropertiesDis",new AjxListener(this,ZaBackupServerListController.prototype._viewButtonListener)))
}};
ZaController.initPopupMenuMethods.ZaBackupServerListController.push(ZaBackupServerListController.initPopupMenuMethod);
ZaBackupServerListController.prototype._createUI=function(){
try{
var t=new Object();
this._contentView=new ZaBackupServerListView(this._container);
this._initPopupMenu();
if(this._popupOperations&&this._popupOperations.length){
this._actionMenu=new ZaPopupMenu(this._contentView,"ActionMenu",null,this._popupOperations)
}
t[ZaAppViewMgr.C_APP_CONTENT]=this._contentView;
ZaApp.getInstance().getAppViewMgr().createView(this.getContentViewId(),t);
this._contentView.addSelectionListener(new AjxListener(this,this._listSelectionListener));
this._contentView.addActionListener(new AjxListener(this,this._listActionListener));
this._UICreated=true;
ZaApp.getInstance()._controllers[this.getContentViewId()]=this
}
catch(e){
this._handleException(e,"ZaBackupServerListController.prototype._createUI",null,false);
return
}};
ZaBackupServerListController.prototype.getList=function(){
return this._list
};
ZaBackupServerListController.prototype.set=function(e){
this.show(e)
};
ZaBackupServerListController.prototype._listSelectionListener=function(e){
if(e.detail==DwtListView.ITEM_DBL_CLICKED){
if(e.item){
this._selectedItem=e.item;
ZaApp.getInstance().getBackupsViewController().show(e.item)
}}else{
this.changeActionsState()
}};
ZaBackupServerListController.prototype._immediateBackupListener=function(o){
try{
this._ImmediateBackupWizard=new ZaBackupXWizard(this._container);
var e=new ZaBackup();
e[ZaBackup.A_method]=ZaBackup.METHOD_FULL;
e[ZaBackup.A_target]=ZaHotBackup.DEFAULT_BACKUP_TARGET;
e[ZaServerBackup.A_backupAll]=0;
var n=null;
try{
if(this._contentView.getSelectionCount()==1){
n=this._contentView.getSelection()[0]
}else{
n=ZaApp.getInstance().getMailServers()[0]
}
if(n){
e[ZaBackup.A_serverName]=n[ZaServer.A_ServiceHostname];
if(n.attrs[ZaGlobalConfig.A_zimbraBackupTarget]){
e[ZaBackup.A_target]=AjxStringUtil.trim(n.attrs[ZaGlobalConfig.A_zimbraBackupTarget])
}}}
catch(t){
this._ImmediateBackupWizard.setObject(e);
this._ImmediateBackupWizard.popup();
throw (t)
}
this._ImmediateBackupWizard.setObject(e);
this._ImmediateBackupWizard.popup()
}
catch(t){
this._handleException(t,"ZaBackupServerListController.prototype._immediateBackupListener",null,false)
}
return
};
ZaBackupServerListController.prototype._listActionListener=function(e){
this.changeActionsState();
this._actionMenu.popup(0,e.docX,e.docY)
};
ZaBackupServerListController.prototype._viewButtonListener=function(t){
if(this._contentView.getSelectionCount()==1){
var e=this._contentView.getSelection()[0];
ZaApp.getInstance().getBackupsViewController().show(e)
}};
ZaBackupServerListController.prototype.changeActionsState=function(){
var o=this._contentView.getSelectionCount();
if(o==1){
var e=[ZaOperation.EDIT];
this._actionMenu.enable(e,true)
}else{
if(o>1){
var t=[ZaOperation.EDIT];
this._actionMenu.enable(t,false)
}else{
var e=[ZaOperation.EDIT];
this._actionMenu.enable(e,false)
}}};
ZaBackupServerListController.prototype.handleServerChange=function(t){
if(t&&this._contentView){
this._contentView.setUI();
if(this.ServerPool.length){
var e=this.ServerPool.shift();
e.loadBackups()
}}};
ZaBackupServerListController.prototype.getBackupStatus=function(){
this.ServerPool=[];
var s=this._list.getArray();
var r=s.length;
for(var e=0;
e<r;
e++){
this.ServerPool.push(s[e])
}
var n=r>5?5:r;
var o=0;
var t=[];
for(o=0;
o<n;
o++){
t[o]=this.ServerPool.shift()
}
for(o=n-1;
o>=0;
o--){
t[o].loadBackups()
}};
ZaBackupServerListController.prototype.refresh=function(){
this.getBackupStatus()
};
ZaBackupServerListController.prototype.refreshListener=function(){
this.getBackupStatus()
};
ZaBackupServerListController.prototype.changeActionsState=function(){
var o=this._contentView.getSelectionCount();
if(o==1){
var e=[ZaOperation.VIEW];
this._actionMenu.enable(e,true)
}else{
if(o>1){
var t=[ZaOperation.VIEW];
this._actionMenu.enable(t,false)
}else{
var e=[ZaOperation.VIEW];
this._actionMenu.enable(e,false)
}}};
ZaBackupServerListController.prototype._handleException=function(e,s,n,t,o){
if(e.code&&(e.code==ZmCsfeException.INVALID_BACKUP_TARGET)){
this._execFrame={
obj:o,func:s,args:n,restartOnError:t};
this._errorDialog.registerCallback(DwtDialog.OK_BUTTON,this._errorDialogCallback,this);
this.popupErrorDialog(com_zimbra_backuprestore.BNR_InvalidBackupTargetERROR,e)
}else{
if(e.code&&(e.code==ZmCsfeException.NO_LABELS_FOUND)){
this._execFrame={
obj:o,func:s,args:n,restartOnError:t};
this._errorDialog.registerCallback(DwtDialog.OK_BUTTON,this._errorDialogCallback,this);
this.popupErrorDialog(com_zimbra_backuprestore.BNR_NoLabelsFoundTitle,e)
}else{
ZaController.prototype._handleException.call(this,e,s,n,t,o)
}}};
ZaBackupServerListController.prototype.getAppBarAction=function(){
if(AjxUtil.isEmpty(this._appbarOperation)){
this._appbarOperation[ZaOperation.HELP]=new ZaOperation(ZaOperation.HELP,ZaMsg.TBB_Help,ZaMsg.TBB_Help_tt,"Help","Help",new AjxListener(this,this._helpButtonListener))
}
return this._appbarOperation
};
ZaBackupServerListController.prototype.getAppBarOrder=function(){
if(AjxUtil.isEmpty(this._appbarOrder)){
this._appbarOrder.push(ZaOperation.HELP)
}
return this._appbarOrder
};
function ZaBackupServerListView(n){
var o=null;
var t=DwtControl.ABSOLUTE_STYLE;
var e=this._getHeaderList();
ZaListView.call(this,n,o,t,e);
this._appCtxt=this.shell.getData(ZaAppCtxt.LABEL)
}
ZaBackupServerListView.prototype=new ZaListView;
ZaBackupServerListView.prototype.constructor=ZaBackupServerListView;
ZaBackupServerListView.prototype.toString=function(){
return"ZaBackupServerListView"
};
ZaBackupServerListView.prototype.getTitle=function(){
return com_zimbra_backuprestore.BNR_view_title
};
ZaBackupServerListView.prototype.getTabIcon=function(){
return"Backup"
};
ZaBackupServerListView.prototype._createItemHtml=function(r,o,m){
var c=new Array(50);
var e=document.createElement("div");
e[DwtListView._STYLE_CLASS]="Row";
e[DwtListView._SELECTED_STYLE_CLASS]=e[DwtListView._STYLE_CLASS]+"-"+DwtCssStyle.SELECTED;
e.className=e[DwtListView._STYLE_CLASS];
this.associateItemWithElement(r,e,DwtListView.TYPE_LIST_ITEM);
var u=this._getItemId(r);
var f=0;
c[f++]="<table width='100%' cellspacing='0' cellpadding='0'>";
c[f++]="<tr>";
var n=this._headerList.length;
var d=Dwt.getNextId();
var s="backup_server_list";
for(var l=0;
l<n;
l++){
var t=this._headerList[l]._field;
if(t!=null){
if(t.indexOf(ZaServer.A_ServiceHostname)==0){
c[f++]='<td id="'+s+"_data_host_"+d+'" width='+this._headerList[l]._width+">";
c[f++]=AjxStringUtil.htmlEncode(r.attrs[ZaServer.A_ServiceHostname]);
c[f++]="</td>"
}else{
if(t.indexOf(ZaServerBackup.A_freeSpace)==0){
c[f++]='<td id="'+s+"_data_free_space_"+d+'" width='+this._headerList[l]._width+">";
if(r[ZaServerBackup.A_freeSpace]){
c[f++]=AjxStringUtil.htmlEncode(String(r[ZaServerBackup.A_freeSpace]))
}else{
c[f++]="&nbsp;"
}
c[f++]="</td>"
}else{
if(t.indexOf(ZaServerBackup.A_totalSpace)==0){
c[f++]='<td id="'+s+"_data_total_space_"+d+'" width='+this._headerList[l]._width+">";
if(r[ZaServerBackup.A_totalSpace]){
c[f++]=AjxStringUtil.htmlEncode(String(r[ZaServerBackup.A_totalSpace]))
}else{
c[f++]="&nbsp;"
}
c[f++]="</td>"
}else{
if(t.indexOf(ZaServerBackup.A_latestLabel)==0){
c[f++]='<td id="'+s+"_data_latest_label_"+d+'" width='+this._headerList[l]._width+">";
if(r[ZaServerBackup.A_latestLabel]){
c[f++]=AjxStringUtil.htmlEncode(r[ZaServerBackup.A_latestLabel][ZaBackupLabel.A_label])
}else{
c[f++]="&nbsp;"
}
c[f++]="</td>"
}else{
if(t.indexOf(ZaServerBackup.A_latestLabelStatus)==0){
c[f++]='<td id="'+s+"_data_latest_label_status_"+d+'" width='+this._headerList[l]._width+">";
if(r[ZaServerBackup.A_latestLabel]){
c[f++]=AjxStringUtil.htmlEncode(r[ZaServerBackup.A_latestLabel][ZaBackupLabel.A_status])
}else{
c[f++]="&nbsp;"
}
c[f++]="</td>"
}}}}}}}
c[f++]="</tr></table>";
e.innerHTML=c.join("");
return e
};
ZaBackupServerListView.prototype._getHeaderList=function(){
var e=new Array();
e[0]=new ZaListHeaderItem(ZaServer.A_ServiceHostname,com_zimbra_backuprestore.BNR_Server_col,null,195,null,null,true,true);
e[1]=new ZaListHeaderItem(ZaServerBackup.A_freeSpace,com_zimbra_backuprestore.BNR_FreeSpace_col,null,195,null,null,true,true);
e[2]=new ZaListHeaderItem(ZaServerBackup.A_totalSpace,com_zimbra_backuprestore.BNR_TotalSpace_col,null,195,null,null,true,true);
e[3]=new ZaListHeaderItem(ZaServerBackup.A_latestLabel,com_zimbra_backuprestore.BNR_LatestLabel_col,null,195,null,null,true,true);
e[4]=new ZaListHeaderItem(ZaServerBackup.A_latestLabelStatus,com_zimbra_backuprestore.BNR_Status_col,null,"auto",null,null,true,true);
return e
};
function ZaAccountMove(){
ZaItem.call(this,"ZaAccountMove");
this[ZaModel.currentStep]=1;
this[ZaAccountMove.A_source]="";
this[ZaAccountMove.A_destination]="";
this[ZaAccountMove.A_sync]=1;
this[ZaAccountMove.A_status]=ZaAccountMove.A_status_PENDING;
this[ZaAccountMove.A_originalSource]=null;
this.account={}
}
ZaAccountMove.A_name="name";
ZaAccountMove.A_source="src";
ZaAccountMove.A_originalSource="originalSource";
ZaAccountMove.A_destination="dest";
ZaAccountMove.A_sync="sync";
ZaAccountMove.A_status="status";
ZaAccountMove.A_status_msg="status_msg";
ZaAccountMove.A_status_PENDING=1;
ZaAccountMove.A_status_EXPORTING=2;
ZaAccountMove.A_status_EXPORT_ERROR=3;
ZaAccountMove.A_status_EXPORTED=4;
ZaAccountMove.A_status_VERIFYING_LDAP=5;
ZaAccountMove.A_status_LDAP_ERROR=6;
ZaAccountMove.A_status_LDAP_VERIFIED=7;
ZaAccountMove.A_status_PURGING_MAILBOX=8;
ZaAccountMove.A_status_PURGE_ERROR=9;
ZaAccountMove.A_status_PURGED_MAILBOX=10;
ZaAccountMove.A_status_ERROR=-1;
ZaAccountMove.myXModel=new Object();
ZaAccountMove.myXModel.items=new Array();
ZaAccountMove.myXModel.items.push({
id:ZaModel.ErrorCode,type:_STRING_}
);
ZaAccountMove.myXModel.items.push({
id:ZaModel.ErrorMessage,type:_STRING_}
);
ZaAccountMove.myXModel.items.push({
id:ZaAccountMove.A_status,type:_STRING_}
);
ZaAccountMove.myXModel.items.push({
id:ZaAccountMove.A_originalSource,type:_STRING_}
);
ZaAccountMove.myXModel.items.push({
id:ZaAccountMove.A_status_msg,type:_STRING_}
);
ZaAccountMove.myXModel.items.push({
id:ZaAccountMove.A_name,ref:"account/"+ZaAccount.A_name,type:_STRING_,required:true,pattern:AjxUtil.EMAIL_SHORT_RE}
);
ZaAccountMove.myXModel.items.push({
id:ZaAccountMove.A_source,ref:"account/attrs/"+ZaAccount.A_mailHost,type:_STRING_,required:true}
);
ZaAccountMove.myXModel.items.push({
id:ZaAccountMove.A_destination,type:_STRING_,required:true}
);
ZaAccountMove.myXModel.items.push({
id:ZaAccountMove.A_sync,type:_NUMBER_,defaultValue:0}
);
ZaAccountMove.exportMailbox=function(s,l){
if(!s[ZaAccountMove.A_originalSource]){
throw (new AjxException(AjxMessageFormat.format(com_zimbra_backuprestore.BNR_parameterCannotBeNull,[ZaAccountMove.A_originalSource]),AjxException.INVALID_PARAM,"ZaAccountMove.exportMailbox"))
}
if(!s.account[ZaAccountMove.A_name]){
throw (new AjxException(AjxMessageFormat.format(com_zimbra_backuprestore.BNR_parameterCannotBeNull,[ZaAccountMove.A_name]),AjxException.INVALID_PARAM,"ZaAccountMove.exportMailbox"))
}
if(!s[ZaAccountMove.A_destination]){
throw (new AjxException(AjxMessageFormat.format(com_zimbra_backuprestore.BNR_parameterCannotBeNull,[ZaAccountMove.A_destination]),AjxException.INVALID_PARAM,"ZaAccountMove.exportMailbox"))
}
var o=AjxSoapDoc.create("MoveMailboxRequest","urn:zimbraAdmin",null);
var t=o.set("account","");
t.setAttribute(ZaAccountMove.A_name,s.account[ZaAccountMove.A_name]);
t.setAttribute(ZaAccountMove.A_source,s[ZaAccountMove.A_originalSource]);
t.setAttribute(ZaAccountMove.A_destination,s[ZaAccountMove.A_destination]);
var r=new Object();
r.soapDoc=o;
if(l){
r.asyncMode=true;
r.callback=l
}
var n=ZaApp.getInstance().getServerByName(s[ZaAccountMove.A_destination]);
r.targetServer=n.id;
var e={
controller:ZaApp.getInstance().getCurrentController(),busyMsg:ZaMsg.BUSY_EXPORT_MBX};
ZaRequestMgr.invoke(r,e)
};
ZaAccountMove.purgeMovedMailbox=function(s,l){
if(!s[ZaAccountMove.A_originalSource]){
throw (new AjxException(AjxMessageFormat.format(com_zimbra_backuprestore.BNR_parameterCannotBeNull,[ZaAccountMove.A_source]),AjxException.INVALID_PARAM,"ZaAccountMove.exportMailbox"))
}
if(!s.account[ZaAccountMove.A_name]){
throw (new AjxException(AjxMessageFormat.format(com_zimbra_backuprestore.BNR_parameterCannotBeNull,[ZaAccountMove.A_name]),AjxException.INVALID_PARAM,"ZaAccountMove.exportMailbox"))
}
var o=AjxSoapDoc.create("PurgeMovedMailboxRequest","urn:zimbraAdmin",null);
var t=o.set("mbox","");
t.setAttribute(ZaAccountMove.A_name,s.account[ZaAccountMove.A_name]);
var r=new Object();
r.soapDoc=o;
if(l){
r.asyncMode=true;
r.callback=l
}
var n=ZaApp.getInstance().getServerByName(s[ZaAccountMove.A_originalSource]);
r.targetServer=n.id;
var e={
controller:ZaApp.getInstance().getCurrentController(),busyMsg:ZaMsg.BUSY_PURGE_MBX};
ZaRequestMgr.invoke(r,e)
};
function ZaAccountMoveViewController(t,e){
ZaXFormViewController.call(this,t,e,"ZaAccountMoveViewController");
this._UICreated=false;
this._helpURL=location.pathname+"help/admin/html/managing_accounts/moving_a_mailbox.htm?locid="+AjxEnv.DEFAULT_LOCALE;
this.tabConstructor=ZaAccountMoveXFormView
}
ZaAccountMoveViewController.prototype=new ZaXFormViewController();
ZaAccountMoveViewController.prototype.constructor=ZaAccountMoveViewController;
ZaController.setViewMethods.ZaAccountMoveViewController=new Array();
ZaAccountMoveViewController.prototype.show=function(e){
if(!this.selectExistingTabByItemId(e.id)){
this._setView(e,true)
}};
ZaAccountMoveViewController.prototype.setEnabled=function(e){};
ZaController.setViewMethods.ZaAccountMoveViewController.push(ZaXFormViewController.setViewMethod);
ZaAccountMoveViewController.prototype.closeButtonListener=function(n,e,o,s,r){
if(this._view.isDirty()){
var t=new Object();
t.obj=ZaApp.getInstance();
t.params=null;
t.func=ZaApp.prototype.popView;
ZaApp.getInstance().dialogs.confirmMessageDialog.setMessage(AjxMessageFormat.format(com_zimbra_backuprestore.BNR_WarningPurge,[this._currentObject[ZaAccountMove.A_originalSource],this._currentObject.account[ZaAccount.A_name]]),DwtMessageDialog.WARNING_STYLE);
ZaApp.getInstance().dialogs.confirmMessageDialog.registerCallback(DwtDialog.YES_BUTTON,this.discardAndGoAway,this,t);
ZaApp.getInstance().dialogs.confirmMessageDialog.registerCallback(DwtDialog.NO_BUTTON,ZaApp.getInstance().dialogs.confirmMessageDialog.popdown,ZaApp.getInstance().dialogs.confirmMessageDialog);
ZaApp.getInstance().dialogs.confirmMessageDialog.popup()
}else{
ZaApp.getInstance().popView()
}};
function ZaAccountMoveXFormView(e){
ZaTabView.call(this,e,"ZaAccountMoveXFormView");
this.initForm(ZaAccountMove.myXModel,this.getMyXForm());
this._localXForm.setController(ZaApp.getInstance())
}
ZaAccountMoveXFormView.prototype=new ZaTabView();
ZaTabView.XFormModifiers.ZaAccountMoveXFormView=new Array();
ZaAccountMoveXFormView.prototype.getObject=function(){
return this._localXForm.getInstance()
};
ZaAccountMoveXFormView.prototype.setObject=function(e){
this._containedObject=e;
this._containedObject[ZaModel.currentTab]=1;
this._containedObject[ZaAccountMove.A_originalSource]=this._containedObject.account.attrs[ZaAccount.A_mailHost];
this._localXForm.setInstance(this._containedObject);
if(!appNewUI){
this.updateTab()
}};
ZaAccountMoveXFormView.prototype.getTitle=function(){
if(this._containedObject&&this._containedObject.account){
return AjxMessageFormat.format(com_zimbra_backuprestore.BNR_AccMoveTabName,[this._containedObject.account.name])
}else{
return""
}};
ZaAccountMoveXFormView.prototype.getTabTitle=function(){
if(this._containedObject&&this._containedObject.account){
return AjxMessageFormat.format(com_zimbra_backuprestore.BNR_AccMoveTabName,[this._containedObject.account.name])
}else{
return""
}};
ZaAccountMoveXFormView.prototype.exportStatus=function(n){
var c=this._localXForm.getInstance();
try{
var e=this._localXForm;
var l=AjxSoapDoc.create("QueryMailboxMoveRequest","urn:zimbraAdmin",null);
var r=l.set("account","");
r.setAttribute(ZaAccountMove.A_name,c.account[ZaAccountMove.A_name]);
var d=new AjxCallback(e.parent,ZaAccountMoveXFormView.prototype.exportStatusCallBack);
var n=new Object();
n.soapDoc=l;
if(d){
n.asyncMode=true;
n.callback=d
}
var o={
controller:ZaApp.getInstance().getCurrentController(),busyMsg:ZaMsg.BUSY_EXPORT_MBX};
ZaRequestMgr.invoke(n,o)
}
catch(s){
c[ZaAccountMove.A_status]=ZaAccountMove.A_status_EXPORT_ERROR;
var t="";
if(s.code){
t+=ZaMsg.ERROR_CODE+"  ";
t+=s.code;
t+="\n"
}
if(s.msg){
t+=ZaMsg.ERROR_MESSAGE+"  ";
t+=s.msg;
t+="\n"
}
if(s.detail){
t+=ZaMsg.ERROR_DETAILS;
t+=s.detail;
t+="\n"
}
c[ZaModel.ErrorMessage]=t;
this._localXForm.refresh()
}};
ZaAccountMoveXFormView.prototype.exportStatusCallBack=function(r){
var e=this._localXForm.getInstance();
try{
var t=false;
if(!r){
var o=new ZmCsfeException(ZMsg.errorEmptyResponse,ZmCsfeException.CSFE_SVC_ERROR,"ZaAccountMoveXFormView.prototype.exportCallBack");
throw (o)
}
if(r.isException&&r.isException()){
var o=r.getException();
throw o
}else{
var s;
if(r.getResponse){
s=r.getResponse().Body.QueryMailboxMoveResponse
}else{
if(r.Body.QueryMailboxMoveResponse){
s=r.Body.QueryMailboxMoveResponse
}}
if(AjxUtil.isEmpty(s.account)){
e[ZaAccountMove.A_status]=ZaAccountMove.A_status_EXPORTED;
e[ZaModel.ErrorMessage]="";
t=true
}}
if(!t){
this._pollHandler=AjxTimedAction.scheduleAction(this.pollAction,300)
}else{
this.pollAction=null;
this._pollHandler=null;
this.verifyLDAP();
this._localXForm.refresh();
this.setDirty(true)
}}
catch(o){
e[ZaAccountMove.A_status]=ZaAccountMove.A_status_EXPORT_ERROR;
var n="";
if(o.code){
n+=ZaMsg.ERROR_CODE+"  ";
n+=o.code;
n+="\n"
}
if(o.msg){
n+=ZaMsg.ERROR_MESSAGE+"  ";
n+=o.msg;
n+="\n"
}
if(o.detail){
n+=ZaMsg.ERROR_DETAILS;
n+=o.detail;
n+="\n"
}
e[ZaModel.ErrorMessage]=n;
this._localXForm.refresh()
}};
ZaAccountMoveXFormView.prototype.exportCallBack=function(s){
var e=this._localXForm.getInstance();
try{
if(!s){
var t=new ZmCsfeException(ZMsg.errorEmptyResponse,ZmCsfeException.CSFE_SVC_ERROR,"ZaAccountMoveXFormView.prototype.exportCallBack");
throw (t)
}
if(s.isException&&s.isException()){
var t=s.getException();
throw t
}else{
var n;
if(s.getResponse){
n=s.getResponse().Body.MoveMailboxResponse
}else{
if(s.Body.MoveMailboxResponse){
n=s.Body.MoveMailboxResponse
}}
if(n){
this.pollAction=new AjxTimedAction(this,this.exportStatus);
this._pollHandler=AjxTimedAction.scheduleAction(this.pollAction,300)
}}}
catch(t){
e[ZaAccountMove.A_status]=ZaAccountMove.A_status_EXPORT_ERROR;
var o="";
if(t.code){
o+=ZaMsg.ERROR_CODE+"  ";
o+=t.code;
o+="\n"
}
if(t.msg){
o+=ZaMsg.ERROR_MESSAGE+"  ";
o+=t.msg;
o+="\n"
}
if(t.detail){
o+=ZaMsg.ERROR_DETAILS;
o+=t.detail;
o+="\n"
}
e[ZaModel.ErrorMessage]=o;
this._localXForm.refresh()
}};
ZaAccountMoveXFormView.prototype.searchAccCallBack=function(l){
var e=this._localXForm.getInstance();
try{
if(!l){
var o=new ZmCsfeException(ZMsg.errorEmptyResponse,ZmCsfeException.CSFE_SVC_ERROR,"ZaAccountMoveXFormView.prototype.searchAccCallBack");
throw (o)
}
if(l.isException&&l.isException()){
var o=l.getException();
throw o
}else{
var t=l.getResponse().Body.SearchDirectoryResponse;
var s=new ZaItemList(ZaAccount,ZaApp.getInstance());
s.loadFromJS(t);
var n=s.getArray()[0];
if(n){
if(n.attrs[ZaAccount.A_mailHost]==e[ZaAccountMove.A_destination]){
e[ZaAccountMove.A_status]=ZaAccountMove.A_status_LDAP_VERIFIED
}else{
var o=new ZmCsfeException(AjxMessageFormat.format(com_zimbra_backuprestore.BNR_Error_LDAP_NotUpdated,[ZaAccount.A_mailHost,e[ZaAccountMove.A_destination],n.attrs[ZaAccount.A_mailHost]]),ZmCsfeException.CSFE_SVC_ERROR,"ZaAccountMoveXFormView.prototype.searchAccCallBack");
throw (o)
}}
e.account=n
}
e[ZaAccountMove.A_status]=ZaAccountMove.A_status_LDAP_VERIFIED
}
catch(o){
e[ZaAccountMove.A_status]=ZaAccountMove.A_status_LDAP_ERROR;
var r="Error:\n ";
if(o.code){
r+=ZaMsg.ERROR_CODE+"  ";
r+=o.code;
r+="\n"
}
if(o.msg){
r+=ZaMsg.ERROR_MESSAGE+"  ";
r+=o.msg;
r+="\n"
}
if(o.detail){
r+=ZaMsg.ERROR_DETAILS;
r+=o.detail;
r+="\n"
}
e[ZaModel.ErrorMessage]=r
}
this._localXForm.refresh()
};
ZaAccountMoveXFormView.prototype.purgeCallBack=function(s){
var e=this._localXForm.getInstance();
try{
if(!s){
var t=new ZmCsfeException(ZMsg.errorEmptyResponse,ZmCsfeException.CSFE_SVC_ERROR,"ZaAccountMoveXFormView.prototype.purgeCallBack");
throw (t)
}
if(s.isException&&s.isException()){
var t=s.getException();
throw t
}else{
var n;
if(s.getResponse){
n=s.getResponse().Body.PurgeMovedMailboxResponse
}else{
if(s.Body.PurgeMovedMailboxResponse){
n=s.Body.PurgeMovedMailboxResponse
}}
if(n){
e[ZaAccountMove.A_status]=ZaAccountMove.A_status_PURGED_MAILBOX;
e[ZaModel.ErrorMessage]=""
}}}
catch(t){
e[ZaAccountMove.A_status]=ZaAccountMove.A_status_PURGE_ERROR;
var o="Error:\n ";
if(t.code){
o+=ZaMsg.ERROR_CODE+"  ";
o+=t.code;
o+="\n"
}
if(t.msg){
o+=ZaMsg.ERROR_MESSAGE+"  ";
o+=t.msg;
o+="\n"
}
if(t.detail){
o+=ZaMsg.ERROR_DETAILS;
o+=t.detail;
o+="\n"
}
e[ZaModel.ErrorMessage]=o
}
this._localXForm.refresh();
this.setDirty(false)
};
ZaAccountMoveXFormView.doMove=function(){
var e=this.getInstance();
var t=this.getForm();
e[ZaAccountMove.A_status]=ZaAccountMove.A_status_EXPORTING;
e[ZaAccountMove.A_originalSource]=e.account.attrs[ZaAccount.A_mailHost];
t.refresh();
var o=new AjxCallback(t.parent,ZaAccountMoveXFormView.prototype.exportCallBack);
ZaAccountMove.exportMailbox.call(t.parent,e,o)
};
ZaAccountMoveXFormView.purgeAccount=function(){
var e=this.getInstance();
var t=this.getForm();
e[ZaAccountMove.A_status]=ZaAccountMove.A_status_PURGING_MAILBOX;
t.refresh();
var o=new AjxCallback(t.parent,ZaAccountMoveXFormView.prototype.purgeCallBack);
ZaAccountMove.purgeMovedMailbox.call(t.parent,e,o)
};
ZaAccountMoveXFormView.viewMail=function(){
var e=this.getInstance();
var t=this.getForm();
ZaAccountListController._viewMailListenerLauncher.call(ZaApp.getInstance().getCurrentController(),e.account)
};
ZaAccountMoveXFormView.prototype.verifyLDAP=function(){
try{
var e=this._localXForm.getInstance();
e[ZaAccountMove.A_status]=ZaAccountMove.A_status_VERIFYING_LDAP;
this._localXForm.refresh();
var t=e.account[ZaAccount.A_name];
var s=new Object();
var n=new AjxCallback(this,this.searchAccCallBack);
s.types=[ZaSearch.ACCOUNTS,ZaSearch.RESOURCES];
s.callback=n;
s.sortBy=ZaAccount.A_name;
s.query=ZaSearch.getSearchByNameQuery(t,s.types);
ZaSearch.searchDirectory(s)
}
catch(o){
ZaApp.getInstance().getCurrentController()._handleException(o,"ZaAccountMoveXFormView.prototype.verifyLDAP")
}};
ZaAccountMoveXFormView.isExportButtonEnabled=function(){
return !AjxUtil.isEmpty(this.getInstanceValue(ZaAccountMove.A_destination))&&(this.getInstanceValue(ZaAccountMove.A_destination)!=this.getInstanceValue(ZaAccountMove.A_source))
};
ZaAccountMoveXFormView.isMoveStatusError=function(){
return((this.getInstanceValue(ZaAccountMove.A_status)==ZaAccountMove.A_status_EXPORT_ERROR)||(this.getInstanceValue(ZaAccountMove.A_status)==ZaAccountMove.A_status_LDAP_ERROR))
};
ZaAccountMoveXFormView.isIdle=function(){
return(this.getInstanceValue(ZaAccountMove.A_status)<ZaAccountMove.A_status_VERIFYING_LDAP&&this.getInstanceValue(ZaAccountMove.A_status)>=ZaAccountMove.A_status_PENDING)
};
ZaAccountMoveXFormView.isDone=function(){
return(this.getInstanceValue(ZaAccountMove.A_status)>ZaAccountMove.A_status_LDAP_ERROR)
};
ZaAccountMoveXFormView.isVerified=function(){
return(this.getInstanceValue(ZaAccountMove.A_status)>=ZaAccountMove.A_status_LDAP_VERIFIED)
};
ZaAccountMoveXFormView.enablePurgeButton=function(){
return(this.getInstanceValue(ZaAccountMove.A_status)>=ZaAccountMove.A_status_LDAP_VERIFIED)&&(this.getInstanceValue(ZaAccountMove.A_status)<ZaAccountMove.A_status_PURGED_MAILBOX)
};
ZaAccountMoveXFormView.isExportingDone=function(){
return(this.getInstanceValue(ZaAccountMove.A_status)>ZaAccountMove.A_status_EXPORT_ERROR)
};
ZaAccountMoveXFormView.isPastPending=function(){
return(this.getInstanceValue(ZaAccountMove.A_status)>=ZaAccountMove.A_status_PENDING)
};
ZaAccountMoveXFormView.isBeforePurging=function(){
return(this.getInstanceValue(ZaAccountMove.A_status)<ZaAccountMove.A_status_PURGING_MAILBOX)
};
ZaAccountMoveXFormView.myXFormModifier=function(o){
var e;
if(ZaSettings.DOMAINS_ENABLED){
e=ZaApp.getInstance().getGlobalConfig().attrs[ZaGlobalConfig.A_zimbraDefaultDomainName];
if(!e){
e=ZaApp.getInstance().getDomainList().getArray()[0].name
}}else{
e=ZaSettings.myDomainName
}
var t=" @"+e;
o.items=[{
type:_SWITCH_,width:530,align:_LEFT_,valign:_TOP_,items:[{
type:_ZATABCASE_,numCols:1,caseKey:1,id:"moveacc_wiz_main_tab",align:_LEFT_,valign:_TOP_,items:[{
type:_DWT_ALERT_,containerCssStyle:"padding-bottom:0px",style:DwtAlert.INFORMATION,iconVisible:true,align:_CENTER_,content:com_zimbra_backuprestore.BNR_MoveInfo1}
,{
type:_ZA_TOP_GROUPER_,label:com_zimbra_backuprestore.BNR_ExportingMbx_group,id:"moveacc_view_export_group",items:[{
ref:ZaAccountMove.A_name,type:_DYNSELECT_,editable:true,width:"200px",inputSize:30,label:com_zimbra_backuprestore.BNR_selectAccount,dataFetcherClass:ZaSearch,dataFetcherTypes:[ZaSearch.ACCOUNTS,ZaSearch.RESOURCES],dataFetcherAttrs:[ZaItem.A_zimbraId,ZaItem.A_cn,ZaAccount.A_name,ZaAccount.A_displayname,ZaAccount.A_mail],dataFetcherMethod:ZaSearch.prototype.dynSelectSearch}
,{
ref:ZaAccountMove.A_originalSource,type:_OUTPUT_,label:com_zimbra_backuprestore.BNR_sourceServer}
,{
ref:ZaAccountMove.A_destination,type:_OSELECT1_,label:com_zimbra_backuprestore.BNR_targetServer,nowrap:false,labelWrap:true,choices:ZaApp.getInstance().getServerListChoices()}
,{
type:_SPACER_,colSpan:2}
,{
type:_CELLSPACER_}
,{
type:_DWT_BUTTON_,label:com_zimbra_backuprestore.BNR_Export,name:"exportAccountButton",onActivate:ZaAccountMoveXFormView.doMove,enableDisableChecks:[ZaAccountMoveXFormView.isExportButtonEnabled],enableDisableChangeEventSources:[ZaAccountMove.A_destination,ZaAccountMove.A_source],width:100,icon:"MoveMailbox"}
,{
type:_SPACER_,colSpan:2}
,{
type:_AJX_IMAGE_,label:com_zimbra_backuprestore.BNR_ExportingMailbox,src:"QuestionMark",visibilityChecks:[[XForm.checkInstanceValue,ZaAccountMove.A_status,ZaAccountMove.A_status_PENDING]],visibilityChangeEventSources:[ZaAccountMove.A_status]}
,{
type:_DWT_IMAGE_,label:com_zimbra_backuprestore.BNR_ExportingMailbox,src:"DwtWait16Icon",visibilityChecks:[[XForm.checkInstanceValue,ZaAccountMove.A_status,ZaAccountMove.A_status_EXPORTING]],visibilityChangeEventSources:[ZaAccountMove.A_status]}
,{
type:_AJX_IMAGE_,label:com_zimbra_backuprestore.BNR_ExportingMailbox,src:"Check",visibilityChecks:[ZaAccountMoveXFormView.isExportingDone],visibilityChangeEventSources:[ZaAccountMove.A_status]}
,{
type:_AJX_IMAGE_,label:com_zimbra_backuprestore.BNR_ExportingMailbox,src:"Cancel",visibilityChecks:[[XForm.checkInstanceValue,ZaAccountMove.A_status,ZaAccountMove.A_status_EXPORT_ERROR]],visibilityChangeEventSources:[ZaAccountMove.A_status]}
,{
type:_DWT_ALERT_,containerCssStyle:"padding-bottom:0px",style:DwtAlert.CRITICAL,iconVisible:true,align:_CENTER_,colSpan:2,width:"100%",ref:ZaModel.ErrorMessage,visibilityChecks:[ZaAccountMoveXFormView.isMoveStatusError],visibilityChangeEventSources:[ZaAccountMove.A_status]}
]}
,{
type:_ZA_TOP_GROUPER_,label:com_zimbra_backuprestore.BNR_VerifyingMbx_group,id:"moveacc_view_verify_group",items:[{
type:_DWT_ALERT_,containerCssStyle:"padding-bottom:0px",style:DwtAlert.INFORMATION,iconVisible:true,align:_CENTER_,colSpan:2,content:null,ref:ZaAccountMove.A_originalSource,getDisplayValue:function(s){
var n=this.getInstance();
return AjxMessageFormat.format(com_zimbra_backuprestore.BNR_MoveInfo2,[ZaMsg.ACTBB_ViewMail])
}}
,{
type:_SPACER_,colSpan:2}
,{
type:_AJX_IMAGE_,label:com_zimbra_backuprestore.BNR_VerifyingLDAP,src:"QuestionMark",visibilityChecks:[ZaAccountMoveXFormView.isIdle],visibilityChangeEventSources:[ZaAccountMove.A_status]}
,{
type:_DWT_IMAGE_,label:com_zimbra_backuprestore.BNR_VerifyingLDAP,src:"DwtWait16Icon",visibilityChecks:[[XForm.checkInstanceValue,ZaAccountMove.A_status,ZaAccountMove.A_status_VERIFYING_LDAP]],visibilityChangeEventSources:[ZaAccountMove.A_status]}
,{
type:_AJX_IMAGE_,label:com_zimbra_backuprestore.BNR_VerifyingLDAP,src:"Check",visibilityChecks:[ZaAccountMoveXFormView.isDone],visibilityChangeEventSources:[ZaAccountMove.A_status]}
,{
type:_AJX_IMAGE_,label:com_zimbra_backuprestore.BNR_VerifyingLDAP,src:"Cancel",visibilityChecks:[[XForm.checkInstanceValue,ZaAccountMove.A_status,ZaAccountMove.A_status_LDAP_ERROR]],visibilityChangeEventSources:[ZaAccountMove.A_status]}
,{
type:_CELLSPACER_}
,{
type:_DWT_BUTTON_,label:ZaMsg.ACTBB_ViewMail,name:"viewMailButton",width:100,icon:"ReadMailbox",onActivate:ZaAccountMoveXFormView.viewMail,enableDisableChecks:[ZaAccountMoveXFormView.isVerified],enableDisableChangeEventSources:[ZaAccountMove.A_status]}
]}
,{
type:_ZA_TOP_GROUPER_,label:com_zimbra_backuprestore.BNR_PurgingMbx_group,id:"moveacc_view_purge_group",items:[{
type:_DWT_ALERT_,containerCssStyle:"padding-bottom:0px",style:DwtAlert.INFORMATION,iconVisible:true,align:_CENTER_,colSpan:2,content:null,ref:ZaAccountMove.A_originalSource,getDisplayValue:function(s){
var n=this.getInstance();
return AjxMessageFormat.format(com_zimbra_backuprestore.BNR_MoveInfo3,[com_zimbra_backuprestore.BNR_Purge,n[ZaAccountMove.A_originalSource]])
}}
,{
type:_SPACER_,colSpan:2}
,{
type:_CELLSPACER_}
,{
type:_DWT_BUTTON_,label:com_zimbra_backuprestore.BNR_Purge,name:"purgeAccountButton",onActivate:ZaAccountMoveXFormView.purgeAccount,enableDisableChecks:[ZaAccountMoveXFormView.enablePurgeButton],enableDisableChangeEventSources:[ZaAccountMove.A_status],width:100,icon:"Delete"}
,{
type:_SPACER_,colSpan:2}
,{
type:_AJX_IMAGE_,label:com_zimbra_backuprestore.BNR_PurgeOldMailbox,src:"QuestionMark",visibilityChecks:[ZaAccountMoveXFormView.isPastPending,ZaAccountMoveXFormView.isBeforePurging],visibilityChangeEventSources:[ZaAccountMove.A_status]}
,{
type:_DWT_IMAGE_,label:com_zimbra_backuprestore.BNR_PurgeOldMailbox,src:"DwtWait16Icon",visibilityChecks:[[XForm.checkInstanceValue,ZaAccountMove.A_status,ZaAccountMove.A_status_PURGING_MAILBOX]],visibilityChangeEventSources:[ZaAccountMove.A_status]}
,{
type:_AJX_IMAGE_,label:com_zimbra_backuprestore.BNR_PurgeOldMailbox,src:"Check",visibilityChecks:[[XForm.checkInstanceValue,ZaAccountMove.A_status,ZaAccountMove.A_status_PURGED_MAILBOX]],visibilityChangeEventSources:[ZaAccountMove.A_status]}
,{
type:_AJX_IMAGE_,label:com_zimbra_backuprestore.BNR_PurgeOldMailbox,src:"Cancel",visibilityChecks:[[XForm.checkInstanceValue,ZaAccountMove.A_status,ZaAccountMove.A_status_PURGE_ERROR]],visibilityChangeEventSources:[ZaAccountMove.A_status]}
,{
type:_DWT_ALERT_,containerCssStyle:"padding-bottom:0px",style:DwtAlert.CRITICAL,iconVisible:true,align:_CENTER_,colSpan:2,width:"100%",ref:ZaModel.ErrorMessage,visibilityChecks:[[XForm.checkInstanceValue,ZaAccountMove.A_status,ZaAccountMove.A_status_PURGE_ERROR]],visibilityChangeEventSources:[ZaAccountMove.A_status]}
]}
]}
]}
]
};
ZaTabView.XFormModifiers.ZaAccountMoveXFormView.push(ZaAccountMoveXFormView.myXFormModifier);
function ZaBackupApplyServerConfigDialog(e,o,t){
if(arguments.length==0){
return
}
this._extraButtons=[t];
this._standardButtons=[DwtDialog.CANCEL_BUTTON];
ZaXDialog.call(this,e,null,o,"300px","200px");
this.myXModel={};
this.initForm(this.myXModel,this.getMyXForm())
}
ZaBackupApplyServerConfigDialog.prototype=new ZaXDialog;
ZaBackupApplyServerConfigDialog.prototype.constructor=ZaBackupApplyServerConfigDialog;
ZaBackupApplyServerConfigDialog.helpURL=false;
ZaBackupApplyServerConfigDialog.checkIfCurrent=function(){
var t=this.getInheritedProperty("sId");
var e=this.getInstance();
return e.id!=t
};
ZaBackupApplyServerConfigDialog.checkBoxGetDisplayValue=function(o){
var t=this.getInheritedProperty("sId");
var e=this.getInstance();
return !!e.server_selection_cache[t]
};
ZaBackupApplyServerConfigDialog.checkBoxElementChanged=function(s,o,t){
var e=this.getInheritedProperty("sId");
var n=this.getInheritedProperty("label");
if(!o.server_selection_cache){
o.server_selection_cache={}
}
if(s){
o.server_selection_cache[e]=n
}else{
delete o.server_selection_cache[e]
}};
ZaBackupApplyServerConfigDialog.prototype.getMyXForm=function(){
var e=ZaApp.getInstance().getServerList().getArray();
var s={
numCols:2,containerCssStyle:"margin: 10px;",items:[]};
if(e.length>0){
var o=e.length;
for(var t=0;
t<o;
t++){
var n=e[t];
s.items.push({
type:_CHECKBOX_,ref:".",cssStyle:"margin-bottom: 5px;",labelLocation:_RIGHT_,getDisplayValue:ZaBackupApplyServerConfigDialog.checkBoxGetDisplayValue,elementChanged:ZaBackupApplyServerConfigDialog.checkBoxElementChanged,enableDisableChecks:[ZaBackupApplyServerConfigDialog.checkIfCurrent],label:n.name,sId:n.id,trueValue:true,falseValue:false,bmolsnr:true,forceUpdate:true}
)
}}
return s
};
if(ZaSettings&&ZaSettings.EnabledZimlet.com_zimbra_backuprestore){
function ZaHotBackup(){}
ZaOperation.MAIL_RESTORE=++ZA_OP_INDEX;
ZaOperation.IMMEDIATE_BACKUP=++ZA_OP_INDEX;
ZaOperation.ABORT_BACKUP=++ZA_OP_INDEX;
ZaOperation.CONFIGURE_BACKUP=++ZA_OP_INDEX;
ZaOperation.MOVE_ACCOUNT=++ZA_OP_INDEX;
ZaHotBackup.ABORT_OPERATION=1;
ZaHotBackup.SEARCH_OPERATION=2;
ZaZimbraAdmin._BACKUPS=ZaZimbraAdmin.VIEW_INDEX++;
ZaZimbraAdmin._BACKUPS_BY_SERVER_VIEW=ZaZimbraAdmin.VIEW_INDEX++;
ZaHotBackup.DEFAULT_BACKUP_TARGET="/opt/zimbra/backup";
ZaHotBackup.BACKUP_MODE_STANDARD="Standard";
ZaHotBackup.BACKUP_MODE_AUTOGROUP="Auto-Grouped";
ZaHotBackup.BACKUP_MODE_CHOICES=[{
value:ZaHotBackup.BACKUP_MODE_STANDARD,label:com_zimbra_backuprestore.BNR_backupModeStandard}
,{
value:ZaHotBackup.BACKUP_MODE_AUTOGROUP,label:com_zimbra_backuprestore.BNR_backupModeAutoGroup}
];
ZaHotBackup.BACKUP_ENABLED_COSES=[];
ZaHotBackup.BACKUP_ENABLED_DOMAIN=[];
ZaHotBackup.DUMPSTER_ENABLED_COSES=[];
ZaHotBackup.DUMPSTER_ENABLED_DOMAIN=[];
ZaHotBackup.LOCAL_OBJECT={};
ZaHotBackup.isScheduleBackupsRequired=false;
ZaHotBackup.skipSavingBackupConf=false;
ZaHotBackup.SCHEDULING_HOURS=[{
value:"01:00",label:"01:00"}
,{
value:"02:00",label:"02:00"}
,{
value:"03:00",label:"03:00"}
,{
value:"04:00",label:"04:00"}
,{
value:"05:00",label:"05:00"}
,{
value:"06:00",label:"06:00"}
,{
value:"07:00",label:"07:00"}
,{
value:"08:00",label:"08:00"}
,{
value:"09:00",label:"09:00"}
,{
value:"10:00",label:"10:00"}
,{
value:"11:00",label:"11:00"}
,{
value:"12:00",label:"12:00"}
,{
value:"13:00",label:"13:00"}
,{
value:"14:00",label:"14:00"}
,{
value:"15:00",label:"15:00"}
,{
value:"16:00",label:"16:00"}
,{
value:"17:00",label:"17:00"}
,{
value:"18:00",label:"18:00"}
,{
value:"19:00",label:"19:00"}
,{
value:"20:00",label:"20:00"}
,{
value:"21:00",label:"21:00"}
,{
value:"22:00",label:"22:00"}
,{
value:"23:00",label:"23:00"}
,{
value:"00:00",label:"00:00"}
];
ZmCsfeException.INVALID_BACKUP_TARGET="backup.INVALID_BACKUP_TARGET";
ZmCsfeException.NO_LABELS_FOUND="backup.NO_LABELS_FOUND";
ZmCsfeException.CANNOT_ABORT_COMPLETED_BACKUP="backup.CANNOT_ABORT_COMPLETED_BACKUP";
if(ZaGlobalConfig){
ZaGlobalConfig.A_zimbraComponentAvailable_hotbackup="_"+ZaGlobalConfig.A_zimbraComponentAvailable+"_hotbackup";
ZaGlobalConfig.A_zimbraMailReportEnabled="zimbraMailReportEnabled";
ZaGlobalConfig.A_zimbraBackupReportEmailRecipients="zimbraBackupReportEmailRecipients";
ZaGlobalConfig.A_zimbraBackupReportEmailSender="zimbraBackupReportEmailSender";
ZaGlobalConfig.A_zimbraBackupReportEmailSubjectPrefix="zimbraBackupReportEmailSubjectPrefix";
ZaGlobalConfig.A_zimbraBackupTarget="zimbraBackupTarget";
ZaGlobalConfig.A_zimbraBackupMode="zimbraBackupMode";
ZaGlobalConfig.A_zimbraBackupAutoGroupedNumGroups="zimbraBackupAutoGroupedNumGroups";
ZaGlobalConfig.A_zimbraBackupAutoGroupedThrottled="zimbraBackupAutoGroupedThrottled";
ZaGlobalConfig.A_zimbraBackupMinFreeSpace="zimbraBackupMinFreeSpace";
ZaGlobalConfig.A_zimbraBackupEnabled="zimbraBackupEnabled";
ZaGlobalConfig.A_zimbraGlobalBackupEnabled="zimbraGlobalBackupEnabled";
ZaGlobalConfig.A_zimbraDumpsterEnabled="zimbraDumpsterEnabled";
ZaGlobalConfig.A_zimbraBackupRetentionDays="zimbraBackupRetentionDays";
ZaGlobalConfig.A_zimbraBackupStartTime="zimbraBackupStartTime";
ZaGlobalConfig.A_zimbraBackupStartDay="zimbraBackupStartDay";
ZaGlobalConfig.A_zimbraBackupSyncEnabled="zimbraBackupSyncEnabled";
ZaGlobalConfig.A_zimbraBackupSkipBlobs="zimbraBackupSkipBlobs";
ZaGlobalConfig.A_zimbraBackupSkipHsmBlobs="zimbraBackupSkipHsmBlobs";
ZaGlobalConfig.A_zimbraBackupBlobsCompressType="zimbraBackupBlobsCompressType";
ZaGlobalConfig.A_zimbraBackupSkipSearchIndex="zimbraBackupSkipSearchIndex";
ZaGlobalConfig.A_zimbraBackupObjectLevelEnabled="zimbraBackupObjectLevelEnabled";
ZaGlobalConfig.A_backup_all_user_option="temp_all_user_backup";
ZaGlobalConfig.A_dumpster_cos_domain_option="temp_all_user_dumpster";
ZaGlobalConfig.A2_cos_backup_cache="cos_backup_cache";
ZaGlobalConfig.A2_domain_backup_cache="domain_backup_cache";
ZaGlobalConfig.A2_cos_dumpster_cache="cos_dumpster_cache";
ZaGlobalConfig.A2_domain_dumpster_cache="domain_dumpster_cache";
if(ZaGlobalConfig.myXModel){
ZaGlobalConfig.myXModel.items.push({
id:ZaGlobalConfig.A_zimbraBackupTarget,ref:"attrs/"+ZaGlobalConfig.A_zimbraBackupTarget,type:_STRING_}
,{
id:ZaGlobalConfig.A_zimbraBackupReportEmailSubjectPrefix,ref:"attrs/"+ZaGlobalConfig.A_zimbraBackupReportEmailSubjectPrefix,type:_STRING_}
,{
id:ZaGlobalConfig.A_zimbraMailReportEnabled,ref:"attrs/"+ZaGlobalConfig.A_zimbraMailReportEnabled,type:_ENUM_,choices:ZaModel.BOOLEAN_CHOICES}
,{
id:ZaGlobalConfig.A_zimbraBackupReportEmailSender,ref:"attrs/"+ZaGlobalConfig.A_zimbraBackupReportEmailSender,type:_STRING_}
,{
id:ZaGlobalConfig.A_zimbraBackupReportEmailRecipients,ref:"attrs/"+ZaGlobalConfig.A_zimbraBackupReportEmailRecipients,type:_LIST_,listItem:{
type:_STRING_}}
,{
id:ZaGlobalConfig.A_zimbraBackupMode,ref:"attrs/"+ZaGlobalConfig.A_zimbraBackupMode,type:_STRING_,choices:ZaHotBackup.BACKUP_MODE_CHOICES}
,{
id:ZaGlobalConfig.A_zimbraBackupStartTime,ref:"attrs/"+ZaGlobalConfig.A_zimbraBackupStartTime,type:_STRING_,choices:ZaHotBackup.SCHEDULING_HOURS}
,{
id:ZaGlobalConfig.A_zimbraBackupStartDay,ref:"attrs/"+ZaGlobalConfig.A_zimbraBackupStartDay,type:_NUMBER_,choices:ZaSettings.dayOfWeekChoices}
,{
id:ZaGlobalConfig.A_zimbraBackupAutoGroupedNumGroups,ref:"attrs/"+ZaGlobalConfig.A_zimbraBackupAutoGroupedNumGroups,type:_NUMBER_}
,{
id:ZaGlobalConfig.A_zimbraBackupAutoGroupedThrottled,ref:"attrs/"+ZaGlobalConfig.A_zimbraBackupAutoGroupedThrottled,type:_ENUM_,choices:ZaModel.BOOLEAN_CHOICES}
,{
id:ZaGlobalConfig.A_zimbraBackupRetentionDays,ref:"attrs/"+ZaGlobalConfig.A_zimbraBackupRetentionDays,type:_NUMBER_}
,{
id:ZaGlobalConfig.A_zimbraBackupSyncEnabled,ref:"attrs/"+ZaGlobalConfig.A_zimbraBackupSyncEnabled,type:_ENUM_,choices:ZaModel.BOOLEAN_CHOICES}
,{
id:ZaGlobalConfig.A_zimbraGlobalBackupEnabled,ref:"attrs/"+ZaGlobalConfig.A_zimbraGlobalBackupEnabled,type:_ENUM_,choices:ZaModel.BOOLEAN_CHOICES}
,{
id:ZaGlobalConfig.A_zimbraDumpsterEnabled,ref:"attrs/"+ZaGlobalConfig.A_zimbraDumpsterEnabled,type:_ENUM_,choices:ZaModel.BOOLEAN_CHOICES}
,{
id:ZaGlobalConfig.A_zimbraBackupSkipBlobs,ref:"attrs/"+ZaGlobalConfig.A_zimbraBackupSkipBlobs,type:_ENUM_,choices:ZaModel.BOOLEAN_CHOICES}
,{
id:ZaGlobalConfig.A_zimbraBackupSkipHsmBlobs,ref:"attrs/"+ZaGlobalConfig.A_zimbraBackupSkipHsmBlobs,type:_ENUM_,choices:ZaModel.BOOLEAN_CHOICES}
,{
id:ZaGlobalConfig.A_zimbraBackupBlobsCompressType,ref:"attrs/"+ZaGlobalConfig.A_zimbraBackupBlobsCompressType,type:_ENUM_,choices:ZaModel.BOOLEAN_CHOICES}
,{
id:ZaGlobalConfig.A_zimbraBackupSkipSearchIndex,ref:"attrs/"+ZaGlobalConfig.A_zimbraBackupSkipSearchIndex,type:_ENUM_,choices:ZaModel.BOOLEAN_CHOICES}
,{
id:ZaGlobalConfig.A_zimbraBackupMinFreeSpace,ref:"attrs/"+ZaGlobalConfig.A_zimbraBackupMinFreeSpace,type:_STRING_}
,{
id:ZaGlobalConfig.A_zimbraBackupObjectLevelEnabled,ref:"attrs/"+ZaGlobalConfig.A_zimbraBackupObjectLevelEnabled,type:_ENUM_,choices:ZaModel.BOOLEAN_CHOICES}
,{
id:ZaGlobalConfig.A_backup_all_user_option,ref:ZaGlobalConfig.A_backup_all_user_option,type:_ENUM_,choices:ZaModel.BOOLEAN_CHOICES}
,{
id:ZaGlobalConfig.A_dumpster_cos_domain_option,ref:ZaGlobalConfig.A_dumpster_cos_domain_option,type:_ENUM_,choices:ZaModel.BOOLEAN_CHOICES}
,{
id:ZaGlobalConfig.A2_cos_backup_cache,ref:"attrs/"+ZaGlobalConfig.A2_cos_backup_cache,type:_LIST_,listItem:{
type:_STRING_}}
,{
id:ZaGlobalConfig.A2_domain_backup_cache,ref:"attrs/"+ZaGlobalConfig.A2_domain_backup_cache,type:_LIST_,listItem:{
type:_STRING_}}
,{
id:ZaGlobalConfig.A2_cos_dumpster_cache,ref:"attrs/"+ZaGlobalConfig.A2_cos_dumpster_cache,type:_LIST_,listItem:{
type:_STRING_}}
,{
id:ZaGlobalConfig.A2_domain_dumpster_cache,ref:"attrs/"+ZaGlobalConfig.A2_domain_dumpster_cache,type:_LIST_,listItem:{
type:_STRING_}}
)
}}
if(ZaSettings){
ZaSettings.BACKUP_VIEW="backupsView";
ZaSettings.ALL_UI_COMPONENTS.push({
value:ZaSettings.BACKUP_VIEW,label:com_zimbra_backuprestore.UI_Comp_backupsView}
);
ZaSettings.OVERVIEW_TOOLS_ITEMS.push(ZaSettings.BACKUP_VIEW);
ZaSettings.VIEW_RIGHTS[ZaSettings.BACKUP_VIEW]="adminConsoleBackupRights"
}
if(ZaServer){
ZaServer.A_zimbraBackupMode="zimbraBackupMode";
ZaServer.A_zimbraBackupAutoGroupedThrottled="zimbraBackupAutoGroupedThrottled";
ZaServer.A_zimbraBackupAutoGroupedNumGroups="zimbraBackupAutoGroupedNumGroups";
ZaServer.A_zimbraBackupRetentionDays="zimbraBackupRetentionDays";
ZaServer.A_zimbraBackupSyncEnabled="zimbraBackupSyncEnabled";
ZaServer.A_zimbraBackupTarget="zimbraBackupTarget";
ZaServer.A_zimbraBackupMinFreeSpace="zimbraBackupMinFreeSpace";
ZaServer.A_zimbraBackupStartTime="zimbraBackupStartTime";
ZaServer.A_zimbraBackupStartDay="zimbraBackupStartDay";
ZaServer.A_server_selection_cache="server_selection_cache";
if(ZaServer.myXModel){
ZaServer.myXModel.items.push({
id:ZaServer.A_zimbraBackupMode,ref:"attrs/"+ZaServer.A_zimbraBackupMode,type:_COS_STRING_}
,{
id:ZaServer.A_zimbraBackupAutoGroupedNumGroups,ref:"attrs/"+ZaServer.A_zimbraBackupAutoGroupedNumGroups,type:_COS_NUMBER_}
,{
id:ZaServer.A_zimbraBackupAutoGroupedThrottled,ref:"attrs/"+ZaServer.A_zimbraBackupAutoGroupedThrottled,type:_COS_ENUM_,choices:ZaModel.BOOLEAN_CHOICES}
,{
id:ZaServer.A_zimbraBackupRetentionDays,ref:"attrs/"+ZaServer.A_zimbraBackupRetentionDays,type:_COS_NUMBER_}
,{
id:ZaServer.A_zimbraBackupSyncEnabled,ref:"attrs/"+ZaServer.A_zimbraBackupSyncEnabled,type:_COS_ENUM_,choices:ZaModel.BOOLEAN_CHOICES}
,{
id:ZaServer.A_zimbraBackupStartTime,ref:"attrs/"+ZaServer.A_zimbraBackupStartTime,type:_COS_STRING_,choices:ZaHotBackup.SCHEDULING_HOURS}
,{
id:ZaServer.A_zimbraBackupStartDay,ref:"attrs/"+ZaServer.A_zimbraBackupStartDay,type:_COS_NUMBER_,choices:ZaSettings.dayOfWeekChoices}
,{
id:ZaServer.A_zimbraBackupMinFreeSpace,ref:"attrs/"+ZaServer.A_zimbraBackupMinFreeSpace,type:_COS_STRING_}
,{
id:ZaServer.A_zimbraBackupTarget,ref:"attrs/"+ZaServer.A_zimbraBackupTarget,type:_COS_STRING_}
,{
id:ZaServer.A_server_selection_cache,ref:ZaServer.A_server_selection_cache,type:_LIST_}
)
}}
ZaHotBackup.getCosDomainList=function(l,c){
ZaHotBackup.LOCAL_OBJECT={};
ZaHotBackup.BACKUP_ENABLED_COSES=[];
ZaHotBackup.BACKUP_ENABLED_DOMAIN=[];
ZaHotBackup.DUMPSTER_ENABLED_COSES=[];
ZaHotBackup.DUMPSTER_ENABLED_DOMAIN=[];
var n={
query:"(zimbraBackupEnabled=TRUE)",attrs:"zimbraBackupEnabled, zimbraDumpsterEnabled",applyCos:false,applyConfig:false,types:"coses,domains"};
var e=ZaSearch.searchDirectory(n);
var o=e.Body.SearchDirectoryResponse.cos||[];
var d=e.Body.SearchDirectoryResponse.domain||[];
for(var r=0,t=o.length;
r<t;
r++){
ZaHotBackup.BACKUP_ENABLED_COSES.push(o[r].name)
}
for(var r=0,t=d.length;
r<t;
r++){
ZaHotBackup.BACKUP_ENABLED_DOMAIN.push(d[r].name)
}
n.query="(zimbraDumpsterEnabled=TRUE)";
var s=ZaSearch.searchDirectory(n);
var o=s.Body.SearchDirectoryResponse.cos||[];
var d=s.Body.SearchDirectoryResponse.domain||[];
for(var r=0,t=o.length;
r<t;
r++){
ZaHotBackup.DUMPSTER_ENABLED_COSES.push(o[r].name)
}
for(var r=0,t=d.length;
r<t;
r++){
ZaHotBackup.DUMPSTER_ENABLED_DOMAIN.push(d[r].name)
}
this.attrs[ZaGlobalConfig.A2_cos_backup_cache]=[].concat(ZaHotBackup.BACKUP_ENABLED_COSES);
this.attrs[ZaGlobalConfig.A2_domain_backup_cache]=[].concat(ZaHotBackup.BACKUP_ENABLED_DOMAIN);
this.attrs[ZaGlobalConfig.A2_cos_dumpster_cache]=[].concat(ZaHotBackup.DUMPSTER_ENABLED_COSES);
this.attrs[ZaGlobalConfig.A2_domain_dumpster_cache]=[].concat(ZaHotBackup.DUMPSTER_ENABLED_DOMAIN)
};
ZaHotBackup.globConfigLoadMethod=function(t,o,e){
if(this.attrs[ZaGlobalConfig.A_zimbraBackupTarget]){
ZaHotBackup.DEFAULT_BACKUP_TARGET=AjxStringUtil.trim(this.attrs[ZaGlobalConfig.A_zimbraBackupTarget])
}
if(!this.attrs[ZaGlobalConfig.A_zimbraBackupReportEmailRecipients]){
this.attrs[ZaGlobalConfig.A_zimbraBackupReportEmailRecipients]=[]
}else{
if(!(this.attrs[ZaGlobalConfig.A_zimbraBackupReportEmailRecipients] instanceof Array)){
this.attrs[ZaGlobalConfig.A_zimbraBackupReportEmailRecipients]=[this.attrs[ZaGlobalConfig.A_zimbraBackupReportEmailRecipients]]
}}
if(this.attrs[ZaGlobalConfig.A_zimbraBackupBlobsCompressType]=="zip"){
this.attrs[ZaGlobalConfig.A_zimbraBackupBlobsCompressType]="TRUE"
}else{
this.attrs[ZaGlobalConfig.A_zimbraBackupBlobsCompressType]="FALSE"
}
ZaHotBackup.skipSavingBackupConf=this.attrs[ZaGlobalConfig.A_zimbraGlobalBackupEnabled]=="FALSE";
ZaHotBackup.getCosDomainList.call(this)
};
ZaItem.loadMethods.ZaGlobalConfig.push(ZaHotBackup.globConfigLoadMethod);
ZaHotBackup.globConfigModifyMethod=function(n,s){
if(n[ZaGlobalConfig.A_zimbraBackupTarget]){
ZaHotBackup.DEFAULT_BACKUP_TARGET=n[ZaGlobalConfig.A_zimbraBackupTarget]
}
if(n[ZaGlobalConfig.A_zimbraDumpsterEnabled]=="TRUE"){
ZaHotBackup.unsetDumpsterForCosOrDomain.call(this)
}
ZaHotBackup.modifyCosOrDomain.call(this,ZaHotBackup.LOCAL_OBJECT.cos);
ZaHotBackup.modifyCosOrDomain.call(this,ZaHotBackup.LOCAL_OBJECT.domain,true);
ZaHotBackup.getCosDomainList.call(this);
if(ZaHotBackup.isScheduleBackupsRequired){
ZaHotBackup.isScheduleBackupsRequired=false;
var e=ZaApp.getInstance().getBackupServerList();
if(e){
e=e.getArray();
for(var o=0,t=e.length;
o<t;
o++){
e[o].scheduleBackups()
}}}};
ZaItem.modifyMethods.ZaGlobalConfig.push(ZaHotBackup.globConfigModifyMethod);
ZaHotBackup.globConfigBeforeModify=function(n){
if(n[ZaGlobalConfig.A_zimbraGlobalBackupEnabled]){
ZaHotBackup.skipSavingBackupConf=n[ZaGlobalConfig.A_zimbraGlobalBackupEnabled]=="FALSE"
}
var o=ZaHotBackup.GC_BACKUP_ATTRS.length;
for(var t=0;
t<o;
t++){
var e=ZaHotBackup.GC_BACKUP_ATTRS[t];
if(typeof n[e]!=="undefined"){
if(!ZaHotBackup.isScheduleBackupsRequired){
ZaHotBackup.isScheduleBackupsRequired=true
}else{
if(!ZaHotBackup.skipSavingBackupConf){
break
}}
if(ZaHotBackup.skipSavingBackupConf&&e!=ZaGlobalConfig.A_zimbraGlobalBackupEnabled){
delete n[e]
}}}
if(n[ZaGlobalConfig.A_zimbraBackupTarget]){
n[ZaGlobalConfig.A_zimbraBackupTarget]=AjxStringUtil.trim(n[ZaGlobalConfig.A_zimbraBackupTarget])
}
if(n[ZaGlobalConfig.A_zimbraBackupBlobsCompressType]){
if(n[ZaGlobalConfig.A_zimbraBackupBlobsCompressType]=="TRUE"){
n[ZaGlobalConfig.A_zimbraBackupBlobsCompressType]="zip"
}else{
n[ZaGlobalConfig.A_zimbraBackupBlobsCompressType]="noZip"
}}
ZaHotBackup.LOCAL_OBJECT={
cos:{}
,domain:{}};
if(n[ZaGlobalConfig.A2_cos_backup_cache]){
ZaHotBackup.getCosDomainObjToModify.call(this,ZaHotBackup.LOCAL_OBJECT,ZaHotBackup.BACKUP_ENABLED_COSES,n[ZaGlobalConfig.A2_cos_backup_cache],ZaGlobalConfig.A_zimbraBackupEnabled);
ZaHotBackup.isScheduleBackupsRequired=true;
delete n[ZaGlobalConfig.A2_cos_backup_cache]
}
if(n[ZaGlobalConfig.A2_domain_backup_cache]){
ZaHotBackup.getCosDomainObjToModify.call(this,ZaHotBackup.LOCAL_OBJECT,ZaHotBackup.BACKUP_ENABLED_DOMAIN,n[ZaGlobalConfig.A2_domain_backup_cache],ZaGlobalConfig.A_zimbraBackupEnabled,true);
ZaHotBackup.isScheduleBackupsRequired=true;
delete n[ZaGlobalConfig.A2_domain_backup_cache]
}
if(n[ZaGlobalConfig.A2_cos_dumpster_cache]){
ZaHotBackup.getCosDomainObjToModify.call(this,ZaHotBackup.LOCAL_OBJECT,ZaHotBackup.DUMPSTER_ENABLED_COSES,n[ZaGlobalConfig.A2_cos_dumpster_cache],ZaGlobalConfig.A_zimbraDumpsterEnabled);
delete n[ZaGlobalConfig.A2_cos_dumpster_cache]
}
if(n[ZaGlobalConfig.A2_domain_dumpster_cache]){
ZaHotBackup.getCosDomainObjToModify.call(this,ZaHotBackup.LOCAL_OBJECT,ZaHotBackup.DUMPSTER_ENABLED_DOMAIN,n[ZaGlobalConfig.A2_domain_dumpster_cache],ZaGlobalConfig.A_zimbraDumpsterEnabled,true);
delete n[ZaGlobalConfig.A2_domain_dumpster_cache]
}};
ZaItem.modifyMethodsExt.ZaGlobalConfig.push(ZaHotBackup.globConfigBeforeModify);
ZaHotBackup.getCosDomainObjToModify=function(e,r,o,t,d){
o=o||[];
r=r||[];
if(!o.length&&!r.length){
return
}
var l="cos";
if(d){
l="domain"
}
if(!o.length&&r.length){
for(var s=0,n=r.length;
s<n;
s++){
var c=r[s];
if(!e[l][c]){
e[l][c]={}
}
e[l][c][t]=""
}}else{
if(!r.length&&o.length){
for(var s=0,n=o.length;
s<n;
s++){
var c=o[s];
if(!e[l][c]){
e[l][c]={}
}
e[l][c][t]="TRUE"
}}else{
for(var s=0,n=o.length;
s<n;
s++){
var c=o[s];
if(!r.includes(c)){
if(!e[l][c]){
e[l][c]={}
}
e[l][c][t]="TRUE"
}}
for(var s=0,n=r.length;
s<n;
s++){
var c=r[s];
if(!o.includes(c)){
if(!e[l][c]){
e[l][c]={}
}
e[l][c][t]=""
}}}}};
ZaHotBackup.modifyCosOrDomain=function(e,c){
var l=Object.keys(e);
if(l.length){
var b="ModifyCosRequest";
var y=ZaMsg.BUSY_MODIFY_COS;
var m;
if(c){
m=ZaApp.getInstance().getDomainList().getArray();
b="ModifyDomainRequest";
y=ZaMsg.BUSY_MODIFY_DOMAIN
}else{
m=ZaApp.getInstance().getCosList().getArray()
}
var p=AjxSoapDoc.create("BatchRequest","urn:zimbra");
p.setMethodAttribute("onerror","continue");
var n=l.length;
var d=m.length;
for(var v=0;
v<n;
v++){
for(var f=0;
f<d;
f++){
if(l[v]==m[f].name){
var o=p.set(b,null,null,ZaZimbraAdmin.URN);
p.set("id",m[f].id,o);
var g=l[v];
if(e[g].hasOwnProperty(ZaGlobalConfig.A_zimbraBackupEnabled)){
var u=p.set("a",e[g][ZaGlobalConfig.A_zimbraBackupEnabled],o);
u.setAttribute("n",ZaGlobalConfig.A_zimbraBackupEnabled)
}
if(e[g].hasOwnProperty(ZaGlobalConfig.A_zimbraDumpsterEnabled)){
var u=p.set("a",e[g][ZaGlobalConfig.A_zimbraDumpsterEnabled],o);
u.setAttribute("n",ZaGlobalConfig.A_zimbraDumpsterEnabled)
}}}}
var r=new Object();
r.soapDoc=p;
r.asyncMode=true;
r.callback=function(x){
if(x&&x.isException&&x.isException()){
ZaApp.getInstance().getCurrentController()._handleException(x.getException(),"ZaHotBackup.modifyCosOrDomain",null,false)
}else{
if(x&&x.getResponse().Body.BatchResponse.Fault){
var k=x.getResponse().Body.BatchResponse.Fault;
if(k instanceof Array){
k=k[0]
}
if(k){
var s=ZmCsfeCommand.faultToEx(k);
ZaApp.getInstance().getCurrentController()._handleException(s,"ZaHotBackup.modifyCosOrDomain",null,false)
}}}};
var t={
controller:ZaApp.getInstance().getCurrentController(),busyMsg:y};
ZaRequestMgr.invoke(r,t)
}};
ZaHotBackup.unsetDumpsterForCosOrDomain=function(d,m){
var s={
query:"(zimbraDumpsterEnabled=FALSE)",attrs:"zimbraDumpsterEnabled",applyCos:false,applyConfig:false,types:"coses,domains"};
var u=ZaSearch.searchDirectory(s);
var n=u.Body.SearchDirectoryResponse.cos||[];
var f=u.Body.SearchDirectoryResponse.domain||[];
if(n.length||f.length){
var c=AjxSoapDoc.create("BatchRequest","urn:zimbra");
c.setMethodAttribute("onerror","continue");
for(var r=0,o=n.length;
r<o;
r++){
var t=c.set("ModifyCosRequest",null,null,ZaZimbraAdmin.URN);
c.set("id",n[r].id,t);
var l=c.set("a","",t);
l.setAttribute("n",ZaGlobalConfig.A_zimbraDumpsterEnabled)
}
for(var r=0,o=f.length;
r<o;
r++){
var t=c.set("ModifyDomainRequest",null,null,ZaZimbraAdmin.URN);
c.set("id",f[r].id,t);
var l=c.set("a","",t);
l.setAttribute("n",ZaGlobalConfig.A_zimbraDumpsterEnabled)
}
var s=new Object();
s.soapDoc=c;
s.asyncMode=true;
s.callback=function(y){
if(y&&y.isException&&y.isException()){
ZaApp.getInstance().getCurrentController()._handleException(y.getException(),"ZaHotBackup.unsetDumpsterForCosOrDomain",null,false)
}else{
if(y&&y.getResponse().Body.BatchResponse.Fault){
var g=y.getResponse().Body.BatchResponse.Fault;
if(g instanceof Array){
g=g[0]
}
if(g){
var p=ZmCsfeCommand.faultToEx(g);
ZaApp.getInstance().getCurrentController()._handleException(p,"ZaHotBackup.unsetDumpsterForCosOrDomain",null,false)
}}}};
var e={
controller:ZaApp.getInstance().getCurrentController()};
ZaRequestMgr.invoke(s,e)
}};
ZaHotBackup.onRepeatRemove=function(e,t){
var o=this.getInstanceValue();
if(o==null||typeof(o)=="string"||e>=o.length||e<0){
return
}
o.splice(e,1);
this.setInstanceValue(o);
t.parent.setDirty(true)
};
ZaHotBackup.GC_BNR_TAB_RIGHTS=[];
ZaHotBackup.GC_BACKUP_ATTRS=[ZaGlobalConfig.A_zimbraGlobalBackupEnabled,ZaGlobalConfig.A_zimbraBackupMode,ZaGlobalConfig.A_zimbraBackupAutoGroupedNumGroups,ZaGlobalConfig.A_zimbraBackupAutoGroupedThrottled,ZaGlobalConfig.A_zimbraBackupRetentionDays,ZaGlobalConfig.A_zimbraBackupSyncEnabled,ZaGlobalConfig.A_zimbraBackupStartTime,ZaGlobalConfig.A_zimbraBackupStartDay,ZaGlobalConfig.A_zimbraBackupTarget,ZaGlobalConfig.A_zimbraBackupReportEmailSubjectPrefix,ZaGlobalConfig.A_zimbraBackupMinFreeSpace,ZaGlobalConfig.A_zimbraMailReportEnabled,ZaGlobalConfig.A_zimbraBackupReportEmailSender,ZaGlobalConfig.A_zimbraBackupReportEmailRecipients,ZaGlobalConfig.A_zimbraBackupSkipBlobs,ZaGlobalConfig.A_zimbraBackupSkipHsmBlobs,ZaGlobalConfig.A_zimbraBackupBlobsCompressType,ZaGlobalConfig.A_zimbraBackupSkipSearchIndex,ZaGlobalConfig.A_zimbraBackupObjectLevelEnabled];
ZaHotBackup.GC_DUMPSTER_ATTRS=[ZaGlobalConfig.A_zimbraDumpsterEnabled];
ZaHotBackup.GC_BNR_TAB_ATTRIBUTES=[ZaGlobalConfig.A_backup_all_user_option,ZaGlobalConfig.A_dumpster_cos_domain_option,ZaGlobalConfig.A2_cos_backup_cache,ZaGlobalConfig.A2_domain_backup_cache,ZaGlobalConfig.A2_cos_dumpster_cache,ZaGlobalConfig.A2_domain_dumpster_cache].concat(ZaHotBackup.GC_BACKUP_ATTRS,ZaHotBackup.GC_DUMPSTER_ATTRS);
ZaHotBackup.changeDumpsterEnabled=function(n,o,t){
var e=this.getRef();
if(e==ZaGlobalConfig.A_zimbraDumpsterEnabled){
this.setInstanceValue("TRUE")
}else{
if(e==ZaGlobalConfig.A_dumpster_cos_domain_option){
this.setInstanceValue("FALSE",ZaGlobalConfig.A_zimbraDumpsterEnabled)
}}};
ZaHotBackup.changeBackupObjectLevel=function(n,o,t){
var e=this.getRef();
if(e==ZaGlobalConfig.A_zimbraBackupObjectLevelEnabled){
this.setInstanceValue("TRUE")
}else{
if(e==ZaGlobalConfig.A_backup_all_user_option){
this.setInstanceValue("FALSE",ZaGlobalConfig.A_zimbraBackupObjectLevelEnabled)
}}};
ZaHotBackup.GlobalConfigXFormModifier=function(s,n){
if(ZaTabView.isTAB_ENABLED(n,ZaHotBackup.GC_BNR_TAB_ATTRIBUTES,ZaHotBackup.GC_BNR_TAB_RIGHTS)){
var e=s.items[1];
ZaHotBackup.GlobalConfigTabIndex=++this.TAB_INDEX;
e.choices.push({
value:ZaHotBackup.GlobalConfigTabIndex,label:com_zimbra_backuprestore.BNR_Tab_BNR}
);
var t={
type:_ZATABCASE_,caseKey:ZaHotBackup.GlobalConfigTabIndex,colSizes:["auto"],numCols:1,width:"100%",items:[{
type:_ZA_TOP_GROUPER_,numCols:2,colSizes:["300","*"],width:"100%",label:com_zimbra_backuprestore.BNR_Tab_BNR,items:[{
ref:ZaGlobalConfig.A_zimbraGlobalBackupEnabled,type:_CHECKBOX_,label:com_zimbra_backuprestore.BNR_zimbraGlobalBackupEnabled,trueValue:"TRUE",falseValue:"FALSE",}
,{
ref:ZaGlobalConfig.A_zimbraBackupMode,type:_OSELECT1_,label:com_zimbra_backuprestore.BNR_zimbraBackupMode,labelLocation:_LEFT_,choices:ZaHotBackup.BACKUP_MODE_CHOICES,visibilityChecks:[[XForm.checkInstanceValue,ZaGlobalConfig.A_zimbraGlobalBackupEnabled,"TRUE"]],visibilityChangeEventSources:[ZaGlobalConfig.A_zimbraGlobalBackupEnabled]}
,{
ref:ZaGlobalConfig.A_zimbraBackupRetentionDays,type:_INPUT_,label:com_zimbra_backuprestore.BNR_zimbraBackupRetentionDays,visibilityChecks:[[XForm.checkInstanceValue,ZaGlobalConfig.A_zimbraGlobalBackupEnabled,"TRUE"]],visibilityChangeEventSources:[ZaGlobalConfig.A_zimbraGlobalBackupEnabled]}
,{
ref:ZaGlobalConfig.A_zimbraBackupAutoGroupedNumGroups,type:_INPUT_,label:com_zimbra_backuprestore.BNR_zimbraBackupAutoGroupedNumGroups,visibilityChecks:[[XForm.checkInstanceValue,ZaGlobalConfig.A_zimbraBackupMode,ZaHotBackup.BACKUP_MODE_AUTOGROUP],[XForm.checkInstanceValue,ZaGlobalConfig.A_zimbraGlobalBackupEnabled,"TRUE"]],visibilityChangeEventSources:[ZaGlobalConfig.A_zimbraBackupMode,ZaGlobalConfig.A_zimbraGlobalBackupEnabled]}
,{
ref:ZaGlobalConfig.A_zimbraBackupAutoGroupedThrottled,type:_CHECKBOX_,label:com_zimbra_backuprestore.BNR_zimbraBackupAutoGroupedThrottled,trueValue:"TRUE",falseValue:"FALSE",visibilityChecks:[[XForm.checkInstanceValue,ZaGlobalConfig.A_zimbraBackupMode,ZaHotBackup.BACKUP_MODE_AUTOGROUP],[XForm.checkInstanceValue,ZaGlobalConfig.A_zimbraGlobalBackupEnabled,"TRUE"]],visibilityChangeEventSources:[ZaGlobalConfig.A_zimbraBackupMode,ZaGlobalConfig.A_zimbraGlobalBackupEnabled]}
,{
ref:ZaGlobalConfig.A_zimbraBackupSyncEnabled,type:_CHECKBOX_,label:com_zimbra_backuprestore.BNR_zimbraBackupSyncEnabled,trueValue:"TRUE",falseValue:"FALSE",visibilityChecks:[[XForm.checkInstanceValue,ZaGlobalConfig.A_zimbraBackupMode,ZaHotBackup.BACKUP_MODE_STANDARD],[XForm.checkInstanceValue,ZaGlobalConfig.A_zimbraGlobalBackupEnabled,"TRUE"]],visibilityChangeEventSources:[ZaGlobalConfig.A_zimbraBackupMode,ZaGlobalConfig.A_zimbraGlobalBackupEnabled]}
,{
type:_DWT_ALERT_,containerCssStyle:"padding-bottom:0px",style:DwtAlert.INFO,iconVisible:true,content:com_zimbra_backuprestore.BNR_zimbraBackupStandardIncrementalInfo,visibilityChecks:[[XForm.checkInstanceValue,ZaGlobalConfig.A_zimbraBackupMode,ZaHotBackup.BACKUP_MODE_STANDARD],[XForm.checkInstanceValue,ZaGlobalConfig.A_zimbraGlobalBackupEnabled,"TRUE"]],visibilityChangeEventSources:[ZaGlobalConfig.A_zimbraBackupMode,ZaGlobalConfig.A_zimbraGlobalBackupEnabled]}
,{
ref:ZaGlobalConfig.A_zimbraBackupStartTime,type:_OSELECT1_,label:com_zimbra_backuprestore.BNR_zimbraBackupStartTime,labelLocation:_LEFT_,visibilityChecks:[[XForm.checkInstanceValue,ZaGlobalConfig.A_zimbraGlobalBackupEnabled,"TRUE"]],visibilityChangeEventSources:[ZaGlobalConfig.A_zimbraGlobalBackupEnabled],}
,{
ref:ZaGlobalConfig.A_zimbraBackupStartDay,type:_OSELECT1_,label:com_zimbra_backuprestore.BNR_zimbraBackupStartDay,labelLocation:_LEFT_,visibilityChecks:[[XForm.checkInstanceValue,ZaGlobalConfig.A_zimbraBackupMode,ZaHotBackup.BACKUP_MODE_STANDARD],[XForm.checkInstanceValue,ZaGlobalConfig.A_zimbraGlobalBackupEnabled,"TRUE"]],visibilityChangeEventSources:[ZaGlobalConfig.A_zimbraBackupMode,ZaGlobalConfig.A_zimbraGlobalBackupEnabled]}
,{
ref:ZaGlobalConfig.A_zimbraBackupTarget,type:_TEXTFIELD_,label:com_zimbra_backuprestore.BNR_zimbraBackupTarget,visibilityChecks:[[XForm.checkInstanceValue,ZaGlobalConfig.A_zimbraGlobalBackupEnabled,"TRUE"]],visibilityChangeEventSources:[ZaGlobalConfig.A_zimbraGlobalBackupEnabled],}
,{
ref:ZaGlobalConfig.A_zimbraBackupReportEmailSubjectPrefix,type:_TEXTFIELD_,label:com_zimbra_backuprestore.BNR_zimbraBackupReportEmailSubjectPrefix,visibilityChecks:[[XForm.checkInstanceValue,ZaGlobalConfig.A_zimbraGlobalBackupEnabled,"TRUE"]],visibilityChangeEventSources:[ZaGlobalConfig.A_zimbraGlobalBackupEnabled],}
,{
type:_DWT_ALERT_,containerCssStyle:"padding-bottom:0px",style:DwtAlert.INFO,iconVisible:true,content:com_zimbra_backuprestore.BNR_zimbraBackupMinFreespaceConfInfo,visibilityChecks:[[XForm.checkInstanceValue,ZaGlobalConfig.A_zimbraGlobalBackupEnabled,"TRUE"]],visibilityChangeEventSources:[ZaGlobalConfig.A_zimbraGlobalBackupEnabled],}
,{
ref:ZaGlobalConfig.A_zimbraBackupMinFreeSpace,type:_TEXTFIELD_,label:com_zimbra_backuprestore.BNR_zimbraBackupMinFreeSpace,visibilityChecks:[[XForm.checkInstanceValue,ZaGlobalConfig.A_zimbraGlobalBackupEnabled,"TRUE"]],visibilityChangeEventSources:[ZaGlobalConfig.A_zimbraGlobalBackupEnabled],}
,{
type:_ZACENTER_GROUPER_,label:com_zimbra_backuprestore.BNR_Notifications,width:"100%",numCols:2,colSpan:"2",colSizes:["270","*"],cssStyle:"margin:0 10px;",containerCssStyle:"padding: 20px 10px 10px;",align:_LEFT_,valign:_TOP_,visibilityChecks:[[XForm.checkInstanceValue,ZaGlobalConfig.A_zimbraGlobalBackupEnabled,"TRUE"]],visibilityChangeEventSources:[ZaGlobalConfig.A_zimbraGlobalBackupEnabled],items:[{
ref:ZaGlobalConfig.A_zimbraMailReportEnabled,type:_CHECKBOX_,label:com_zimbra_backuprestore.BNR_zimbraMailReportEnabled,trueValue:"TRUE",falseValue:"FALSE",}
,{
type:_SPACER_,height:"10",colSpan:"2"}
,{
ref:ZaGlobalConfig.A_zimbraBackupReportEmailSender,type:_TEXTFIELD_,width:250,labelCssStyle:"text-align:left; margin-left:0; padding-left:0; vertical-align: top;",cssClass:"admin_xform_name_input",label:com_zimbra_backuprestore.BNR_zimbraBackupReportEmailSender,enableDisableChecks:[[XForm.checkInstanceValue,ZaGlobalConfig.A_zimbraMailReportEnabled,"TRUE"]],enableDisableChangeEventSources:[ZaGlobalConfig.A_zimbraMailReportEnabled,]}
,{
type:_SPACER_,height:"10",colSpan:"2"}
,{
ref:ZaGlobalConfig.A_zimbraBackupReportEmailRecipients,type:_REPEAT_,labelCssStyle:"text-align:left; margin-left:0; padding-left:0; vertical-align: top;",label:com_zimbra_backuprestore.BNR_zimbraBackupReportEmailRecipients,addButtonLabel:ZaMsg.NAD_AddAddress,repeatInstance:"",showAddButton:true,showRemoveButton:true,showAddOnNextRow:true,removeButtonLabel:ZaMsg.NAD_RemoveAddress,items:[{
ref:".",type:_TEXTFIELD_,label:null,width:250}
,],onRemove:ZaHotBackup.onRepeatRemove,enableDisableChecks:[[XForm.checkInstanceValue,ZaGlobalConfig.A_zimbraMailReportEnabled,"TRUE"]],enableDisableChangeEventSources:[ZaGlobalConfig.A_zimbraMailReportEnabled,]}
,],}
,{
type:_ZACENTER_GROUPER_,label:com_zimbra_backuprestore.BNR_Options,width:"100%",numCols:2,colSpan:"2",colSizes:["270","*"],cssStyle:"margin:0 10px;",containerCssStyle:"padding: 20px 10px 10px;",align:_LEFT_,valign:_TOP_,visibilityChecks:[[XForm.checkInstanceValue,ZaGlobalConfig.A_zimbraGlobalBackupEnabled,"TRUE"]],visibilityChangeEventSources:[ZaGlobalConfig.A_zimbraGlobalBackupEnabled],items:[{
ref:ZaGlobalConfig.A_zimbraBackupSkipBlobs,type:_CHECKBOX_,label:com_zimbra_backuprestore.BNR_zimbraBackupSkipBlobs,trueValue:"TRUE",falseValue:"FALSE",}
,{
ref:ZaGlobalConfig.A_zimbraBackupSkipHsmBlobs,type:_CHECKBOX_,label:com_zimbra_backuprestore.BNR_zimbraBackupSkipHsmBlobs,trueValue:"TRUE",falseValue:"FALSE",}
,{
ref:ZaGlobalConfig.A_zimbraBackupBlobsCompressType,type:_CHECKBOX_,label:com_zimbra_backuprestore.BNR_zimbraBackupBlobsCompressType,trueValue:"TRUE",falseValue:"FALSE",}
,{
ref:ZaGlobalConfig.A_zimbraBackupSkipSearchIndex,type:_CHECKBOX_,label:com_zimbra_backuprestore.BNR_zimbraBackupSkipSearchIndex,trueValue:"TRUE",falseValue:"FALSE",}
,],}
,{
type:_ZACENTER_GROUPER_,label:com_zimbra_backuprestore.BNR_BackupByCOSAndDomain,width:"100%",numCols:2,colSpan:"2",colSizes:["270","*"],cssStyle:"margin:0 10px;",containerCssStyle:"padding: 20px 10px 10px;",align:_LEFT_,valign:_TOP_,visibilityChecks:[[XForm.checkInstanceValue,ZaGlobalConfig.A_zimbraGlobalBackupEnabled,"TRUE"]],visibilityChangeEventSources:[ZaGlobalConfig.A_zimbraGlobalBackupEnabled],items:[{
type:_GROUP_,numCols:5,colSizes:["20px","150px","20px","32px","150px"],nowrap:true,labelCssStyle:"text-align:left; margin-left:0; padding-left:0; vertical-align: middle;",label:com_zimbra_backuprestore.BNR_zimbraBackupObjectLevelEnabled,attributeName:ZaGlobalConfig.A_zimbraBackupObjectLevelEnabled,items:[{
ref:ZaGlobalConfig.A_zimbraBackupObjectLevelEnabled,id:ZaGlobalConfig.A_zimbraBackupObjectLevelEnabled,groupname:"radio_grp_object_level_backup",type:_RADIO_,label:com_zimbra_backuprestore.BNR_cos_domain_option,onChange:ZaHotBackup.changeBackupObjectLevel,updateElement:function(){
this.getElement().checked=(this.getInstanceValue(ZaGlobalConfig.A_zimbraBackupObjectLevelEnabled)=="TRUE")
}}
,{
ref:ZaGlobalConfig.A_backup_all_user_option,id:ZaGlobalConfig.A_backup_all_user_option,groupname:"radio_grp_object_level_backup",type:_RADIO_,label:com_zimbra_backuprestore.BNR_all_user_option,onChange:ZaHotBackup.changeBackupObjectLevel,updateElement:function(){
this.getElement().checked=(this.getInstanceValue(ZaGlobalConfig.A_zimbraBackupObjectLevelEnabled)!="TRUE")
}}
]}
,{
type:_DWT_ALERT_,style:DwtAlert.INFO,iconVisible:true,cssStyle:"margin:10px 0 20px;",content:com_zimbra_backuprestore.BNR_BackupByCOSAndDomainInfo,visibilityChecks:[[XForm.checkInstanceValue,ZaGlobalConfig.A_zimbraBackupObjectLevelEnabled,"TRUE"]],visibilityChangeEventSources:[ZaGlobalConfig.A_zimbraBackupObjectLevelEnabled]}
,{
ref:ZaGlobalConfig.A2_cos_backup_cache,id:ZaGlobalConfig.A2_cos_backup_cache,type:_REPEAT_,labelCssStyle:"text-align:left; margin-left:0; padding-left:0; vertical-align: top;",label:com_zimbra_backuprestore.BNR_cos_backup_cache,addButtonLabel:com_zimbra_backuprestore.LBL_AddCOS,repeatInstance:"",showAddButton:true,showRemoveButton:true,showAddOnNextRow:true,removeButtonLabel:com_zimbra_backuprestore.LBL_RemoveAndReset,enableDisableChecks:[[XForm.checkInstanceValue,ZaGlobalConfig.A_zimbraBackupObjectLevelEnabled,"TRUE"]],enableDisableChangeEventSources:[ZaGlobalConfig.A_zimbraBackupObjectLevelEnabled,],items:[{
ref:".",type:_DYNSELECT_,label:null,enableDisableChecks:[],visibilityChecks:[],editable:true,autoCompleteEnabled:true,searchByProcessedValue:false,dataFetcherMethod:ZaSearch.prototype.dynSelectSearchCoses,dataFetcherClass:ZaSearch,getDisplayValue:function(l){
if(ZaItem.ID_PATTERN.test(l)){
var r=ZaCos.getCosById(l,this.getForm().parent._app);
if(r){
l=r.name
}}
if(l==null){
l=""
}else{
l=""+l
}
return l
}}
],hint:com_zimbra_backuprestore.BNR_BackupByCOSAndDomainInfo,onRemove:ZaHotBackup.onRepeatRemove,}
,{
type:_SPACER_,height:"10",colSpan:"2"}
,{
ref:ZaGlobalConfig.A2_domain_backup_cache,id:ZaGlobalConfig.A2_domain_backup_cache,type:_REPEAT_,labelCssStyle:"text-align:left; margin-left:0; padding-left:0; vertical-align: top;",label:com_zimbra_backuprestore.BNR_domain_backup_cache,addButtonLabel:com_zimbra_backuprestore.LBL_AddDomain,repeatInstance:"",showAddButton:true,showRemoveButton:true,showAddOnNextRow:true,removeButtonLabel:com_zimbra_backuprestore.LBL_RemoveAndReset,enableDisableChecks:[[XForm.checkInstanceValue,ZaGlobalConfig.A_zimbraBackupObjectLevelEnabled,"TRUE"]],enableDisableChangeEventSources:[ZaGlobalConfig.A_zimbraBackupObjectLevelEnabled,],items:[{
ref:".",type:_DYNSELECT_,label:null,enableDisableChecks:[],visibilityChecks:[],editable:true,autoCompleteEnabled:true,searchByProcessedValue:false,dataFetcherMethod:ZaSearch.prototype.dynSelectSearchDomains,dataFetcherClass:ZaSearch,getDisplayValue:function(l){
if(ZaItem.ID_PATTERN.test(l)){
var r=ZaDomain.getDomainById(l,this.getForm().parent._app);
if(r){
l=r.name
}}
if(l==null){
l=""
}else{
l=""+l
}
return l
}}
],onRemove:ZaHotBackup.onRepeatRemove,}
,],}
,],}
,{
type:_ZA_TOP_GROUPER_,numCols:2,colSizes:["300","*"],width:"100%",label:com_zimbra_backuprestore.BNR_Tab_Dumpster,items:[{
type:_ZACENTER_GROUPER_,label:com_zimbra_backuprestore.BNR_DumpsterByCOSAndDomain,width:"100%",numCols:2,colSpan:"2",colSizes:["270","*"],cssStyle:"margin:0 10px;",containerCssStyle:"padding: 20px 10px 10px;",align:_LEFT_,valign:_TOP_,items:[{
type:_GROUP_,numCols:5,colSizes:["20px","150px","20px","20px","150px"],labelCssStyle:"text-align:left; margin-left:0; padding-left:0; vertical-align: middle;",nowrap:true,label:com_zimbra_backuprestore.BNR_zimbraDumpsterEnabled,attributeName:ZaGlobalConfig.A_zimbraDumpsterEnabled,items:[{
ref:ZaGlobalConfig.A_dumpster_cos_domain_option,id:ZaGlobalConfig.A_dumpster_cos_domain_option,groupname:"radio_grp_dumpster_enabled",type:_RADIO_,label:com_zimbra_backuprestore.BNR_cos_domain_option,onChange:ZaHotBackup.changeDumpsterEnabled,updateElement:function(){
this.getElement().checked=(this.getInstanceValue(ZaGlobalConfig.A_zimbraDumpsterEnabled)!="TRUE")
}}
,{
ref:ZaGlobalConfig.A_zimbraDumpsterEnabled,id:ZaGlobalConfig.A_zimbraDumpsterEnabled,groupname:"radio_grp_dumpster_enabled",type:_RADIO_,label:com_zimbra_backuprestore.BNR_all_user_option,onChange:ZaHotBackup.changeDumpsterEnabled,updateElement:function(){
this.getElement().checked=(this.getInstanceValue(ZaGlobalConfig.A_zimbraDumpsterEnabled)=="TRUE")
}}
]}
,{
type:_DWT_ALERT_,style:DwtAlert.INFO,iconVisible:true,cssStyle:"margin:10px 0 20px;",content:com_zimbra_backuprestore.BNR_BackupByCOSAndDomainInfo,visibilityChecks:[[XForm.checkInstanceValueNot,ZaGlobalConfig.A_zimbraDumpsterEnabled,"TRUE"]],visibilityChangeEventSources:[ZaGlobalConfig.A_zimbraDumpsterEnabled]}
,{
ref:ZaGlobalConfig.A2_cos_dumpster_cache,id:ZaGlobalConfig.A2_cos_dumpster_cache,type:_REPEAT_,labelCssStyle:"text-align:left; margin-left:0; padding-left:0; vertical-align: top;",label:com_zimbra_backuprestore.BNR_cos_dumpster_cache,addButtonLabel:com_zimbra_backuprestore.LBL_AddCOS,repeatInstance:"",showAddButton:true,showRemoveButton:true,showAddOnNextRow:true,removeButtonLabel:com_zimbra_backuprestore.LBL_RemoveAndReset,enableDisableChecks:[[XForm.checkInstanceValueNot,ZaGlobalConfig.A_zimbraDumpsterEnabled,"TRUE"]],enableDisableChangeEventSources:[ZaGlobalConfig.A_zimbraDumpsterEnabled],items:[{
ref:".",type:_DYNSELECT_,label:null,editable:true,autoCompleteEnabled:true,searchByProcessedValue:false,dataFetcherMethod:ZaSearch.prototype.dynSelectSearchCoses,dataFetcherClass:ZaSearch,getDisplayValue:function(l){
if(ZaItem.ID_PATTERN.test(l)){
var r=ZaCos.getCosById(l,this.getForm().parent._app);
if(r){
l=r.name
}}
if(l==null){
l=""
}else{
l=""+l
}
return l
}}
],onRemove:ZaHotBackup.onRepeatRemove,}
,{
type:_SPACER_,height:"10",colSpan:"2"}
,{
ref:ZaGlobalConfig.A2_domain_dumpster_cache,id:ZaGlobalConfig.A2_domain_dumpster_cache,type:_REPEAT_,labelCssStyle:"text-align:left; margin-left:0; padding-left:0; vertical-align: top;",label:com_zimbra_backuprestore.BNR_domain_dumpster_cache,addButtonLabel:com_zimbra_backuprestore.LBL_AddDomain,repeatInstance:"",showAddButton:true,showRemoveButton:true,showAddOnNextRow:true,removeButtonLabel:com_zimbra_backuprestore.LBL_RemoveAndReset,enableDisableChecks:[[XForm.checkInstanceValueNot,ZaGlobalConfig.A_zimbraDumpsterEnabled,"TRUE"]],enableDisableChangeEventSources:[ZaGlobalConfig.A_zimbraDumpsterEnabled],items:[{
ref:".",type:_DYNSELECT_,label:null,editable:true,autoCompleteEnabled:true,searchByProcessedValue:false,dataFetcherMethod:ZaSearch.prototype.dynSelectSearchDomains,dataFetcherClass:ZaSearch,getDisplayValue:function(l){
if(ZaItem.ID_PATTERN.test(l)){
var r=ZaDomain.getDomainById(l,this.getForm().parent._app);
if(r){
l=r.name
}}
if(l==null){
l=""
}else{
l=""+l
}
return l
}}
],onRemove:ZaHotBackup.onRepeatRemove,}
,],}
,],}
,],};
for(var o=0;
o<s.items.length;
o++){
if(s.items[o].type=="switch"){
s.items[o].items.push(t);
break
}}}};
if(ZaTabView.XFormModifiers.GlobalConfigXFormView){
ZaTabView.XFormModifiers.GlobalConfigXFormView.push(ZaHotBackup.GlobalConfigXFormModifier)
}
ZaHotBackup.SERVER_BNR_TAB_RIGHTS=[];
ZaHotBackup.SERVER_BNR_TAB_ATTRIBUTES=[ZaServer.A_zimbraBackupMode,ZaServer.A_zimbraBackupAutoGroupedNumGroups,ZaServer.A_zimbraBackupAutoGroupedThrottled,ZaServer.A_zimbraBackupMinFreeSpace,ZaServer.A_zimbraBackupRetentionDays,ZaServer.A_zimbraBackupSyncEnabled,ZaServer.A_zimbraBackupTarget,ZaServer.A_zimbraBackupStartTime,ZaServer.A_zimbraBackupStartDay,ZaServer.A_server_selection_cache];
ZaHotBackup.applyServerSetting=function(){
var q=this.getForm().parent;
var g=this.getInstance();
var c=Object.keys(g.server_selection_cache);
var o=c.length;
var l=g.attrs;
var u=g._defaultValues.attrs;
var j={
attrs:{}};
for(var f in ZaHotBackup.SERVER_BNR_TAB_ATTRIBUTES){
var m=ZaHotBackup.SERVER_BNR_TAB_ATTRIBUTES[f];
j.attrs[m]=l[m]||u[m]
}
var x=AjxSoapDoc.create("BatchRequest","urn:zimbra");
x.setMethodAttribute("onerror","continue");
for(var f=0;
f<o;
f++){
var e=x.set("ModifyServerRequest",null,null,ZaZimbraAdmin.URN);
x.set("id",c[f],e);
for(var b in j.attrs){
if(b==ZaItem.A_objectClass||/^_/.test(b)||b==ZaServer.A_zimbraServiceInstalled||b==ZaItem.A_zimbraACE){
continue
}
if(!ZaItem.hasWritePermission(b,this)){
continue
}
if(j.attrs[b] instanceof Array){
var s=j.attrs[b];
if(s.length>0){
for(var f=0;
f<s.length;
f++){
var d=x.set("a",s[f],e);
d.setAttribute("n",b)
}}else{
var d=x.set("a",e);
d.setAttribute("n",b)
}}else{
var d=x.set("a",j.attrs[b],e);
d.setAttribute("n",b)
}}}
var y=new Object();
y.soapDoc=x;
var t={
controller:ZaApp.getInstance().getCurrentController(),busyMsg:ZaMsg.BUSY_MODIFY_SERVER};
var v=ZaRequestMgr.invoke(y,t);
if(v.isException&&v.isException()){
ZaApp.getInstance().getCurrentController()._handleException(v.getException(),"ZaHotBackup.applyServerSetting",null,false)
}else{
if(v.Body.BatchResponse.Fault){
var r=v.Body.BatchResponse.Fault;
if(r instanceof Array){
r=r[0]
}
if(r){
var p=ZmCsfeCommand.faultToEx(r);
ZaApp.getInstance().getCurrentController()._handleException(p,"ZaHotBackup.applyServerSetting",null,false)
}}else{
for(var f=0;
f<o;
f++){
var n=g.server_selection_cache[c[f]];
ZaServerBackup.prototype.scheduleBackups.call({
name:n}
)
}}}
q.serverListDialog.popdown()
};
ZaHotBackup.onApplyServerSetting=function(){
var e=this.getInstance();
var s=this.getForm().parent;
if(!s.serverListDialog){
var t=++DwtDialog.LAST_BUTTON;
var o=new DwtDialog_ButtonDescriptor(t,ZaMsg.TBB_Save,DwtDialog.ALIGN_LEFT,new AjxCallback(this,ZaHotBackup.applyServerSetting));
s.serverListDialog=new ZaBackupApplyServerConfigDialog(ZaApp.getInstance().getAppCtxt().getShell(),com_zimbra_backuprestore.BNR_ApplyServerSettingDialogTitle,o)
}
var n={};
n[e.id]=[e.name];
this.setInstanceValue(n,ZaServer.A_server_selection_cache);
s.serverListDialog.setObject(e);
s.serverListDialog.popup()
};
ZaHotBackup.ServerXFormModifier=function(s,n){
if(ZaTabView.isTAB_ENABLED(n,ZaHotBackup.SERVER_BNR_TAB_ATTRIBUTES,ZaHotBackup.SERVER_BNR_TAB_RIGHTS)){
var e=s.items[1];
ZaHotBackup.ServerConfigTabIndex=++this.TAB_INDEX;
e.choices.push({
value:ZaHotBackup.ServerConfigTabIndex,label:com_zimbra_backuprestore.BNR_Tab_BNR}
);
var t={
type:_ZATABCASE_,caseKey:ZaHotBackup.ServerConfigTabIndex,colSizes:["auto"],numCols:1,width:(appNewUI?"98%":"100%"),items:[{
type:_ZA_TOP_GROUPER_,numCols:4,colSizes:["300","*"],label:com_zimbra_backuprestore.BNR_Tab_BNR,items:[{
ref:ZaServer.A_zimbraBackupMode,type:_SUPER_SELECT1_,width:"500px",resetToSuperLabel:ZaMsg.NAD_ResetToGlobal,label:com_zimbra_backuprestore.BNR_zimbraBackupMode,colSpan:"3",labelLocation:_LEFT_,choices:ZaHotBackup.BACKUP_MODE_CHOICES}
,{
ref:ZaServer.A_zimbraBackupRetentionDays,type:_SUPER_TEXTFIELD_,resetToSuperLabel:ZaMsg.NAD_ResetToGlobal,label:com_zimbra_backuprestore.BNR_zimbraBackupRetentionDays}
,{
ref:ZaServer.A_zimbraBackupAutoGroupedNumGroups,type:_SUPER_TEXTFIELD_,resetToSuperLabel:ZaMsg.NAD_ResetToGlobal,label:com_zimbra_backuprestore.BNR_zimbraBackupAutoGroupedNumGroups,visibilityChecks:[[XForm.checkInstanceValue,ZaServer.A_zimbraBackupMode,ZaHotBackup.BACKUP_MODE_AUTOGROUP]],visibilityChangeEventSources:[ZaServer.A_zimbraBackupMode]}
,{
ref:ZaServer.A_zimbraBackupAutoGroupedThrottled,type:_SUPER_CHECKBOX_,colSpan:"3",resetToSuperLabel:ZaMsg.NAD_ResetToGlobal,label:com_zimbra_backuprestore.BNR_zimbraBackupAutoGroupedThrottled,trueValue:"TRUE",falseValue:"FALSE",visibilityChecks:[[XForm.checkInstanceValue,ZaServer.A_zimbraBackupMode,ZaHotBackup.BACKUP_MODE_AUTOGROUP]],visibilityChangeEventSources:[ZaServer.A_zimbraBackupMode]}
,{
ref:ZaServer.A_zimbraBackupSyncEnabled,type:_SUPER_CHECKBOX_,colSpan:"3",resetToSuperLabel:ZaMsg.NAD_ResetToGlobal,label:com_zimbra_backuprestore.BNR_zimbraBackupSyncEnabled,trueValue:"TRUE",falseValue:"FALSE",visibilityChecks:[[XForm.checkInstanceValue,ZaServer.A_zimbraBackupMode,ZaHotBackup.BACKUP_MODE_STANDARD]],visibilityChangeEventSources:[ZaServer.A_zimbraBackupMode]}
,{
type:_DWT_ALERT_,style:DwtAlert.INFO,colSpan:"4",iconVisible:true,content:com_zimbra_backuprestore.BNR_zimbraBackupStandardIncrementalInfo,visibilityChecks:[[XForm.checkInstanceValue,ZaServer.A_zimbraBackupMode,ZaHotBackup.BACKUP_MODE_STANDARD]],visibilityChangeEventSources:[ZaServer.A_zimbraBackupMode]}
,{
ref:ZaServer.A_zimbraBackupStartTime,type:_SUPER_SELECT1_,width:"500px",colSpan:"3",resetToSuperLabel:ZaMsg.NAD_ResetToGlobal,label:com_zimbra_backuprestore.BNR_zimbraBackupStartTime,labelLocation:_LEFT_}
,{
ref:ZaServer.A_zimbraBackupStartDay,type:_SUPER_SELECT1_,width:"500px",colSpan:"3",resetToSuperLabel:ZaMsg.NAD_ResetToGlobal,label:com_zimbra_backuprestore.BNR_zimbraBackupStartDay,labelLocation:_LEFT_,visibilityChecks:[[XForm.checkInstanceValue,ZaServer.A_zimbraBackupMode,ZaHotBackup.BACKUP_MODE_STANDARD]],visibilityChangeEventSources:[ZaServer.A_zimbraBackupMode]}
,{
ref:ZaServer.A_zimbraBackupTarget,type:_SUPER_TEXTFIELD_,resetToSuperLabel:ZaMsg.NAD_ResetToGlobal,label:com_zimbra_backuprestore.BNR_zimbraBackupTarget}
,{
type:_DWT_ALERT_,colSpan:"4",style:DwtAlert.INFO,iconVisible:true,content:com_zimbra_backuprestore.BNR_zimbraBackupMinFreespaceConfInfo}
,{
ref:ZaServer.A_zimbraBackupMinFreeSpace,type:_SUPER_TEXTFIELD_,resetToSuperLabel:ZaMsg.NAD_ResetToGlobal,label:com_zimbra_backuprestore.BNR_zimbraBackupMinFreeSpace,labelLocation:_LEFT_,}
,{
type:_OUTPUT_,colSpan:"4",cssStyle:"margin:10px; text-decoration:underline",value:com_zimbra_backuprestore.BNR_ApplyServerSetting,containerCssClass:"ZaLinkedItem",onClick:ZaHotBackup.onApplyServerSetting}
]}
]};
for(var o=0;
o<s.items.length;
o++){
if(s.items[o].type=="switch"){
s.items[o].items.push(t);
break
}}}};
ZaTabView.XFormModifiers.ZaServerXFormView.push(ZaHotBackup.ServerXFormModifier);
ZaApp.prototype.getBackupServerList=function(e){
if(e||this._backupServerList==null){
this._backupServerList=ZaServerBackup.getAll()
}
return this._backupServerList
};
ZaApp.prototype.getBackupsViewController=function(){
if(this._controllers[ZaZimbraAdmin._BACKUPS_BY_SERVER_VIEW]==null){
this._controllers[ZaZimbraAdmin._BACKUPS_BY_SERVER_VIEW]=new ZaBackupsViewController(this._appCtxt,this._container)
}
return this._controllers[ZaZimbraAdmin._BACKUPS_BY_SERVER_VIEW]
};
ZaApp.prototype.getBackupLabelViewController=function(e){
if(e&&this._controllers[e]!=null){
return this._controllers[e]
}else{
return new ZaBackupLabelViewController(this._appCtxt,this._container,this)
}};
ZaApp.prototype.getBackupServerListController=function(){
if(this._controllers[ZaZimbraAdmin._BACKUPS]==null){
this._controllers[ZaZimbraAdmin._BACKUPS]=new ZaBackupServerListController(this._appCtxt,this._container,this)
}
return this._controllers[ZaZimbraAdmin._BACKUPS]
};
ZaHotBackup.backupsServerListTreeListener=function(e){
if(ZaApp.getInstance().getCurrentController()){
ZaApp.getInstance().getCurrentController().switchToNextView(ZaApp.getInstance().getBackupServerListController(),ZaBackupServerListController.prototype.show,ZaServerBackup.getAll())
}else{
ZaApp.getInstance().getBackupServerListController().show(ZaServerBackup.getAll())
}};
ZaHotBackup.backupsByServerTreeListener=function(e){
var t=ZaApp.getInstance().getBackupServerList().getItemById(e.item.getData(ZaOverviewPanelController._OBJ_ID));
if(ZaApp.getInstance().getCurrentController()){
ZaApp.getInstance().getCurrentController().switchToNextView(ZaApp.getInstance().getBackupsViewController(),ZaBackupsViewController.prototype.show,t)
}else{
ZaApp.getInstance().getBackupsViewController().show(t)
}};
ZaHotBackup.backupOvTreeModifier=function(d){
if(ZaSettings.ENABLED_UI_COMPONENTS[ZaSettings.BACKUP_VIEW]||ZaSettings.ENABLED_UI_COMPONENTS[ZaSettings.CARTE_BLANCHE_UI]){
try{
var l=ZaApp.getInstance().getBackupServerList().getArray();
if(l&&l.length){
if(!appNewUI){
this._backupTi=new DwtTreeItem({
parent:this._toolsTi,className:"AdminTreeItem"}
);
this._backupTi.setText(com_zimbra_backuprestore.BNR_OVP_backups);
this._backupTi.setImage("Backup");
var o=l.length;
if(o>1){
this._backupTi.setData(ZaOverviewPanelController._TID,ZaZimbraAdmin._BACKUPS);
for(var s=0;
s<o;
s++){
var r=new DwtTreeItem({
parent:this._backupTi,className:"AdminTreeItem"}
);
r.setText(l[s].name);
r.setImage("Server");
r.setData(ZaOverviewPanelController._TID,ZaZimbraAdmin._BACKUPS_BY_SERVER_VIEW);
r.setData(ZaOverviewPanelController._OBJ_ID,l[s].id)
}
ZaOverviewPanelController.overviewTreeListeners[ZaZimbraAdmin._BACKUPS]=ZaHotBackup.backupsServerListTreeListener
}else{
this._backupTi.setData(ZaOverviewPanelController._OBJ_ID,l[0].id);
this._backupTi.setData(ZaOverviewPanelController._TID,ZaZimbraAdmin._BACKUPS_BY_SERVER_VIEW)
}}else{
var n=ZaTree.getPathByArray([ZaMsg.OVP_home,ZaMsg.OVP_toolMig]);
var o=l.length;
var t;
if(o>0){
t=new ZaTreeItemData({
parent:n,id:ZaId.getTreeItemId(ZaId.PANEL_APP,"magHV",null,"BackUpHV"),className:"AdminHomeTreeItem",text:com_zimbra_backuprestore.BNR_OVP_backups,mappingId:ZaZimbraAdmin._BACKUPS}
);
t.setData(ZaOverviewPanelController._TID,ZaZimbraAdmin._BACKUPS);
d.addTreeItemData(t);
var e=ZaTree.getPathByArray([ZaMsg.OVP_home,ZaMsg.OVP_toolMig,com_zimbra_backuprestore.BNR_OVP_backups]);
for(var s=0;
s<o;
s++){
var r=new ZaTreeItemData({
parent:e,id:DwtId._makeId(t.id,s+1),text:l[s].name,mappingId:ZaZimbraAdmin._BACKUPS_BY_SERVER_VIEW}
);
r.setData(ZaOverviewPanelController._OBJ_ID,l[s].id);
d.addTreeItemData(r)
}
ZaOverviewPanelController.overviewTreeListeners[ZaZimbraAdmin._BACKUPS]=ZaHotBackup.backupsServerListTreeListener
}else{
t=new ZaTreeItemData({
parent:n,id:ZaId.getTreeItemId(ZaId.PANEL_APP,"magHV",null,"BAckUpHV"),text:com_zimbra_backuprestore.BNR_OVP_backups,mappingId:ZaZimbraAdmin._BACKUPS_BY_SERVER_VIEW}
);
t.setData(ZaOverviewPanelController._OBJ_ID,l[0].id);
d.addTreeItemData(t)
}}
ZaOverviewPanelController.overviewTreeListeners[ZaZimbraAdmin._BACKUPS_BY_SERVER_VIEW]=ZaHotBackup.backupsByServerTreeListener
}}
catch(c){
this._handleException(c,"ZaOverviewPanelController.prototype._buildFolderTree",null,false)
}}};
ZaHotBackup.configureBackup=function(t){
var e=ZaZimbraAdmin.getInstance().getOverviewPanelController().getOverviewPanel().getFolderTree();
var o=ZaTree.getPathByArray([ZaMsg.OVP_home,ZaMsg.OVP_configure,ZaMsg.OVP_global]);
e.setSelectionByPath(o,false);
var o=ZaTree.getPathByArray([ZaMsg.OVP_home,ZaMsg.OVP_configure,ZaMsg.OVP_global,com_zimbra_backuprestore.BNR_Tab_BNR]);
e.setSelectionByPath(o,true)
};
if(ZaOverviewPanelController.treeModifiers){
ZaOverviewPanelController.treeModifiers.push(ZaHotBackup.backupOvTreeModifier)
}
if(ZaHome&&ZaHome.myXModel){
ZaHome.A2_lastBackupTime="lastBackupTime";
ZaHome.A2_lastBackup="lastBackup";
ZaHome.myXModel.items.push({
id:ZaHome.A2_lastBackupTime,type:_STRING_,ref:"attrs/"+ZaHome.A2_lastBackupTime}
,{
id:ZaHome.A2_lastBackup,type:_ENUM_,ref:"attrs/"+ZaHome.A2_lastBackup,choices:ZaModel.BOOLEAN_CHOICES}
);
ZaHome.loadBackup=function(){
this.attrs[ZaHome.A2_lastBackup]=true;
this.attrs[ZaHome.A2_lastBackupTime]=ZaMsg.MSG_HomeLoading
};
ZaItem.loadMethods.ZaHome.push(ZaHome.loadBackup);
ZaHome.startLoadingBackups=function(){
if(!(ZaSettings.ENABLED_UI_COMPONENTS[ZaSettings.BACKUP_VIEW]||ZaSettings.ENABLED_UI_COMPONENTS[ZaSettings.CARTE_BLANCHE_UI])){
return
}
ZaHome.backupInfo={
isError:false,lastBackupTime:null};
ZaHome.lastBackupTime=-1;
var e=new AjxCallback(this,ZaHome.startLoadingBackupsCallback);
ZaServerBackup.getAll(e)
};
ZaHome.startLoadingBackupsCallback=function(s){
if(s.getResponse()&&s.getResponse().Body&&s.getResponse().Body.GetAllServersResponse){
var o=new ZaItemList(ZaServerBackup);
o.loadFromJS(s.getResponse().Body.GetAllServersResponse);
var t=o.getArray();
for(var e=0;
e<t.length;
e++){
var n=t[e];
var r=new AjxCallback(this,ZaHome.loadServerBackup);
n.loadBackups(false,r)
}}};
ZaHome.postLoadDataFunction.push(ZaHome.startLoadingBackups);
ZaHome.lastBackupTime=-1;
ZaHome.loadServerBackup=function(t){
if(t&&t.getException){
if(!t.getException()){
var o;
if(t.getResponse){
o=t.getResponse()
}else{
if(t.Body.BackupQueryResponse){
o=t
}}
var r=null;
if(o.Body.BackupQueryResponse.backup){
r=o.Body.BackupQueryResponse.backup;
if(!(r instanceof Array)){
r=[r]
}
var e=r.length;
for(var s=0;
s<e;
s++){
ZaHome.backupInfo={
isError:false,lastBackupTime:ZaHome.lastBackupTime};
var l=new ZaBackupLabel();
try{
l.initFromJS(r[s])
}
catch(c){}
if(l.errorCount&&l.errorCount>0){
ZaHome.backupInfo.isError=true
}
if(l.end&&l.end>ZaHome.lastBackupTime){
ZaHome.lastBackupTime=ZaHome.backupInfo.lastBackupTime=l.end
}
this.updateBackupInfo(ZaHome.backupInfo)
}}else{
var n=ZaApp.getInstance().getHomeViewController();
var d=com_zimbra_backuprestore.BNR_NeverBackup;
n.setInstanceValue(false,ZaHome.A2_lastBackup);
n.setInstanceValue(d,ZaHome.A2_lastBackupTime)
}}}};
ZaHome.prototype.updateBackupInfo=function(n){
var o=ZaApp.getInstance().getHomeViewController();
var r=com_zimbra_backuprestore.BNR_NeverBackup;
if(n.lastBackupTime>0){
o.setInstanceValue(!n.isError,ZaHome.A2_lastBackup);
var e=new Date(parseInt(n.lastBackupTime));
var t=AjxDateFormat.getDateInstance(AjxDateFormat.LONG);
var s=t.format(e);
r=s
}else{
o.setInstanceValue(false,ZaHome.A2_lastBackup)
}
o.setInstanceValue(r,ZaHome.A2_lastBackupTime)
}
}
if(ZaTabView.XFormModifiers.ZaHomeXFormView){
ZaHomeXFormView.onConfigureBackup=function(e){
ZaHotBackup.configureBackup.call(this,e)
};
ZaHotBackup.HomeXFormModifier=function(l){
if(ZaSettings.ENABLED_UI_COMPONENTS[ZaSettings.BACKUP_VIEW]||ZaSettings.ENABLED_UI_COMPONENTS[ZaSettings.CARTE_BLANCHE_UI]){
var s=ZaHomeXFormView.getWarningPanelItem(l);
s.items.push({
type:_GROUP_,numCols:3,width:"100%",colSizes:ZaHomeXFormView.getWarningPanelCol(),visibilityChecks:[[XForm.checkInstanceValue,ZaHome.A2_lastBackup,false]],containerCssClass:"ZaHomeWarnginItem",visibilityChangeEventSources:[ZaHome.A2_lastBackup],items:[{
type:_OUTPUT_,ref:ZaHome.A2_lastBackup,bmolsnr:true,valueChangeEventSources:[ZaHome.A2_lastBackupTime],getDisplayValue:function(d){
var u=this.getInstanceValue(ZaHome.A2_lastBackupTime);
if(u!=ZaMsg.MSG_HomeLoading){
if(!d){
return AjxImg.getImageHtml("Information")
}else{
return AjxImg.getImageHtml("Warning")
}}}}
,{
type:_OUTPUT_,ref:ZaHome.A2_lastBackup,bmolsnr:true,valueChangeEventSources:[ZaHome.A2_lastBackupTime],getDisplayValue:function(u){
var m=this.getInstanceValue(ZaHome.A2_lastBackupTime);
var d="";
if(m==com_zimbra_backuprestore.BNR_NeverBackup){
d=com_zimbra_backuprestore.BNR_NoBackupAvailable
}else{
d=com_zimbra_backuprestore.BNR_BackupFail
}
return d
}}
,{
type:_OUTPUT_,value:com_zimbra_backuprestore.BNR_ViewBackup,containerCssClass:"ZaLinkedItem",onClick:ZaHomeXFormView.onConfigureBackup}
]}
);
var c=ZaHomeXFormView.getHomeMaintenanceItem(l);
c.items.push({
type:_OUTPUT_,label:com_zimbra_backuprestore.LBL_HomeLastBackup,ref:ZaHome.A2_lastBackup,bmolsnr:true,visibilityChecks:[],valueChangeEventSources:[ZaHome.A2_lastBackupTime],cssStyle:"position:relative;",getDisplayValue:function(f){
var m="";
var p=this.getInstanceValue(ZaHome.A2_lastBackupTime);
var u;
if(p!=ZaMsg.MSG_HomeLoading){
u="position:absolute;left:0px;";
if(f){
m=AjxImg.getImageHtml("Check",u)
}else{
m=AjxImg.getImageHtml("Cancel",u)
}}
var d="";
if(p!=""){
d=["<span style='margin-left:16px;'>",p,"</span>"].join("")
}
return m+d
}}
);
var t=ZaHomeXFormView.getHomeSetupItem(l);
var n=t.headerLabels;
var e=t.contentItems;
var o;
for(var o=0;
o<n.length;
o++){
if(n[o]==ZaMsg.LBL_HomeGetStared){
break
}}
if(o!=n.length){
var r=e[o];
r[1]={
value:com_zimbra_backuprestore.LBL_HomeConfigBackup,onClick:ZaHomeXFormView.onConfigureBackup}
}}};
ZaTabView.XFormModifiers.ZaHomeXFormView.push(ZaHotBackup.HomeXFormModifier)
}
ZaHotBackup._restoreMailListener=function(o){
try{
this._newSingleAccountRestoreWizard=new AccountRestoreXWizard(this._container);
var t=new ZaRestore();
this._newSingleAccountRestoreWizard.setObject(t);
this._newSingleAccountRestoreWizard.popup()
}
catch(e){
this._handleException(e,"ZaHotBackup._restoreMailListener",null,false)
}
return
};
ZaHotBackup._immediateBackupListener=function(o){
try{
this._ImmediateBackupWizard=new ZaBackupXWizard(this._container);
var e=new ZaBackup();
e[ZaBackup.A_method]=ZaBackup.METHOD_FULL;
e[ZaBackup.A_target]=ZaHotBackup.DEFAULT_BACKUP_TARGET;
e[ZaServerBackup.A_backupAll]=0;
this._ImmediateBackupWizard.setObject(e);
this._ImmediateBackupWizard.popup()
}
catch(t){
this._handleException(t,"ZaHotBackup._immediateBackupListener",null,false)
}
return
};
function ZaServerBackup(){
ZaItem.call(this,"ZaServerBackup");
this[ZaBackup.A_target]=ZaHotBackup.DEFAULT_BACKUP_TARGET;
this.attrs={};
this._init();
this.poolPagenum=0;
this.poolNumPages=1;
this.accounts=null;
this.live=0;
this[ZaModel.currentStep]=1;
this[ZaBackup.A_pageNumber]=1;
this[ZaBackup.A_accountListStatus]=ZaBackup.ACC_LIST_STATUS_NONE;
this[ZaBackup.A_backupListOffset]=0;
this[ZaBackup.A_backupListCount]=ZaSettings.RESULTSPERPAGE
}
ZaServerBackup.prototype=new ZaItem;
ZaServerBackup.prototype.constructor=ZaServerBackup;
ZaItem.loadMethods.ZaServerBackup=new Array();
ZaItem.initMethods.ZaServerBackup=new Array();
ZaServerBackup.A_latestLabel="latestLabel";
ZaServerBackup.A_latestLabelStatus="backupStatus";
ZaServerBackup.A_src_acct_selection_pool="src_acct_selection_pool";
ZaServerBackup.A_tgt_acct_selection_pool="tgt_acct_selection_pool";
ZaServerBackup.A_poolPagenum="poolPagenum";
ZaServerBackup.A_poolNumPages="poolNumPages";
ZaServerBackup.A_activateSearch="activateSearch";
ZaServerBackup.A_backupAll="backupAll";
ZaServerBackup.A_activateOperation="activeOperation";
ZaServerBackup.A_freeSpace="freeSpace";
ZaServerBackup.A_totalSpace="totalSpace";
ZaServerBackup.getAll=function(r){
var t=AjxSoapDoc.create("GetAllServersRequest",ZaZimbraAdmin.URN,null);
t.getMethod().setAttribute("service","service");
t.getMethod().setAttribute("applyConfig","false");
var s=new Object();
s.asyncMode=r?true:false;
s.callback=r?r:null;
s.soapDoc=t;
var e={
controller:ZaApp.getInstance().getCurrentController(),busyMsg:ZaMsg.BUSY_GET_ALL_SERVER};
if(r){
ZaRequestMgr.invoke(s,e)
}else{
var n=ZaRequestMgr.invoke(s,e).Body.GetAllServersResponse;
var o=new ZaItemList(ZaServerBackup);
o.loadFromJS(n);
return o
}};
ZaServerBackup.loadMethod=function(s,l){
var t=s?s:"id";
var c=l?l:this.id;
var n=AjxSoapDoc.create("GetServerRequest",ZaZimbraAdmin.URN,null);
n.getMethod().setAttribute("applyConfig","1");
var e=n.set("server",c);
e.setAttribute("by",t);
var r=new Object();
r.soapDoc=n;
r.asyncMode=false;
var o={
controller:ZaApp.getInstance().getCurrentController(),busyMsg:ZaMsg.BUSY_GET_SERVER};
resp=ZaRequestMgr.invoke(r,o);
this.initFromJS(resp.Body.GetServerResponse.server[0])
};
ZaItem.loadMethods.ZaServerBackup.push(ZaServerBackup.loadMethod);
ZaServerBackup.getBackupServerListChoices=function(){
var t=ZaServerBackup.getAll();
var e=t.getArray();
if(ZaServerBackup._serverChoices==null){
ZaServerBackup._serverChoices=new XFormChoices(e,XFormChoices.OBJECT_LIST,"id",ZaServer.A_ServiceHostname)
}else{
ZaServerBackup._serverChoices.setChoices(e);
ZaServerBackup._serverChoices.dirtyChoices()
}
return ZaServerBackup._serverChoices
};
ZaServerBackup.prototype.initFromJS=function(e){
ZaServer.prototype.initFromJS.call(this,e)
};
ZaServerBackup.prototype.loadBackups=function(o,l){
var t=AjxSoapDoc.create("BackupQueryRequest",ZaZimbraAdmin.URN,null);
var e=t.set("query","");
e.setAttribute("target",this.attrs[ZaGlobalConfig.A_zimbraBackupTarget]?this.attrs[ZaGlobalConfig.A_zimbraBackupTarget]:ZaHotBackup.DEFAULT_BACKUP_TARGET);
e.setAttribute(ZaBackup.A_accountListStatus,ZaBackup.ACC_LIST_STATUS_NONE);
e.setAttribute(ZaBackup.A_backupListCount,"1");
var r=new ZmCsfeCommand();
var s=new Object();
s.soapDoc=t;
s.noAuthToken=true;
s.targetServer=this.id;
if(!o){
s.asyncMode=true;
s.callback=l?l:(new AjxCallback(this,this.loadBackupsCallback))
}
var n=r.invoke(s);
if(o){
ZaServerBackup.prototype.loadBackupsCallback.call(this,n,o)
}};
ZaServerBackup.prototype.loadBackupsCallback=function(n,o){
if(!n){
var d=new ZmCsfeException(ZMsg.errorEmptyResponse,ZmCsfeException.CSFE_SVC_ERROR,"ZaServerBackup.prototype.loadBackupsCallback");
ZaApp.getInstance().getCurrentController()._handleException(d,"ZaServerBackup.prototype.loadBackupsCallback");
return
}
if(n.isException&&n.isException()){
ZaApp.getInstance().getCurrentController()._handleException(n.getException(),"ZaServerBackup.prototype.loadBackupsCallback");
return
}else{
var s;
if(n.getResponse){
s=n.getResponse()
}else{
if(n.Body.BackupQueryResponse){
s=n
}}
var e=[];
var l=null;
var u=false;
if(s.Body.BackupQueryResponse.backup){
l=s.Body.BackupQueryResponse.backup;
if(!(l instanceof Array)){
l=[l]
}
var t=l.length;
var c=new ZaBackupLabel();
c.initFromJS(l[0]);
this[ZaServerBackup.A_latestLabel]=c;
for(var r=0;
r<t;
r++){
var c=new ZaBackupLabel();
c.initFromJS(l[r]);
c[ZaBackup.A_target]=this[ZaBackup.A_target];
c[ZaBackup.A_serverId]=this[ZaBackup.A_serverId];
c[ZaBackup.A_serverName]=this[ZaServer.A_serverName];
e.push(c)
}
this[ZaBackup.A_backupLabelList]=e;
u=true
}
if(s.Body.BackupQueryResponse.freeSpace){
this[ZaServerBackup.A_freeSpace]=Math.floor(s.Body.BackupQueryResponse.freeSpace/(1024*1024));
u=true
}
if(s.Body.BackupQueryResponse.totalSpace){
this[ZaServerBackup.A_totalSpace]=Math.floor(s.Body.BackupQueryResponse.totalSpace/(1024*1024));
u=true
}
if(u&&!o){
ZaApp.getInstance().getBackupServerListController().handleServerChange({
obj:this}
)
}}};
ZaServerBackup.myXModel={
items:[{
id:ZaServerBackup.A_poolPagenum,type:_NUMBER_,defaultValue:0}
,{
id:ZaServerBackup.A_src_acct_selection_pool,type:_LIST_}
,{
id:ZaServerBackup.A_tgt_acct_selection_pool,type:_LIST_}
,{
id:ZaServerBackup.A_backupAll,type:_NUMBER_,defaultValue:1}
,{
id:ZaServerBackup.A_poolNumPages,type:_NUMBER_,defaultValue:1}
,{
id:ZaBackup.A_serverId,type:_STRING_,ref:ZaBackup.A_serverId}
,{
id:ZaBackup.A_serverName,type:_STRING_,ref:ZaBackup.A_serverName}
,{
id:ZaBackup.A_target,type:_STRING_,ref:ZaBackup.A_target,defaultValue:"/opt/zimbra/backup"}
,{
id:ZaBackup.A_label,type:_STRING_,ref:ZaBackup.A_label}
,{
id:ZaBackup.A_fromDate,type:_STRING_,ref:ZaBackup.A_fromDate}
,{
id:ZaBackup.A_method,type:_STRING_,ref:ZaBackup.A_method,defaultValue:ZaBackup.METHOD_FULL}
,{
id:ZaBackup.A_Accounts,type:_LIST_,ref:ZaBackup.A_Accounts,dataType:_STRING_}
,{
id:ZaBackup.A_accountPool,ref:ZaBackup.A_accountPool,type:_LIST_,dataType:_STRING_}
,{
id:ZaBackup.A_backupLabelList,type:_LIST_,listItem:{
type:_OBJECT_,items:[{
id:ZaBackupLabel.A_label,type:_STRING_}
,{
id:ZaBackupLabel.A_start,type:_NUMBER_}
,{
id:ZaBackupLabel.A_end,type:_NUMBER_}
,{
id:ZaBackupLabel.A_live,type:_NUMBER_}
,{
id:ZaBackupLabel.A_status,type:_STRING_}
]}}
,{
id:ZaServerBackup.A_activateSearch,type:_NUMBER_}
,{
id:ZaServerBackup.A_activateOperation,type:_NUMBER_}
,{
id:ZaServerBackup.A_freeSpace,type:_NUMBER_,defaultValue:0}
,{
id:ZaServerBackup.A_totalSpace,type:_NUMBER_,defaultValue:0}
]};
ZaServerBackup.prototype.scheduleBackups=function(){
var t=AjxSoapDoc.create("ScheduleBackupsRequest",ZaZimbraAdmin.URN,null);
var n=t.set("server","");
n.setAttribute("name",this.name);
var o=new Object();
o.soapDoc=t;
o.asyncMode=true;
o.callback=function(l){
if(l&&l.isException&&l.isException()){
ZaApp.getInstance().getCurrentController()._handleException(l.getException(),"ZaServerBackup.scheduleBackups",null,false)
}else{
if(l&&l.getResponse().Body.ScheduleBackupsResponse.Fault){
var r=l.getResponse().Body.ScheduleBackupsResponse.Fault;
if(r instanceof Array){
r=r[0]
}
if(r){
var s=ZmCsfeCommand.faultToEx(r);
ZaApp.getInstance().getCurrentController()._handleException(s,"ZaServerBackup.scheduleBackups",null,false)
}}}};
var e={
controller:ZaApp.getInstance().getCurrentController(),busyMsg:com_zimbra_backuprestore.BNR_BUSY_SCHEDULING_BACKUPS};
ZaRequestMgr.invoke(o,e)
};
ZaServerBackup.serverModifyMethod=function(e){
if(ZaHotBackup.isScheduleBackupsRequired){
ZaHotBackup.isScheduleBackupsRequired=false;
ZaServerBackup.prototype.scheduleBackups.call(this)
}};
ZaItem.modifyMethods.ZaServer.push(ZaServerBackup.serverModifyMethod);
ZaServerBackup.serverBeforeModifyMethod=function(e){
var s=e.attrs;
var n=ZaHotBackup.SERVER_BNR_TAB_ATTRIBUTES.length;
for(var o=0;
o<n;
o++){
var t=ZaHotBackup.SERVER_BNR_TAB_ATTRIBUTES[o];
if(typeof s[t]!=="undefined"&&s[t]!=this.attrs[t]){
ZaHotBackup.isScheduleBackupsRequired=true;
break
}}};
ZaItem.modifyMethodsExt.ZaServer.push(ZaServerBackup.serverBeforeModifyMethod);
ZaHotBackup.initPopupMenuMethod=function(){
if(ZaZimbraAdmin.currentAdminAccount.attrs[ZaAccount.A_zimbraIsAdminAccount]=="TRUE"){
if(this._defaultType==ZaItem.ACCOUNT||this._defaultType==ZaItem.ALIAS){
this._popupOperations[ZaOperation.MOVE_ACCOUNT]=new ZaOperation(ZaOperation.MOVE_ACCOUNT,com_zimbra_backuprestore.BNR_MoveMailbox,com_zimbra_backuprestore.BNR_MoveMailbox_tt,"MoveMailbox","MoveMailbox",new AjxListener(this,ZaHotBackup.moveAcctListener))
}}};
if(ZaController.initPopupMenuMethods.ZaAccountListController){
ZaController.initPopupMenuMethods.ZaAccountListController.push(ZaHotBackup.initPopupMenuMethod)
}
ZaHotBackup.initSearchListPopupMenuMethod=function(){
if(ZaZimbraAdmin.currentAdminAccount.attrs[ZaAccount.A_zimbraIsAdminAccount]=="TRUE"){
this._popupOperations[ZaOperation.MOVE_ACCOUNT]=new ZaOperation(ZaOperation.MOVE_ACCOUNT,com_zimbra_backuprestore.BNR_MoveMailbox,com_zimbra_backuprestore.BNR_MoveMailbox_tt,"MoveMailbox","MoveMailbox",new AjxListener(this,ZaHotBackup.moveAcctListener))
}};
if(ZaController.initPopupMenuMethods.ZaSearchListController){
ZaController.initPopupMenuMethods.ZaSearchListController.push(ZaHotBackup.initSearchListPopupMenuMethod)
}
ZaHotBackup.moveAcctListener=function(){
if(ZaZimbraAdmin.currentAdminAccount.attrs[ZaAccount.A_zimbraIsAdminAccount]=="TRUE"){
if(this._contentView.getSelectionCount()==1){
var t=this._contentView.getSelection()[0];
var n=t.id;
if((t.type==ZaItem.ALIAS)&&t.attrs&&t.attrs[ZaAlias.A_AliasTargetId]){
n=t.attrs[ZaAlias.A_AliasTargetId]
}
var e=t.type;
var s=new ZaAccountMove();
if(e==ZaItem.ACCOUNT){
s.account=t;
s.id="move_"+t.id
}else{
if(e==ZaItem.ALIAS){
var o=new ZaAccount();
if(t.attrs&&t.attrs[ZaAlias.A_AliasTargetId]){
o.load("id",t.attrs[ZaAlias.A_AliasTargetId],(!ZaSettings.COSES_ENABLED))
}
s.account=o;
s.id="move_"+o.id
}else{
if(e==ZaItem.RESOURCE){
s.account=t;
s.id="move_"+t.id
}}}
ZaApp.getInstance().getAccountMoveViewController().show(s)
}}};
ZaHotBackup.moveAcctViewListener=function(){
var e=new ZaAccountMove();
e.account=this._currentObject;
e.id="move_"+this._currentObject.id;
ZaApp.getInstance().getAccountMoveViewController().show(e)
};
ZaApp.prototype.getAccountMoveViewController=function(e){
if(e&&this._controllers[e]!=null){
return this._controllers[e]
}else{
return new ZaAccountMoveViewController(this._appCtxt,this._container,this)
}};
ZaHotBackup.changeAccListActionsStateMethod=function(){
if(ZaZimbraAdmin.currentAdminAccount.attrs[ZaAccount.A_zimbraIsAdminAccount]=="TRUE"){
if(ZaApp.getInstance().getServerList()&&ZaApp.getInstance().getServerList().size()>1){
var e=this._contentView.getSelectionCount();
if(e==1){
var t=this._contentView.getSelection()[0];
if(t){
if(t.type!=ZaItem.ALIAS&&t.type!=ZaItem.RESOURCE&&t.type!=ZaItem.ACCOUNT){
if(this._popupOperations[ZaOperation.MOVE_ACCOUNT]){
this._popupOperations[ZaOperation.MOVE_ACCOUNT].enabled=false
}}}else{
if(this._popupOperations[ZaOperation.MOVE_ACCOUNT]){
this._popupOperations[ZaOperation.MOVE_ACCOUNT].enabled=false
}}}else{
if(e>1){
if(this._popupOperations[ZaOperation.MOVE_ACCOUNT]){
this._popupOperations[ZaOperation.MOVE_ACCOUNT].enabled=false
}}else{
if(this._popupOperations[ZaOperation.MOVE_ACCOUNT]){
this._popupOperations[ZaOperation.MOVE_ACCOUNT].enabled=false
}}}}else{
if(this._popupOperations[ZaOperation.MOVE_ACCOUNT]){
this._popupOperations[ZaOperation.MOVE_ACCOUNT].enabled=false
}}}};
if(ZaController.changeActionsStateMethods.ZaAccountListController){
ZaController.changeActionsStateMethods.ZaAccountListController.push(ZaHotBackup.changeAccListActionsStateMethod)
}
if(ZaController.changeActionsStateMethods.ZaSearchListController){
ZaController.changeActionsStateMethods.ZaSearchListController.push(ZaHotBackup.changeAccListActionsStateMethod)
}};